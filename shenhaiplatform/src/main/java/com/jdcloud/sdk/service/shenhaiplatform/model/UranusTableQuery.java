/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * uranusTableQuery
 */
public class UranusTableQuery  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 图谱ID
     */
    private String id;

    /**
     * 表英文名称
     */
    private String tableEnName;

    /**
     * 表中文名
     */
    private String tableCnName;

    /**
     * 负责人
     */
    private String owner;

    /**
     * 协助人
     */
    private String manager;

    /**
     * 表的普通字段信息
     */
    
    private List<UranusColumnSaveOrUpdate> columns;
    /**
     * 表的分区字段信息
     */
    
    private List<UranusColumnSaveOrUpdate> partitions;
    /**
     * 0 非分区表 1 分区表
     */
    private Integer isPartition;

    /**
     * 表存储格式
     */
    private String storageType;

    /**
     * 表字段分隔符（只有TEXTFILE类型表需要该字段）
     */
    private String fieldDelim;

    /**
     * 表行分隔符（只有TEXTFILE类型表需要该字段）
     */
    private String lineDelim;

    /**
     * 分桶字段
     */
    
    private List<String> bucketCols;
    /**
     * 分桶个数
     */
    private Integer bucketNum;



    /**
     * get 图谱ID
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 图谱ID
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }


    /**
     * get 表英文名称
     *
     * @return
     */
    public String getTableEnName() {
        return tableEnName;
    }

    /**
     * set 表英文名称
     *
     * @param tableEnName
     */
    public void setTableEnName(String tableEnName) {
        this.tableEnName = tableEnName;
    }


    /**
     * get 表中文名
     *
     * @return
     */
    public String getTableCnName() {
        return tableCnName;
    }

    /**
     * set 表中文名
     *
     * @param tableCnName
     */
    public void setTableCnName(String tableCnName) {
        this.tableCnName = tableCnName;
    }


    /**
     * get 负责人
     *
     * @return
     */
    public String getOwner() {
        return owner;
    }

    /**
     * set 负责人
     *
     * @param owner
     */
    public void setOwner(String owner) {
        this.owner = owner;
    }


    /**
     * get 协助人
     *
     * @return
     */
    public String getManager() {
        return manager;
    }

    /**
     * set 协助人
     *
     * @param manager
     */
    public void setManager(String manager) {
        this.manager = manager;
    }


    /**
    * get 表的普通字段信息
    *
    * @return
    */
    public List<UranusColumnSaveOrUpdate> getColumns() {
        return columns;
    }

    /**
    * set 表的普通字段信息
    *
    * @param columns
    */
    public void setColumns(List<UranusColumnSaveOrUpdate> columns) {
        this.columns = columns;
    }


    /**
    * get 表的分区字段信息
    *
    * @return
    */
    public List<UranusColumnSaveOrUpdate> getPartitions() {
        return partitions;
    }

    /**
    * set 表的分区字段信息
    *
    * @param partitions
    */
    public void setPartitions(List<UranusColumnSaveOrUpdate> partitions) {
        this.partitions = partitions;
    }


    /**
     * get 0 非分区表 1 分区表
     *
     * @return
     */
    public Integer getIsPartition() {
        return isPartition;
    }

    /**
     * set 0 非分区表 1 分区表
     *
     * @param isPartition
     */
    public void setIsPartition(Integer isPartition) {
        this.isPartition = isPartition;
    }


    /**
     * get 表存储格式
     *
     * @return
     */
    public String getStorageType() {
        return storageType;
    }

    /**
     * set 表存储格式
     *
     * @param storageType
     */
    public void setStorageType(String storageType) {
        this.storageType = storageType;
    }


    /**
     * get 表字段分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @return
     */
    public String getFieldDelim() {
        return fieldDelim;
    }

    /**
     * set 表字段分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @param fieldDelim
     */
    public void setFieldDelim(String fieldDelim) {
        this.fieldDelim = fieldDelim;
    }


    /**
     * get 表行分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @return
     */
    public String getLineDelim() {
        return lineDelim;
    }

    /**
     * set 表行分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @param lineDelim
     */
    public void setLineDelim(String lineDelim) {
        this.lineDelim = lineDelim;
    }


    /**
    * get 分桶字段
    *
    * @return
    */
    public List<String> getBucketCols() {
        return bucketCols;
    }

    /**
    * set 分桶字段
    *
    * @param bucketCols
    */
    public void setBucketCols(List<String> bucketCols) {
        this.bucketCols = bucketCols;
    }


    /**
     * get 分桶个数
     *
     * @return
     */
    public Integer getBucketNum() {
        return bucketNum;
    }

    /**
     * set 分桶个数
     *
     * @param bucketNum
     */
    public void setBucketNum(Integer bucketNum) {
        this.bucketNum = bucketNum;
    }



    /**
     * set 图谱ID
     *
     * @param id
     */
    public UranusTableQuery id(String id) {
        this.id = id;
        return this;
    }


    /**
     * set 表英文名称
     *
     * @param tableEnName
     */
    public UranusTableQuery tableEnName(String tableEnName) {
        this.tableEnName = tableEnName;
        return this;
    }


    /**
     * set 表中文名
     *
     * @param tableCnName
     */
    public UranusTableQuery tableCnName(String tableCnName) {
        this.tableCnName = tableCnName;
        return this;
    }


    /**
     * set 负责人
     *
     * @param owner
     */
    public UranusTableQuery owner(String owner) {
        this.owner = owner;
        return this;
    }


    /**
     * set 协助人
     *
     * @param manager
     */
    public UranusTableQuery manager(String manager) {
        this.manager = manager;
        return this;
    }


    /**
    * set 表的普通字段信息
    *
    * @param columns
    */
    public UranusTableQuery columns(List<UranusColumnSaveOrUpdate> columns) {
        this.columns = columns;
        return this;
    }


    /**
    * set 表的分区字段信息
    *
    * @param partitions
    */
    public UranusTableQuery partitions(List<UranusColumnSaveOrUpdate> partitions) {
        this.partitions = partitions;
        return this;
    }


    /**
     * set 0 非分区表 1 分区表
     *
     * @param isPartition
     */
    public UranusTableQuery isPartition(Integer isPartition) {
        this.isPartition = isPartition;
        return this;
    }


    /**
     * set 表存储格式
     *
     * @param storageType
     */
    public UranusTableQuery storageType(String storageType) {
        this.storageType = storageType;
        return this;
    }


    /**
     * set 表字段分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @param fieldDelim
     */
    public UranusTableQuery fieldDelim(String fieldDelim) {
        this.fieldDelim = fieldDelim;
        return this;
    }


    /**
     * set 表行分隔符（只有TEXTFILE类型表需要该字段）
     *
     * @param lineDelim
     */
    public UranusTableQuery lineDelim(String lineDelim) {
        this.lineDelim = lineDelim;
        return this;
    }


    /**
    * set 分桶字段
    *
    * @param bucketCols
    */
    public UranusTableQuery bucketCols(List<String> bucketCols) {
        this.bucketCols = bucketCols;
        return this;
    }


    /**
     * set 分桶个数
     *
     * @param bucketNum
     */
    public UranusTableQuery bucketNum(Integer bucketNum) {
        this.bucketNum = bucketNum;
        return this;
    }



    /**
     * add item to 表的普通字段信息
     *
     * @param column
     */
    public void addColumn(UranusColumnSaveOrUpdate column) {
        if (this.columns == null) {
            this.columns = new ArrayList<>();
        }
        this.columns.add(column);
    }

    /**
     * add item to 表的分区字段信息
     *
     * @param partition
     */
    public void addPartition(UranusColumnSaveOrUpdate partition) {
        if (this.partitions == null) {
            this.partitions = new ArrayList<>();
        }
        this.partitions.add(partition);
    }

    /**
     * add item to 分桶字段
     *
     * @param bucketCol
     */
    public void addBucketCol(String bucketCol) {
        if (this.bucketCols == null) {
            this.bucketCols = new ArrayList<>();
        }
        this.bucketCols.add(bucketCol);
    }
}