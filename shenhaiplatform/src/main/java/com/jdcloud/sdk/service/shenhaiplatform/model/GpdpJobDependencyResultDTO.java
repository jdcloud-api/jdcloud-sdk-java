/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;


/**
 * gpdpJobDependencyResultDTO
 */
public class GpdpJobDependencyResultDTO  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 作业名
     */
    private String jobName;

    /**
     * 客户作业名称
     */
    private String cstJobName;

    /**
     * 最后以此执行日期
     */
    private String lastTxDate;

    /**
     * 最后一次运行开始时间
     */
    private String lastStartTime;

    /**
     * 最后一次结束时间
     */
    private String lastEndTime;

    /**
     * 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     */
    private String lastStatus;

    /**
     * 是否可以自身并行，1启用、0关闭
     */
    private String flagParallel;

    /**
     * 当前作业状态信息
     */
    private String currentStatusMsg;

    /**
     * 周期开始时间(适用小时分钟)
     */
    private String sequenceStartTime;

    /**
     * 周期结束时间(适用小时分钟)
     */
    private String sequenceEndTime;

    /**
     * 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     */
    private String sequenceInterval;

    /**
     * 是否启用，1启用、0关闭
     */
    private String enable;

    /**
     * 负责人，不超过10个
     */
    private String manager;

    /**
     * 作业所属系统，G gravity版本、A automation版本,用于迁移字段
     */
    private String jobBelong;

    /**
     * 是否强依赖，1启用、0关闭
     */
    private String necessary;

    /**
     * 是否可以上下游并行，1启用、0关闭
     */
    private String depFlagParallel;

    /**
     * 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     */
    private String triggerType;

    /**
     * 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     */
    private String cycle;

    /**
     * 周期具体日期
     */
    private String sequence;



    /**
     * get 作业名
     *
     * @return
     */
    public String getJobName() {
        return jobName;
    }

    /**
     * set 作业名
     *
     * @param jobName
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }


    /**
     * get 客户作业名称
     *
     * @return
     */
    public String getCstJobName() {
        return cstJobName;
    }

    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public void setCstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
    }


    /**
     * get 最后以此执行日期
     *
     * @return
     */
    public String getLastTxDate() {
        return lastTxDate;
    }

    /**
     * set 最后以此执行日期
     *
     * @param lastTxDate
     */
    public void setLastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
    }


    /**
     * get 最后一次运行开始时间
     *
     * @return
     */
    public String getLastStartTime() {
        return lastStartTime;
    }

    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public void setLastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
    }


    /**
     * get 最后一次结束时间
     *
     * @return
     */
    public String getLastEndTime() {
        return lastEndTime;
    }

    /**
     * set 最后一次结束时间
     *
     * @param lastEndTime
     */
    public void setLastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
    }


    /**
     * get 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @return
     */
    public String getLastStatus() {
        return lastStatus;
    }

    /**
     * set 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @param lastStatus
     */
    public void setLastStatus(String lastStatus) {
        this.lastStatus = lastStatus;
    }


    /**
     * get 是否可以自身并行，1启用、0关闭
     *
     * @return
     */
    public String getFlagParallel() {
        return flagParallel;
    }

    /**
     * set 是否可以自身并行，1启用、0关闭
     *
     * @param flagParallel
     */
    public void setFlagParallel(String flagParallel) {
        this.flagParallel = flagParallel;
    }


    /**
     * get 当前作业状态信息
     *
     * @return
     */
    public String getCurrentStatusMsg() {
        return currentStatusMsg;
    }

    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public void setCurrentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
    }


    /**
     * get 周期开始时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceStartTime() {
        return sequenceStartTime;
    }

    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public void setSequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
    }


    /**
     * get 周期结束时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceEndTime() {
        return sequenceEndTime;
    }

    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public void setSequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
    }


    /**
     * get 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @return
     */
    public String getSequenceInterval() {
        return sequenceInterval;
    }

    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public void setSequenceInterval(String sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
    }


    /**
     * get 是否启用，1启用、0关闭
     *
     * @return
     */
    public String getEnable() {
        return enable;
    }

    /**
     * set 是否启用，1启用、0关闭
     *
     * @param enable
     */
    public void setEnable(String enable) {
        this.enable = enable;
    }


    /**
     * get 负责人，不超过10个
     *
     * @return
     */
    public String getManager() {
        return manager;
    }

    /**
     * set 负责人，不超过10个
     *
     * @param manager
     */
    public void setManager(String manager) {
        this.manager = manager;
    }


    /**
     * get 作业所属系统，G gravity版本、A automation版本,用于迁移字段
     *
     * @return
     */
    public String getJobBelong() {
        return jobBelong;
    }

    /**
     * set 作业所属系统，G gravity版本、A automation版本,用于迁移字段
     *
     * @param jobBelong
     */
    public void setJobBelong(String jobBelong) {
        this.jobBelong = jobBelong;
    }


    /**
     * get 是否强依赖，1启用、0关闭
     *
     * @return
     */
    public String getNecessary() {
        return necessary;
    }

    /**
     * set 是否强依赖，1启用、0关闭
     *
     * @param necessary
     */
    public void setNecessary(String necessary) {
        this.necessary = necessary;
    }


    /**
     * get 是否可以上下游并行，1启用、0关闭
     *
     * @return
     */
    public String getDepFlagParallel() {
        return depFlagParallel;
    }

    /**
     * set 是否可以上下游并行，1启用、0关闭
     *
     * @param depFlagParallel
     */
    public void setDepFlagParallel(String depFlagParallel) {
        this.depFlagParallel = depFlagParallel;
    }


    /**
     * get 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @return
     */
    public String getCycle() {
        return cycle;
    }

    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public void setCycle(String cycle) {
        this.cycle = cycle;
    }


    /**
     * get 周期具体日期
     *
     * @return
     */
    public String getSequence() {
        return sequence;
    }

    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public void setSequence(String sequence) {
        this.sequence = sequence;
    }



    /**
     * set 作业名
     *
     * @param jobName
     */
    public GpdpJobDependencyResultDTO jobName(String jobName) {
        this.jobName = jobName;
        return this;
    }


    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public GpdpJobDependencyResultDTO cstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
        return this;
    }


    /**
     * set 最后以此执行日期
     *
     * @param lastTxDate
     */
    public GpdpJobDependencyResultDTO lastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
        return this;
    }


    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public GpdpJobDependencyResultDTO lastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
        return this;
    }


    /**
     * set 最后一次结束时间
     *
     * @param lastEndTime
     */
    public GpdpJobDependencyResultDTO lastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
        return this;
    }


    /**
     * set 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @param lastStatus
     */
    public GpdpJobDependencyResultDTO lastStatus(String lastStatus) {
        this.lastStatus = lastStatus;
        return this;
    }


    /**
     * set 是否可以自身并行，1启用、0关闭
     *
     * @param flagParallel
     */
    public GpdpJobDependencyResultDTO flagParallel(String flagParallel) {
        this.flagParallel = flagParallel;
        return this;
    }


    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public GpdpJobDependencyResultDTO currentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
        return this;
    }


    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public GpdpJobDependencyResultDTO sequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
        return this;
    }


    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public GpdpJobDependencyResultDTO sequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
        return this;
    }


    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public GpdpJobDependencyResultDTO sequenceInterval(String sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
        return this;
    }


    /**
     * set 是否启用，1启用、0关闭
     *
     * @param enable
     */
    public GpdpJobDependencyResultDTO enable(String enable) {
        this.enable = enable;
        return this;
    }


    /**
     * set 负责人，不超过10个
     *
     * @param manager
     */
    public GpdpJobDependencyResultDTO manager(String manager) {
        this.manager = manager;
        return this;
    }


    /**
     * set 作业所属系统，G gravity版本、A automation版本,用于迁移字段
     *
     * @param jobBelong
     */
    public GpdpJobDependencyResultDTO jobBelong(String jobBelong) {
        this.jobBelong = jobBelong;
        return this;
    }


    /**
     * set 是否强依赖，1启用、0关闭
     *
     * @param necessary
     */
    public GpdpJobDependencyResultDTO necessary(String necessary) {
        this.necessary = necessary;
        return this;
    }


    /**
     * set 是否可以上下游并行，1启用、0关闭
     *
     * @param depFlagParallel
     */
    public GpdpJobDependencyResultDTO depFlagParallel(String depFlagParallel) {
        this.depFlagParallel = depFlagParallel;
        return this;
    }


    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public GpdpJobDependencyResultDTO triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public GpdpJobDependencyResultDTO cycle(String cycle) {
        this.cycle = cycle;
        return this;
    }


    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public GpdpJobDependencyResultDTO sequence(String sequence) {
        this.sequence = sequence;
        return this;
    }


}