/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;


/**
 * gpjmListJobResultDTO
 */
public class GpjmListJobResultDTO  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 作业id
     */
    private Integer id;

    /**
     * 作业名称
     */
    private String etlJob;

    /**
     * 处理类型（calc：数据计算，extract：数据抽取，ods：ODS加工，load：数据推送，hdfs：数据同步,dqim:质量作业）
     */
    private String processType;

    /**
     * 作业执行类型
     */
    private String exeType;

    /**
     * 最后一次运行服务器
     */
    private String etlServer;

    /**
     * 作业描述
     */
    private String description;

    /**
     * 周期具体日期
     */
    private String frequency;

    /**
     * 最后一次运行开始时间
     */
    private String lastStartTime;

    /**
     * 最后一次运行结束时间
     */
    private String lastEndTime;

    /**
     * 运行时间
     */
    private String runTime;

    /**
     * 最后一次运行状态
     */
    private String lastJobStatus;

    /**
     * 最后一次执行日期
     */
    private String lastTxDate;

    /**
     * 最后返回编码
     */
    private Integer lastReturnCode;

    /**
     * 当前作业状态信息
     */
    private String currentStatusMsg;

    /**
     * 是否启用，0未上线、1已上线、2已下线
     */
    private String enable;

    /**
     * Session ID
     */
    private Integer jobSessionID;

    /**
     * 失效时间
     */
    private String expireTime;

    /**
     * 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     */
    private String triggerType;

    /**
     * 触发时间
     */
    private String triggerTime;

    /**
     * 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     */
    private String cycle;

    /**
     * 周期具体日期
     */
    private String sequence;

    /**
     * 作业优先级，数字越小优先级越高
     */
    private Integer priority;

    /**
     * 创建人
     */
    private String createUser;

    /**
     * 负责人，不超过10个
     */
    private String userName;

    /**
     * 重试次数
     */
    private Integer retryCount;

    /**
     * 周期开始时间(适用小时分钟)
     */
    private String sequenceStartTime;

    /**
     * 周期结束时间(适用小时分钟)
     */
    private String sequenceEndTime;

    /**
     * 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     */
    private Integer sequenceInterval;

    /**
     * 是否重试过
     */
    private String flagRetry;

    /**
     * 创建时间
     */
    private String createTime;

    /**
     * 更新时间
     */
    private String updateTime;

    /**
     * 周期中文名 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     */
    private String cycleLabel;

    /**
     * 触发方式中文名:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     */
    private String triggerTypeLabel;

    /**
     * 处理类型中文名（数据计算，数据抽取，ODS加工，数据推送，数据同步, 质量作业）
     */
    private String processTypeCn;

    /**
     * 数据来源渠道，集成开发（IDE）、数据管道（PIPE）
     */
    private String channel;

    /**
     * 任务类型
     */
    private String jobType;

    /**
     * 是否为作业管理员或者工作空间管理员
     */
    private Boolean managerFlag;

    /**
     * jobChildType
     */
    private String jobChildType;

    /**
     * 客户作业名
     */
    private String cstJobName;



    /**
     * get 作业id
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set 作业id
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }


    /**
     * get 作业名称
     *
     * @return
     */
    public String getEtlJob() {
        return etlJob;
    }

    /**
     * set 作业名称
     *
     * @param etlJob
     */
    public void setEtlJob(String etlJob) {
        this.etlJob = etlJob;
    }


    /**
     * get 处理类型（calc：数据计算，extract：数据抽取，ods：ODS加工，load：数据推送，hdfs：数据同步,dqim:质量作业）
     *
     * @return
     */
    public String getProcessType() {
        return processType;
    }

    /**
     * set 处理类型（calc：数据计算，extract：数据抽取，ods：ODS加工，load：数据推送，hdfs：数据同步,dqim:质量作业）
     *
     * @param processType
     */
    public void setProcessType(String processType) {
        this.processType = processType;
    }


    /**
     * get 作业执行类型
     *
     * @return
     */
    public String getExeType() {
        return exeType;
    }

    /**
     * set 作业执行类型
     *
     * @param exeType
     */
    public void setExeType(String exeType) {
        this.exeType = exeType;
    }


    /**
     * get 最后一次运行服务器
     *
     * @return
     */
    public String getEtlServer() {
        return etlServer;
    }

    /**
     * set 最后一次运行服务器
     *
     * @param etlServer
     */
    public void setEtlServer(String etlServer) {
        this.etlServer = etlServer;
    }


    /**
     * get 作业描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 作业描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 周期具体日期
     *
     * @return
     */
    public String getFrequency() {
        return frequency;
    }

    /**
     * set 周期具体日期
     *
     * @param frequency
     */
    public void setFrequency(String frequency) {
        this.frequency = frequency;
    }


    /**
     * get 最后一次运行开始时间
     *
     * @return
     */
    public String getLastStartTime() {
        return lastStartTime;
    }

    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public void setLastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
    }


    /**
     * get 最后一次运行结束时间
     *
     * @return
     */
    public String getLastEndTime() {
        return lastEndTime;
    }

    /**
     * set 最后一次运行结束时间
     *
     * @param lastEndTime
     */
    public void setLastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
    }


    /**
     * get 运行时间
     *
     * @return
     */
    public String getRunTime() {
        return runTime;
    }

    /**
     * set 运行时间
     *
     * @param runTime
     */
    public void setRunTime(String runTime) {
        this.runTime = runTime;
    }


    /**
     * get 最后一次运行状态
     *
     * @return
     */
    public String getLastJobStatus() {
        return lastJobStatus;
    }

    /**
     * set 最后一次运行状态
     *
     * @param lastJobStatus
     */
    public void setLastJobStatus(String lastJobStatus) {
        this.lastJobStatus = lastJobStatus;
    }


    /**
     * get 最后一次执行日期
     *
     * @return
     */
    public String getLastTxDate() {
        return lastTxDate;
    }

    /**
     * set 最后一次执行日期
     *
     * @param lastTxDate
     */
    public void setLastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
    }


    /**
     * get 最后返回编码
     *
     * @return
     */
    public Integer getLastReturnCode() {
        return lastReturnCode;
    }

    /**
     * set 最后返回编码
     *
     * @param lastReturnCode
     */
    public void setLastReturnCode(Integer lastReturnCode) {
        this.lastReturnCode = lastReturnCode;
    }


    /**
     * get 当前作业状态信息
     *
     * @return
     */
    public String getCurrentStatusMsg() {
        return currentStatusMsg;
    }

    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public void setCurrentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
    }


    /**
     * get 是否启用，0未上线、1已上线、2已下线
     *
     * @return
     */
    public String getEnable() {
        return enable;
    }

    /**
     * set 是否启用，0未上线、1已上线、2已下线
     *
     * @param enable
     */
    public void setEnable(String enable) {
        this.enable = enable;
    }


    /**
     * get Session ID
     *
     * @return
     */
    public Integer getJobSessionID() {
        return jobSessionID;
    }

    /**
     * set Session ID
     *
     * @param jobSessionID
     */
    public void setJobSessionID(Integer jobSessionID) {
        this.jobSessionID = jobSessionID;
    }


    /**
     * get 失效时间
     *
     * @return
     */
    public String getExpireTime() {
        return expireTime;
    }

    /**
     * set 失效时间
     *
     * @param expireTime
     */
    public void setExpireTime(String expireTime) {
        this.expireTime = expireTime;
    }


    /**
     * get 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get 触发时间
     *
     * @return
     */
    public String getTriggerTime() {
        return triggerTime;
    }

    /**
     * set 触发时间
     *
     * @param triggerTime
     */
    public void setTriggerTime(String triggerTime) {
        this.triggerTime = triggerTime;
    }


    /**
     * get 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @return
     */
    public String getCycle() {
        return cycle;
    }

    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public void setCycle(String cycle) {
        this.cycle = cycle;
    }


    /**
     * get 周期具体日期
     *
     * @return
     */
    public String getSequence() {
        return sequence;
    }

    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public void setSequence(String sequence) {
        this.sequence = sequence;
    }


    /**
     * get 作业优先级，数字越小优先级越高
     *
     * @return
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * set 作业优先级，数字越小优先级越高
     *
     * @param priority
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }


    /**
     * get 创建人
     *
     * @return
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * set 创建人
     *
     * @param createUser
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }


    /**
     * get 负责人，不超过10个
     *
     * @return
     */
    public String getUserName() {
        return userName;
    }

    /**
     * set 负责人，不超过10个
     *
     * @param userName
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }


    /**
     * get 重试次数
     *
     * @return
     */
    public Integer getRetryCount() {
        return retryCount;
    }

    /**
     * set 重试次数
     *
     * @param retryCount
     */
    public void setRetryCount(Integer retryCount) {
        this.retryCount = retryCount;
    }


    /**
     * get 周期开始时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceStartTime() {
        return sequenceStartTime;
    }

    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public void setSequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
    }


    /**
     * get 周期结束时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceEndTime() {
        return sequenceEndTime;
    }

    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public void setSequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
    }


    /**
     * get 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @return
     */
    public Integer getSequenceInterval() {
        return sequenceInterval;
    }

    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public void setSequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
    }


    /**
     * get 是否重试过
     *
     * @return
     */
    public String getFlagRetry() {
        return flagRetry;
    }

    /**
     * set 是否重试过
     *
     * @param flagRetry
     */
    public void setFlagRetry(String flagRetry) {
        this.flagRetry = flagRetry;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 更新时间
     *
     * @return
     */
    public String getUpdateTime() {
        return updateTime;
    }

    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }


    /**
     * get 周期中文名 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @return
     */
    public String getCycleLabel() {
        return cycleLabel;
    }

    /**
     * set 周期中文名 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycleLabel
     */
    public void setCycleLabel(String cycleLabel) {
        this.cycleLabel = cycleLabel;
    }


    /**
     * get 触发方式中文名:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @return
     */
    public String getTriggerTypeLabel() {
        return triggerTypeLabel;
    }

    /**
     * set 触发方式中文名:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerTypeLabel
     */
    public void setTriggerTypeLabel(String triggerTypeLabel) {
        this.triggerTypeLabel = triggerTypeLabel;
    }


    /**
     * get 处理类型中文名（数据计算，数据抽取，ODS加工，数据推送，数据同步, 质量作业）
     *
     * @return
     */
    public String getProcessTypeCn() {
        return processTypeCn;
    }

    /**
     * set 处理类型中文名（数据计算，数据抽取，ODS加工，数据推送，数据同步, 质量作业）
     *
     * @param processTypeCn
     */
    public void setProcessTypeCn(String processTypeCn) {
        this.processTypeCn = processTypeCn;
    }


    /**
     * get 数据来源渠道，集成开发（IDE）、数据管道（PIPE）
     *
     * @return
     */
    public String getChannel() {
        return channel;
    }

    /**
     * set 数据来源渠道，集成开发（IDE）、数据管道（PIPE）
     *
     * @param channel
     */
    public void setChannel(String channel) {
        this.channel = channel;
    }


    /**
     * get 任务类型
     *
     * @return
     */
    public String getJobType() {
        return jobType;
    }

    /**
     * set 任务类型
     *
     * @param jobType
     */
    public void setJobType(String jobType) {
        this.jobType = jobType;
    }


    /**
     * get 是否为作业管理员或者工作空间管理员
     *
     * @return
     */
    public Boolean getManagerFlag() {
        return managerFlag;
    }

    /**
     * set 是否为作业管理员或者工作空间管理员
     *
     * @param managerFlag
     */
    public void setManagerFlag(Boolean managerFlag) {
        this.managerFlag = managerFlag;
    }


    /**
     * get jobChildType
     *
     * @return
     */
    public String getJobChildType() {
        return jobChildType;
    }

    /**
     * set jobChildType
     *
     * @param jobChildType
     */
    public void setJobChildType(String jobChildType) {
        this.jobChildType = jobChildType;
    }


    /**
     * get 客户作业名
     *
     * @return
     */
    public String getCstJobName() {
        return cstJobName;
    }

    /**
     * set 客户作业名
     *
     * @param cstJobName
     */
    public void setCstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
    }



    /**
     * set 作业id
     *
     * @param id
     */
    public GpjmListJobResultDTO id(Integer id) {
        this.id = id;
        return this;
    }


    /**
     * set 作业名称
     *
     * @param etlJob
     */
    public GpjmListJobResultDTO etlJob(String etlJob) {
        this.etlJob = etlJob;
        return this;
    }


    /**
     * set 处理类型（calc：数据计算，extract：数据抽取，ods：ODS加工，load：数据推送，hdfs：数据同步,dqim:质量作业）
     *
     * @param processType
     */
    public GpjmListJobResultDTO processType(String processType) {
        this.processType = processType;
        return this;
    }


    /**
     * set 作业执行类型
     *
     * @param exeType
     */
    public GpjmListJobResultDTO exeType(String exeType) {
        this.exeType = exeType;
        return this;
    }


    /**
     * set 最后一次运行服务器
     *
     * @param etlServer
     */
    public GpjmListJobResultDTO etlServer(String etlServer) {
        this.etlServer = etlServer;
        return this;
    }


    /**
     * set 作业描述
     *
     * @param description
     */
    public GpjmListJobResultDTO description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 周期具体日期
     *
     * @param frequency
     */
    public GpjmListJobResultDTO frequency(String frequency) {
        this.frequency = frequency;
        return this;
    }


    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public GpjmListJobResultDTO lastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
        return this;
    }


    /**
     * set 最后一次运行结束时间
     *
     * @param lastEndTime
     */
    public GpjmListJobResultDTO lastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
        return this;
    }


    /**
     * set 运行时间
     *
     * @param runTime
     */
    public GpjmListJobResultDTO runTime(String runTime) {
        this.runTime = runTime;
        return this;
    }


    /**
     * set 最后一次运行状态
     *
     * @param lastJobStatus
     */
    public GpjmListJobResultDTO lastJobStatus(String lastJobStatus) {
        this.lastJobStatus = lastJobStatus;
        return this;
    }


    /**
     * set 最后一次执行日期
     *
     * @param lastTxDate
     */
    public GpjmListJobResultDTO lastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
        return this;
    }


    /**
     * set 最后返回编码
     *
     * @param lastReturnCode
     */
    public GpjmListJobResultDTO lastReturnCode(Integer lastReturnCode) {
        this.lastReturnCode = lastReturnCode;
        return this;
    }


    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public GpjmListJobResultDTO currentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
        return this;
    }


    /**
     * set 是否启用，0未上线、1已上线、2已下线
     *
     * @param enable
     */
    public GpjmListJobResultDTO enable(String enable) {
        this.enable = enable;
        return this;
    }


    /**
     * set Session ID
     *
     * @param jobSessionID
     */
    public GpjmListJobResultDTO jobSessionID(Integer jobSessionID) {
        this.jobSessionID = jobSessionID;
        return this;
    }


    /**
     * set 失效时间
     *
     * @param expireTime
     */
    public GpjmListJobResultDTO expireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }


    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public GpjmListJobResultDTO triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set 触发时间
     *
     * @param triggerTime
     */
    public GpjmListJobResultDTO triggerTime(String triggerTime) {
        this.triggerTime = triggerTime;
        return this;
    }


    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public GpjmListJobResultDTO cycle(String cycle) {
        this.cycle = cycle;
        return this;
    }


    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public GpjmListJobResultDTO sequence(String sequence) {
        this.sequence = sequence;
        return this;
    }


    /**
     * set 作业优先级，数字越小优先级越高
     *
     * @param priority
     */
    public GpjmListJobResultDTO priority(Integer priority) {
        this.priority = priority;
        return this;
    }


    /**
     * set 创建人
     *
     * @param createUser
     */
    public GpjmListJobResultDTO createUser(String createUser) {
        this.createUser = createUser;
        return this;
    }


    /**
     * set 负责人，不超过10个
     *
     * @param userName
     */
    public GpjmListJobResultDTO userName(String userName) {
        this.userName = userName;
        return this;
    }


    /**
     * set 重试次数
     *
     * @param retryCount
     */
    public GpjmListJobResultDTO retryCount(Integer retryCount) {
        this.retryCount = retryCount;
        return this;
    }


    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public GpjmListJobResultDTO sequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
        return this;
    }


    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public GpjmListJobResultDTO sequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
        return this;
    }


    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public GpjmListJobResultDTO sequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
        return this;
    }


    /**
     * set 是否重试过
     *
     * @param flagRetry
     */
    public GpjmListJobResultDTO flagRetry(String flagRetry) {
        this.flagRetry = flagRetry;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createTime
     */
    public GpjmListJobResultDTO createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public GpjmListJobResultDTO updateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }


    /**
     * set 周期中文名 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycleLabel
     */
    public GpjmListJobResultDTO cycleLabel(String cycleLabel) {
        this.cycleLabel = cycleLabel;
        return this;
    }


    /**
     * set 触发方式中文名:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerTypeLabel
     */
    public GpjmListJobResultDTO triggerTypeLabel(String triggerTypeLabel) {
        this.triggerTypeLabel = triggerTypeLabel;
        return this;
    }


    /**
     * set 处理类型中文名（数据计算，数据抽取，ODS加工，数据推送，数据同步, 质量作业）
     *
     * @param processTypeCn
     */
    public GpjmListJobResultDTO processTypeCn(String processTypeCn) {
        this.processTypeCn = processTypeCn;
        return this;
    }


    /**
     * set 数据来源渠道，集成开发（IDE）、数据管道（PIPE）
     *
     * @param channel
     */
    public GpjmListJobResultDTO channel(String channel) {
        this.channel = channel;
        return this;
    }


    /**
     * set 任务类型
     *
     * @param jobType
     */
    public GpjmListJobResultDTO jobType(String jobType) {
        this.jobType = jobType;
        return this;
    }


    /**
     * set 是否为作业管理员或者工作空间管理员
     *
     * @param managerFlag
     */
    public GpjmListJobResultDTO managerFlag(Boolean managerFlag) {
        this.managerFlag = managerFlag;
        return this;
    }


    /**
     * set jobChildType
     *
     * @param jobChildType
     */
    public GpjmListJobResultDTO jobChildType(String jobChildType) {
        this.jobChildType = jobChildType;
        return this;
    }


    /**
     * set 客户作业名
     *
     * @param cstJobName
     */
    public GpjmListJobResultDTO cstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
        return this;
    }


}