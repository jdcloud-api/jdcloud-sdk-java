/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 表分隔符(包含字段、行)
 */
public class TableDelimitersVo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 字段分隔符
     */
    
    private List<TableDelimiterVo> fieldDelimiters;
    /**
     * 行分隔符
     */
    
    private List<TableDelimiterVo> lineDelimiters;


    /**
    * get 字段分隔符
    *
    * @return
    */
    public List<TableDelimiterVo> getFieldDelimiters() {
        return fieldDelimiters;
    }

    /**
    * set 字段分隔符
    *
    * @param fieldDelimiters
    */
    public void setFieldDelimiters(List<TableDelimiterVo> fieldDelimiters) {
        this.fieldDelimiters = fieldDelimiters;
    }


    /**
    * get 行分隔符
    *
    * @return
    */
    public List<TableDelimiterVo> getLineDelimiters() {
        return lineDelimiters;
    }

    /**
    * set 行分隔符
    *
    * @param lineDelimiters
    */
    public void setLineDelimiters(List<TableDelimiterVo> lineDelimiters) {
        this.lineDelimiters = lineDelimiters;
    }



    /**
    * set 字段分隔符
    *
    * @param fieldDelimiters
    */
    public TableDelimitersVo fieldDelimiters(List<TableDelimiterVo> fieldDelimiters) {
        this.fieldDelimiters = fieldDelimiters;
        return this;
    }


    /**
    * set 行分隔符
    *
    * @param lineDelimiters
    */
    public TableDelimitersVo lineDelimiters(List<TableDelimiterVo> lineDelimiters) {
        this.lineDelimiters = lineDelimiters;
        return this;
    }



    /**
     * add item to 字段分隔符
     *
     * @param fieldDelimiter
     */
    public void addFieldDelimiter(TableDelimiterVo fieldDelimiter) {
        if (this.fieldDelimiters == null) {
            this.fieldDelimiters = new ArrayList<>();
        }
        this.fieldDelimiters.add(fieldDelimiter);
    }

    /**
     * add item to 行分隔符
     *
     * @param lineDelimiter
     */
    public void addLineDelimiter(TableDelimiterVo lineDelimiter) {
        if (this.lineDelimiters == null) {
            this.lineDelimiters = new ArrayList<>();
        }
        this.lineDelimiters.add(lineDelimiter);
    }
}