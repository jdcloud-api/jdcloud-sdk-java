/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 作业触发条件信息
 */
public class GpjmConditionInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 具体的类型的类型列表
     */
    
    private List<GpjmConditionType> conditionType;
    /**
     * 触发类型: condition, 后续可能包括时间触发等原来的类型
     */
    private String triggerType;

    /**
     * 类型的中文名: 条件触发、时间触发等
     */
    private String triggerTypeCh;



    /**
    * get 具体的类型的类型列表
    *
    * @return
    */
    public List<GpjmConditionType> getConditionType() {
        return conditionType;
    }

    /**
    * set 具体的类型的类型列表
    *
    * @param conditionType
    */
    public void setConditionType(List<GpjmConditionType> conditionType) {
        this.conditionType = conditionType;
    }


    /**
     * get 触发类型: condition, 后续可能包括时间触发等原来的类型
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 触发类型: condition, 后续可能包括时间触发等原来的类型
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get 类型的中文名: 条件触发、时间触发等
     *
     * @return
     */
    public String getTriggerTypeCh() {
        return triggerTypeCh;
    }

    /**
     * set 类型的中文名: 条件触发、时间触发等
     *
     * @param triggerTypeCh
     */
    public void setTriggerTypeCh(String triggerTypeCh) {
        this.triggerTypeCh = triggerTypeCh;
    }



    /**
    * set 具体的类型的类型列表
    *
    * @param conditionType
    */
    public GpjmConditionInfo conditionType(List<GpjmConditionType> conditionType) {
        this.conditionType = conditionType;
        return this;
    }


    /**
     * set 触发类型: condition, 后续可能包括时间触发等原来的类型
     *
     * @param triggerType
     */
    public GpjmConditionInfo triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set 类型的中文名: 条件触发、时间触发等
     *
     * @param triggerTypeCh
     */
    public GpjmConditionInfo triggerTypeCh(String triggerTypeCh) {
        this.triggerTypeCh = triggerTypeCh;
        return this;
    }



    /**
     * add item to 具体的类型的类型列表
     *
     * @param conditionType
     */
    public void addConditionType(GpjmConditionType conditionType) {
        if (this.conditionType == null) {
            this.conditionType = new ArrayList<>();
        }
        this.conditionType.add(conditionType);
    }
}