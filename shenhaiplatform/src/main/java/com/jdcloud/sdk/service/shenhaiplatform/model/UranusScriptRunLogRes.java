/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;


/**
 * uranusScriptRunLogRes
 */
public class UranusScriptRunLogRes  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 运行id
     */
    private Integer id;

    /**
     * code
     */
    private String code;

    /**
     * 数据源主ID
     */
    private String datasourcePrimaryId;

    /**
     * 数据源名称
     */
    private String datasourceName;

    /**
     * 数据源使用环境类型，dev：开发环境，prod：生产环境
     */
    private String datasourceUseEnvType;

    /**
     * 文件业务线code
     */
    private String fileCode;

    /**
     * 开始时间
     */
    private String startTime;

    /**
     * 结束时间
     */
    private String endTime;

    /**
     * 状态，0：等待执行，1：执行中，2：成功，3：失败， 4：中止
     */
    private String status;

    /**
     * 文件类型
     */
    private String fileType;

    /**
     * 文件路径，相对路径
     */
    private String filePath;

    /**
     * 0：全文执行， 1：选中执行
     */
    private String execMode;

    /**
     *  运行脚本的快照文件
     */
    private String snapshotMd5;

    /**
     * 运行参数
     */
    private String args;

    /**
     * 执行引擎
     */
    private String execEngine;

    /**
     * 操作人
     */
    private String operator;

    /**
     * 日志路径
     */
    private String logPath;

    /**
     * 结果索引
     */
    private Integer resultIndex;

    /**
     * loopInfo
     */
    private TaskInfoLoopReq loopInfo;



    /**
     * get 运行id
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set 运行id
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }


    /**
     * get code
     *
     * @return
     */
    public String getCode() {
        return code;
    }

    /**
     * set code
     *
     * @param code
     */
    public void setCode(String code) {
        this.code = code;
    }


    /**
     * get 数据源主ID
     *
     * @return
     */
    public String getDatasourcePrimaryId() {
        return datasourcePrimaryId;
    }

    /**
     * set 数据源主ID
     *
     * @param datasourcePrimaryId
     */
    public void setDatasourcePrimaryId(String datasourcePrimaryId) {
        this.datasourcePrimaryId = datasourcePrimaryId;
    }


    /**
     * get 数据源名称
     *
     * @return
     */
    public String getDatasourceName() {
        return datasourceName;
    }

    /**
     * set 数据源名称
     *
     * @param datasourceName
     */
    public void setDatasourceName(String datasourceName) {
        this.datasourceName = datasourceName;
    }


    /**
     * get 数据源使用环境类型，dev：开发环境，prod：生产环境
     *
     * @return
     */
    public String getDatasourceUseEnvType() {
        return datasourceUseEnvType;
    }

    /**
     * set 数据源使用环境类型，dev：开发环境，prod：生产环境
     *
     * @param datasourceUseEnvType
     */
    public void setDatasourceUseEnvType(String datasourceUseEnvType) {
        this.datasourceUseEnvType = datasourceUseEnvType;
    }


    /**
     * get 文件业务线code
     *
     * @return
     */
    public String getFileCode() {
        return fileCode;
    }

    /**
     * set 文件业务线code
     *
     * @param fileCode
     */
    public void setFileCode(String fileCode) {
        this.fileCode = fileCode;
    }


    /**
     * get 开始时间
     *
     * @return
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * set 开始时间
     *
     * @param startTime
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }


    /**
     * get 结束时间
     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set 结束时间
     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }


    /**
     * get 状态，0：等待执行，1：执行中，2：成功，3：失败， 4：中止
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 状态，0：等待执行，1：执行中，2：成功，3：失败， 4：中止
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * get 文件类型
     *
     * @return
     */
    public String getFileType() {
        return fileType;
    }

    /**
     * set 文件类型
     *
     * @param fileType
     */
    public void setFileType(String fileType) {
        this.fileType = fileType;
    }


    /**
     * get 文件路径，相对路径
     *
     * @return
     */
    public String getFilePath() {
        return filePath;
    }

    /**
     * set 文件路径，相对路径
     *
     * @param filePath
     */
    public void setFilePath(String filePath) {
        this.filePath = filePath;
    }


    /**
     * get 0：全文执行， 1：选中执行
     *
     * @return
     */
    public String getExecMode() {
        return execMode;
    }

    /**
     * set 0：全文执行， 1：选中执行
     *
     * @param execMode
     */
    public void setExecMode(String execMode) {
        this.execMode = execMode;
    }


    /**
     * get  运行脚本的快照文件
     *
     * @return
     */
    public String getSnapshotMd5() {
        return snapshotMd5;
    }

    /**
     * set  运行脚本的快照文件
     *
     * @param snapshotMd5
     */
    public void setSnapshotMd5(String snapshotMd5) {
        this.snapshotMd5 = snapshotMd5;
    }


    /**
     * get 运行参数
     *
     * @return
     */
    public String getArgs() {
        return args;
    }

    /**
     * set 运行参数
     *
     * @param args
     */
    public void setArgs(String args) {
        this.args = args;
    }


    /**
     * get 执行引擎
     *
     * @return
     */
    public String getExecEngine() {
        return execEngine;
    }

    /**
     * set 执行引擎
     *
     * @param execEngine
     */
    public void setExecEngine(String execEngine) {
        this.execEngine = execEngine;
    }


    /**
     * get 操作人
     *
     * @return
     */
    public String getOperator() {
        return operator;
    }

    /**
     * set 操作人
     *
     * @param operator
     */
    public void setOperator(String operator) {
        this.operator = operator;
    }


    /**
     * get 日志路径
     *
     * @return
     */
    public String getLogPath() {
        return logPath;
    }

    /**
     * set 日志路径
     *
     * @param logPath
     */
    public void setLogPath(String logPath) {
        this.logPath = logPath;
    }


    /**
     * get 结果索引
     *
     * @return
     */
    public Integer getResultIndex() {
        return resultIndex;
    }

    /**
     * set 结果索引
     *
     * @param resultIndex
     */
    public void setResultIndex(Integer resultIndex) {
        this.resultIndex = resultIndex;
    }


    /**
     * get loopInfo
     *
     * @return
     */
    public TaskInfoLoopReq getLoopInfo() {
        return loopInfo;
    }

    /**
     * set loopInfo
     *
     * @param loopInfo
     */
    public void setLoopInfo(TaskInfoLoopReq loopInfo) {
        this.loopInfo = loopInfo;
    }



    /**
     * set 运行id
     *
     * @param id
     */
    public UranusScriptRunLogRes id(Integer id) {
        this.id = id;
        return this;
    }


    /**
     * set code
     *
     * @param code
     */
    public UranusScriptRunLogRes code(String code) {
        this.code = code;
        return this;
    }


    /**
     * set 数据源主ID
     *
     * @param datasourcePrimaryId
     */
    public UranusScriptRunLogRes datasourcePrimaryId(String datasourcePrimaryId) {
        this.datasourcePrimaryId = datasourcePrimaryId;
        return this;
    }


    /**
     * set 数据源名称
     *
     * @param datasourceName
     */
    public UranusScriptRunLogRes datasourceName(String datasourceName) {
        this.datasourceName = datasourceName;
        return this;
    }


    /**
     * set 数据源使用环境类型，dev：开发环境，prod：生产环境
     *
     * @param datasourceUseEnvType
     */
    public UranusScriptRunLogRes datasourceUseEnvType(String datasourceUseEnvType) {
        this.datasourceUseEnvType = datasourceUseEnvType;
        return this;
    }


    /**
     * set 文件业务线code
     *
     * @param fileCode
     */
    public UranusScriptRunLogRes fileCode(String fileCode) {
        this.fileCode = fileCode;
        return this;
    }


    /**
     * set 开始时间
     *
     * @param startTime
     */
    public UranusScriptRunLogRes startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }


    /**
     * set 结束时间
     *
     * @param endTime
     */
    public UranusScriptRunLogRes endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }


    /**
     * set 状态，0：等待执行，1：执行中，2：成功，3：失败， 4：中止
     *
     * @param status
     */
    public UranusScriptRunLogRes status(String status) {
        this.status = status;
        return this;
    }


    /**
     * set 文件类型
     *
     * @param fileType
     */
    public UranusScriptRunLogRes fileType(String fileType) {
        this.fileType = fileType;
        return this;
    }


    /**
     * set 文件路径，相对路径
     *
     * @param filePath
     */
    public UranusScriptRunLogRes filePath(String filePath) {
        this.filePath = filePath;
        return this;
    }


    /**
     * set 0：全文执行， 1：选中执行
     *
     * @param execMode
     */
    public UranusScriptRunLogRes execMode(String execMode) {
        this.execMode = execMode;
        return this;
    }


    /**
     * set  运行脚本的快照文件
     *
     * @param snapshotMd5
     */
    public UranusScriptRunLogRes snapshotMd5(String snapshotMd5) {
        this.snapshotMd5 = snapshotMd5;
        return this;
    }


    /**
     * set 运行参数
     *
     * @param args
     */
    public UranusScriptRunLogRes args(String args) {
        this.args = args;
        return this;
    }


    /**
     * set 执行引擎
     *
     * @param execEngine
     */
    public UranusScriptRunLogRes execEngine(String execEngine) {
        this.execEngine = execEngine;
        return this;
    }


    /**
     * set 操作人
     *
     * @param operator
     */
    public UranusScriptRunLogRes operator(String operator) {
        this.operator = operator;
        return this;
    }


    /**
     * set 日志路径
     *
     * @param logPath
     */
    public UranusScriptRunLogRes logPath(String logPath) {
        this.logPath = logPath;
        return this;
    }


    /**
     * set 结果索引
     *
     * @param resultIndex
     */
    public UranusScriptRunLogRes resultIndex(Integer resultIndex) {
        this.resultIndex = resultIndex;
        return this;
    }


    /**
     * set loopInfo
     *
     * @param loopInfo
     */
    public UranusScriptRunLogRes loopInfo(TaskInfoLoopReq loopInfo) {
        this.loopInfo = loopInfo;
        return this;
    }


}