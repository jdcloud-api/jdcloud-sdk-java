/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 计算作业结果信息
 */
public class GpdjmcCalcJobResultDTO  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 作业名称
     */
    private String jobName;

    /**
     * 表id
     */
    private Integer tableId;

    /**
     * 数据库名称
     */
    private String databaseName;

    /**
     * 工作空间
     */
    private String workspaceCode;

    /**
     * 模型表名
     */
    private String tableName;

    /**
     * 客户作业名称
     */
    private String cstJobName;

    /**
     * 作业系统
     */
    private String jobSystem;

    /**
     * 任务类型(触发类型)
     */
    private String triggerType;

    /**
     * triggerConfig
     */
    private GpdjmcTriggerConfigDTO triggerConfig;

    /**
     * zip命令行
     */
    private String zipCommand;

    /**
     * zip名称
     */
    private String zipFileName;

    /**
     * zip参数
     */
    private String zipParams;

    /**
     * 依赖任务列表
     */
    private String dependencies;

    /**
     * 负责人
     */
    private String manager;

    /**
     * 协作人
     */
    private String cooperator;

    /**
     * 优先级
     */
    private Integer priority;

    /**
     * 任务描述
     */
    private String jobDesc;

    /**
     * 脚本类型
     */
    private String scriptType;

    /**
     * 脚本模板
     */
    private String scriptTemplate;

    /**
     * 运行频率(运行周期)
     */
    private String cycle;

    /**
     * 运行频率(运行周期内序列)
     */
    private String sequence;

    /**
     * 生命周期
     */
    private String lifeCycle;

    /**
     * 失败后是否重试
     */
    private Boolean retry;

    /**
     * 定时、一次任务（开始运行时间）
     */
    private String runTime;

    /**
     * 定时、一次任务（开始运行时间）
     */
    private String runDate;

    /**
     * 超时时间
     */
    private Integer runTimeOut;

    /**
     * 脚本来源类型（本地或者git）
     */
    private String scriptSourceType;

    /**
     * 开始运行时间
     */
    private String startRunTime;

    /**
     * 结束运行时间
     */
    private String endRunTime;

    /**
     * 运行脚本
     */
    private String runScript;

    /**
     * 通知事件
     */
    private String notifyOccasion;

    /**
     * 通知时间
     */
    private String notifyTime;

    /**
     * 通知模式
     */
    private String notifyPattern;

    /**
     * 通知者
     */
    private String notifier;

    /**
     * 是否拥有模型
     */
    private Boolean hasModel;

    /**
     * 脚本文件字节数组,是将脚本文件内容转换为byte数组
     */
    
    private List<String> scriptByte;
    /**
     * 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     */
    private Integer version;

    /**
     * 判断是否是运维中心调用编辑接口1，运维中心
     */
    private Integer core;

    /**
     * 数据渠道来源：新模型（MODEL），老模型（OLD_MODEL）、集成开发（IDE）、数据管道（PIPE）、数据质量（DQ）、AI(KUAI)
     */
    private String channel;

    /**
     * 周期开始时间
     */
    private String sequenceStartTime;

    /**
     * 周期结束时间
     */
    private String sequenceEndTime;

    /**
     * 时间间隔
     */
    private Integer sequenceInterval;

    /**
     * 启用状态
     */
    private String enable;

    /**
     * 脚本运行引擎  枚举值 &quot;TEZ、MR、SPARK&quot;
     */
    private String runParams;

    /**
     * 提交配置（仅HiveSQL在Spark引擎下支持指定）
     */
    
    private List<GpdjmcConfPairStringString> submitConf;
    /**
     * 审计日志信息
     */
    private Object updateInfo;



    /**
     * get 作业名称
     *
     * @return
     */
    public String getJobName() {
        return jobName;
    }

    /**
     * set 作业名称
     *
     * @param jobName
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }


    /**
     * get 表id
     *
     * @return
     */
    public Integer getTableId() {
        return tableId;
    }

    /**
     * set 表id
     *
     * @param tableId
     */
    public void setTableId(Integer tableId) {
        this.tableId = tableId;
    }


    /**
     * get 数据库名称
     *
     * @return
     */
    public String getDatabaseName() {
        return databaseName;
    }

    /**
     * set 数据库名称
     *
     * @param databaseName
     */
    public void setDatabaseName(String databaseName) {
        this.databaseName = databaseName;
    }


    /**
     * get 工作空间
     *
     * @return
     */
    public String getWorkspaceCode() {
        return workspaceCode;
    }

    /**
     * set 工作空间
     *
     * @param workspaceCode
     */
    public void setWorkspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
    }


    /**
     * get 模型表名
     *
     * @return
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * set 模型表名
     *
     * @param tableName
     */
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }


    /**
     * get 客户作业名称
     *
     * @return
     */
    public String getCstJobName() {
        return cstJobName;
    }

    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public void setCstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
    }


    /**
     * get 作业系统
     *
     * @return
     */
    public String getJobSystem() {
        return jobSystem;
    }

    /**
     * set 作业系统
     *
     * @param jobSystem
     */
    public void setJobSystem(String jobSystem) {
        this.jobSystem = jobSystem;
    }


    /**
     * get 任务类型(触发类型)
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 任务类型(触发类型)
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get triggerConfig
     *
     * @return
     */
    public GpdjmcTriggerConfigDTO getTriggerConfig() {
        return triggerConfig;
    }

    /**
     * set triggerConfig
     *
     * @param triggerConfig
     */
    public void setTriggerConfig(GpdjmcTriggerConfigDTO triggerConfig) {
        this.triggerConfig = triggerConfig;
    }


    /**
     * get zip命令行
     *
     * @return
     */
    public String getZipCommand() {
        return zipCommand;
    }

    /**
     * set zip命令行
     *
     * @param zipCommand
     */
    public void setZipCommand(String zipCommand) {
        this.zipCommand = zipCommand;
    }


    /**
     * get zip名称
     *
     * @return
     */
    public String getZipFileName() {
        return zipFileName;
    }

    /**
     * set zip名称
     *
     * @param zipFileName
     */
    public void setZipFileName(String zipFileName) {
        this.zipFileName = zipFileName;
    }


    /**
     * get zip参数
     *
     * @return
     */
    public String getZipParams() {
        return zipParams;
    }

    /**
     * set zip参数
     *
     * @param zipParams
     */
    public void setZipParams(String zipParams) {
        this.zipParams = zipParams;
    }


    /**
     * get 依赖任务列表
     *
     * @return
     */
    public String getDependencies() {
        return dependencies;
    }

    /**
     * set 依赖任务列表
     *
     * @param dependencies
     */
    public void setDependencies(String dependencies) {
        this.dependencies = dependencies;
    }


    /**
     * get 负责人
     *
     * @return
     */
    public String getManager() {
        return manager;
    }

    /**
     * set 负责人
     *
     * @param manager
     */
    public void setManager(String manager) {
        this.manager = manager;
    }


    /**
     * get 协作人
     *
     * @return
     */
    public String getCooperator() {
        return cooperator;
    }

    /**
     * set 协作人
     *
     * @param cooperator
     */
    public void setCooperator(String cooperator) {
        this.cooperator = cooperator;
    }


    /**
     * get 优先级
     *
     * @return
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * set 优先级
     *
     * @param priority
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }


    /**
     * get 任务描述
     *
     * @return
     */
    public String getJobDesc() {
        return jobDesc;
    }

    /**
     * set 任务描述
     *
     * @param jobDesc
     */
    public void setJobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
    }


    /**
     * get 脚本类型
     *
     * @return
     */
    public String getScriptType() {
        return scriptType;
    }

    /**
     * set 脚本类型
     *
     * @param scriptType
     */
    public void setScriptType(String scriptType) {
        this.scriptType = scriptType;
    }


    /**
     * get 脚本模板
     *
     * @return
     */
    public String getScriptTemplate() {
        return scriptTemplate;
    }

    /**
     * set 脚本模板
     *
     * @param scriptTemplate
     */
    public void setScriptTemplate(String scriptTemplate) {
        this.scriptTemplate = scriptTemplate;
    }


    /**
     * get 运行频率(运行周期)
     *
     * @return
     */
    public String getCycle() {
        return cycle;
    }

    /**
     * set 运行频率(运行周期)
     *
     * @param cycle
     */
    public void setCycle(String cycle) {
        this.cycle = cycle;
    }


    /**
     * get 运行频率(运行周期内序列)
     *
     * @return
     */
    public String getSequence() {
        return sequence;
    }

    /**
     * set 运行频率(运行周期内序列)
     *
     * @param sequence
     */
    public void setSequence(String sequence) {
        this.sequence = sequence;
    }


    /**
     * get 生命周期
     *
     * @return
     */
    public String getLifeCycle() {
        return lifeCycle;
    }

    /**
     * set 生命周期
     *
     * @param lifeCycle
     */
    public void setLifeCycle(String lifeCycle) {
        this.lifeCycle = lifeCycle;
    }


    /**
     * get 失败后是否重试
     *
     * @return
     */
    public Boolean getRetry() {
        return retry;
    }

    /**
     * set 失败后是否重试
     *
     * @param retry
     */
    public void setRetry(Boolean retry) {
        this.retry = retry;
    }


    /**
     * get 定时、一次任务（开始运行时间）
     *
     * @return
     */
    public String getRunTime() {
        return runTime;
    }

    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runTime
     */
    public void setRunTime(String runTime) {
        this.runTime = runTime;
    }


    /**
     * get 定时、一次任务（开始运行时间）
     *
     * @return
     */
    public String getRunDate() {
        return runDate;
    }

    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runDate
     */
    public void setRunDate(String runDate) {
        this.runDate = runDate;
    }


    /**
     * get 超时时间
     *
     * @return
     */
    public Integer getRunTimeOut() {
        return runTimeOut;
    }

    /**
     * set 超时时间
     *
     * @param runTimeOut
     */
    public void setRunTimeOut(Integer runTimeOut) {
        this.runTimeOut = runTimeOut;
    }


    /**
     * get 脚本来源类型（本地或者git）
     *
     * @return
     */
    public String getScriptSourceType() {
        return scriptSourceType;
    }

    /**
     * set 脚本来源类型（本地或者git）
     *
     * @param scriptSourceType
     */
    public void setScriptSourceType(String scriptSourceType) {
        this.scriptSourceType = scriptSourceType;
    }


    /**
     * get 开始运行时间
     *
     * @return
     */
    public String getStartRunTime() {
        return startRunTime;
    }

    /**
     * set 开始运行时间
     *
     * @param startRunTime
     */
    public void setStartRunTime(String startRunTime) {
        this.startRunTime = startRunTime;
    }


    /**
     * get 结束运行时间
     *
     * @return
     */
    public String getEndRunTime() {
        return endRunTime;
    }

    /**
     * set 结束运行时间
     *
     * @param endRunTime
     */
    public void setEndRunTime(String endRunTime) {
        this.endRunTime = endRunTime;
    }


    /**
     * get 运行脚本
     *
     * @return
     */
    public String getRunScript() {
        return runScript;
    }

    /**
     * set 运行脚本
     *
     * @param runScript
     */
    public void setRunScript(String runScript) {
        this.runScript = runScript;
    }


    /**
     * get 通知事件
     *
     * @return
     */
    public String getNotifyOccasion() {
        return notifyOccasion;
    }

    /**
     * set 通知事件
     *
     * @param notifyOccasion
     */
    public void setNotifyOccasion(String notifyOccasion) {
        this.notifyOccasion = notifyOccasion;
    }


    /**
     * get 通知时间
     *
     * @return
     */
    public String getNotifyTime() {
        return notifyTime;
    }

    /**
     * set 通知时间
     *
     * @param notifyTime
     */
    public void setNotifyTime(String notifyTime) {
        this.notifyTime = notifyTime;
    }


    /**
     * get 通知模式
     *
     * @return
     */
    public String getNotifyPattern() {
        return notifyPattern;
    }

    /**
     * set 通知模式
     *
     * @param notifyPattern
     */
    public void setNotifyPattern(String notifyPattern) {
        this.notifyPattern = notifyPattern;
    }


    /**
     * get 通知者
     *
     * @return
     */
    public String getNotifier() {
        return notifier;
    }

    /**
     * set 通知者
     *
     * @param notifier
     */
    public void setNotifier(String notifier) {
        this.notifier = notifier;
    }


    /**
     * get 是否拥有模型
     *
     * @return
     */
    public Boolean getHasModel() {
        return hasModel;
    }

    /**
     * set 是否拥有模型
     *
     * @param hasModel
     */
    public void setHasModel(Boolean hasModel) {
        this.hasModel = hasModel;
    }


    /**
    * get 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @return
    */
    public List<String> getScriptByte() {
        return scriptByte;
    }

    /**
    * set 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @param scriptByte
    */
    public void setScriptByte(List<String> scriptByte) {
        this.scriptByte = scriptByte;
    }


    /**
     * get 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @return
     */
    public Integer getVersion() {
        return version;
    }

    /**
     * set 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @param version
     */
    public void setVersion(Integer version) {
        this.version = version;
    }


    /**
     * get 判断是否是运维中心调用编辑接口1，运维中心
     *
     * @return
     */
    public Integer getCore() {
        return core;
    }

    /**
     * set 判断是否是运维中心调用编辑接口1，运维中心
     *
     * @param core
     */
    public void setCore(Integer core) {
        this.core = core;
    }


    /**
     * get 数据渠道来源：新模型（MODEL），老模型（OLD_MODEL）、集成开发（IDE）、数据管道（PIPE）、数据质量（DQ）、AI(KUAI)
     *
     * @return
     */
    public String getChannel() {
        return channel;
    }

    /**
     * set 数据渠道来源：新模型（MODEL），老模型（OLD_MODEL）、集成开发（IDE）、数据管道（PIPE）、数据质量（DQ）、AI(KUAI)
     *
     * @param channel
     */
    public void setChannel(String channel) {
        this.channel = channel;
    }


    /**
     * get 周期开始时间
     *
     * @return
     */
    public String getSequenceStartTime() {
        return sequenceStartTime;
    }

    /**
     * set 周期开始时间
     *
     * @param sequenceStartTime
     */
    public void setSequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
    }


    /**
     * get 周期结束时间
     *
     * @return
     */
    public String getSequenceEndTime() {
        return sequenceEndTime;
    }

    /**
     * set 周期结束时间
     *
     * @param sequenceEndTime
     */
    public void setSequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
    }


    /**
     * get 时间间隔
     *
     * @return
     */
    public Integer getSequenceInterval() {
        return sequenceInterval;
    }

    /**
     * set 时间间隔
     *
     * @param sequenceInterval
     */
    public void setSequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
    }


    /**
     * get 启用状态
     *
     * @return
     */
    public String getEnable() {
        return enable;
    }

    /**
     * set 启用状态
     *
     * @param enable
     */
    public void setEnable(String enable) {
        this.enable = enable;
    }


    /**
     * get 脚本运行引擎  枚举值 &quot;TEZ、MR、SPARK&quot;
     *
     * @return
     */
    public String getRunParams() {
        return runParams;
    }

    /**
     * set 脚本运行引擎  枚举值 &quot;TEZ、MR、SPARK&quot;
     *
     * @param runParams
     */
    public void setRunParams(String runParams) {
        this.runParams = runParams;
    }


    /**
    * get 提交配置（仅HiveSQL在Spark引擎下支持指定）
    *
    * @return
    */
    public List<GpdjmcConfPairStringString> getSubmitConf() {
        return submitConf;
    }

    /**
    * set 提交配置（仅HiveSQL在Spark引擎下支持指定）
    *
    * @param submitConf
    */
    public void setSubmitConf(List<GpdjmcConfPairStringString> submitConf) {
        this.submitConf = submitConf;
    }


    /**
     * get 审计日志信息
     *
     * @return
     */
    public Object getUpdateInfo() {
        return updateInfo;
    }

    /**
     * set 审计日志信息
     *
     * @param updateInfo
     */
    public void setUpdateInfo(Object updateInfo) {
        this.updateInfo = updateInfo;
    }



    /**
     * set 作业名称
     *
     * @param jobName
     */
    public GpdjmcCalcJobResultDTO jobName(String jobName) {
        this.jobName = jobName;
        return this;
    }


    /**
     * set 表id
     *
     * @param tableId
     */
    public GpdjmcCalcJobResultDTO tableId(Integer tableId) {
        this.tableId = tableId;
        return this;
    }


    /**
     * set 数据库名称
     *
     * @param databaseName
     */
    public GpdjmcCalcJobResultDTO databaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }


    /**
     * set 工作空间
     *
     * @param workspaceCode
     */
    public GpdjmcCalcJobResultDTO workspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
        return this;
    }


    /**
     * set 模型表名
     *
     * @param tableName
     */
    public GpdjmcCalcJobResultDTO tableName(String tableName) {
        this.tableName = tableName;
        return this;
    }


    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public GpdjmcCalcJobResultDTO cstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
        return this;
    }


    /**
     * set 作业系统
     *
     * @param jobSystem
     */
    public GpdjmcCalcJobResultDTO jobSystem(String jobSystem) {
        this.jobSystem = jobSystem;
        return this;
    }


    /**
     * set 任务类型(触发类型)
     *
     * @param triggerType
     */
    public GpdjmcCalcJobResultDTO triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set triggerConfig
     *
     * @param triggerConfig
     */
    public GpdjmcCalcJobResultDTO triggerConfig(GpdjmcTriggerConfigDTO triggerConfig) {
        this.triggerConfig = triggerConfig;
        return this;
    }


    /**
     * set zip命令行
     *
     * @param zipCommand
     */
    public GpdjmcCalcJobResultDTO zipCommand(String zipCommand) {
        this.zipCommand = zipCommand;
        return this;
    }


    /**
     * set zip名称
     *
     * @param zipFileName
     */
    public GpdjmcCalcJobResultDTO zipFileName(String zipFileName) {
        this.zipFileName = zipFileName;
        return this;
    }


    /**
     * set zip参数
     *
     * @param zipParams
     */
    public GpdjmcCalcJobResultDTO zipParams(String zipParams) {
        this.zipParams = zipParams;
        return this;
    }


    /**
     * set 依赖任务列表
     *
     * @param dependencies
     */
    public GpdjmcCalcJobResultDTO dependencies(String dependencies) {
        this.dependencies = dependencies;
        return this;
    }


    /**
     * set 负责人
     *
     * @param manager
     */
    public GpdjmcCalcJobResultDTO manager(String manager) {
        this.manager = manager;
        return this;
    }


    /**
     * set 协作人
     *
     * @param cooperator
     */
    public GpdjmcCalcJobResultDTO cooperator(String cooperator) {
        this.cooperator = cooperator;
        return this;
    }


    /**
     * set 优先级
     *
     * @param priority
     */
    public GpdjmcCalcJobResultDTO priority(Integer priority) {
        this.priority = priority;
        return this;
    }


    /**
     * set 任务描述
     *
     * @param jobDesc
     */
    public GpdjmcCalcJobResultDTO jobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
        return this;
    }


    /**
     * set 脚本类型
     *
     * @param scriptType
     */
    public GpdjmcCalcJobResultDTO scriptType(String scriptType) {
        this.scriptType = scriptType;
        return this;
    }


    /**
     * set 脚本模板
     *
     * @param scriptTemplate
     */
    public GpdjmcCalcJobResultDTO scriptTemplate(String scriptTemplate) {
        this.scriptTemplate = scriptTemplate;
        return this;
    }


    /**
     * set 运行频率(运行周期)
     *
     * @param cycle
     */
    public GpdjmcCalcJobResultDTO cycle(String cycle) {
        this.cycle = cycle;
        return this;
    }


    /**
     * set 运行频率(运行周期内序列)
     *
     * @param sequence
     */
    public GpdjmcCalcJobResultDTO sequence(String sequence) {
        this.sequence = sequence;
        return this;
    }


    /**
     * set 生命周期
     *
     * @param lifeCycle
     */
    public GpdjmcCalcJobResultDTO lifeCycle(String lifeCycle) {
        this.lifeCycle = lifeCycle;
        return this;
    }


    /**
     * set 失败后是否重试
     *
     * @param retry
     */
    public GpdjmcCalcJobResultDTO retry(Boolean retry) {
        this.retry = retry;
        return this;
    }


    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runTime
     */
    public GpdjmcCalcJobResultDTO runTime(String runTime) {
        this.runTime = runTime;
        return this;
    }


    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runDate
     */
    public GpdjmcCalcJobResultDTO runDate(String runDate) {
        this.runDate = runDate;
        return this;
    }


    /**
     * set 超时时间
     *
     * @param runTimeOut
     */
    public GpdjmcCalcJobResultDTO runTimeOut(Integer runTimeOut) {
        this.runTimeOut = runTimeOut;
        return this;
    }


    /**
     * set 脚本来源类型（本地或者git）
     *
     * @param scriptSourceType
     */
    public GpdjmcCalcJobResultDTO scriptSourceType(String scriptSourceType) {
        this.scriptSourceType = scriptSourceType;
        return this;
    }


    /**
     * set 开始运行时间
     *
     * @param startRunTime
     */
    public GpdjmcCalcJobResultDTO startRunTime(String startRunTime) {
        this.startRunTime = startRunTime;
        return this;
    }


    /**
     * set 结束运行时间
     *
     * @param endRunTime
     */
    public GpdjmcCalcJobResultDTO endRunTime(String endRunTime) {
        this.endRunTime = endRunTime;
        return this;
    }


    /**
     * set 运行脚本
     *
     * @param runScript
     */
    public GpdjmcCalcJobResultDTO runScript(String runScript) {
        this.runScript = runScript;
        return this;
    }


    /**
     * set 通知事件
     *
     * @param notifyOccasion
     */
    public GpdjmcCalcJobResultDTO notifyOccasion(String notifyOccasion) {
        this.notifyOccasion = notifyOccasion;
        return this;
    }


    /**
     * set 通知时间
     *
     * @param notifyTime
     */
    public GpdjmcCalcJobResultDTO notifyTime(String notifyTime) {
        this.notifyTime = notifyTime;
        return this;
    }


    /**
     * set 通知模式
     *
     * @param notifyPattern
     */
    public GpdjmcCalcJobResultDTO notifyPattern(String notifyPattern) {
        this.notifyPattern = notifyPattern;
        return this;
    }


    /**
     * set 通知者
     *
     * @param notifier
     */
    public GpdjmcCalcJobResultDTO notifier(String notifier) {
        this.notifier = notifier;
        return this;
    }


    /**
     * set 是否拥有模型
     *
     * @param hasModel
     */
    public GpdjmcCalcJobResultDTO hasModel(Boolean hasModel) {
        this.hasModel = hasModel;
        return this;
    }


    /**
    * set 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @param scriptByte
    */
    public GpdjmcCalcJobResultDTO scriptByte(List<String> scriptByte) {
        this.scriptByte = scriptByte;
        return this;
    }


    /**
     * set 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @param version
     */
    public GpdjmcCalcJobResultDTO version(Integer version) {
        this.version = version;
        return this;
    }


    /**
     * set 判断是否是运维中心调用编辑接口1，运维中心
     *
     * @param core
     */
    public GpdjmcCalcJobResultDTO core(Integer core) {
        this.core = core;
        return this;
    }


    /**
     * set 数据渠道来源：新模型（MODEL），老模型（OLD_MODEL）、集成开发（IDE）、数据管道（PIPE）、数据质量（DQ）、AI(KUAI)
     *
     * @param channel
     */
    public GpdjmcCalcJobResultDTO channel(String channel) {
        this.channel = channel;
        return this;
    }


    /**
     * set 周期开始时间
     *
     * @param sequenceStartTime
     */
    public GpdjmcCalcJobResultDTO sequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
        return this;
    }


    /**
     * set 周期结束时间
     *
     * @param sequenceEndTime
     */
    public GpdjmcCalcJobResultDTO sequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
        return this;
    }


    /**
     * set 时间间隔
     *
     * @param sequenceInterval
     */
    public GpdjmcCalcJobResultDTO sequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
        return this;
    }


    /**
     * set 启用状态
     *
     * @param enable
     */
    public GpdjmcCalcJobResultDTO enable(String enable) {
        this.enable = enable;
        return this;
    }


    /**
     * set 脚本运行引擎  枚举值 &quot;TEZ、MR、SPARK&quot;
     *
     * @param runParams
     */
    public GpdjmcCalcJobResultDTO runParams(String runParams) {
        this.runParams = runParams;
        return this;
    }


    /**
    * set 提交配置（仅HiveSQL在Spark引擎下支持指定）
    *
    * @param submitConf
    */
    public GpdjmcCalcJobResultDTO submitConf(List<GpdjmcConfPairStringString> submitConf) {
        this.submitConf = submitConf;
        return this;
    }


    /**
     * set 审计日志信息
     *
     * @param updateInfo
     */
    public GpdjmcCalcJobResultDTO updateInfo(Object updateInfo) {
        this.updateInfo = updateInfo;
        return this;
    }



    /**
     * add item to 脚本文件字节数组,是将脚本文件内容转换为byte数组
     *
     * @param scriptByte
     */
    public void addScriptByte(String scriptByte) {
        if (this.scriptByte == null) {
            this.scriptByte = new ArrayList<>();
        }
        this.scriptByte.add(scriptByte);
    }

    /**
     * add item to 提交配置（仅HiveSQL在Spark引擎下支持指定）
     *
     * @param submitConf
     */
    public void addSubmitConf(GpdjmcConfPairStringString submitConf) {
        if (this.submitConf == null) {
            this.submitConf = new ArrayList<>();
        }
        this.submitConf.add(submitConf);
    }
}