/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * gpdjmcLoopParam
 */
public class GpdjmcLoopParam  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 循环类型
     */
    private String loopType;

    /**
     * 循环间隔
     */
    private Integer loopInterval;

    /**
     * 循环次数（仅迭代类型需要）
     */
    private Integer loopTimes;

    /**
     * 批次大小
     */
    private Integer batchSize;

    /**
     * 循环列表参数（仅列表类型需要）
     */
    
    private List<GpdjmcLoopListParam> loopListParams;


    /**
     * get 循环类型
     *
     * @return
     */
    public String getLoopType() {
        return loopType;
    }

    /**
     * set 循环类型
     *
     * @param loopType
     */
    public void setLoopType(String loopType) {
        this.loopType = loopType;
    }


    /**
     * get 循环间隔
     *
     * @return
     */
    public Integer getLoopInterval() {
        return loopInterval;
    }

    /**
     * set 循环间隔
     *
     * @param loopInterval
     */
    public void setLoopInterval(Integer loopInterval) {
        this.loopInterval = loopInterval;
    }


    /**
     * get 循环次数（仅迭代类型需要）
     *
     * @return
     */
    public Integer getLoopTimes() {
        return loopTimes;
    }

    /**
     * set 循环次数（仅迭代类型需要）
     *
     * @param loopTimes
     */
    public void setLoopTimes(Integer loopTimes) {
        this.loopTimes = loopTimes;
    }


    /**
     * get 批次大小
     *
     * @return
     */
    public Integer getBatchSize() {
        return batchSize;
    }

    /**
     * set 批次大小
     *
     * @param batchSize
     */
    public void setBatchSize(Integer batchSize) {
        this.batchSize = batchSize;
    }


    /**
    * get 循环列表参数（仅列表类型需要）
    *
    * @return
    */
    public List<GpdjmcLoopListParam> getLoopListParams() {
        return loopListParams;
    }

    /**
    * set 循环列表参数（仅列表类型需要）
    *
    * @param loopListParams
    */
    public void setLoopListParams(List<GpdjmcLoopListParam> loopListParams) {
        this.loopListParams = loopListParams;
    }



    /**
     * set 循环类型
     *
     * @param loopType
     */
    public GpdjmcLoopParam loopType(String loopType) {
        this.loopType = loopType;
        return this;
    }


    /**
     * set 循环间隔
     *
     * @param loopInterval
     */
    public GpdjmcLoopParam loopInterval(Integer loopInterval) {
        this.loopInterval = loopInterval;
        return this;
    }


    /**
     * set 循环次数（仅迭代类型需要）
     *
     * @param loopTimes
     */
    public GpdjmcLoopParam loopTimes(Integer loopTimes) {
        this.loopTimes = loopTimes;
        return this;
    }


    /**
     * set 批次大小
     *
     * @param batchSize
     */
    public GpdjmcLoopParam batchSize(Integer batchSize) {
        this.batchSize = batchSize;
        return this;
    }


    /**
    * set 循环列表参数（仅列表类型需要）
    *
    * @param loopListParams
    */
    public GpdjmcLoopParam loopListParams(List<GpdjmcLoopListParam> loopListParams) {
        this.loopListParams = loopListParams;
        return this;
    }



    /**
     * add item to 循环列表参数（仅列表类型需要）
     *
     * @param loopListParam
     */
    public void addLoopListParam(GpdjmcLoopListParam loopListParam) {
        if (this.loopListParams == null) {
            this.loopListParams = new ArrayList<>();
        }
        this.loopListParams.add(loopListParam);
    }
}