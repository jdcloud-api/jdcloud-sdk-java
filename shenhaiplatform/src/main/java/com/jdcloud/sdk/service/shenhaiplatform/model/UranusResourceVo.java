/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 资源信息显示（包括资源文件和资源目录）
 */
public class UranusResourceVo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 显示id
     */
    private String viewId;

    /**
     * 租户code
     */
    private String companyCode;

    /**
     * 命名空间code
     */
    private String workspaceCode;

    /**
     * 资源code，资源唯一标识
     */
    private String resourceCode;

    /**
     * 资源名称
     */
    private String resourceName;

    /**
     * 原始资源名称（上传的原始文件在本地客户端的文件名称）
     */
    private String originalName;

    /**
     * 资源类型
     */
    private String resourceType;

    /**
     * 是否有子资源
     */
    private Boolean hasChildren;

    /**
     * 显示图标(bigdataos-folder：资源根目录；bigdataos-folder：普通目录；bigdataos-file-jar：jar文件；bigdataos-file：普通文件；bigdataos-file-zip：归档文件)
     */
    private String icon;

    /**
     * 父资源code
     */
    private String parentCode;

    /**
     * 挂载目录（供shell、python、spark jar访问使用），复制路径时使用该路径
     */
    private String mountPath;

    /**
     * 该项目空间下的相对路径
     */
    private String relativePath;

    /**
     * 子资源
     */
    
    private List<UranusResourceVo> children;
    /**
     * 负责人
     */
    
    private List<String> managers;
    /**
     * 关联引擎
     */
    private String relativeEngine;

    /**
     * 上传文件方式
     */
    private String uploadMode;

    /**
     * 环境
     */
    private String env;

    /**
     * 发布状态（只有dev环境需要该字段）
     */
    private String publishStage;

    /**
     * 待发布的操作类型
     */
    private String operationType;



    /**
     * get 显示id
     *
     * @return
     */
    public String getViewId() {
        return viewId;
    }

    /**
     * set 显示id
     *
     * @param viewId
     */
    public void setViewId(String viewId) {
        this.viewId = viewId;
    }


    /**
     * get 租户code
     *
     * @return
     */
    public String getCompanyCode() {
        return companyCode;
    }

    /**
     * set 租户code
     *
     * @param companyCode
     */
    public void setCompanyCode(String companyCode) {
        this.companyCode = companyCode;
    }


    /**
     * get 命名空间code
     *
     * @return
     */
    public String getWorkspaceCode() {
        return workspaceCode;
    }

    /**
     * set 命名空间code
     *
     * @param workspaceCode
     */
    public void setWorkspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
    }


    /**
     * get 资源code，资源唯一标识
     *
     * @return
     */
    public String getResourceCode() {
        return resourceCode;
    }

    /**
     * set 资源code，资源唯一标识
     *
     * @param resourceCode
     */
    public void setResourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
    }


    /**
     * get 资源名称
     *
     * @return
     */
    public String getResourceName() {
        return resourceName;
    }

    /**
     * set 资源名称
     *
     * @param resourceName
     */
    public void setResourceName(String resourceName) {
        this.resourceName = resourceName;
    }


    /**
     * get 原始资源名称（上传的原始文件在本地客户端的文件名称）
     *
     * @return
     */
    public String getOriginalName() {
        return originalName;
    }

    /**
     * set 原始资源名称（上传的原始文件在本地客户端的文件名称）
     *
     * @param originalName
     */
    public void setOriginalName(String originalName) {
        this.originalName = originalName;
    }


    /**
     * get 资源类型
     *
     * @return
     */
    public String getResourceType() {
        return resourceType;
    }

    /**
     * set 资源类型
     *
     * @param resourceType
     */
    public void setResourceType(String resourceType) {
        this.resourceType = resourceType;
    }


    /**
     * get 是否有子资源
     *
     * @return
     */
    public Boolean getHasChildren() {
        return hasChildren;
    }

    /**
     * set 是否有子资源
     *
     * @param hasChildren
     */
    public void setHasChildren(Boolean hasChildren) {
        this.hasChildren = hasChildren;
    }


    /**
     * get 显示图标(bigdataos-folder：资源根目录；bigdataos-folder：普通目录；bigdataos-file-jar：jar文件；bigdataos-file：普通文件；bigdataos-file-zip：归档文件)
     *
     * @return
     */
    public String getIcon() {
        return icon;
    }

    /**
     * set 显示图标(bigdataos-folder：资源根目录；bigdataos-folder：普通目录；bigdataos-file-jar：jar文件；bigdataos-file：普通文件；bigdataos-file-zip：归档文件)
     *
     * @param icon
     */
    public void setIcon(String icon) {
        this.icon = icon;
    }


    /**
     * get 父资源code
     *
     * @return
     */
    public String getParentCode() {
        return parentCode;
    }

    /**
     * set 父资源code
     *
     * @param parentCode
     */
    public void setParentCode(String parentCode) {
        this.parentCode = parentCode;
    }


    /**
     * get 挂载目录（供shell、python、spark jar访问使用），复制路径时使用该路径
     *
     * @return
     */
    public String getMountPath() {
        return mountPath;
    }

    /**
     * set 挂载目录（供shell、python、spark jar访问使用），复制路径时使用该路径
     *
     * @param mountPath
     */
    public void setMountPath(String mountPath) {
        this.mountPath = mountPath;
    }


    /**
     * get 该项目空间下的相对路径
     *
     * @return
     */
    public String getRelativePath() {
        return relativePath;
    }

    /**
     * set 该项目空间下的相对路径
     *
     * @param relativePath
     */
    public void setRelativePath(String relativePath) {
        this.relativePath = relativePath;
    }


    /**
    * get 子资源
    *
    * @return
    */
    public List<UranusResourceVo> getChildren() {
        return children;
    }

    /**
    * set 子资源
    *
    * @param children
    */
    public void setChildren(List<UranusResourceVo> children) {
        this.children = children;
    }


    /**
    * get 负责人
    *
    * @return
    */
    public List<String> getManagers() {
        return managers;
    }

    /**
    * set 负责人
    *
    * @param managers
    */
    public void setManagers(List<String> managers) {
        this.managers = managers;
    }


    /**
     * get 关联引擎
     *
     * @return
     */
    public String getRelativeEngine() {
        return relativeEngine;
    }

    /**
     * set 关联引擎
     *
     * @param relativeEngine
     */
    public void setRelativeEngine(String relativeEngine) {
        this.relativeEngine = relativeEngine;
    }


    /**
     * get 上传文件方式
     *
     * @return
     */
    public String getUploadMode() {
        return uploadMode;
    }

    /**
     * set 上传文件方式
     *
     * @param uploadMode
     */
    public void setUploadMode(String uploadMode) {
        this.uploadMode = uploadMode;
    }


    /**
     * get 环境
     *
     * @return
     */
    public String getEnv() {
        return env;
    }

    /**
     * set 环境
     *
     * @param env
     */
    public void setEnv(String env) {
        this.env = env;
    }


    /**
     * get 发布状态（只有dev环境需要该字段）
     *
     * @return
     */
    public String getPublishStage() {
        return publishStage;
    }

    /**
     * set 发布状态（只有dev环境需要该字段）
     *
     * @param publishStage
     */
    public void setPublishStage(String publishStage) {
        this.publishStage = publishStage;
    }


    /**
     * get 待发布的操作类型
     *
     * @return
     */
    public String getOperationType() {
        return operationType;
    }

    /**
     * set 待发布的操作类型
     *
     * @param operationType
     */
    public void setOperationType(String operationType) {
        this.operationType = operationType;
    }



    /**
     * set 显示id
     *
     * @param viewId
     */
    public UranusResourceVo viewId(String viewId) {
        this.viewId = viewId;
        return this;
    }


    /**
     * set 租户code
     *
     * @param companyCode
     */
    public UranusResourceVo companyCode(String companyCode) {
        this.companyCode = companyCode;
        return this;
    }


    /**
     * set 命名空间code
     *
     * @param workspaceCode
     */
    public UranusResourceVo workspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
        return this;
    }


    /**
     * set 资源code，资源唯一标识
     *
     * @param resourceCode
     */
    public UranusResourceVo resourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
        return this;
    }


    /**
     * set 资源名称
     *
     * @param resourceName
     */
    public UranusResourceVo resourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }


    /**
     * set 原始资源名称（上传的原始文件在本地客户端的文件名称）
     *
     * @param originalName
     */
    public UranusResourceVo originalName(String originalName) {
        this.originalName = originalName;
        return this;
    }


    /**
     * set 资源类型
     *
     * @param resourceType
     */
    public UranusResourceVo resourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }


    /**
     * set 是否有子资源
     *
     * @param hasChildren
     */
    public UranusResourceVo hasChildren(Boolean hasChildren) {
        this.hasChildren = hasChildren;
        return this;
    }


    /**
     * set 显示图标(bigdataos-folder：资源根目录；bigdataos-folder：普通目录；bigdataos-file-jar：jar文件；bigdataos-file：普通文件；bigdataos-file-zip：归档文件)
     *
     * @param icon
     */
    public UranusResourceVo icon(String icon) {
        this.icon = icon;
        return this;
    }


    /**
     * set 父资源code
     *
     * @param parentCode
     */
    public UranusResourceVo parentCode(String parentCode) {
        this.parentCode = parentCode;
        return this;
    }


    /**
     * set 挂载目录（供shell、python、spark jar访问使用），复制路径时使用该路径
     *
     * @param mountPath
     */
    public UranusResourceVo mountPath(String mountPath) {
        this.mountPath = mountPath;
        return this;
    }


    /**
     * set 该项目空间下的相对路径
     *
     * @param relativePath
     */
    public UranusResourceVo relativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }


    /**
    * set 子资源
    *
    * @param children
    */
    public UranusResourceVo children(List<UranusResourceVo> children) {
        this.children = children;
        return this;
    }


    /**
    * set 负责人
    *
    * @param managers
    */
    public UranusResourceVo managers(List<String> managers) {
        this.managers = managers;
        return this;
    }


    /**
     * set 关联引擎
     *
     * @param relativeEngine
     */
    public UranusResourceVo relativeEngine(String relativeEngine) {
        this.relativeEngine = relativeEngine;
        return this;
    }


    /**
     * set 上传文件方式
     *
     * @param uploadMode
     */
    public UranusResourceVo uploadMode(String uploadMode) {
        this.uploadMode = uploadMode;
        return this;
    }


    /**
     * set 环境
     *
     * @param env
     */
    public UranusResourceVo env(String env) {
        this.env = env;
        return this;
    }


    /**
     * set 发布状态（只有dev环境需要该字段）
     *
     * @param publishStage
     */
    public UranusResourceVo publishStage(String publishStage) {
        this.publishStage = publishStage;
        return this;
    }


    /**
     * set 待发布的操作类型
     *
     * @param operationType
     */
    public UranusResourceVo operationType(String operationType) {
        this.operationType = operationType;
        return this;
    }



    /**
     * add item to 子资源
     *
     * @param children
     */
    public void addChildren(UranusResourceVo children) {
        if (this.children == null) {
            this.children = new ArrayList<>();
        }
        this.children.add(children);
    }

    /**
     * add item to 负责人
     *
     * @param manager
     */
    public void addManager(String manager) {
        if (this.managers == null) {
            this.managers = new ArrayList<>();
        }
        this.managers.add(manager);
    }
}