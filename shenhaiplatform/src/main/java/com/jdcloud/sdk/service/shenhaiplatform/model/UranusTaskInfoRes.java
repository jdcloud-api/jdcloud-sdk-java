/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * 作业配置信息
 */
public class UranusTaskInfoRes  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 新模型（MODEL），老模型（OLD_MODEL）、数据开发（IDE）、数据集成（PIPE）、数据质量（DQ)
     * Required:true
     */
    @Required
    private String flowCode;

    /**
     * projectNameMatch
     */
    private Boolean projectNameMatch;

    /**
     * nameKeyWord
     */
    private String nameKeyWord;

    /**
     * 关联类型 JobRelationEnum
     */
    private String relationType;

    /**
     * 操作类型
     */
    private String redirectType;

    /**
     * 表名
     */
    private String tableName;

    /**
     * tableNameMatch
     */
    private Boolean tableNameMatch;

    /**
     * 任务名称
     */
    private String jobName;

    /**
     * 所属系统
     */
    private String jobSystem;

    /**
     * 触发类型
     */
    private String triggerType;

    /**
     * 依赖任务
     */
    private String dependencies;

    /**
     * 负责人
     */
    private String manager;

    /**
     * 优先级
     */
    private String priority;

    /**
     * 任务描述
     */
    private String jobDesc;

    /**
     * 脚本类型，JCW为purl_sql，注意所有都是小写
     */
    private String scriptType;

    /**
     * 脚本名称
     */
    private String runScript;

    /**
     * 脚本内容
     */
    
    private List<String> scriptContent;
    /**
     * 运行频率
     */
    private String cycle;

    /**
     * 运行频率
     */
    private String sequence;

    /**
     * 生命周期
     */
    private String lifeCycle;

    /**
     * 失败后是否重试
     */
    private Boolean retry;

    /**
     * 预警时机
     */
    private String notifyOccasion;

    /**
     * 预警时间
     */
    private String notifyTime;

    /**
     * 预警方式
     */
    private String notifyPattern;

    /**
     * 预警通知人
     */
    private String notifier;

    /**
     * 开始运行时间（HH：mm）
     */
    private String startRunTime;

    /**
     * 结束运行时间（HH：mm）
     */
    private String endRunTime;

    /**
     * 定时、一次任务（开始运行时间）
     */
    private String runTime;

    /**
     * 定时、一次任务（开始运行时间）
     */
    private String runDate;

    /**
     * 节点Code
     * Required:true
     */
    @Required
    private String taskCode;

    /**
     * markIds
     */
    private String markIds;

    /**
     * 超时时间
     */
    private Integer runTimeOut;

    /**
     * 脚本来源类型
     */
    private String scriptSourceType;

    /**
     * isDeploy
     */
    private Boolean isDeploy;

    /**
     * 脚本路径
     */
    private String scriptPath;

    /**
     * 脚本文件字节数组,是将脚本文件内容转换为byte数组
     */
    
    private List<String> scriptByte;
    /**
     * 脚本文件Code
     */
    private String fileCode;

    /**
     * 作业发布描述
     */
    private String publishDesc;

    /**
     * 脚本内容
     */
    private String scriptInfo;

    /**
     * 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     */
    private Integer version;

    /**
     * 周期开始时间（小时分钟任务用）
     */
    private String sequenceStartTime;

    /**
     * 周期结束时间（小时分钟任务用）
     */
    private String sequenceEndTime;

    /**
     * 时间间隔（小时分钟任务用）
     */
    private Integer sequenceInterval;

    /**
     * 脚本运行引擎
     */
    private String runEngine;

    /**
     * 队列code
     */
    private String resourceCode;

    /**
     * 队列Name
     */
    private String resourceName;

    /**
     * 协作人
     */
    private String cooperator;

    /**
     * 输入参数
     */
    
    private List<UranusTaskParamReq> taskParamList;
    /**
     * 输出参数
     */
    
    private List<UranusTaskParamReq> exportParamList;
    /**
     * fromGravity
     */
    private Boolean fromGravity;

    /**
     * 作业读写数据源主id，数据源的主ID
     */
    private String datasourcePrimaryId;

    /**
     * 作业读写数据源使用环境类型,dev：开发环境，prod：生产环境
     */
    private String datasourceUseEnvType;



    /**
     * get 新模型（MODEL），老模型（OLD_MODEL）、数据开发（IDE）、数据集成（PIPE）、数据质量（DQ)
     *
     * @return
     */
    public String getFlowCode() {
        return flowCode;
    }

    /**
     * set 新模型（MODEL），老模型（OLD_MODEL）、数据开发（IDE）、数据集成（PIPE）、数据质量（DQ)
     *
     * @param flowCode
     */
    public void setFlowCode(String flowCode) {
        this.flowCode = flowCode;
    }


    /**
     * get projectNameMatch
     *
     * @return
     */
    public Boolean getProjectNameMatch() {
        return projectNameMatch;
    }

    /**
     * set projectNameMatch
     *
     * @param projectNameMatch
     */
    public void setProjectNameMatch(Boolean projectNameMatch) {
        this.projectNameMatch = projectNameMatch;
    }


    /**
     * get nameKeyWord
     *
     * @return
     */
    public String getNameKeyWord() {
        return nameKeyWord;
    }

    /**
     * set nameKeyWord
     *
     * @param nameKeyWord
     */
    public void setNameKeyWord(String nameKeyWord) {
        this.nameKeyWord = nameKeyWord;
    }


    /**
     * get 关联类型 JobRelationEnum
     *
     * @return
     */
    public String getRelationType() {
        return relationType;
    }

    /**
     * set 关联类型 JobRelationEnum
     *
     * @param relationType
     */
    public void setRelationType(String relationType) {
        this.relationType = relationType;
    }


    /**
     * get 操作类型
     *
     * @return
     */
    public String getRedirectType() {
        return redirectType;
    }

    /**
     * set 操作类型
     *
     * @param redirectType
     */
    public void setRedirectType(String redirectType) {
        this.redirectType = redirectType;
    }


    /**
     * get 表名
     *
     * @return
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * set 表名
     *
     * @param tableName
     */
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }


    /**
     * get tableNameMatch
     *
     * @return
     */
    public Boolean getTableNameMatch() {
        return tableNameMatch;
    }

    /**
     * set tableNameMatch
     *
     * @param tableNameMatch
     */
    public void setTableNameMatch(Boolean tableNameMatch) {
        this.tableNameMatch = tableNameMatch;
    }


    /**
     * get 任务名称
     *
     * @return
     */
    public String getJobName() {
        return jobName;
    }

    /**
     * set 任务名称
     *
     * @param jobName
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }


    /**
     * get 所属系统
     *
     * @return
     */
    public String getJobSystem() {
        return jobSystem;
    }

    /**
     * set 所属系统
     *
     * @param jobSystem
     */
    public void setJobSystem(String jobSystem) {
        this.jobSystem = jobSystem;
    }


    /**
     * get 触发类型
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 触发类型
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get 依赖任务
     *
     * @return
     */
    public String getDependencies() {
        return dependencies;
    }

    /**
     * set 依赖任务
     *
     * @param dependencies
     */
    public void setDependencies(String dependencies) {
        this.dependencies = dependencies;
    }


    /**
     * get 负责人
     *
     * @return
     */
    public String getManager() {
        return manager;
    }

    /**
     * set 负责人
     *
     * @param manager
     */
    public void setManager(String manager) {
        this.manager = manager;
    }


    /**
     * get 优先级
     *
     * @return
     */
    public String getPriority() {
        return priority;
    }

    /**
     * set 优先级
     *
     * @param priority
     */
    public void setPriority(String priority) {
        this.priority = priority;
    }


    /**
     * get 任务描述
     *
     * @return
     */
    public String getJobDesc() {
        return jobDesc;
    }

    /**
     * set 任务描述
     *
     * @param jobDesc
     */
    public void setJobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
    }


    /**
     * get 脚本类型，JCW为purl_sql，注意所有都是小写
     *
     * @return
     */
    public String getScriptType() {
        return scriptType;
    }

    /**
     * set 脚本类型，JCW为purl_sql，注意所有都是小写
     *
     * @param scriptType
     */
    public void setScriptType(String scriptType) {
        this.scriptType = scriptType;
    }


    /**
     * get 脚本名称
     *
     * @return
     */
    public String getRunScript() {
        return runScript;
    }

    /**
     * set 脚本名称
     *
     * @param runScript
     */
    public void setRunScript(String runScript) {
        this.runScript = runScript;
    }


    /**
    * get 脚本内容
    *
    * @return
    */
    public List<String> getScriptContent() {
        return scriptContent;
    }

    /**
    * set 脚本内容
    *
    * @param scriptContent
    */
    public void setScriptContent(List<String> scriptContent) {
        this.scriptContent = scriptContent;
    }


    /**
     * get 运行频率
     *
     * @return
     */
    public String getCycle() {
        return cycle;
    }

    /**
     * set 运行频率
     *
     * @param cycle
     */
    public void setCycle(String cycle) {
        this.cycle = cycle;
    }


    /**
     * get 运行频率
     *
     * @return
     */
    public String getSequence() {
        return sequence;
    }

    /**
     * set 运行频率
     *
     * @param sequence
     */
    public void setSequence(String sequence) {
        this.sequence = sequence;
    }


    /**
     * get 生命周期
     *
     * @return
     */
    public String getLifeCycle() {
        return lifeCycle;
    }

    /**
     * set 生命周期
     *
     * @param lifeCycle
     */
    public void setLifeCycle(String lifeCycle) {
        this.lifeCycle = lifeCycle;
    }


    /**
     * get 失败后是否重试
     *
     * @return
     */
    public Boolean getRetry() {
        return retry;
    }

    /**
     * set 失败后是否重试
     *
     * @param retry
     */
    public void setRetry(Boolean retry) {
        this.retry = retry;
    }


    /**
     * get 预警时机
     *
     * @return
     */
    public String getNotifyOccasion() {
        return notifyOccasion;
    }

    /**
     * set 预警时机
     *
     * @param notifyOccasion
     */
    public void setNotifyOccasion(String notifyOccasion) {
        this.notifyOccasion = notifyOccasion;
    }


    /**
     * get 预警时间
     *
     * @return
     */
    public String getNotifyTime() {
        return notifyTime;
    }

    /**
     * set 预警时间
     *
     * @param notifyTime
     */
    public void setNotifyTime(String notifyTime) {
        this.notifyTime = notifyTime;
    }


    /**
     * get 预警方式
     *
     * @return
     */
    public String getNotifyPattern() {
        return notifyPattern;
    }

    /**
     * set 预警方式
     *
     * @param notifyPattern
     */
    public void setNotifyPattern(String notifyPattern) {
        this.notifyPattern = notifyPattern;
    }


    /**
     * get 预警通知人
     *
     * @return
     */
    public String getNotifier() {
        return notifier;
    }

    /**
     * set 预警通知人
     *
     * @param notifier
     */
    public void setNotifier(String notifier) {
        this.notifier = notifier;
    }


    /**
     * get 开始运行时间（HH：mm）
     *
     * @return
     */
    public String getStartRunTime() {
        return startRunTime;
    }

    /**
     * set 开始运行时间（HH：mm）
     *
     * @param startRunTime
     */
    public void setStartRunTime(String startRunTime) {
        this.startRunTime = startRunTime;
    }


    /**
     * get 结束运行时间（HH：mm）
     *
     * @return
     */
    public String getEndRunTime() {
        return endRunTime;
    }

    /**
     * set 结束运行时间（HH：mm）
     *
     * @param endRunTime
     */
    public void setEndRunTime(String endRunTime) {
        this.endRunTime = endRunTime;
    }


    /**
     * get 定时、一次任务（开始运行时间）
     *
     * @return
     */
    public String getRunTime() {
        return runTime;
    }

    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runTime
     */
    public void setRunTime(String runTime) {
        this.runTime = runTime;
    }


    /**
     * get 定时、一次任务（开始运行时间）
     *
     * @return
     */
    public String getRunDate() {
        return runDate;
    }

    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runDate
     */
    public void setRunDate(String runDate) {
        this.runDate = runDate;
    }


    /**
     * get 节点Code
     *
     * @return
     */
    public String getTaskCode() {
        return taskCode;
    }

    /**
     * set 节点Code
     *
     * @param taskCode
     */
    public void setTaskCode(String taskCode) {
        this.taskCode = taskCode;
    }


    /**
     * get markIds
     *
     * @return
     */
    public String getMarkIds() {
        return markIds;
    }

    /**
     * set markIds
     *
     * @param markIds
     */
    public void setMarkIds(String markIds) {
        this.markIds = markIds;
    }


    /**
     * get 超时时间
     *
     * @return
     */
    public Integer getRunTimeOut() {
        return runTimeOut;
    }

    /**
     * set 超时时间
     *
     * @param runTimeOut
     */
    public void setRunTimeOut(Integer runTimeOut) {
        this.runTimeOut = runTimeOut;
    }


    /**
     * get 脚本来源类型
     *
     * @return
     */
    public String getScriptSourceType() {
        return scriptSourceType;
    }

    /**
     * set 脚本来源类型
     *
     * @param scriptSourceType
     */
    public void setScriptSourceType(String scriptSourceType) {
        this.scriptSourceType = scriptSourceType;
    }


    /**
     * get isDeploy
     *
     * @return
     */
    public Boolean getIsDeploy() {
        return isDeploy;
    }

    /**
     * set isDeploy
     *
     * @param isDeploy
     */
    public void setIsDeploy(Boolean isDeploy) {
        this.isDeploy = isDeploy;
    }


    /**
     * get 脚本路径
     *
     * @return
     */
    public String getScriptPath() {
        return scriptPath;
    }

    /**
     * set 脚本路径
     *
     * @param scriptPath
     */
    public void setScriptPath(String scriptPath) {
        this.scriptPath = scriptPath;
    }


    /**
    * get 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @return
    */
    public List<String> getScriptByte() {
        return scriptByte;
    }

    /**
    * set 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @param scriptByte
    */
    public void setScriptByte(List<String> scriptByte) {
        this.scriptByte = scriptByte;
    }


    /**
     * get 脚本文件Code
     *
     * @return
     */
    public String getFileCode() {
        return fileCode;
    }

    /**
     * set 脚本文件Code
     *
     * @param fileCode
     */
    public void setFileCode(String fileCode) {
        this.fileCode = fileCode;
    }


    /**
     * get 作业发布描述
     *
     * @return
     */
    public String getPublishDesc() {
        return publishDesc;
    }

    /**
     * set 作业发布描述
     *
     * @param publishDesc
     */
    public void setPublishDesc(String publishDesc) {
        this.publishDesc = publishDesc;
    }


    /**
     * get 脚本内容
     *
     * @return
     */
    public String getScriptInfo() {
        return scriptInfo;
    }

    /**
     * set 脚本内容
     *
     * @param scriptInfo
     */
    public void setScriptInfo(String scriptInfo) {
        this.scriptInfo = scriptInfo;
    }


    /**
     * get 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @return
     */
    public Integer getVersion() {
        return version;
    }

    /**
     * set 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @param version
     */
    public void setVersion(Integer version) {
        this.version = version;
    }


    /**
     * get 周期开始时间（小时分钟任务用）
     *
     * @return
     */
    public String getSequenceStartTime() {
        return sequenceStartTime;
    }

    /**
     * set 周期开始时间（小时分钟任务用）
     *
     * @param sequenceStartTime
     */
    public void setSequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
    }


    /**
     * get 周期结束时间（小时分钟任务用）
     *
     * @return
     */
    public String getSequenceEndTime() {
        return sequenceEndTime;
    }

    /**
     * set 周期结束时间（小时分钟任务用）
     *
     * @param sequenceEndTime
     */
    public void setSequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
    }


    /**
     * get 时间间隔（小时分钟任务用）
     *
     * @return
     */
    public Integer getSequenceInterval() {
        return sequenceInterval;
    }

    /**
     * set 时间间隔（小时分钟任务用）
     *
     * @param sequenceInterval
     */
    public void setSequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
    }


    /**
     * get 脚本运行引擎
     *
     * @return
     */
    public String getRunEngine() {
        return runEngine;
    }

    /**
     * set 脚本运行引擎
     *
     * @param runEngine
     */
    public void setRunEngine(String runEngine) {
        this.runEngine = runEngine;
    }


    /**
     * get 队列code
     *
     * @return
     */
    public String getResourceCode() {
        return resourceCode;
    }

    /**
     * set 队列code
     *
     * @param resourceCode
     */
    public void setResourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
    }


    /**
     * get 队列Name
     *
     * @return
     */
    public String getResourceName() {
        return resourceName;
    }

    /**
     * set 队列Name
     *
     * @param resourceName
     */
    public void setResourceName(String resourceName) {
        this.resourceName = resourceName;
    }


    /**
     * get 协作人
     *
     * @return
     */
    public String getCooperator() {
        return cooperator;
    }

    /**
     * set 协作人
     *
     * @param cooperator
     */
    public void setCooperator(String cooperator) {
        this.cooperator = cooperator;
    }


    /**
    * get 输入参数
    *
    * @return
    */
    public List<UranusTaskParamReq> getTaskParamList() {
        return taskParamList;
    }

    /**
    * set 输入参数
    *
    * @param taskParamList
    */
    public void setTaskParamList(List<UranusTaskParamReq> taskParamList) {
        this.taskParamList = taskParamList;
    }


    /**
    * get 输出参数
    *
    * @return
    */
    public List<UranusTaskParamReq> getExportParamList() {
        return exportParamList;
    }

    /**
    * set 输出参数
    *
    * @param exportParamList
    */
    public void setExportParamList(List<UranusTaskParamReq> exportParamList) {
        this.exportParamList = exportParamList;
    }


    /**
     * get fromGravity
     *
     * @return
     */
    public Boolean getFromGravity() {
        return fromGravity;
    }

    /**
     * set fromGravity
     *
     * @param fromGravity
     */
    public void setFromGravity(Boolean fromGravity) {
        this.fromGravity = fromGravity;
    }


    /**
     * get 作业读写数据源主id，数据源的主ID
     *
     * @return
     */
    public String getDatasourcePrimaryId() {
        return datasourcePrimaryId;
    }

    /**
     * set 作业读写数据源主id，数据源的主ID
     *
     * @param datasourcePrimaryId
     */
    public void setDatasourcePrimaryId(String datasourcePrimaryId) {
        this.datasourcePrimaryId = datasourcePrimaryId;
    }


    /**
     * get 作业读写数据源使用环境类型,dev：开发环境，prod：生产环境
     *
     * @return
     */
    public String getDatasourceUseEnvType() {
        return datasourceUseEnvType;
    }

    /**
     * set 作业读写数据源使用环境类型,dev：开发环境，prod：生产环境
     *
     * @param datasourceUseEnvType
     */
    public void setDatasourceUseEnvType(String datasourceUseEnvType) {
        this.datasourceUseEnvType = datasourceUseEnvType;
    }



    /**
     * set 新模型（MODEL），老模型（OLD_MODEL）、数据开发（IDE）、数据集成（PIPE）、数据质量（DQ)
     *
     * @param flowCode
     */
    public UranusTaskInfoRes flowCode(String flowCode) {
        this.flowCode = flowCode;
        return this;
    }


    /**
     * set projectNameMatch
     *
     * @param projectNameMatch
     */
    public UranusTaskInfoRes projectNameMatch(Boolean projectNameMatch) {
        this.projectNameMatch = projectNameMatch;
        return this;
    }


    /**
     * set nameKeyWord
     *
     * @param nameKeyWord
     */
    public UranusTaskInfoRes nameKeyWord(String nameKeyWord) {
        this.nameKeyWord = nameKeyWord;
        return this;
    }


    /**
     * set 关联类型 JobRelationEnum
     *
     * @param relationType
     */
    public UranusTaskInfoRes relationType(String relationType) {
        this.relationType = relationType;
        return this;
    }


    /**
     * set 操作类型
     *
     * @param redirectType
     */
    public UranusTaskInfoRes redirectType(String redirectType) {
        this.redirectType = redirectType;
        return this;
    }


    /**
     * set 表名
     *
     * @param tableName
     */
    public UranusTaskInfoRes tableName(String tableName) {
        this.tableName = tableName;
        return this;
    }


    /**
     * set tableNameMatch
     *
     * @param tableNameMatch
     */
    public UranusTaskInfoRes tableNameMatch(Boolean tableNameMatch) {
        this.tableNameMatch = tableNameMatch;
        return this;
    }


    /**
     * set 任务名称
     *
     * @param jobName
     */
    public UranusTaskInfoRes jobName(String jobName) {
        this.jobName = jobName;
        return this;
    }


    /**
     * set 所属系统
     *
     * @param jobSystem
     */
    public UranusTaskInfoRes jobSystem(String jobSystem) {
        this.jobSystem = jobSystem;
        return this;
    }


    /**
     * set 触发类型
     *
     * @param triggerType
     */
    public UranusTaskInfoRes triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set 依赖任务
     *
     * @param dependencies
     */
    public UranusTaskInfoRes dependencies(String dependencies) {
        this.dependencies = dependencies;
        return this;
    }


    /**
     * set 负责人
     *
     * @param manager
     */
    public UranusTaskInfoRes manager(String manager) {
        this.manager = manager;
        return this;
    }


    /**
     * set 优先级
     *
     * @param priority
     */
    public UranusTaskInfoRes priority(String priority) {
        this.priority = priority;
        return this;
    }


    /**
     * set 任务描述
     *
     * @param jobDesc
     */
    public UranusTaskInfoRes jobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
        return this;
    }


    /**
     * set 脚本类型，JCW为purl_sql，注意所有都是小写
     *
     * @param scriptType
     */
    public UranusTaskInfoRes scriptType(String scriptType) {
        this.scriptType = scriptType;
        return this;
    }


    /**
     * set 脚本名称
     *
     * @param runScript
     */
    public UranusTaskInfoRes runScript(String runScript) {
        this.runScript = runScript;
        return this;
    }


    /**
    * set 脚本内容
    *
    * @param scriptContent
    */
    public UranusTaskInfoRes scriptContent(List<String> scriptContent) {
        this.scriptContent = scriptContent;
        return this;
    }


    /**
     * set 运行频率
     *
     * @param cycle
     */
    public UranusTaskInfoRes cycle(String cycle) {
        this.cycle = cycle;
        return this;
    }


    /**
     * set 运行频率
     *
     * @param sequence
     */
    public UranusTaskInfoRes sequence(String sequence) {
        this.sequence = sequence;
        return this;
    }


    /**
     * set 生命周期
     *
     * @param lifeCycle
     */
    public UranusTaskInfoRes lifeCycle(String lifeCycle) {
        this.lifeCycle = lifeCycle;
        return this;
    }


    /**
     * set 失败后是否重试
     *
     * @param retry
     */
    public UranusTaskInfoRes retry(Boolean retry) {
        this.retry = retry;
        return this;
    }


    /**
     * set 预警时机
     *
     * @param notifyOccasion
     */
    public UranusTaskInfoRes notifyOccasion(String notifyOccasion) {
        this.notifyOccasion = notifyOccasion;
        return this;
    }


    /**
     * set 预警时间
     *
     * @param notifyTime
     */
    public UranusTaskInfoRes notifyTime(String notifyTime) {
        this.notifyTime = notifyTime;
        return this;
    }


    /**
     * set 预警方式
     *
     * @param notifyPattern
     */
    public UranusTaskInfoRes notifyPattern(String notifyPattern) {
        this.notifyPattern = notifyPattern;
        return this;
    }


    /**
     * set 预警通知人
     *
     * @param notifier
     */
    public UranusTaskInfoRes notifier(String notifier) {
        this.notifier = notifier;
        return this;
    }


    /**
     * set 开始运行时间（HH：mm）
     *
     * @param startRunTime
     */
    public UranusTaskInfoRes startRunTime(String startRunTime) {
        this.startRunTime = startRunTime;
        return this;
    }


    /**
     * set 结束运行时间（HH：mm）
     *
     * @param endRunTime
     */
    public UranusTaskInfoRes endRunTime(String endRunTime) {
        this.endRunTime = endRunTime;
        return this;
    }


    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runTime
     */
    public UranusTaskInfoRes runTime(String runTime) {
        this.runTime = runTime;
        return this;
    }


    /**
     * set 定时、一次任务（开始运行时间）
     *
     * @param runDate
     */
    public UranusTaskInfoRes runDate(String runDate) {
        this.runDate = runDate;
        return this;
    }


    /**
     * set 节点Code
     *
     * @param taskCode
     */
    public UranusTaskInfoRes taskCode(String taskCode) {
        this.taskCode = taskCode;
        return this;
    }


    /**
     * set markIds
     *
     * @param markIds
     */
    public UranusTaskInfoRes markIds(String markIds) {
        this.markIds = markIds;
        return this;
    }


    /**
     * set 超时时间
     *
     * @param runTimeOut
     */
    public UranusTaskInfoRes runTimeOut(Integer runTimeOut) {
        this.runTimeOut = runTimeOut;
        return this;
    }


    /**
     * set 脚本来源类型
     *
     * @param scriptSourceType
     */
    public UranusTaskInfoRes scriptSourceType(String scriptSourceType) {
        this.scriptSourceType = scriptSourceType;
        return this;
    }


    /**
     * set isDeploy
     *
     * @param isDeploy
     */
    public UranusTaskInfoRes isDeploy(Boolean isDeploy) {
        this.isDeploy = isDeploy;
        return this;
    }


    /**
     * set 脚本路径
     *
     * @param scriptPath
     */
    public UranusTaskInfoRes scriptPath(String scriptPath) {
        this.scriptPath = scriptPath;
        return this;
    }


    /**
    * set 脚本文件字节数组,是将脚本文件内容转换为byte数组
    *
    * @param scriptByte
    */
    public UranusTaskInfoRes scriptByte(List<String> scriptByte) {
        this.scriptByte = scriptByte;
        return this;
    }


    /**
     * set 脚本文件Code
     *
     * @param fileCode
     */
    public UranusTaskInfoRes fileCode(String fileCode) {
        this.fileCode = fileCode;
        return this;
    }


    /**
     * set 作业发布描述
     *
     * @param publishDesc
     */
    public UranusTaskInfoRes publishDesc(String publishDesc) {
        this.publishDesc = publishDesc;
        return this;
    }


    /**
     * set 脚本内容
     *
     * @param scriptInfo
     */
    public UranusTaskInfoRes scriptInfo(String scriptInfo) {
        this.scriptInfo = scriptInfo;
        return this;
    }


    /**
     * set 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态
     *
     * @param version
     */
    public UranusTaskInfoRes version(Integer version) {
        this.version = version;
        return this;
    }


    /**
     * set 周期开始时间（小时分钟任务用）
     *
     * @param sequenceStartTime
     */
    public UranusTaskInfoRes sequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
        return this;
    }


    /**
     * set 周期结束时间（小时分钟任务用）
     *
     * @param sequenceEndTime
     */
    public UranusTaskInfoRes sequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
        return this;
    }


    /**
     * set 时间间隔（小时分钟任务用）
     *
     * @param sequenceInterval
     */
    public UranusTaskInfoRes sequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
        return this;
    }


    /**
     * set 脚本运行引擎
     *
     * @param runEngine
     */
    public UranusTaskInfoRes runEngine(String runEngine) {
        this.runEngine = runEngine;
        return this;
    }


    /**
     * set 队列code
     *
     * @param resourceCode
     */
    public UranusTaskInfoRes resourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
        return this;
    }


    /**
     * set 队列Name
     *
     * @param resourceName
     */
    public UranusTaskInfoRes resourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }


    /**
     * set 协作人
     *
     * @param cooperator
     */
    public UranusTaskInfoRes cooperator(String cooperator) {
        this.cooperator = cooperator;
        return this;
    }


    /**
    * set 输入参数
    *
    * @param taskParamList
    */
    public UranusTaskInfoRes taskParamList(List<UranusTaskParamReq> taskParamList) {
        this.taskParamList = taskParamList;
        return this;
    }


    /**
    * set 输出参数
    *
    * @param exportParamList
    */
    public UranusTaskInfoRes exportParamList(List<UranusTaskParamReq> exportParamList) {
        this.exportParamList = exportParamList;
        return this;
    }


    /**
     * set fromGravity
     *
     * @param fromGravity
     */
    public UranusTaskInfoRes fromGravity(Boolean fromGravity) {
        this.fromGravity = fromGravity;
        return this;
    }


    /**
     * set 作业读写数据源主id，数据源的主ID
     *
     * @param datasourcePrimaryId
     */
    public UranusTaskInfoRes datasourcePrimaryId(String datasourcePrimaryId) {
        this.datasourcePrimaryId = datasourcePrimaryId;
        return this;
    }


    /**
     * set 作业读写数据源使用环境类型,dev：开发环境，prod：生产环境
     *
     * @param datasourceUseEnvType
     */
    public UranusTaskInfoRes datasourceUseEnvType(String datasourceUseEnvType) {
        this.datasourceUseEnvType = datasourceUseEnvType;
        return this;
    }



    /**
     * add item to 脚本内容
     *
     * @param scriptContent
     */
    public void addScriptContent(String scriptContent) {
        if (this.scriptContent == null) {
            this.scriptContent = new ArrayList<>();
        }
        this.scriptContent.add(scriptContent);
    }

    /**
     * add item to 脚本文件字节数组,是将脚本文件内容转换为byte数组
     *
     * @param scriptByte
     */
    public void addScriptByte(String scriptByte) {
        if (this.scriptByte == null) {
            this.scriptByte = new ArrayList<>();
        }
        this.scriptByte.add(scriptByte);
    }

    /**
     * add item to 输入参数
     *
     * @param taskParamList
     */
    public void addTaskParamList(UranusTaskParamReq taskParamList) {
        if (this.taskParamList == null) {
            this.taskParamList = new ArrayList<>();
        }
        this.taskParamList.add(taskParamList);
    }

    /**
     * add item to 输出参数
     *
     * @param exportParamList
     */
    public void addExportParamList(UranusTaskParamReq exportParamList) {
        if (this.exportParamList == null) {
            this.exportParamList = new ArrayList<>();
        }
        this.exportParamList.add(exportParamList);
    }
}