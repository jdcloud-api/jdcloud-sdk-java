/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ShenHaiPlatform Admin Manage APIs
 * 作业状态管理
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 作业信息更新
 */
public class GravityParticleParticleJobSchedUpdateSchedJobRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 作业名称
     */
    private String jobName;

    /**
     * 客户作业名称
     */
    private String cstJobName;

    /**
     * 租户code
     */
    private String companyCode;

    /**
     * 工作空间code
     */
    private String workspaceCode;

    /**
     * 计算资源组code
     */
    private String resourceCode;

    /**
     * 作业描述
     */
    private String jobDesc;

    /**
     * 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     */
    private String lastStatus;

    /**
     * 最后一次执行日期
     */
    private String lastTxDate;

    /**
     * 最后一次运行开始时间
     */
    private String lastStartTime;

    /**
     * 最后一次运行结束时间
     */
    private String lastEndTime;

    /**
     * 最后一次运行服务器
     */
    private String lastServer;

    /**
     * Session ID
     */
    private Integer lastSessionid;

    /**
     * 最后返回编码
     */
    private Integer lastReturnCode;

    /**
     * 当前作业状态信息
     */
    private String currentStatusMsg;

    /**
     * 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     */
    private String triggerType;

    /**
     * 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     */
    private String cycle;

    /**
     * 周期具体日期
     */
    private String sequence;

    /**
     * T+N，偏移量
     */
    private Integer txDateOffset;

    /**
     * 作业优先级，数字越小优先级越高
     */
    private Integer priority;

    /**
     * 作业超时时间，单位分钟
     */
    private Integer timeout;

    /**
     * 窗口期开始时间
     */
    private String windowStartTime;

    /**
     * 窗口期结束时间
     */
    private String windowEndTime;

    /**
     * 失败后次日是否自动运行，1是、0否
     */
    private String morrowAutoExec;

    /**
     * 抽空之后的处理 0 无操作 1 作业失败 2发出警告
     */
    private Integer dataZeroKillEnable;

    /**
     * 重试次数
     */
    private Integer retryCount;

    /**
     * 间隔/秒
     */
    private Integer retryInterval;

    /**
     * 当期已经跑成功过，是否可以再跑，1启用、0关闭
     */
    private String flagAgain;

    /**
     * 是否可以跨周期跑，1启用、0关闭
     */
    private String flagAcross;

    /**
     * 是否可以自身并行，1启用、0关闭
     */
    private String flagParallel;

    /**
     * 是否级联触发，父任务重跑后是否被强制触发重跑，1是、0否
     */
    private String flagCascadedTrigger;

    /**
     * 需要的运行环境
     */
    private String requiredRunEnv;

    /**
     * 运行脚本
     */
    private String runScript;

    /**
     * 是否启用，0未上线、1已上线、2已下线
     */
    private String enable;

    /**
     * 负责人，不超过10个
     */
    private String manager;

    /**
     * 共享人，不超过10个
     */
    private String shareUser;

    /**
     * 失效时间
     */
    private String expireTime;

    /**
     * zip命令行
     */
    private String commands;

    /**
     * 创建人
     */
    private String createUser;

    /**
     * 创建时间
     */
    private String createTime;

    /**
     * 更新时间
     */
    private String updateTime;

    /**
     * 实时结点名称
     */
    private String nodeName;

    /**
     * 实时主题
     */
    private String topic;

    /**
     * 作业执行方式  0离线 1双写 2实时
     */
    private String jobRunWay;

    /**
     * 所属系统
     */
    private String belongSys;

    /**
     * 主从同步延迟处理方式。0:警告无处理，1:作业延迟启动
     */
    private String msDelayDealWay;

    /**
     * 周期开始时间(适用小时分钟)
     */
    private String sequenceStartTime;

    /**
     * 周期结束时间(适用小时分钟)
     */
    private String sequenceEndTime;

    /**
     * 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     */
    private Integer sequenceInterval;

    /**
     * 作业运行参数
     */
    private String runParams;

    /**
     * 地域ID
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 应用名称
     * Required:true
     */
    @Required
    private String appName;



    /**
     * get 作业名称
     *
     * @return
     */
    public String getJobName() {
        return jobName;
    }

    /**
     * set 作业名称
     *
     * @param jobName
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }


    /**
     * get 客户作业名称
     *
     * @return
     */
    public String getCstJobName() {
        return cstJobName;
    }

    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public void setCstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
    }


    /**
     * get 租户code
     *
     * @return
     */
    public String getCompanyCode() {
        return companyCode;
    }

    /**
     * set 租户code
     *
     * @param companyCode
     */
    public void setCompanyCode(String companyCode) {
        this.companyCode = companyCode;
    }


    /**
     * get 工作空间code
     *
     * @return
     */
    public String getWorkspaceCode() {
        return workspaceCode;
    }

    /**
     * set 工作空间code
     *
     * @param workspaceCode
     */
    public void setWorkspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
    }


    /**
     * get 计算资源组code
     *
     * @return
     */
    public String getResourceCode() {
        return resourceCode;
    }

    /**
     * set 计算资源组code
     *
     * @param resourceCode
     */
    public void setResourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
    }


    /**
     * get 作业描述
     *
     * @return
     */
    public String getJobDesc() {
        return jobDesc;
    }

    /**
     * set 作业描述
     *
     * @param jobDesc
     */
    public void setJobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
    }


    /**
     * get 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @return
     */
    public String getLastStatus() {
        return lastStatus;
    }

    /**
     * set 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @param lastStatus
     */
    public void setLastStatus(String lastStatus) {
        this.lastStatus = lastStatus;
    }


    /**
     * get 最后一次执行日期
     *
     * @return
     */
    public String getLastTxDate() {
        return lastTxDate;
    }

    /**
     * set 最后一次执行日期
     *
     * @param lastTxDate
     */
    public void setLastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
    }


    /**
     * get 最后一次运行开始时间
     *
     * @return
     */
    public String getLastStartTime() {
        return lastStartTime;
    }

    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public void setLastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
    }


    /**
     * get 最后一次运行结束时间
     *
     * @return
     */
    public String getLastEndTime() {
        return lastEndTime;
    }

    /**
     * set 最后一次运行结束时间
     *
     * @param lastEndTime
     */
    public void setLastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
    }


    /**
     * get 最后一次运行服务器
     *
     * @return
     */
    public String getLastServer() {
        return lastServer;
    }

    /**
     * set 最后一次运行服务器
     *
     * @param lastServer
     */
    public void setLastServer(String lastServer) {
        this.lastServer = lastServer;
    }


    /**
     * get Session ID
     *
     * @return
     */
    public Integer getLastSessionid() {
        return lastSessionid;
    }

    /**
     * set Session ID
     *
     * @param lastSessionid
     */
    public void setLastSessionid(Integer lastSessionid) {
        this.lastSessionid = lastSessionid;
    }


    /**
     * get 最后返回编码
     *
     * @return
     */
    public Integer getLastReturnCode() {
        return lastReturnCode;
    }

    /**
     * set 最后返回编码
     *
     * @param lastReturnCode
     */
    public void setLastReturnCode(Integer lastReturnCode) {
        this.lastReturnCode = lastReturnCode;
    }


    /**
     * get 当前作业状态信息
     *
     * @return
     */
    public String getCurrentStatusMsg() {
        return currentStatusMsg;
    }

    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public void setCurrentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
    }


    /**
     * get 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @return
     */
    public String getTriggerType() {
        return triggerType;
    }

    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public void setTriggerType(String triggerType) {
        this.triggerType = triggerType;
    }


    /**
     * get 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @return
     */
    public String getCycle() {
        return cycle;
    }

    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public void setCycle(String cycle) {
        this.cycle = cycle;
    }


    /**
     * get 周期具体日期
     *
     * @return
     */
    public String getSequence() {
        return sequence;
    }

    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public void setSequence(String sequence) {
        this.sequence = sequence;
    }


    /**
     * get T+N，偏移量
     *
     * @return
     */
    public Integer getTxDateOffset() {
        return txDateOffset;
    }

    /**
     * set T+N，偏移量
     *
     * @param txDateOffset
     */
    public void setTxDateOffset(Integer txDateOffset) {
        this.txDateOffset = txDateOffset;
    }


    /**
     * get 作业优先级，数字越小优先级越高
     *
     * @return
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * set 作业优先级，数字越小优先级越高
     *
     * @param priority
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }


    /**
     * get 作业超时时间，单位分钟
     *
     * @return
     */
    public Integer getTimeout() {
        return timeout;
    }

    /**
     * set 作业超时时间，单位分钟
     *
     * @param timeout
     */
    public void setTimeout(Integer timeout) {
        this.timeout = timeout;
    }


    /**
     * get 窗口期开始时间
     *
     * @return
     */
    public String getWindowStartTime() {
        return windowStartTime;
    }

    /**
     * set 窗口期开始时间
     *
     * @param windowStartTime
     */
    public void setWindowStartTime(String windowStartTime) {
        this.windowStartTime = windowStartTime;
    }


    /**
     * get 窗口期结束时间
     *
     * @return
     */
    public String getWindowEndTime() {
        return windowEndTime;
    }

    /**
     * set 窗口期结束时间
     *
     * @param windowEndTime
     */
    public void setWindowEndTime(String windowEndTime) {
        this.windowEndTime = windowEndTime;
    }


    /**
     * get 失败后次日是否自动运行，1是、0否
     *
     * @return
     */
    public String getMorrowAutoExec() {
        return morrowAutoExec;
    }

    /**
     * set 失败后次日是否自动运行，1是、0否
     *
     * @param morrowAutoExec
     */
    public void setMorrowAutoExec(String morrowAutoExec) {
        this.morrowAutoExec = morrowAutoExec;
    }


    /**
     * get 抽空之后的处理 0 无操作 1 作业失败 2发出警告
     *
     * @return
     */
    public Integer getDataZeroKillEnable() {
        return dataZeroKillEnable;
    }

    /**
     * set 抽空之后的处理 0 无操作 1 作业失败 2发出警告
     *
     * @param dataZeroKillEnable
     */
    public void setDataZeroKillEnable(Integer dataZeroKillEnable) {
        this.dataZeroKillEnable = dataZeroKillEnable;
    }


    /**
     * get 重试次数
     *
     * @return
     */
    public Integer getRetryCount() {
        return retryCount;
    }

    /**
     * set 重试次数
     *
     * @param retryCount
     */
    public void setRetryCount(Integer retryCount) {
        this.retryCount = retryCount;
    }


    /**
     * get 间隔/秒
     *
     * @return
     */
    public Integer getRetryInterval() {
        return retryInterval;
    }

    /**
     * set 间隔/秒
     *
     * @param retryInterval
     */
    public void setRetryInterval(Integer retryInterval) {
        this.retryInterval = retryInterval;
    }


    /**
     * get 当期已经跑成功过，是否可以再跑，1启用、0关闭
     *
     * @return
     */
    public String getFlagAgain() {
        return flagAgain;
    }

    /**
     * set 当期已经跑成功过，是否可以再跑，1启用、0关闭
     *
     * @param flagAgain
     */
    public void setFlagAgain(String flagAgain) {
        this.flagAgain = flagAgain;
    }


    /**
     * get 是否可以跨周期跑，1启用、0关闭
     *
     * @return
     */
    public String getFlagAcross() {
        return flagAcross;
    }

    /**
     * set 是否可以跨周期跑，1启用、0关闭
     *
     * @param flagAcross
     */
    public void setFlagAcross(String flagAcross) {
        this.flagAcross = flagAcross;
    }


    /**
     * get 是否可以自身并行，1启用、0关闭
     *
     * @return
     */
    public String getFlagParallel() {
        return flagParallel;
    }

    /**
     * set 是否可以自身并行，1启用、0关闭
     *
     * @param flagParallel
     */
    public void setFlagParallel(String flagParallel) {
        this.flagParallel = flagParallel;
    }


    /**
     * get 是否级联触发，父任务重跑后是否被强制触发重跑，1是、0否
     *
     * @return
     */
    public String getFlagCascadedTrigger() {
        return flagCascadedTrigger;
    }

    /**
     * set 是否级联触发，父任务重跑后是否被强制触发重跑，1是、0否
     *
     * @param flagCascadedTrigger
     */
    public void setFlagCascadedTrigger(String flagCascadedTrigger) {
        this.flagCascadedTrigger = flagCascadedTrigger;
    }


    /**
     * get 需要的运行环境
     *
     * @return
     */
    public String getRequiredRunEnv() {
        return requiredRunEnv;
    }

    /**
     * set 需要的运行环境
     *
     * @param requiredRunEnv
     */
    public void setRequiredRunEnv(String requiredRunEnv) {
        this.requiredRunEnv = requiredRunEnv;
    }


    /**
     * get 运行脚本
     *
     * @return
     */
    public String getRunScript() {
        return runScript;
    }

    /**
     * set 运行脚本
     *
     * @param runScript
     */
    public void setRunScript(String runScript) {
        this.runScript = runScript;
    }


    /**
     * get 是否启用，0未上线、1已上线、2已下线
     *
     * @return
     */
    public String getEnable() {
        return enable;
    }

    /**
     * set 是否启用，0未上线、1已上线、2已下线
     *
     * @param enable
     */
    public void setEnable(String enable) {
        this.enable = enable;
    }


    /**
     * get 负责人，不超过10个
     *
     * @return
     */
    public String getManager() {
        return manager;
    }

    /**
     * set 负责人，不超过10个
     *
     * @param manager
     */
    public void setManager(String manager) {
        this.manager = manager;
    }


    /**
     * get 共享人，不超过10个
     *
     * @return
     */
    public String getShareUser() {
        return shareUser;
    }

    /**
     * set 共享人，不超过10个
     *
     * @param shareUser
     */
    public void setShareUser(String shareUser) {
        this.shareUser = shareUser;
    }


    /**
     * get 失效时间
     *
     * @return
     */
    public String getExpireTime() {
        return expireTime;
    }

    /**
     * set 失效时间
     *
     * @param expireTime
     */
    public void setExpireTime(String expireTime) {
        this.expireTime = expireTime;
    }


    /**
     * get zip命令行
     *
     * @return
     */
    public String getCommands() {
        return commands;
    }

    /**
     * set zip命令行
     *
     * @param commands
     */
    public void setCommands(String commands) {
        this.commands = commands;
    }


    /**
     * get 创建人
     *
     * @return
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * set 创建人
     *
     * @param createUser
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 更新时间
     *
     * @return
     */
    public String getUpdateTime() {
        return updateTime;
    }

    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }


    /**
     * get 实时结点名称
     *
     * @return
     */
    public String getNodeName() {
        return nodeName;
    }

    /**
     * set 实时结点名称
     *
     * @param nodeName
     */
    public void setNodeName(String nodeName) {
        this.nodeName = nodeName;
    }


    /**
     * get 实时主题
     *
     * @return
     */
    public String getTopic() {
        return topic;
    }

    /**
     * set 实时主题
     *
     * @param topic
     */
    public void setTopic(String topic) {
        this.topic = topic;
    }


    /**
     * get 作业执行方式  0离线 1双写 2实时
     *
     * @return
     */
    public String getJobRunWay() {
        return jobRunWay;
    }

    /**
     * set 作业执行方式  0离线 1双写 2实时
     *
     * @param jobRunWay
     */
    public void setJobRunWay(String jobRunWay) {
        this.jobRunWay = jobRunWay;
    }


    /**
     * get 所属系统
     *
     * @return
     */
    public String getBelongSys() {
        return belongSys;
    }

    /**
     * set 所属系统
     *
     * @param belongSys
     */
    public void setBelongSys(String belongSys) {
        this.belongSys = belongSys;
    }


    /**
     * get 主从同步延迟处理方式。0:警告无处理，1:作业延迟启动
     *
     * @return
     */
    public String getMsDelayDealWay() {
        return msDelayDealWay;
    }

    /**
     * set 主从同步延迟处理方式。0:警告无处理，1:作业延迟启动
     *
     * @param msDelayDealWay
     */
    public void setMsDelayDealWay(String msDelayDealWay) {
        this.msDelayDealWay = msDelayDealWay;
    }


    /**
     * get 周期开始时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceStartTime() {
        return sequenceStartTime;
    }

    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public void setSequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
    }


    /**
     * get 周期结束时间(适用小时分钟)
     *
     * @return
     */
    public String getSequenceEndTime() {
        return sequenceEndTime;
    }

    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public void setSequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
    }


    /**
     * get 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @return
     */
    public Integer getSequenceInterval() {
        return sequenceInterval;
    }

    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public void setSequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
    }


    /**
     * get 作业运行参数
     *
     * @return
     */
    public String getRunParams() {
        return runParams;
    }

    /**
     * set 作业运行参数
     *
     * @param runParams
     */
    public void setRunParams(String runParams) {
        this.runParams = runParams;
    }


    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get 应用名称
     *
     * @return
     */
    public String getAppName() {
        return appName;
    }

    /**
     * set 应用名称
     *
     * @param appName
     */
    public void setAppName(String appName) {
        this.appName = appName;
    }



    /**
     * set 作业名称
     *
     * @param jobName
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest jobName(String jobName) {
        this.jobName = jobName;
        return this;
    }


    /**
     * set 客户作业名称
     *
     * @param cstJobName
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest cstJobName(String cstJobName) {
        this.cstJobName = cstJobName;
        return this;
    }


    /**
     * set 租户code
     *
     * @param companyCode
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest companyCode(String companyCode) {
        this.companyCode = companyCode;
        return this;
    }


    /**
     * set 工作空间code
     *
     * @param workspaceCode
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest workspaceCode(String workspaceCode) {
        this.workspaceCode = workspaceCode;
        return this;
    }


    /**
     * set 计算资源组code
     *
     * @param resourceCode
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest resourceCode(String resourceCode) {
        this.resourceCode = resourceCode;
        return this;
    }


    /**
     * set 作业描述
     *
     * @param jobDesc
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest jobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
        return this;
    }


    /**
     * set 最后一次运行状态，Pending、Ready、Running、Done、Failed、Clean
     *
     * @param lastStatus
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastStatus(String lastStatus) {
        this.lastStatus = lastStatus;
        return this;
    }


    /**
     * set 最后一次执行日期
     *
     * @param lastTxDate
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastTxDate(String lastTxDate) {
        this.lastTxDate = lastTxDate;
        return this;
    }


    /**
     * set 最后一次运行开始时间
     *
     * @param lastStartTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastStartTime(String lastStartTime) {
        this.lastStartTime = lastStartTime;
        return this;
    }


    /**
     * set 最后一次运行结束时间
     *
     * @param lastEndTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastEndTime(String lastEndTime) {
        this.lastEndTime = lastEndTime;
        return this;
    }


    /**
     * set 最后一次运行服务器
     *
     * @param lastServer
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastServer(String lastServer) {
        this.lastServer = lastServer;
        return this;
    }


    /**
     * set Session ID
     *
     * @param lastSessionid
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastSessionid(Integer lastSessionid) {
        this.lastSessionid = lastSessionid;
        return this;
    }


    /**
     * set 最后返回编码
     *
     * @param lastReturnCode
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest lastReturnCode(Integer lastReturnCode) {
        this.lastReturnCode = lastReturnCode;
        return this;
    }


    /**
     * set 当前作业状态信息
     *
     * @param currentStatusMsg
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest currentStatusMsg(String currentStatusMsg) {
        this.currentStatusMsg = currentStatusMsg;
        return this;
    }


    /**
     * set 触发类型:dependency 依赖、time 时间、file 文件、manual 手工、once 一次性
     *
     * @param triggerType
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest triggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }


    /**
     * set 运行周期 ,F 分钟、H 小时、D 天、W 周、M 月、O 一次性运行、N 无周期
     *
     * @param cycle
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest cycle(String cycle) {
        this.cycle = cycle;
        return this;
    }


    /**
     * set 周期具体日期
     *
     * @param sequence
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest sequence(String sequence) {
        this.sequence = sequence;
        return this;
    }


    /**
     * set T+N，偏移量
     *
     * @param txDateOffset
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest txDateOffset(Integer txDateOffset) {
        this.txDateOffset = txDateOffset;
        return this;
    }


    /**
     * set 作业优先级，数字越小优先级越高
     *
     * @param priority
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest priority(Integer priority) {
        this.priority = priority;
        return this;
    }


    /**
     * set 作业超时时间，单位分钟
     *
     * @param timeout
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest timeout(Integer timeout) {
        this.timeout = timeout;
        return this;
    }


    /**
     * set 窗口期开始时间
     *
     * @param windowStartTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest windowStartTime(String windowStartTime) {
        this.windowStartTime = windowStartTime;
        return this;
    }


    /**
     * set 窗口期结束时间
     *
     * @param windowEndTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest windowEndTime(String windowEndTime) {
        this.windowEndTime = windowEndTime;
        return this;
    }


    /**
     * set 失败后次日是否自动运行，1是、0否
     *
     * @param morrowAutoExec
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest morrowAutoExec(String morrowAutoExec) {
        this.morrowAutoExec = morrowAutoExec;
        return this;
    }


    /**
     * set 抽空之后的处理 0 无操作 1 作业失败 2发出警告
     *
     * @param dataZeroKillEnable
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest dataZeroKillEnable(Integer dataZeroKillEnable) {
        this.dataZeroKillEnable = dataZeroKillEnable;
        return this;
    }


    /**
     * set 重试次数
     *
     * @param retryCount
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest retryCount(Integer retryCount) {
        this.retryCount = retryCount;
        return this;
    }


    /**
     * set 间隔/秒
     *
     * @param retryInterval
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest retryInterval(Integer retryInterval) {
        this.retryInterval = retryInterval;
        return this;
    }


    /**
     * set 当期已经跑成功过，是否可以再跑，1启用、0关闭
     *
     * @param flagAgain
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest flagAgain(String flagAgain) {
        this.flagAgain = flagAgain;
        return this;
    }


    /**
     * set 是否可以跨周期跑，1启用、0关闭
     *
     * @param flagAcross
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest flagAcross(String flagAcross) {
        this.flagAcross = flagAcross;
        return this;
    }


    /**
     * set 是否可以自身并行，1启用、0关闭
     *
     * @param flagParallel
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest flagParallel(String flagParallel) {
        this.flagParallel = flagParallel;
        return this;
    }


    /**
     * set 是否级联触发，父任务重跑后是否被强制触发重跑，1是、0否
     *
     * @param flagCascadedTrigger
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest flagCascadedTrigger(String flagCascadedTrigger) {
        this.flagCascadedTrigger = flagCascadedTrigger;
        return this;
    }


    /**
     * set 需要的运行环境
     *
     * @param requiredRunEnv
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest requiredRunEnv(String requiredRunEnv) {
        this.requiredRunEnv = requiredRunEnv;
        return this;
    }


    /**
     * set 运行脚本
     *
     * @param runScript
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest runScript(String runScript) {
        this.runScript = runScript;
        return this;
    }


    /**
     * set 是否启用，0未上线、1已上线、2已下线
     *
     * @param enable
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest enable(String enable) {
        this.enable = enable;
        return this;
    }


    /**
     * set 负责人，不超过10个
     *
     * @param manager
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest manager(String manager) {
        this.manager = manager;
        return this;
    }


    /**
     * set 共享人，不超过10个
     *
     * @param shareUser
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest shareUser(String shareUser) {
        this.shareUser = shareUser;
        return this;
    }


    /**
     * set 失效时间
     *
     * @param expireTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest expireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }


    /**
     * set zip命令行
     *
     * @param commands
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest commands(String commands) {
        this.commands = commands;
        return this;
    }


    /**
     * set 创建人
     *
     * @param createUser
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest createUser(String createUser) {
        this.createUser = createUser;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest updateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }


    /**
     * set 实时结点名称
     *
     * @param nodeName
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest nodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }


    /**
     * set 实时主题
     *
     * @param topic
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest topic(String topic) {
        this.topic = topic;
        return this;
    }


    /**
     * set 作业执行方式  0离线 1双写 2实时
     *
     * @param jobRunWay
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest jobRunWay(String jobRunWay) {
        this.jobRunWay = jobRunWay;
        return this;
    }


    /**
     * set 所属系统
     *
     * @param belongSys
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest belongSys(String belongSys) {
        this.belongSys = belongSys;
        return this;
    }


    /**
     * set 主从同步延迟处理方式。0:警告无处理，1:作业延迟启动
     *
     * @param msDelayDealWay
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest msDelayDealWay(String msDelayDealWay) {
        this.msDelayDealWay = msDelayDealWay;
        return this;
    }


    /**
     * set 周期开始时间(适用小时分钟)
     *
     * @param sequenceStartTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest sequenceStartTime(String sequenceStartTime) {
        this.sequenceStartTime = sequenceStartTime;
        return this;
    }


    /**
     * set 周期结束时间(适用小时分钟)
     *
     * @param sequenceEndTime
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest sequenceEndTime(String sequenceEndTime) {
        this.sequenceEndTime = sequenceEndTime;
        return this;
    }


    /**
     * set 周期间隔(适用小时分钟，当周期为小时，含义为间隔小时数，当周期为分钟，含义为间隔分钟数)
     *
     * @param sequenceInterval
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest sequenceInterval(Integer sequenceInterval) {
        this.sequenceInterval = sequenceInterval;
        return this;
    }


    /**
     * set 作业运行参数
     *
     * @param runParams
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest runParams(String runParams) {
        this.runParams = runParams;
        return this;
    }


    /**
     * set 地域ID
     *
     * @param regionId
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set 应用名称
     *
     * @param appName
     */
    public GravityParticleParticleJobSchedUpdateSchedJobRequest appName(String appName) {
        this.appName = appName;
        return this;
    }


}