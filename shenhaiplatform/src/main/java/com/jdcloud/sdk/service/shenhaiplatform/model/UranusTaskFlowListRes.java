/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.shenhaiplatform.model;

import java.util.List;
import java.util.ArrayList;

/**
 * Object
 */
public class UranusTaskFlowListRes  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 节点类型id
     */
    private Integer nodeCode;

    /**
     * 节点名称
     */
    private String nodeName;

    /**
     * 0 未发布 1 已发布
     */
    private Integer flowStatus;

    /**
     * Script节点的时候用到
     */
    private String flowCode;

    /**
     * 0 未发布 1 已发布
     */
    private String flowStatusDesc;

    /**
     * &#39;1：有效，0：无效
     */
    private Integer flowValid;

    /**
     * 是否收藏 0 否 1 是
     */
    private Integer collection;

    /**
     * 是否协同人 0 否 1 是
     */
    private Integer isWorker;

    /**
     * 是否是 owner 0 否 1 是
     */
    private Integer isOwner;

    /**
     * 前端排序唯一ID
     */
    private String unrealId;

    /**
     * 图标
     */
    private String nodeIcon;

    /**
     * 集合 因为存在 更新（未发布） 和 上下线未发布 组合的情况
     */
    
    private List<Integer> taskChangeStatus;
    /**
     * 发布变更状态描述
     */
    
    private List<String> taskChangeStatusDesc;
    /**
     * 作业状态
     */
    private Integer gravityStatus;

    /**
     * 作业状态描述
     */
    private String gravityStatusDesc;

    /**
     * 节点类型 FLOW 工作流 SCRIPT脚本
     */
    private String nodeType;

    /**
     * 任务负责人
     */
    private Integer isManager;

    /**
     * 子节点 级 节点管理和文件管理
     */
    
    private List<UranusTaskFlowListRes> children;
    /**
     * 任务节点的taskCode
     */
    private String taskCode;

    /**
     * 文件信息
     */
    private String relativePath;

    /**
     * 名称
     */
    private String name;

    /**
     * 是否是目录
     */
    private Boolean dir;

    /**
     * 父节点code
     */
    private String parentCode;

    /**
     * 脚本文件的业务cdoe
     */
    private String fileCode;

    /**
     * 作业名称
     */
    private String jobName;

    /**
     * 文件真实路径
     */
    private String realPath;

    /**
     * 锁状态
     */
    private Integer lockStatus;

    /**
     * 活得锁的用户
     */
    private String lockUser;



    /**
     * get 节点类型id
     *
     * @return
     */
    public Integer getNodeCode() {
        return nodeCode;
    }

    /**
     * set 节点类型id
     *
     * @param nodeCode
     */
    public void setNodeCode(Integer nodeCode) {
        this.nodeCode = nodeCode;
    }


    /**
     * get 节点名称
     *
     * @return
     */
    public String getNodeName() {
        return nodeName;
    }

    /**
     * set 节点名称
     *
     * @param nodeName
     */
    public void setNodeName(String nodeName) {
        this.nodeName = nodeName;
    }


    /**
     * get 0 未发布 1 已发布
     *
     * @return
     */
    public Integer getFlowStatus() {
        return flowStatus;
    }

    /**
     * set 0 未发布 1 已发布
     *
     * @param flowStatus
     */
    public void setFlowStatus(Integer flowStatus) {
        this.flowStatus = flowStatus;
    }


    /**
     * get Script节点的时候用到
     *
     * @return
     */
    public String getFlowCode() {
        return flowCode;
    }

    /**
     * set Script节点的时候用到
     *
     * @param flowCode
     */
    public void setFlowCode(String flowCode) {
        this.flowCode = flowCode;
    }


    /**
     * get 0 未发布 1 已发布
     *
     * @return
     */
    public String getFlowStatusDesc() {
        return flowStatusDesc;
    }

    /**
     * set 0 未发布 1 已发布
     *
     * @param flowStatusDesc
     */
    public void setFlowStatusDesc(String flowStatusDesc) {
        this.flowStatusDesc = flowStatusDesc;
    }


    /**
     * get &#39;1：有效，0：无效
     *
     * @return
     */
    public Integer getFlowValid() {
        return flowValid;
    }

    /**
     * set &#39;1：有效，0：无效
     *
     * @param flowValid
     */
    public void setFlowValid(Integer flowValid) {
        this.flowValid = flowValid;
    }


    /**
     * get 是否收藏 0 否 1 是
     *
     * @return
     */
    public Integer getCollection() {
        return collection;
    }

    /**
     * set 是否收藏 0 否 1 是
     *
     * @param collection
     */
    public void setCollection(Integer collection) {
        this.collection = collection;
    }


    /**
     * get 是否协同人 0 否 1 是
     *
     * @return
     */
    public Integer getIsWorker() {
        return isWorker;
    }

    /**
     * set 是否协同人 0 否 1 是
     *
     * @param isWorker
     */
    public void setIsWorker(Integer isWorker) {
        this.isWorker = isWorker;
    }


    /**
     * get 是否是 owner 0 否 1 是
     *
     * @return
     */
    public Integer getIsOwner() {
        return isOwner;
    }

    /**
     * set 是否是 owner 0 否 1 是
     *
     * @param isOwner
     */
    public void setIsOwner(Integer isOwner) {
        this.isOwner = isOwner;
    }


    /**
     * get 前端排序唯一ID
     *
     * @return
     */
    public String getUnrealId() {
        return unrealId;
    }

    /**
     * set 前端排序唯一ID
     *
     * @param unrealId
     */
    public void setUnrealId(String unrealId) {
        this.unrealId = unrealId;
    }


    /**
     * get 图标
     *
     * @return
     */
    public String getNodeIcon() {
        return nodeIcon;
    }

    /**
     * set 图标
     *
     * @param nodeIcon
     */
    public void setNodeIcon(String nodeIcon) {
        this.nodeIcon = nodeIcon;
    }


    /**
    * get 集合 因为存在 更新（未发布） 和 上下线未发布 组合的情况
    *
    * @return
    */
    public List<Integer> getTaskChangeStatus() {
        return taskChangeStatus;
    }

    /**
    * set 集合 因为存在 更新（未发布） 和 上下线未发布 组合的情况
    *
    * @param taskChangeStatus
    */
    public void setTaskChangeStatus(List<Integer> taskChangeStatus) {
        this.taskChangeStatus = taskChangeStatus;
    }


    /**
    * get 发布变更状态描述
    *
    * @return
    */
    public List<String> getTaskChangeStatusDesc() {
        return taskChangeStatusDesc;
    }

    /**
    * set 发布变更状态描述
    *
    * @param taskChangeStatusDesc
    */
    public void setTaskChangeStatusDesc(List<String> taskChangeStatusDesc) {
        this.taskChangeStatusDesc = taskChangeStatusDesc;
    }


    /**
     * get 作业状态
     *
     * @return
     */
    public Integer getGravityStatus() {
        return gravityStatus;
    }

    /**
     * set 作业状态
     *
     * @param gravityStatus
     */
    public void setGravityStatus(Integer gravityStatus) {
        this.gravityStatus = gravityStatus;
    }


    /**
     * get 作业状态描述
     *
     * @return
     */
    public String getGravityStatusDesc() {
        return gravityStatusDesc;
    }

    /**
     * set 作业状态描述
     *
     * @param gravityStatusDesc
     */
    public void setGravityStatusDesc(String gravityStatusDesc) {
        this.gravityStatusDesc = gravityStatusDesc;
    }


    /**
     * get 节点类型 FLOW 工作流 SCRIPT脚本
     *
     * @return
     */
    public String getNodeType() {
        return nodeType;
    }

    /**
     * set 节点类型 FLOW 工作流 SCRIPT脚本
     *
     * @param nodeType
     */
    public void setNodeType(String nodeType) {
        this.nodeType = nodeType;
    }


    /**
     * get 任务负责人
     *
     * @return
     */
    public Integer getIsManager() {
        return isManager;
    }

    /**
     * set 任务负责人
     *
     * @param isManager
     */
    public void setIsManager(Integer isManager) {
        this.isManager = isManager;
    }


    /**
    * get 子节点 级 节点管理和文件管理
    *
    * @return
    */
    public List<UranusTaskFlowListRes> getChildren() {
        return children;
    }

    /**
    * set 子节点 级 节点管理和文件管理
    *
    * @param children
    */
    public void setChildren(List<UranusTaskFlowListRes> children) {
        this.children = children;
    }


    /**
     * get 任务节点的taskCode
     *
     * @return
     */
    public String getTaskCode() {
        return taskCode;
    }

    /**
     * set 任务节点的taskCode
     *
     * @param taskCode
     */
    public void setTaskCode(String taskCode) {
        this.taskCode = taskCode;
    }


    /**
     * get 文件信息
     *
     * @return
     */
    public String getRelativePath() {
        return relativePath;
    }

    /**
     * set 文件信息
     *
     * @param relativePath
     */
    public void setRelativePath(String relativePath) {
        this.relativePath = relativePath;
    }


    /**
     * get 名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 是否是目录
     *
     * @return
     */
    public Boolean getDir() {
        return dir;
    }

    /**
     * set 是否是目录
     *
     * @param dir
     */
    public void setDir(Boolean dir) {
        this.dir = dir;
    }


    /**
     * get 父节点code
     *
     * @return
     */
    public String getParentCode() {
        return parentCode;
    }

    /**
     * set 父节点code
     *
     * @param parentCode
     */
    public void setParentCode(String parentCode) {
        this.parentCode = parentCode;
    }


    /**
     * get 脚本文件的业务cdoe
     *
     * @return
     */
    public String getFileCode() {
        return fileCode;
    }

    /**
     * set 脚本文件的业务cdoe
     *
     * @param fileCode
     */
    public void setFileCode(String fileCode) {
        this.fileCode = fileCode;
    }


    /**
     * get 作业名称
     *
     * @return
     */
    public String getJobName() {
        return jobName;
    }

    /**
     * set 作业名称
     *
     * @param jobName
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }


    /**
     * get 文件真实路径
     *
     * @return
     */
    public String getRealPath() {
        return realPath;
    }

    /**
     * set 文件真实路径
     *
     * @param realPath
     */
    public void setRealPath(String realPath) {
        this.realPath = realPath;
    }


    /**
     * get 锁状态
     *
     * @return
     */
    public Integer getLockStatus() {
        return lockStatus;
    }

    /**
     * set 锁状态
     *
     * @param lockStatus
     */
    public void setLockStatus(Integer lockStatus) {
        this.lockStatus = lockStatus;
    }


    /**
     * get 活得锁的用户
     *
     * @return
     */
    public String getLockUser() {
        return lockUser;
    }

    /**
     * set 活得锁的用户
     *
     * @param lockUser
     */
    public void setLockUser(String lockUser) {
        this.lockUser = lockUser;
    }



    /**
     * set 节点类型id
     *
     * @param nodeCode
     */
    public UranusTaskFlowListRes nodeCode(Integer nodeCode) {
        this.nodeCode = nodeCode;
        return this;
    }


    /**
     * set 节点名称
     *
     * @param nodeName
     */
    public UranusTaskFlowListRes nodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }


    /**
     * set 0 未发布 1 已发布
     *
     * @param flowStatus
     */
    public UranusTaskFlowListRes flowStatus(Integer flowStatus) {
        this.flowStatus = flowStatus;
        return this;
    }


    /**
     * set Script节点的时候用到
     *
     * @param flowCode
     */
    public UranusTaskFlowListRes flowCode(String flowCode) {
        this.flowCode = flowCode;
        return this;
    }


    /**
     * set 0 未发布 1 已发布
     *
     * @param flowStatusDesc
     */
    public UranusTaskFlowListRes flowStatusDesc(String flowStatusDesc) {
        this.flowStatusDesc = flowStatusDesc;
        return this;
    }


    /**
     * set &#39;1：有效，0：无效
     *
     * @param flowValid
     */
    public UranusTaskFlowListRes flowValid(Integer flowValid) {
        this.flowValid = flowValid;
        return this;
    }


    /**
     * set 是否收藏 0 否 1 是
     *
     * @param collection
     */
    public UranusTaskFlowListRes collection(Integer collection) {
        this.collection = collection;
        return this;
    }


    /**
     * set 是否协同人 0 否 1 是
     *
     * @param isWorker
     */
    public UranusTaskFlowListRes isWorker(Integer isWorker) {
        this.isWorker = isWorker;
        return this;
    }


    /**
     * set 是否是 owner 0 否 1 是
     *
     * @param isOwner
     */
    public UranusTaskFlowListRes isOwner(Integer isOwner) {
        this.isOwner = isOwner;
        return this;
    }


    /**
     * set 前端排序唯一ID
     *
     * @param unrealId
     */
    public UranusTaskFlowListRes unrealId(String unrealId) {
        this.unrealId = unrealId;
        return this;
    }


    /**
     * set 图标
     *
     * @param nodeIcon
     */
    public UranusTaskFlowListRes nodeIcon(String nodeIcon) {
        this.nodeIcon = nodeIcon;
        return this;
    }


    /**
    * set 集合 因为存在 更新（未发布） 和 上下线未发布 组合的情况
    *
    * @param taskChangeStatus
    */
    public UranusTaskFlowListRes taskChangeStatus(List<Integer> taskChangeStatus) {
        this.taskChangeStatus = taskChangeStatus;
        return this;
    }


    /**
    * set 发布变更状态描述
    *
    * @param taskChangeStatusDesc
    */
    public UranusTaskFlowListRes taskChangeStatusDesc(List<String> taskChangeStatusDesc) {
        this.taskChangeStatusDesc = taskChangeStatusDesc;
        return this;
    }


    /**
     * set 作业状态
     *
     * @param gravityStatus
     */
    public UranusTaskFlowListRes gravityStatus(Integer gravityStatus) {
        this.gravityStatus = gravityStatus;
        return this;
    }


    /**
     * set 作业状态描述
     *
     * @param gravityStatusDesc
     */
    public UranusTaskFlowListRes gravityStatusDesc(String gravityStatusDesc) {
        this.gravityStatusDesc = gravityStatusDesc;
        return this;
    }


    /**
     * set 节点类型 FLOW 工作流 SCRIPT脚本
     *
     * @param nodeType
     */
    public UranusTaskFlowListRes nodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }


    /**
     * set 任务负责人
     *
     * @param isManager
     */
    public UranusTaskFlowListRes isManager(Integer isManager) {
        this.isManager = isManager;
        return this;
    }


    /**
    * set 子节点 级 节点管理和文件管理
    *
    * @param children
    */
    public UranusTaskFlowListRes children(List<UranusTaskFlowListRes> children) {
        this.children = children;
        return this;
    }


    /**
     * set 任务节点的taskCode
     *
     * @param taskCode
     */
    public UranusTaskFlowListRes taskCode(String taskCode) {
        this.taskCode = taskCode;
        return this;
    }


    /**
     * set 文件信息
     *
     * @param relativePath
     */
    public UranusTaskFlowListRes relativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }


    /**
     * set 名称
     *
     * @param name
     */
    public UranusTaskFlowListRes name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 是否是目录
     *
     * @param dir
     */
    public UranusTaskFlowListRes dir(Boolean dir) {
        this.dir = dir;
        return this;
    }


    /**
     * set 父节点code
     *
     * @param parentCode
     */
    public UranusTaskFlowListRes parentCode(String parentCode) {
        this.parentCode = parentCode;
        return this;
    }


    /**
     * set 脚本文件的业务cdoe
     *
     * @param fileCode
     */
    public UranusTaskFlowListRes fileCode(String fileCode) {
        this.fileCode = fileCode;
        return this;
    }


    /**
     * set 作业名称
     *
     * @param jobName
     */
    public UranusTaskFlowListRes jobName(String jobName) {
        this.jobName = jobName;
        return this;
    }


    /**
     * set 文件真实路径
     *
     * @param realPath
     */
    public UranusTaskFlowListRes realPath(String realPath) {
        this.realPath = realPath;
        return this;
    }


    /**
     * set 锁状态
     *
     * @param lockStatus
     */
    public UranusTaskFlowListRes lockStatus(Integer lockStatus) {
        this.lockStatus = lockStatus;
        return this;
    }


    /**
     * set 活得锁的用户
     *
     * @param lockUser
     */
    public UranusTaskFlowListRes lockUser(String lockUser) {
        this.lockUser = lockUser;
        return this;
    }



    /**
     * add item to 集合 因为存在 更新（未发布） 和 上下线未发布 组合的情况
     *
     * @param taskChangeStatu
     */
    public void addTaskChangeStatu(Integer taskChangeStatu) {
        if (this.taskChangeStatus == null) {
            this.taskChangeStatus = new ArrayList<>();
        }
        this.taskChangeStatus.add(taskChangeStatu);
    }

    /**
     * add item to 发布变更状态描述
     *
     * @param taskChangeStatusDesc
     */
    public void addTaskChangeStatusDesc(String taskChangeStatusDesc) {
        if (this.taskChangeStatusDesc == null) {
            this.taskChangeStatusDesc = new ArrayList<>();
        }
        this.taskChangeStatusDesc.add(taskChangeStatusDesc);
    }

    /**
     * add item to 子节点 级 节点管理和文件管理
     *
     * @param children
     */
    public void addChildren(UranusTaskFlowListRes children) {
        if (this.children == null) {
            this.children = new ArrayList<>();
        }
        this.children.add(children);
    }
}