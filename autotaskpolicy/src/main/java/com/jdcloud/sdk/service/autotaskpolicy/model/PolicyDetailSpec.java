/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.autotaskpolicy.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * policyDetailSpec
 */
public class PolicyDetailSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 策略类型，可选值如下：
1. &quot;AutoImage&quot; - 云主机自动创建镜像策略

     * Required:true
     */
    @Required
    private String policyType;

    /**
     * 触发时间，针对开启的策略生效，格式&quot;yyyy-MM-dd HH24:mm:ss&quot;
     */
    private String fireTime;

    /**
     * 策略触发条件/周期，可选值如下：
1. &quot;crond xxx&quot; - 暂不支持，crond表达式，如每月1号0点[0 0 1 * *]
2. &quot;interval xxx&quot; - 间隔时间，支持&quot;秒/分/时/天/周&quot;，xxx格式如：[30s、20m、10h、1d、2w]
3. &quot;condition xxx&quot; - 暂不支持，满足某些条件

     * Required:true
     */
    @Required
    private String fireCondition;

    /**
     * 策略触发执行累计次数达到execNumLimit后，自动失效变为disable状态。该参数为-1时不生效，大于0时生效。
     */
    private Integer execNumLimit;

    /**
     * 该策略执行时的额外条件配置。
     */
    
    private List<Config> execConfig;
    /**
     * 日志配置
     */
    private Log log;



    /**
     * get 策略类型，可选值如下：
1. &quot;AutoImage&quot; - 云主机自动创建镜像策略

     *
     * @return
     */
    public String getPolicyType() {
        return policyType;
    }

    /**
     * set 策略类型，可选值如下：
1. &quot;AutoImage&quot; - 云主机自动创建镜像策略

     *
     * @param policyType
     */
    public void setPolicyType(String policyType) {
        this.policyType = policyType;
    }


    /**
     * get 触发时间，针对开启的策略生效，格式&quot;yyyy-MM-dd HH24:mm:ss&quot;
     *
     * @return
     */
    public String getFireTime() {
        return fireTime;
    }

    /**
     * set 触发时间，针对开启的策略生效，格式&quot;yyyy-MM-dd HH24:mm:ss&quot;
     *
     * @param fireTime
     */
    public void setFireTime(String fireTime) {
        this.fireTime = fireTime;
    }


    /**
     * get 策略触发条件/周期，可选值如下：
1. &quot;crond xxx&quot; - 暂不支持，crond表达式，如每月1号0点[0 0 1 * *]
2. &quot;interval xxx&quot; - 间隔时间，支持&quot;秒/分/时/天/周&quot;，xxx格式如：[30s、20m、10h、1d、2w]
3. &quot;condition xxx&quot; - 暂不支持，满足某些条件

     *
     * @return
     */
    public String getFireCondition() {
        return fireCondition;
    }

    /**
     * set 策略触发条件/周期，可选值如下：
1. &quot;crond xxx&quot; - 暂不支持，crond表达式，如每月1号0点[0 0 1 * *]
2. &quot;interval xxx&quot; - 间隔时间，支持&quot;秒/分/时/天/周&quot;，xxx格式如：[30s、20m、10h、1d、2w]
3. &quot;condition xxx&quot; - 暂不支持，满足某些条件

     *
     * @param fireCondition
     */
    public void setFireCondition(String fireCondition) {
        this.fireCondition = fireCondition;
    }


    /**
     * get 策略触发执行累计次数达到execNumLimit后，自动失效变为disable状态。该参数为-1时不生效，大于0时生效。
     *
     * @return
     */
    public Integer getExecNumLimit() {
        return execNumLimit;
    }

    /**
     * set 策略触发执行累计次数达到execNumLimit后，自动失效变为disable状态。该参数为-1时不生效，大于0时生效。
     *
     * @param execNumLimit
     */
    public void setExecNumLimit(Integer execNumLimit) {
        this.execNumLimit = execNumLimit;
    }


    /**
    * get 该策略执行时的额外条件配置。
    *
    * @return
    */
    public List<Config> getExecConfig() {
        return execConfig;
    }

    /**
    * set 该策略执行时的额外条件配置。
    *
    * @param execConfig
    */
    public void setExecConfig(List<Config> execConfig) {
        this.execConfig = execConfig;
    }


    /**
     * get 日志配置
     *
     * @return
     */
    public Log getLog() {
        return log;
    }

    /**
     * set 日志配置
     *
     * @param log
     */
    public void setLog(Log log) {
        this.log = log;
    }



    /**
     * set 策略类型，可选值如下：
1. &quot;AutoImage&quot; - 云主机自动创建镜像策略

     *
     * @param policyType
     */
    public PolicyDetailSpec policyType(String policyType) {
        this.policyType = policyType;
        return this;
    }


    /**
     * set 触发时间，针对开启的策略生效，格式&quot;yyyy-MM-dd HH24:mm:ss&quot;
     *
     * @param fireTime
     */
    public PolicyDetailSpec fireTime(String fireTime) {
        this.fireTime = fireTime;
        return this;
    }


    /**
     * set 策略触发条件/周期，可选值如下：
1. &quot;crond xxx&quot; - 暂不支持，crond表达式，如每月1号0点[0 0 1 * *]
2. &quot;interval xxx&quot; - 间隔时间，支持&quot;秒/分/时/天/周&quot;，xxx格式如：[30s、20m、10h、1d、2w]
3. &quot;condition xxx&quot; - 暂不支持，满足某些条件

     *
     * @param fireCondition
     */
    public PolicyDetailSpec fireCondition(String fireCondition) {
        this.fireCondition = fireCondition;
        return this;
    }


    /**
     * set 策略触发执行累计次数达到execNumLimit后，自动失效变为disable状态。该参数为-1时不生效，大于0时生效。
     *
     * @param execNumLimit
     */
    public PolicyDetailSpec execNumLimit(Integer execNumLimit) {
        this.execNumLimit = execNumLimit;
        return this;
    }


    /**
    * set 该策略执行时的额外条件配置。
    *
    * @param execConfig
    */
    public PolicyDetailSpec execConfig(List<Config> execConfig) {
        this.execConfig = execConfig;
        return this;
    }


    /**
     * set 日志配置
     *
     * @param log
     */
    public PolicyDetailSpec log(Log log) {
        this.log = log;
        return this;
    }



    /**
     * add item to 该策略执行时的额外条件配置。
     *
     * @param execConfig
     */
    public void addExecConfig(Config execConfig) {
        if (this.execConfig == null) {
            this.execConfig = new ArrayList<>();
        }
        this.execConfig.add(execConfig);
    }
}