/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 镜像仓库认证信息
 * 关于镜像仓库认证信息的相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.pod.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.pod.model.DockerRegistryData;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建一个 secret，用于存放镜像仓库机密相关信息。

 */
public class CreateSecretRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 机密数据名称，不能重复

     * Required:true
     */
    @Required
    private String name;

    /**
     * 机密数据的类型，目前仅支持：docker-registry 类型，用来和docker registry认证的类型。

     * Required:true
     */
    @Required
    private String secretType;

    /**
     * 机密的数据。&lt;br&gt;
key 的有效字符包括字母、数字、-、_和.； &lt;br&gt;
value 是 Base64 编码的字符串，不能包含换行符（在 linux 下使用 base64 -w 0选项），每个value长度上限为4KB，整个data的长度不能超过256KB; &lt;br&gt;
必须包含server、username、password 字段，email 字段是可选的。&lt;br&gt;

     * Required:true
     */
    @Required
    private DockerRegistryData data;

    /**
     * Region ID
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 机密数据名称，不能重复

     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 机密数据名称，不能重复

     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 机密数据的类型，目前仅支持：docker-registry 类型，用来和docker registry认证的类型。

     *
     * @return
     */
    public String getSecretType() {
        return secretType;
    }

    /**
     * set 机密数据的类型，目前仅支持：docker-registry 类型，用来和docker registry认证的类型。

     *
     * @param secretType
     */
    public void setSecretType(String secretType) {
        this.secretType = secretType;
    }


    /**
     * get 机密的数据。&lt;br&gt;
key 的有效字符包括字母、数字、-、_和.； &lt;br&gt;
value 是 Base64 编码的字符串，不能包含换行符（在 linux 下使用 base64 -w 0选项），每个value长度上限为4KB，整个data的长度不能超过256KB; &lt;br&gt;
必须包含server、username、password 字段，email 字段是可选的。&lt;br&gt;

     *
     * @return
     */
    public DockerRegistryData getData() {
        return data;
    }

    /**
     * set 机密的数据。&lt;br&gt;
key 的有效字符包括字母、数字、-、_和.； &lt;br&gt;
value 是 Base64 编码的字符串，不能包含换行符（在 linux 下使用 base64 -w 0选项），每个value长度上限为4KB，整个data的长度不能超过256KB; &lt;br&gt;
必须包含server、username、password 字段，email 字段是可选的。&lt;br&gt;

     *
     * @param data
     */
    public void setData(DockerRegistryData data) {
        this.data = data;
    }


    /**
     * get Region ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 机密数据名称，不能重复

     *
     * @param name
     */
    public CreateSecretRequest name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 机密数据的类型，目前仅支持：docker-registry 类型，用来和docker registry认证的类型。

     *
     * @param secretType
     */
    public CreateSecretRequest secretType(String secretType) {
        this.secretType = secretType;
        return this;
    }


    /**
     * set 机密的数据。&lt;br&gt;
key 的有效字符包括字母、数字、-、_和.； &lt;br&gt;
value 是 Base64 编码的字符串，不能包含换行符（在 linux 下使用 base64 -w 0选项），每个value长度上限为4KB，整个data的长度不能超过256KB; &lt;br&gt;
必须包含server、username、password 字段，email 字段是可选的。&lt;br&gt;

     *
     * @param data
     */
    public CreateSecretRequest data(DockerRegistryData data) {
        this.data = data;
        return this;
    }


    /**
     * set Region ID
     *
     * @param regionId
     */
    public CreateSecretRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}