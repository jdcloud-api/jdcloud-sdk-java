/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Pod
 * Pod 相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.pod.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.pod.model.ContainerResourceSpec;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 调整pod实例类型配置。
- pod phase 需是停止状态；
- 支持升配、降配；**不支持原有规格**
- 计费类型不变
    - 包年包月：需要计算配置差价，如果所选配置价格高，需要补齐到期前的差价，到期时间不变；如果所选配置价格低，需要延长到期时间
    - 按配置：按照所选规格，进行计费
- 支持对 pod 中的容器进行资源限制、资源需求的调整
    - 容器需求的总资源占用不得超过 pod 的实例类型
    - 容器资源限制不得超过 pod 的实例类型

 */
public class ResizePodRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 新实例类型，不可与原实例类型相同
     * Required:true
     */
    @Required
    private String instanceType;

    /**
     * 新实例类型，不可与原实例类型相同
     */
    
    private List<ContainerResourceSpec> containerResources;
    /**
     * Region ID
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * Pod ID
     * Required:true
     */
    @Required
    private String podId;



    /**
     * get 新实例类型，不可与原实例类型相同
     *
     * @return
     */
    public String getInstanceType() {
        return instanceType;
    }

    /**
     * set 新实例类型，不可与原实例类型相同
     *
     * @param instanceType
     */
    public void setInstanceType(String instanceType) {
        this.instanceType = instanceType;
    }


    /**
    * get 新实例类型，不可与原实例类型相同
    *
    * @return
    */
    public List<ContainerResourceSpec> getContainerResources() {
        return containerResources;
    }

    /**
    * set 新实例类型，不可与原实例类型相同
    *
    * @param containerResources
    */
    public void setContainerResources(List<ContainerResourceSpec> containerResources) {
        this.containerResources = containerResources;
    }


    /**
     * get Region ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get Pod ID
     *
     * @return
     */
    public String getPodId() {
        return podId;
    }

    /**
     * set Pod ID
     *
     * @param podId
     */
    public void setPodId(String podId) {
        this.podId = podId;
    }



    /**
     * set 新实例类型，不可与原实例类型相同
     *
     * @param instanceType
     */
    public ResizePodRequest instanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }


    /**
    * set 新实例类型，不可与原实例类型相同
    *
    * @param containerResources
    */
    public ResizePodRequest containerResources(List<ContainerResourceSpec> containerResources) {
        this.containerResources = containerResources;
        return this;
    }


    /**
     * set Region ID
     *
     * @param regionId
     */
    public ResizePodRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set Pod ID
     *
     * @param podId
     */
    public ResizePodRequest podId(String podId) {
        this.podId = podId;
        return this;
    }



    /**
     * add item to 新实例类型，不可与原实例类型相同
     *
     * @param containerResource
     */
    public void addContainerResource(ContainerResourceSpec containerResource) {
        if (this.containerResources == null) {
            this.containerResources = new ArrayList<>();
        }
        this.containerResources.add(containerResource);
    }
}