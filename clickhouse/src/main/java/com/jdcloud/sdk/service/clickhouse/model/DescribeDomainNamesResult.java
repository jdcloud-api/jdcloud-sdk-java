/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 实例管理
 * 实例管理相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.clickhouse.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.clickhouse.model.Shards;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 获取某个实例下的所有节点对应的域名信息。
 */
public class DescribeDomainNamesResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * shards
     */
    private List<Shards> shards;

    /**
     * 分片数量
     */
    private Integer shardNum;

    /**
     * 副本数
     */
    private Integer replicaNum;

    /**
     * 实例公网域名
     */
    private String publicDomainName;

    /**
     * 实例内网域名
     */
    private String internalDomainName;


    /**
     * get shards
     *
     * @return
     */
    public List<Shards> getShards() {
        return shards;
    }

    /**
     * set shards
     *
     * @param shards
     */
    public void setShards(List<Shards> shards) {
        this.shards = shards;
    }

    /**
     * get 分片数量
     *
     * @return
     */
    public Integer getShardNum() {
        return shardNum;
    }

    /**
     * set 分片数量
     *
     * @param shardNum
     */
    public void setShardNum(Integer shardNum) {
        this.shardNum = shardNum;
    }

    /**
     * get 副本数
     *
     * @return
     */
    public Integer getReplicaNum() {
        return replicaNum;
    }

    /**
     * set 副本数
     *
     * @param replicaNum
     */
    public void setReplicaNum(Integer replicaNum) {
        this.replicaNum = replicaNum;
    }

    /**
     * get 实例公网域名
     *
     * @return
     */
    public String getPublicDomainName() {
        return publicDomainName;
    }

    /**
     * set 实例公网域名
     *
     * @param publicDomainName
     */
    public void setPublicDomainName(String publicDomainName) {
        this.publicDomainName = publicDomainName;
    }

    /**
     * get 实例内网域名
     *
     * @return
     */
    public String getInternalDomainName() {
        return internalDomainName;
    }

    /**
     * set 实例内网域名
     *
     * @param internalDomainName
     */
    public void setInternalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
    }


    /**
     * set shards
     *
     * @param shards
     */
    public DescribeDomainNamesResult shards(List<Shards> shards) {
        this.shards = shards;
        return this;
    }

    /**
     * set 分片数量
     *
     * @param shardNum
     */
    public DescribeDomainNamesResult shardNum(Integer shardNum) {
        this.shardNum = shardNum;
        return this;
    }

    /**
     * set 副本数
     *
     * @param replicaNum
     */
    public DescribeDomainNamesResult replicaNum(Integer replicaNum) {
        this.replicaNum = replicaNum;
        return this;
    }

    /**
     * set 实例公网域名
     *
     * @param publicDomainName
     */
    public DescribeDomainNamesResult publicDomainName(String publicDomainName) {
        this.publicDomainName = publicDomainName;
        return this;
    }

    /**
     * set 实例内网域名
     *
     * @param internalDomainName
     */
    public DescribeDomainNamesResult internalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
        return this;
    }


    /**
     * add item to shards
     *
     * @param shard
     */
    public void addShard(Shards shard) {
        if (this.shards == null) {
            this.shards = new ArrayList<>();
        }
        this.shards.add(shard);
    }

}