/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.clickhouse.model;


/**
 * flavor
 */
public class Flavor  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 规格代码
     */
    private String nodeClass;

    /**
     * cup核数
     */
    private Integer cpu;

    /**
     * 内存大小
     */
    private Integer memoryGB;

    /**
     * 该规格支持的存储空间的最小值，最大值及步长，用英文逗号分隔，例如100,4000,50 表示最小存储空间100GB，最大空间4000GB，步长50GBZK节点无须返回该字段
     */
    private String storageGBRange;


    /**
     * get 规格代码
     *
     * @return
     */
    public String getNodeClass() {
        return nodeClass;
    }

    /**
     * set 规格代码
     *
     * @param nodeClass
     */
    public void setNodeClass(String nodeClass) {
        this.nodeClass = nodeClass;
    }

    /**
     * get cup核数
     *
     * @return
     */
    public Integer getCpu() {
        return cpu;
    }

    /**
     * set cup核数
     *
     * @param cpu
     */
    public void setCpu(Integer cpu) {
        this.cpu = cpu;
    }

    /**
     * get 内存大小
     *
     * @return
     */
    public Integer getMemoryGB() {
        return memoryGB;
    }

    /**
     * set 内存大小
     *
     * @param memoryGB
     */
    public void setMemoryGB(Integer memoryGB) {
        this.memoryGB = memoryGB;
    }

    /**
     * get 该规格支持的存储空间的最小值，最大值及步长，用英文逗号分隔，例如100,4000,50 表示最小存储空间100GB，最大空间4000GB，步长50GBZK节点无须返回该字段
     *
     * @return
     */
    public String getStorageGBRange() {
        return storageGBRange;
    }

    /**
     * set 该规格支持的存储空间的最小值，最大值及步长，用英文逗号分隔，例如100,4000,50 表示最小存储空间100GB，最大空间4000GB，步长50GBZK节点无须返回该字段
     *
     * @param storageGBRange
     */
    public void setStorageGBRange(String storageGBRange) {
        this.storageGBRange = storageGBRange;
    }


    /**
     * set 规格代码
     *
     * @param nodeClass
     */
    public Flavor nodeClass(String nodeClass) {
        this.nodeClass = nodeClass;
        return this;
    }

    /**
     * set cup核数
     *
     * @param cpu
     */
    public Flavor cpu(Integer cpu) {
        this.cpu = cpu;
        return this;
    }

    /**
     * set 内存大小
     *
     * @param memoryGB
     */
    public Flavor memoryGB(Integer memoryGB) {
        this.memoryGB = memoryGB;
        return this;
    }

    /**
     * set 该规格支持的存储空间的最小值，最大值及步长，用英文逗号分隔，例如100,4000,50 表示最小存储空间100GB，最大空间4000GB，步长50GBZK节点无须返回该字段
     *
     * @param storageGBRange
     */
    public Flavor storageGBRange(String storageGBRange) {
        this.storageGBRange = storageGBRange;
        return this;
    }


}