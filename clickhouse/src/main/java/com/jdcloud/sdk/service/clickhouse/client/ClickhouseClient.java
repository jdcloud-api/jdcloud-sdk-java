/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 分布式数据库Clickhouse
 * 分布式数据库Clickhouse
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.clickhouse.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.clickhouse.model.DescribeDomainNamesRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeDomainNamesResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeDomainNamesExecutor;
import com.jdcloud.sdk.service.clickhouse.model.CreateAccountRequest;
import com.jdcloud.sdk.service.clickhouse.model.CreateAccountResponse;
import com.jdcloud.sdk.service.clickhouse.client.CreateAccountExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeInstancesRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeInstancesResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeInstancesExecutor;
import com.jdcloud.sdk.service.clickhouse.model.UpgradeEngineVersionRequest;
import com.jdcloud.sdk.service.clickhouse.model.UpgradeEngineVersionResponse;
import com.jdcloud.sdk.service.clickhouse.client.UpgradeEngineVersionExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ModifyParametersRequest;
import com.jdcloud.sdk.service.clickhouse.model.ModifyParametersResponse;
import com.jdcloud.sdk.service.clickhouse.client.ModifyParametersExecutor;
import com.jdcloud.sdk.service.clickhouse.model.AttachNetworkRequest;
import com.jdcloud.sdk.service.clickhouse.model.AttachNetworkResponse;
import com.jdcloud.sdk.service.clickhouse.client.AttachNetworkExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribePodMapRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribePodMapResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribePodMapExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DeleteWhiteListGroupRequest;
import com.jdcloud.sdk.service.clickhouse.model.DeleteWhiteListGroupResponse;
import com.jdcloud.sdk.service.clickhouse.client.DeleteWhiteListGroupExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DisableInternetAccessRequest;
import com.jdcloud.sdk.service.clickhouse.model.DisableInternetAccessResponse;
import com.jdcloud.sdk.service.clickhouse.client.DisableInternetAccessExecutor;
import com.jdcloud.sdk.service.clickhouse.model.AzsRequest;
import com.jdcloud.sdk.service.clickhouse.model.AzsResponse;
import com.jdcloud.sdk.service.clickhouse.client.AzsExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeDefaultConfigRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeDefaultConfigResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeDefaultConfigExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DeleteInstanceByForceRequest;
import com.jdcloud.sdk.service.clickhouse.model.DeleteInstanceByForceResponse;
import com.jdcloud.sdk.service.clickhouse.client.DeleteInstanceByForceExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.clickhouse.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.clickhouse.client.DeleteInstanceExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeExposeTypeRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeExposeTypeResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeExposeTypeExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeAccountsRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeAccountsResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeAccountsExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeProgressRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeProgressResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeProgressExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DisableCloudDiskCapacityRequest;
import com.jdcloud.sdk.service.clickhouse.model.DisableCloudDiskCapacityResponse;
import com.jdcloud.sdk.service.clickhouse.client.DisableCloudDiskCapacityExecutor;
import com.jdcloud.sdk.service.clickhouse.model.OrderableInstanceTypeRequest;
import com.jdcloud.sdk.service.clickhouse.model.OrderableInstanceTypeResponse;
import com.jdcloud.sdk.service.clickhouse.client.OrderableInstanceTypeExecutor;
import com.jdcloud.sdk.service.clickhouse.model.EnableInternetAccessRequest;
import com.jdcloud.sdk.service.clickhouse.model.EnableInternetAccessResponse;
import com.jdcloud.sdk.service.clickhouse.client.EnableInternetAccessExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeNodesRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeNodesResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeNodesExecutor;
import com.jdcloud.sdk.service.clickhouse.model.SelectDetailListRequest;
import com.jdcloud.sdk.service.clickhouse.model.SelectDetailListResponse;
import com.jdcloud.sdk.service.clickhouse.client.SelectDetailListExecutor;
import com.jdcloud.sdk.service.clickhouse.model.EnableCloudDiskCapacityRequest;
import com.jdcloud.sdk.service.clickhouse.model.EnableCloudDiskCapacityResponse;
import com.jdcloud.sdk.service.clickhouse.client.EnableCloudDiskCapacityExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeInstanceAttributesRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeInstanceAttributesResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeInstanceAttributesExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ModifyInstanceNameRequest;
import com.jdcloud.sdk.service.clickhouse.model.ModifyInstanceNameResponse;
import com.jdcloud.sdk.service.clickhouse.client.ModifyInstanceNameExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeNodeClassesRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeNodeClassesResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeNodeClassesExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeAuditResultRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeAuditResultResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeAuditResultExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeParametersRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeParametersResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeParametersExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ModifyWhiteListRequest;
import com.jdcloud.sdk.service.clickhouse.model.ModifyWhiteListResponse;
import com.jdcloud.sdk.service.clickhouse.client.ModifyWhiteListExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeSlowlogResultRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeSlowlogResultResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeSlowlogResultExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ResetPasswordRequest;
import com.jdcloud.sdk.service.clickhouse.model.ResetPasswordResponse;
import com.jdcloud.sdk.service.clickhouse.client.ResetPasswordExecutor;
import com.jdcloud.sdk.service.clickhouse.model.InternalDescribeInstanceRequest;
import com.jdcloud.sdk.service.clickhouse.model.InternalDescribeInstanceResponse;
import com.jdcloud.sdk.service.clickhouse.client.InternalDescribeInstanceExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DescribeWhiteListRequest;
import com.jdcloud.sdk.service.clickhouse.model.DescribeWhiteListResponse;
import com.jdcloud.sdk.service.clickhouse.client.DescribeWhiteListExecutor;
import com.jdcloud.sdk.service.clickhouse.model.AddWhiteListGroupRequest;
import com.jdcloud.sdk.service.clickhouse.model.AddWhiteListGroupResponse;
import com.jdcloud.sdk.service.clickhouse.client.AddWhiteListGroupExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DetachNetworkRequest;
import com.jdcloud.sdk.service.clickhouse.model.DetachNetworkResponse;
import com.jdcloud.sdk.service.clickhouse.client.DetachNetworkExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ModifyPrivilegeRequest;
import com.jdcloud.sdk.service.clickhouse.model.ModifyPrivilegeResponse;
import com.jdcloud.sdk.service.clickhouse.client.ModifyPrivilegeExecutor;
import com.jdcloud.sdk.service.clickhouse.model.DeleteAccountRequest;
import com.jdcloud.sdk.service.clickhouse.model.DeleteAccountResponse;
import com.jdcloud.sdk.service.clickhouse.client.DeleteAccountExecutor;
import com.jdcloud.sdk.service.clickhouse.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.clickhouse.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.clickhouse.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.clickhouse.model.ModifyInstanceSpecRequest;
import com.jdcloud.sdk.service.clickhouse.model.ModifyInstanceSpecResponse;
import com.jdcloud.sdk.service.clickhouse.client.ModifyInstanceSpecExecutor;

/**
 * clickhouseClient
 */
public class ClickhouseClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.8";
    public final static String DefaultEndpoint = "clickhouse.jdcloud-api.com";
    public final static String ServiceName = "clickhouse";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private ClickhouseClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 获取某个实例下的所有节点对应的域名信息。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDomainNamesResponse describeDomainNames(DescribeDomainNamesRequest request) throws JdcloudSdkException {
        return new DescribeDomainNamesExecutor().client(this).execute(request);
    }

    /**
     * 创建一个Clickhouse账号
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccountResponse createAccount(CreateAccountRequest request) throws JdcloudSdkException {
        return new CreateAccountExecutor().client(this).execute(request);
    }

    /**
     * 查询实例列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstancesResponse describeInstances(DescribeInstancesRequest request) throws JdcloudSdkException {
        return new DescribeInstancesExecutor().client(this).execute(request);
    }

    /**
     * 集群版本升级。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpgradeEngineVersionResponse upgradeEngineVersion(UpgradeEngineVersionRequest request) throws JdcloudSdkException {
        return new UpgradeEngineVersionExecutor().client(this).execute(request);
    }

    /**
     * 提交并修改实例的配置参数。 参数修改后，需要重启才能生效。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParametersResponse modifyParameters(ModifyParametersRequest request) throws JdcloudSdkException {
        return new ModifyParametersExecutor().client(this).execute(request);
    }

    /**
     * 当实例不欠费了或者续费了，开启Clickhouse实例的网络访问功能。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AttachNetworkResponse attachNetwork(AttachNetworkRequest request) throws JdcloudSdkException {
        return new AttachNetworkExecutor().client(this).execute(request);
    }

    /**
     * 查看实例当前的备份备份策略。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribePodMapResponse describePodMap(DescribePodMapRequest request) throws JdcloudSdkException {
        return new DescribePodMapExecutor().client(this).execute(request);
    }

    /**
     * 删除白名单分组。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteWhiteListGroupResponse deleteWhiteListGroup(DeleteWhiteListGroupRequest request) throws JdcloudSdkException {
        return new DeleteWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 关闭实例的外网访问功能。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableInternetAccessResponse disableInternetAccess(DisableInternetAccessRequest request) throws JdcloudSdkException {
        return new DisableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 获取当前用户可用的可用区
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AzsResponse azs(AzsRequest request) throws JdcloudSdkException {
        return new AzsExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse 推荐规格
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDefaultConfigResponse describeDefaultConfig(DescribeDefaultConfigRequest request) throws JdcloudSdkException {
        return new DescribeDefaultConfigExecutor().client(this).execute(request);
    }

    /**
     * 强行删除DRDS实例，包括包年包月未过期实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceByForceResponse deleteInstanceByForce(DeleteInstanceByForceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceByForceExecutor().client(this).execute(request);
    }

    /**
     * 删除一个Clickhouse实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询k8s集群支持的集群外访问方式
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeExposeTypeResponse describeExposeType(DescribeExposeTypeRequest request) throws JdcloudSdkException {
        return new DescribeExposeTypeExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse account列表信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountsResponse describeAccounts(DescribeAccountsRequest request) throws JdcloudSdkException {
        return new DescribeAccountsExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse 集群进度
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeProgressResponse describeProgress(DescribeProgressRequest request) throws JdcloudSdkException {
        return new DescribeProgressExecutor().client(this).execute(request);
    }

    /**
     * 关闭数据库的云盘扩容功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableCloudDiskCapacityResponse disableCloudDiskCapacity(DisableCloudDiskCapacityRequest request) throws JdcloudSdkException {
        return new DisableCloudDiskCapacityExecutor().client(this).execute(request);
    }

    /**
     * 获取当前用户售罄信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OrderableInstanceTypeResponse orderableInstanceType(OrderableInstanceTypeRequest request) throws JdcloudSdkException {
        return new OrderableInstanceTypeExecutor().client(this).execute(request);
    }

    /**
     * 开启实例的外网访问功能。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableInternetAccessResponse enableInternetAccess(EnableInternetAccessRequest request) throws JdcloudSdkException {
        return new EnableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse 节点信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNodesResponse describeNodes(DescribeNodesRequest request) throws JdcloudSdkException {
        return new DescribeNodesExecutor().client(this).execute(request);
    }

    /**
     * 根据实例的的id，获取实例相关信息。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SelectDetailListResponse selectDetailList(SelectDetailListRequest request) throws JdcloudSdkException {
        return new SelectDetailListExecutor().client(this).execute(request);
    }

    /**
     * 开启数据库的云盘扩容功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableCloudDiskCapacityResponse enableCloudDiskCapacity(EnableCloudDiskCapacityRequest request) throws JdcloudSdkException {
        return new EnableCloudDiskCapacityExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse 实例的详细信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceAttributesResponse describeInstanceAttributes(DescribeInstanceAttributesRequest request) throws JdcloudSdkException {
        return new DescribeInstanceAttributesExecutor().client(this).execute(request);
    }

    /**
     * 修改实例名称。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceNameResponse modifyInstanceName(ModifyInstanceNameRequest request) throws JdcloudSdkException {
        return new ModifyInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 查询 node 可用规格
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNodeClassesResponse describeNodeClasses(DescribeNodeClassesRequest request) throws JdcloudSdkException {
        return new DescribeNodeClassesExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse audit列表信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditResultResponse describeAuditResult(DescribeAuditResultRequest request) throws JdcloudSdkException {
        return new DescribeAuditResultExecutor().client(this).execute(request);
    }

    /**
     * 查看JCHDB实例的配置参数。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParametersResponse describeParameters(DescribeParametersRequest request) throws JdcloudSdkException {
        return new DescribeParametersExecutor().client(this).execute(request);
    }

    /**
     * 修改允许访问实例的IP白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyWhiteListResponse modifyWhiteList(ModifyWhiteListRequest request) throws JdcloudSdkException {
        return new ModifyWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 查询 Clickhouse audit列表信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSlowlogResultResponse describeSlowlogResult(DescribeSlowlogResultRequest request) throws JdcloudSdkException {
        return new DescribeSlowlogResultExecutor().client(this).execute(request);
    }

    /**
     * 重置数据库账号密码
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetPasswordResponse resetPassword(ResetPasswordRequest request) throws JdcloudSdkException {
        return new ResetPasswordExecutor().client(this).execute(request);
    }

    /**
     * 内部查询实例状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public InternalDescribeInstanceResponse internalDescribeInstance(InternalDescribeInstanceRequest request) throws JdcloudSdkException {
        return new InternalDescribeInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查看实例当前白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeWhiteListResponse describeWhiteList(DescribeWhiteListRequest request) throws JdcloudSdkException {
        return new DescribeWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 增加白名单分组。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddWhiteListGroupResponse addWhiteListGroup(AddWhiteListGroupRequest request) throws JdcloudSdkException {
        return new AddWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 当实例欠费或者到期了，关闭Clickhouse实例的网络访问功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DetachNetworkResponse detachNetwork(DetachNetworkRequest request) throws JdcloudSdkException {
        return new DetachNetworkExecutor().client(this).execute(request);
    }

    /**
     * 修改账号权限
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyPrivilegeResponse modifyPrivilege(ModifyPrivilegeRequest request) throws JdcloudSdkException {
        return new ModifyPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 删除一个Clickhouse实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAccountResponse deleteAccount(DeleteAccountRequest request) throws JdcloudSdkException {
        return new DeleteAccountExecutor().client(this).execute(request);
    }

    /**
     * 创建一个Clickhouse实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * Clickhouse实例变配
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceSpecResponse modifyInstanceSpec(ModifyInstanceSpecRequest request) throws JdcloudSdkException {
        return new ModifyInstanceSpecExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public ClickhouseClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private ClickhouseClient clickhouseClient;

        public DefaultBuilder() {
            clickhouseClient = new ClickhouseClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            clickhouseClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            clickhouseClient.httpRequestConfig = config;
            return this;
        }

        public ClickhouseClient build() throws JdcloudSdkException {

            if (clickhouseClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                clickhouseClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (clickhouseClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("ClickhouseClient build error: jdcloud credentials provider not set");
                }
            }
            if (clickhouseClient.httpRequestConfig == null) {
                clickhouseClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (clickhouseClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("ClickhouseClient build error: http request config not set");
                }
            }
            return clickhouseClient;
        }

        public Builder environment(Environment environment) {
            clickhouseClient.environment = environment;
            return this;
        }
    }
}
