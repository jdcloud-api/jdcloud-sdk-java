/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vm.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 密钥信息。
 */
public class Keypair  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 密钥对名称。
     */
    private String keyName;

    /**
     * 密钥对的指纹，根据 &#x60;RFC4716&#x60; 定义的公钥指纹格式，采用 &#x60;MD5&#x60; 信息摘要算法。
     */
    private String keyFingerprint;

    /**
     * 密钥创建时间。
     */
    private String createTime;

    /**
     * 绑定了此密钥的云主机ID列表。
     */
    
    private List<String> instanceIds;


    /**
     * get 密钥对名称。
     *
     * @return
     */
    public String getKeyName() {
        return keyName;
    }

    /**
     * set 密钥对名称。
     *
     * @param keyName
     */
    public void setKeyName(String keyName) {
        this.keyName = keyName;
    }


    /**
     * get 密钥对的指纹，根据 &#x60;RFC4716&#x60; 定义的公钥指纹格式，采用 &#x60;MD5&#x60; 信息摘要算法。
     *
     * @return
     */
    public String getKeyFingerprint() {
        return keyFingerprint;
    }

    /**
     * set 密钥对的指纹，根据 &#x60;RFC4716&#x60; 定义的公钥指纹格式，采用 &#x60;MD5&#x60; 信息摘要算法。
     *
     * @param keyFingerprint
     */
    public void setKeyFingerprint(String keyFingerprint) {
        this.keyFingerprint = keyFingerprint;
    }


    /**
     * get 密钥创建时间。
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 密钥创建时间。
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
    * get 绑定了此密钥的云主机ID列表。
    *
    * @return
    */
    public List<String> getInstanceIds() {
        return instanceIds;
    }

    /**
    * set 绑定了此密钥的云主机ID列表。
    *
    * @param instanceIds
    */
    public void setInstanceIds(List<String> instanceIds) {
        this.instanceIds = instanceIds;
    }



    /**
     * set 密钥对名称。
     *
     * @param keyName
     */
    public Keypair keyName(String keyName) {
        this.keyName = keyName;
        return this;
    }


    /**
     * set 密钥对的指纹，根据 &#x60;RFC4716&#x60; 定义的公钥指纹格式，采用 &#x60;MD5&#x60; 信息摘要算法。
     *
     * @param keyFingerprint
     */
    public Keypair keyFingerprint(String keyFingerprint) {
        this.keyFingerprint = keyFingerprint;
        return this;
    }


    /**
     * set 密钥创建时间。
     *
     * @param createTime
     */
    public Keypair createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
    * set 绑定了此密钥的云主机ID列表。
    *
    * @param instanceIds
    */
    public Keypair instanceIds(List<String> instanceIds) {
        this.instanceIds = instanceIds;
        return this;
    }



    /**
     * add item to 绑定了此密钥的云主机ID列表。
     *
     * @param instanceId
     */
    public void addInstanceId(String instanceId) {
        if (this.instanceIds == null) {
            this.instanceIds = new ArrayList<>();
        }
        this.instanceIds.add(instanceId);
    }
}