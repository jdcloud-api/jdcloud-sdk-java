/*
 * Copyright 2018-2025 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vm.model;


/**
 * instanceTemplateDiskAttachment
 */
public class InstanceTemplateDiskAttachment  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 磁盘分类，local或者cloud；系统盘仅支持local；数据盘仅支持cloud
     */
    private String diskCategory;

    /**
     * 自动删除，删除主机时自动删除此磁盘，默认为True，本地盘不能更改此值
     */
    private Boolean autoDelete;

    /**
     * 云硬盘规格
     */
    private InstanceTemplateDisk instanceTemplateDisk;

    /**
     * 系统盘不需要使用，数据盘时才能够使用。设置数据盘的挂载点，[vdb,vdc,vdd,vde,vdf,vdg,vdh]
     */
    private String deviceName;

    /**
     * 排除镜像数据盘映射中的逻辑挂载点
     */
    private Boolean noDevice;


    /**
     * get 磁盘分类，local或者cloud；系统盘仅支持local；数据盘仅支持cloud
     *
     * @return
     */
    public String getDiskCategory() {
        return diskCategory;
    }

    /**
     * set 磁盘分类，local或者cloud；系统盘仅支持local；数据盘仅支持cloud
     *
     * @param diskCategory
     */
    public void setDiskCategory(String diskCategory) {
        this.diskCategory = diskCategory;
    }

    /**
     * get 自动删除，删除主机时自动删除此磁盘，默认为True，本地盘不能更改此值
     *
     * @return
     */
    public Boolean getAutoDelete() {
        return autoDelete;
    }

    /**
     * set 自动删除，删除主机时自动删除此磁盘，默认为True，本地盘不能更改此值
     *
     * @param autoDelete
     */
    public void setAutoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
    }

    /**
     * get 云硬盘规格
     *
     * @return
     */
    public InstanceTemplateDisk getInstanceTemplateDisk() {
        return instanceTemplateDisk;
    }

    /**
     * set 云硬盘规格
     *
     * @param instanceTemplateDisk
     */
    public void setInstanceTemplateDisk(InstanceTemplateDisk instanceTemplateDisk) {
        this.instanceTemplateDisk = instanceTemplateDisk;
    }

    /**
     * get 系统盘不需要使用，数据盘时才能够使用。设置数据盘的挂载点，[vdb,vdc,vdd,vde,vdf,vdg,vdh]
     *
     * @return
     */
    public String getDeviceName() {
        return deviceName;
    }

    /**
     * set 系统盘不需要使用，数据盘时才能够使用。设置数据盘的挂载点，[vdb,vdc,vdd,vde,vdf,vdg,vdh]
     *
     * @param deviceName
     */
    public void setDeviceName(String deviceName) {
        this.deviceName = deviceName;
    }

    /**
     * get 排除镜像数据盘映射中的逻辑挂载点
     *
     * @return
     */
    public Boolean getNoDevice() {
        return noDevice;
    }

    /**
     * set 排除镜像数据盘映射中的逻辑挂载点
     *
     * @param noDevice
     */
    public void setNoDevice(Boolean noDevice) {
        this.noDevice = noDevice;
    }


    /**
     * set 磁盘分类，local或者cloud；系统盘仅支持local；数据盘仅支持cloud
     *
     * @param diskCategory
     */
    public InstanceTemplateDiskAttachment diskCategory(String diskCategory) {
        this.diskCategory = diskCategory;
        return this;
    }

    /**
     * set 自动删除，删除主机时自动删除此磁盘，默认为True，本地盘不能更改此值
     *
     * @param autoDelete
     */
    public InstanceTemplateDiskAttachment autoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
        return this;
    }

    /**
     * set 云硬盘规格
     *
     * @param instanceTemplateDisk
     */
    public InstanceTemplateDiskAttachment instanceTemplateDisk(InstanceTemplateDisk instanceTemplateDisk) {
        this.instanceTemplateDisk = instanceTemplateDisk;
        return this;
    }

    /**
     * set 系统盘不需要使用，数据盘时才能够使用。设置数据盘的挂载点，[vdb,vdc,vdd,vde,vdf,vdg,vdh]
     *
     * @param deviceName
     */
    public InstanceTemplateDiskAttachment deviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }

    /**
     * set 排除镜像数据盘映射中的逻辑挂载点
     *
     * @param noDevice
     */
    public InstanceTemplateDiskAttachment noDevice(Boolean noDevice) {
        this.noDevice = noDevice;
        return this;
    }


}