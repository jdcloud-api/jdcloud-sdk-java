/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.gcs.model;

import java.util.List;
import java.util.ArrayList;

/**
 * imageInfo
 */
public class ImageInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 镜像uuid
     */
    private String uuid;

    /**
     * 镜像名称，列表展示使用，比如：container-cuda12
     */
    private String name;

    /**
     * 子域名
     */
    private String subDomain;

    /**
     * nvidia cuda version
     */
    private String cudaVersion;

    /**
     * 镜像操作系统类型：centos|ubantu
     */
    private String os;

    /**
     * 使用哪种conda：miniconda or anoconda
     */
    private String conda;

    /**
     * 应用框架，比如：unsigned(无)|Pytorch
     */
    private String framework;

    /**
     * 镜像类型：cuda(英伟达环境镜像)|normal(常规镜像)|amd(amd环境镜像)
     */
    private String imageType;

    /**
     * 镜像渠道：official(JD官方镜像)|custom(用户自定义镜像)
     */
    private String channel;

    /**
     * 镜像基础描述信息
     */
    private String remark;

    /**
     * 镜像应用列表
     */
    
    private List<GcsImageApplication> apps;


    /**
     * get 镜像uuid
     *
     * @return
     */
    public String getUuid() {
        return uuid;
    }

    /**
     * set 镜像uuid
     *
     * @param uuid
     */
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }


    /**
     * get 镜像名称，列表展示使用，比如：container-cuda12
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 镜像名称，列表展示使用，比如：container-cuda12
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 子域名
     *
     * @return
     */
    public String getSubDomain() {
        return subDomain;
    }

    /**
     * set 子域名
     *
     * @param subDomain
     */
    public void setSubDomain(String subDomain) {
        this.subDomain = subDomain;
    }


    /**
     * get nvidia cuda version
     *
     * @return
     */
    public String getCudaVersion() {
        return cudaVersion;
    }

    /**
     * set nvidia cuda version
     *
     * @param cudaVersion
     */
    public void setCudaVersion(String cudaVersion) {
        this.cudaVersion = cudaVersion;
    }


    /**
     * get 镜像操作系统类型：centos|ubantu
     *
     * @return
     */
    public String getOs() {
        return os;
    }

    /**
     * set 镜像操作系统类型：centos|ubantu
     *
     * @param os
     */
    public void setOs(String os) {
        this.os = os;
    }


    /**
     * get 使用哪种conda：miniconda or anoconda
     *
     * @return
     */
    public String getConda() {
        return conda;
    }

    /**
     * set 使用哪种conda：miniconda or anoconda
     *
     * @param conda
     */
    public void setConda(String conda) {
        this.conda = conda;
    }


    /**
     * get 应用框架，比如：unsigned(无)|Pytorch
     *
     * @return
     */
    public String getFramework() {
        return framework;
    }

    /**
     * set 应用框架，比如：unsigned(无)|Pytorch
     *
     * @param framework
     */
    public void setFramework(String framework) {
        this.framework = framework;
    }


    /**
     * get 镜像类型：cuda(英伟达环境镜像)|normal(常规镜像)|amd(amd环境镜像)
     *
     * @return
     */
    public String getImageType() {
        return imageType;
    }

    /**
     * set 镜像类型：cuda(英伟达环境镜像)|normal(常规镜像)|amd(amd环境镜像)
     *
     * @param imageType
     */
    public void setImageType(String imageType) {
        this.imageType = imageType;
    }


    /**
     * get 镜像渠道：official(JD官方镜像)|custom(用户自定义镜像)
     *
     * @return
     */
    public String getChannel() {
        return channel;
    }

    /**
     * set 镜像渠道：official(JD官方镜像)|custom(用户自定义镜像)
     *
     * @param channel
     */
    public void setChannel(String channel) {
        this.channel = channel;
    }


    /**
     * get 镜像基础描述信息
     *
     * @return
     */
    public String getRemark() {
        return remark;
    }

    /**
     * set 镜像基础描述信息
     *
     * @param remark
     */
    public void setRemark(String remark) {
        this.remark = remark;
    }


    /**
    * get 镜像应用列表
    *
    * @return
    */
    public List<GcsImageApplication> getApps() {
        return apps;
    }

    /**
    * set 镜像应用列表
    *
    * @param apps
    */
    public void setApps(List<GcsImageApplication> apps) {
        this.apps = apps;
    }



    /**
     * set 镜像uuid
     *
     * @param uuid
     */
    public ImageInfo uuid(String uuid) {
        this.uuid = uuid;
        return this;
    }


    /**
     * set 镜像名称，列表展示使用，比如：container-cuda12
     *
     * @param name
     */
    public ImageInfo name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 子域名
     *
     * @param subDomain
     */
    public ImageInfo subDomain(String subDomain) {
        this.subDomain = subDomain;
        return this;
    }


    /**
     * set nvidia cuda version
     *
     * @param cudaVersion
     */
    public ImageInfo cudaVersion(String cudaVersion) {
        this.cudaVersion = cudaVersion;
        return this;
    }


    /**
     * set 镜像操作系统类型：centos|ubantu
     *
     * @param os
     */
    public ImageInfo os(String os) {
        this.os = os;
        return this;
    }


    /**
     * set 使用哪种conda：miniconda or anoconda
     *
     * @param conda
     */
    public ImageInfo conda(String conda) {
        this.conda = conda;
        return this;
    }


    /**
     * set 应用框架，比如：unsigned(无)|Pytorch
     *
     * @param framework
     */
    public ImageInfo framework(String framework) {
        this.framework = framework;
        return this;
    }


    /**
     * set 镜像类型：cuda(英伟达环境镜像)|normal(常规镜像)|amd(amd环境镜像)
     *
     * @param imageType
     */
    public ImageInfo imageType(String imageType) {
        this.imageType = imageType;
        return this;
    }


    /**
     * set 镜像渠道：official(JD官方镜像)|custom(用户自定义镜像)
     *
     * @param channel
     */
    public ImageInfo channel(String channel) {
        this.channel = channel;
        return this;
    }


    /**
     * set 镜像基础描述信息
     *
     * @param remark
     */
    public ImageInfo remark(String remark) {
        this.remark = remark;
        return this;
    }


    /**
    * set 镜像应用列表
    *
    * @param apps
    */
    public ImageInfo apps(List<GcsImageApplication> apps) {
        this.apps = apps;
        return this;
    }



    /**
     * add item to 镜像应用列表
     *
     * @param app
     */
    public void addApp(GcsImageApplication app) {
        if (this.apps == null) {
            this.apps = new ArrayList<>();
        }
        this.apps.add(app);
    }
}