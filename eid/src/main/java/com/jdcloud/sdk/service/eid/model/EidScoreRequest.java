/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 设备评分接口
 * API Related to Get EID Score
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.eid.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 获取设备评分
 */
public class EidScoreRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 检测任务列表，包含一个或多个元素。每个元素是个结构体，最多可添加100元素，即最多对100个设备数据进行评分。每个元素的具体结构描述见creditTask。
     */
    
    private List<ScoreTask> tasks;


    /**
    * get 检测任务列表，包含一个或多个元素。每个元素是个结构体，最多可添加100元素，即最多对100个设备数据进行评分。每个元素的具体结构描述见creditTask。
    *
    * @return
    */
    public List<ScoreTask> getTasks() {
        return tasks;
    }

    /**
    * set 检测任务列表，包含一个或多个元素。每个元素是个结构体，最多可添加100元素，即最多对100个设备数据进行评分。每个元素的具体结构描述见creditTask。
    *
    * @param tasks
    */
    public void setTasks(List<ScoreTask> tasks) {
        this.tasks = tasks;
    }



    /**
    * set 检测任务列表，包含一个或多个元素。每个元素是个结构体，最多可添加100元素，即最多对100个设备数据进行评分。每个元素的具体结构描述见creditTask。
    *
    * @param tasks
    */
    public EidScoreRequest tasks(List<ScoreTask> tasks) {
        this.tasks = tasks;
        return this;
    }



    /**
     * add item to 检测任务列表，包含一个或多个元素。每个元素是个结构体，最多可添加100元素，即最多对100个设备数据进行评分。每个元素的具体结构描述见creditTask。
     *
     * @param task
     */
    public void addTask(ScoreTask task) {
        if (this.tasks == null) {
            this.tasks = new ArrayList<>();
        }
        this.tasks.add(task);
    }
}