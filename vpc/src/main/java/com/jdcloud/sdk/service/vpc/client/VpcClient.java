/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 京东云VPC
 * VPC相关API
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vpc.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.vpc.model.DeleteElasticIpRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteElasticIpResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteElasticIpExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcPeeringRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcPeeringResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyVpcPeeringExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateVpcPolicyRequest;
import com.jdcloud.sdk.service.vpc.model.CreateVpcPolicyResponse;
import com.jdcloud.sdk.service.vpc.client.CreateVpcPolicyExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeBandwidthPackageRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeBandwidthPackageResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeBandwidthPackageExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateBandwidthPackageRequest;
import com.jdcloud.sdk.service.vpc.model.CreateBandwidthPackageResponse;
import com.jdcloud.sdk.service.vpc.client.CreateBandwidthPackageExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyElasticIpRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyElasticIpResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyElasticIpExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkAclRulesRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkAclRulesResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNetworkAclRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.DisassociateElasticIpsRequest;
import com.jdcloud.sdk.service.vpc.model.DisassociateElasticIpsResponse;
import com.jdcloud.sdk.service.vpc.client.DisassociateElasticIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteSubnetRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteSubnetResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteSubnetExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeSubnetsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeSubnetsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeSubnetsExecutor;
import com.jdcloud.sdk.service.vpc.model.RemoveBandwidthPackageIPRequest;
import com.jdcloud.sdk.service.vpc.model.RemoveBandwidthPackageIPResponse;
import com.jdcloud.sdk.service.vpc.client.RemoveBandwidthPackageIPExecutor;
import com.jdcloud.sdk.service.vpc.model.AssociateElasticIpsRequest;
import com.jdcloud.sdk.service.vpc.model.AssociateElasticIpsResponse;
import com.jdcloud.sdk.service.vpc.client.AssociateElasticIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkInterfacesRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkInterfacesResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkInterfacesExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPolicyRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPolicyResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeVpcPolicyExecutor;
import com.jdcloud.sdk.service.vpc.model.RemoveNetworkSecurityGroupRulesRequest;
import com.jdcloud.sdk.service.vpc.model.RemoveNetworkSecurityGroupRulesResponse;
import com.jdcloud.sdk.service.vpc.client.RemoveNetworkSecurityGroupRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkSecurityGroupRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkSecurityGroupResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNetworkSecurityGroupExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.AddNetworkSecurityGroupRulesRequest;
import com.jdcloud.sdk.service.vpc.model.AddNetworkSecurityGroupRulesResponse;
import com.jdcloud.sdk.service.vpc.client.AddNetworkSecurityGroupRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.CreateNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.StartNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.StartNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.StartNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeQuotaRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeQuotaResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeQuotaExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.CreateRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.CreateRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkSecurityGroupRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkSecurityGroupResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteNetworkSecurityGroupExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteVpcExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPeeringsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPeeringsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeVpcPeeringsExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyBandwidthPackageRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyBandwidthPackageResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyBandwidthPackageExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkAclsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkAclsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkAclsExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeSubnetRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeSubnetResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeSubnetExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteBandwidthPackageRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteBandwidthPackageResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteBandwidthPackageExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkSecurityGroupRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkSecurityGroupResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkSecurityGroupExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkSecurityGroupsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkSecurityGroupsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkSecurityGroupsExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeVpcExecutor;
import com.jdcloud.sdk.service.vpc.model.AddBandwidthPackageIPRequest;
import com.jdcloud.sdk.service.vpc.model.AddBandwidthPackageIPResponse;
import com.jdcloud.sdk.service.vpc.client.AddBandwidthPackageIPExecutor;
import com.jdcloud.sdk.service.vpc.model.DisassociateNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.DisassociateNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.DisassociateNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeEdgeIpProvidersRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeEdgeIpProvidersResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeEdgeIpProvidersExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.RemoveNetworkAclRulesRequest;
import com.jdcloud.sdk.service.vpc.model.RemoveNetworkAclRulesResponse;
import com.jdcloud.sdk.service.vpc.client.RemoveNetworkAclRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.SetElasticIpStatusRequest;
import com.jdcloud.sdk.service.vpc.model.SetElasticIpStatusResponse;
import com.jdcloud.sdk.service.vpc.client.SetElasticIpStatusExecutor;
import com.jdcloud.sdk.service.vpc.model.AssociateRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.AssociateRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.AssociateRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeVpcsExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkSecurityGroupRequest;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkSecurityGroupResponse;
import com.jdcloud.sdk.service.vpc.client.CreateNetworkSecurityGroupExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.CreateNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.CreateNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateSubnetRequest;
import com.jdcloud.sdk.service.vpc.model.CreateSubnetResponse;
import com.jdcloud.sdk.service.vpc.client.CreateSubnetExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPeeringRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeVpcPeeringResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeVpcPeeringExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcPolicyRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcPolicyResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteVpcPolicyExecutor;
import com.jdcloud.sdk.service.vpc.model.RemoveRouteTableRulesRequest;
import com.jdcloud.sdk.service.vpc.model.RemoveRouteTableRulesResponse;
import com.jdcloud.sdk.service.vpc.client.RemoveRouteTableRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcPolicyRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcPolicyResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyVpcPolicyExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateVpcPeeringRequest;
import com.jdcloud.sdk.service.vpc.model.CreateVpcPeeringResponse;
import com.jdcloud.sdk.service.vpc.client.CreateVpcPeeringExecutor;
import com.jdcloud.sdk.service.vpc.model.AssignSecondaryIpsRequest;
import com.jdcloud.sdk.service.vpc.model.AssignSecondaryIpsResponse;
import com.jdcloud.sdk.service.vpc.client.AssignSecondaryIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeRouteTablesRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeRouteTablesResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeRouteTablesExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkInterfaceRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkInterfaceResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeElasticIpsRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeElasticIpsResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeElasticIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkSecurityGroupRulesRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkSecurityGroupRulesResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNetworkSecurityGroupRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkInterfaceRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkInterfaceResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.vpc.model.DisassociateElasticIpRequest;
import com.jdcloud.sdk.service.vpc.model.DisassociateElasticIpResponse;
import com.jdcloud.sdk.service.vpc.client.DisassociateElasticIpExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcPeeringRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteVpcPeeringResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteVpcPeeringExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyBandwidthPackageIpBandwidthRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyBandwidthPackageIpBandwidthResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyBandwidthPackageIpBandwidthExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeBandwidthPackagesRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeBandwidthPackagesResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeBandwidthPackagesExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkInterfaceRequest;
import com.jdcloud.sdk.service.vpc.model.CreateNetworkInterfaceResponse;
import com.jdcloud.sdk.service.vpc.client.CreateNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateVpcRequest;
import com.jdcloud.sdk.service.vpc.model.CreateVpcResponse;
import com.jdcloud.sdk.service.vpc.client.CreateVpcExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNatGatewaysRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNatGatewaysResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNatGatewaysExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyRouteTableRulesRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyRouteTableRulesResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyRouteTableRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.AddRouteTableRulesRequest;
import com.jdcloud.sdk.service.vpc.model.AddRouteTableRulesResponse;
import com.jdcloud.sdk.service.vpc.client.AddRouteTableRulesExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeElasticIpRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeElasticIpResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeElasticIpExecutor;
import com.jdcloud.sdk.service.vpc.model.UnassignSecondaryIpsRequest;
import com.jdcloud.sdk.service.vpc.model.UnassignSecondaryIpsResponse;
import com.jdcloud.sdk.service.vpc.client.UnassignSecondaryIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.StopNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.StopNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.StopNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.AssociateElasticIpRequest;
import com.jdcloud.sdk.service.vpc.model.AssociateElasticIpResponse;
import com.jdcloud.sdk.service.vpc.client.AssociateElasticIpExecutor;
import com.jdcloud.sdk.service.vpc.model.DisassociateRouteTableRequest;
import com.jdcloud.sdk.service.vpc.model.DisassociateRouteTableResponse;
import com.jdcloud.sdk.service.vpc.client.DisassociateRouteTableExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyVpcResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyVpcExecutor;
import com.jdcloud.sdk.service.vpc.model.AssociateNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.AssociateNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.AssociateNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifySubnetRequest;
import com.jdcloud.sdk.service.vpc.model.ModifySubnetResponse;
import com.jdcloud.sdk.service.vpc.client.ModifySubnetExecutor;
import com.jdcloud.sdk.service.vpc.model.CreateElasticIpsRequest;
import com.jdcloud.sdk.service.vpc.model.CreateElasticIpsResponse;
import com.jdcloud.sdk.service.vpc.client.CreateElasticIpsExecutor;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkInterfaceRequest;
import com.jdcloud.sdk.service.vpc.model.DeleteNetworkInterfaceResponse;
import com.jdcloud.sdk.service.vpc.client.DeleteNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.vpc.model.ModifyNatGatewayRequest;
import com.jdcloud.sdk.service.vpc.model.ModifyNatGatewayResponse;
import com.jdcloud.sdk.service.vpc.client.ModifyNatGatewayExecutor;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkAclRequest;
import com.jdcloud.sdk.service.vpc.model.DescribeNetworkAclResponse;
import com.jdcloud.sdk.service.vpc.client.DescribeNetworkAclExecutor;
import com.jdcloud.sdk.service.vpc.model.AddNetworkAclRulesRequest;
import com.jdcloud.sdk.service.vpc.model.AddNetworkAclRulesResponse;
import com.jdcloud.sdk.service.vpc.client.AddNetworkAclRulesExecutor;

/**
 * vpcClient
 */
public class VpcClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.11";
    public final static String DefaultEndpoint = "vpc.jdcloud-api.com";
    public final static String ServiceName = "vpc";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private VpcClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 删除弹性公网IP，已加入共享带宽包的公网IP不能删除，需要先从共享带宽包移出
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteElasticIpResponse deleteElasticIp(DeleteElasticIpRequest request) throws JdcloudSdkException {
        return new DeleteElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 修改VpcPeering接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyVpcPeeringResponse modifyVpcPeering(ModifyVpcPeeringRequest request) throws JdcloudSdkException {
        return new ModifyVpcPeeringExecutor().client(this).execute(request);
    }

    /**
     * 创建VpcPolicy接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateVpcPolicyResponse createVpcPolicy(CreateVpcPolicyRequest request) throws JdcloudSdkException {
        return new CreateVpcPolicyExecutor().client(this).execute(request);
    }

    /**
     * 
共享带宽包资源信息详情

## 接口说明

- 该接口与查询共享带宽包列表返回的信息一致。

- 只需要查询单个共享带宽包详细信息的时候可以调用该接口。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBandwidthPackageResponse describeBandwidthPackage(DescribeBandwidthPackageRequest request) throws JdcloudSdkException {
        return new DescribeBandwidthPackageExecutor().client(this).execute(request);
    }

    /**
     * 指定地域创建共享带宽包实例。

## 接口说明

- 需要接口完成实名认证、支付方式确认、计费类型选择等准备工作。

- 各地域下包年包月和按配置计费的共享带宽包不受配额限制，按用量计费的共享带宽包可创建数量受配额限制，创建前请通过 [DescribeQuotas](https://docs.jdcloud.com/cn/shared-bandwidth-package/api/describequotas?content&#x3D;API) 确认配额，如须提升请[提交工单](https://ticket.jdcloud.com/applyorder/submit)或联系京东云客服。

- 通过本接口创建包年包月资源时将自动从账户扣款（代金券优先），如需使用第三方支付方式请通过控制台创建。

- 按用量计费模式需提工单申请使用权限，默认支持增强95消峰计费。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBandwidthPackageResponse createBandwidthPackage(CreateBandwidthPackageRequest request) throws JdcloudSdkException {
        return new CreateBandwidthPackageExecutor().client(this).execute(request);
    }

    /**
     * 修改弹性公网IP，当弹性公网IP加入共享带宽包后，此公网IP限速需要调用共享带宽包的接口（修改共享带宽包内公网IP带宽上限）
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyElasticIpResponse modifyElasticIp(ModifyElasticIpRequest request) throws JdcloudSdkException {
        return new ModifyElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 修改networkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNetworkAclRulesResponse modifyNetworkAclRules(ModifyNetworkAclRulesRequest request) throws JdcloudSdkException {
        return new ModifyNetworkAclRulesExecutor().client(this).execute(request);
    }

    /**
     * 删除networkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteNetworkAclResponse deleteNetworkAcl(DeleteNetworkAclRequest request) throws JdcloudSdkException {
        return new DeleteNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 解绑NAT网关上的公网IP接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateElasticIpsResponse disassociateElasticIps(DisassociateElasticIpsRequest request) throws JdcloudSdkException {
        return new DisassociateElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 删除子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteSubnetResponse deleteSubnet(DeleteSubnetRequest request) throws JdcloudSdkException {
        return new DeleteSubnetExecutor().client(this).execute(request);
    }

    /**
     * 查询子网列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetsResponse describeSubnets(DescribeSubnetsRequest request) throws JdcloudSdkException {
        return new DescribeSubnetsExecutor().client(this).execute(request);
    }

    /**
     * 
从共享带宽包内移除公网IP

## 接口说明

-  弹性公网IP从共享带宽包中移除后，恢复原有的计费模式和带宽上限。

-  共享带宽包是否计费与共享带宽包中有无弹性公网IP无关，如共享带宽包中无弹性公网IP资源时请及时删除资源，避免产生额外费用

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveBandwidthPackageIPResponse removeBandwidthPackageIP(RemoveBandwidthPackageIPRequest request) throws JdcloudSdkException {
        return new RemoveBandwidthPackageIPExecutor().client(this).execute(request);
    }

    /**
     * NAT网关绑定已有公网IP接口，NAT网关支持绑定一个或多个公网IP。当NAT网关绑定多个公网IP时，同一内网服务器的业务流量出公网将随机选取其中一个公网IP。由于每个内网服务器的业务流量大小不同，可能出现NAT多公网IP流量不均的情况。建议将多公网IP加入同一个共享带宽包，避免因业务流量达到单公网IP带宽上限，影响业务转发。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateElasticIpsResponse associateElasticIps(AssociateElasticIpsRequest request) throws JdcloudSdkException {
        return new AssociateElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性网卡列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) throws JdcloudSdkException {
        return new DescribeNetworkInterfacesExecutor().client(this).execute(request);
    }

    /**
     * 查询VpcPolicy资源详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcPolicyResponse describeVpcPolicy(DescribeVpcPolicyRequest request) throws JdcloudSdkException {
        return new DescribeVpcPolicyExecutor().client(this).execute(request);
    }

    /**
     * 移除安全组规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveNetworkSecurityGroupRulesResponse removeNetworkSecurityGroupRules(RemoveNetworkSecurityGroupRulesRequest request) throws JdcloudSdkException {
        return new RemoveNetworkSecurityGroupRulesExecutor().client(this).execute(request);
    }

    /**
     * 修改安全组属性
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNetworkSecurityGroupResponse modifyNetworkSecurityGroup(ModifyNetworkSecurityGroupRequest request) throws JdcloudSdkException {
        return new ModifyNetworkSecurityGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询NAT网关信息详情接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNatGatewayResponse describeNatGateway(DescribeNatGatewayRequest request) throws JdcloudSdkException {
        return new DescribeNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 添加安全组规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddNetworkSecurityGroupRulesResponse addNetworkSecurityGroupRules(AddNetworkSecurityGroupRulesRequest request) throws JdcloudSdkException {
        return new AddNetworkSecurityGroupRulesExecutor().client(this).execute(request);
    }

    /**
     * 创建networkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateNetworkAclResponse createNetworkAcl(CreateNetworkAclRequest request) throws JdcloudSdkException {
        return new CreateNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 启动NAT网关接口，欠费停服客户不允许启动
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartNatGatewayResponse startNatGateway(StartNatGatewayRequest request) throws JdcloudSdkException {
        return new StartNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 查询配额信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeQuotaResponse describeQuota(DescribeQuotaRequest request) throws JdcloudSdkException {
        return new DescribeQuotaExecutor().client(this).execute(request);
    }

    /**
     * 创建路由表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRouteTableResponse createRouteTable(CreateRouteTableRequest request) throws JdcloudSdkException {
        return new CreateRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 删除安全组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteNetworkSecurityGroupResponse deleteNetworkSecurityGroup(DeleteNetworkSecurityGroupRequest request) throws JdcloudSdkException {
        return new DeleteNetworkSecurityGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询路由表信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRouteTableResponse describeRouteTable(DescribeRouteTableRequest request) throws JdcloudSdkException {
        return new DescribeRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 删除私有网络
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteVpcResponse deleteVpc(DeleteVpcRequest request) throws JdcloudSdkException {
        return new DeleteVpcExecutor().client(this).execute(request);
    }

    /**
     * 查询VpcPeering资源列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcPeeringsResponse describeVpcPeerings(DescribeVpcPeeringsRequest request) throws JdcloudSdkException {
        return new DescribeVpcPeeringsExecutor().client(this).execute(request);
    }

    /**
     * 
修改共享带宽包信息，包括带宽上限及共享带宽包名称、描述信息。

## 接口说明

- 如共享带宽包中的弹性公网 IP 有单独限速。共享带宽包的带宽上限值不能低于其包含任一弹性公网IP的带宽上限值。

- 欠费或到期的共享带宽包资源不支持修改带宽上限。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyBandwidthPackageResponse modifyBandwidthPackage(ModifyBandwidthPackageRequest request) throws JdcloudSdkException {
        return new ModifyBandwidthPackageExecutor().client(this).execute(request);
    }

    /**
     * 查询Acl列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkAclsResponse describeNetworkAcls(DescribeNetworkAclsRequest request) throws JdcloudSdkException {
        return new DescribeNetworkAclsExecutor().client(this).execute(request);
    }

    /**
     * 查询子网信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetResponse describeSubnet(DescribeSubnetRequest request) throws JdcloudSdkException {
        return new DescribeSubnetExecutor().client(this).execute(request);
    }

    /**
     * 删除共享带宽包

## 接口说明

- 当共享带宽包内有公网IP存在时、包年包月类型的共享带宽包未到期时、按用量计费的共享带宽包使用时长未满一个完整的自然月时均不支持删除共享带宽包

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBandwidthPackageResponse deleteBandwidthPackage(DeleteBandwidthPackageRequest request) throws JdcloudSdkException {
        return new DeleteBandwidthPackageExecutor().client(this).execute(request);
    }

    /**
     * 查询安全组信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkSecurityGroupResponse describeNetworkSecurityGroup(DescribeNetworkSecurityGroupRequest request) throws JdcloudSdkException {
        return new DescribeNetworkSecurityGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询安全组列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkSecurityGroupsResponse describeNetworkSecurityGroups(DescribeNetworkSecurityGroupsRequest request) throws JdcloudSdkException {
        return new DescribeNetworkSecurityGroupsExecutor().client(this).execute(request);
    }

    /**
     * 查询虚拟网络信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcResponse describeVpc(DescribeVpcRequest request) throws JdcloudSdkException {
        return new DescribeVpcExecutor().client(this).execute(request);
    }

    /**
     * 
向共享带宽包内增加公网IP

## 接口说明

- 确保已有至少一个共享带宽包资源。

- 添加弹性公网IP前，需确保弹性公网IP所在地域与共享带宽包地域和线路相同，弹性公网IP的计费模式为按配置或按用量计费，且未加入其他的共享带宽包资源。

- 已欠费的、包年包月的公网IP不能加入共享带宽包。

- 一个公网IP同时只能加入一个共享带宽包。

- 共享带宽包中可添加的弹性公网IP受配额限制，添加前请通过 [DescribeQuotas](https://docs.jdcloud.com/cn/shared-bandwidth-package/api/describequotas?content&#x3D;API) 确认配额，如须提升请[提交工单](https://ticket.jdcloud.com/applyorder/submit)或联系京东云客服。

- 弹性公网IP加入共享带宽包后，弹性公网 IP 会原有的计费和带宽上限暂时失效，已共享带宽包进行计费，带宽上限默认为共享带宽包的带宽上限，可通过[modifyBandwidthPackageIpBandwidth](https://docs.jdcloud.com/cn/shared-bandwidth-package/api/modifybandwidthpackageIpbandwidth)进行修改。

- 共享带宽包欠费或到期停服后不支持添加弹性公网IP。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddBandwidthPackageIPResponse addBandwidthPackageIP(AddBandwidthPackageIPRequest request) throws JdcloudSdkException {
        return new AddBandwidthPackageIPExecutor().client(this).execute(request);
    }

    /**
     * 给子网解绑NetworkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateNetworkAclResponse disassociateNetworkAcl(DisassociateNetworkAclRequest request) throws JdcloudSdkException {
        return new DisassociateNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 查询边缘公网IP可用线路列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeEdgeIpProvidersResponse describeEdgeIpProviders(DescribeEdgeIpProvidersRequest request) throws JdcloudSdkException {
        return new DescribeEdgeIpProvidersExecutor().client(this).execute(request);
    }

    /**
     * 删除NAT网关接口，NAT网关需要先停止再删除
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteNatGatewayResponse deleteNatGateway(DeleteNatGatewayRequest request) throws JdcloudSdkException {
        return new DeleteNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 移除networkAcl规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveNetworkAclRulesResponse removeNetworkAclRules(RemoveNetworkAclRulesRequest request) throws JdcloudSdkException {
        return new RemoveNetworkAclRulesExecutor().client(this).execute(request);
    }

    /**
     * 设置NAT网关已绑定的公网IP状态接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetElasticIpStatusResponse setElasticIpStatus(SetElasticIpStatusRequest request) throws JdcloudSdkException {
        return new SetElasticIpStatusExecutor().client(this).execute(request);
    }

    /**
     * 路由表绑定子网接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateRouteTableResponse associateRouteTable(AssociateRouteTableRequest request) throws JdcloudSdkException {
        return new AssociateRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 查询私有网络列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcsResponse describeVpcs(DescribeVpcsRequest request) throws JdcloudSdkException {
        return new DescribeVpcsExecutor().client(this).execute(request);
    }

    /**
     * 创建安全组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateNetworkSecurityGroupResponse createNetworkSecurityGroup(CreateNetworkSecurityGroupRequest request) throws JdcloudSdkException {
        return new CreateNetworkSecurityGroupExecutor().client(this).execute(request);
    }

    /**
     * 创建NAT网关接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateNatGatewayResponse createNatGateway(CreateNatGatewayRequest request) throws JdcloudSdkException {
        return new CreateNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 创建子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSubnetResponse createSubnet(CreateSubnetRequest request) throws JdcloudSdkException {
        return new CreateSubnetExecutor().client(this).execute(request);
    }

    /**
     * 删除路由表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteRouteTableResponse deleteRouteTable(DeleteRouteTableRequest request) throws JdcloudSdkException {
        return new DeleteRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 查询VpcPeering资源详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcPeeringResponse describeVpcPeering(DescribeVpcPeeringRequest request) throws JdcloudSdkException {
        return new DescribeVpcPeeringExecutor().client(this).execute(request);
    }

    /**
     * 删除VpcPolicy接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteVpcPolicyResponse deleteVpcPolicy(DeleteVpcPolicyRequest request) throws JdcloudSdkException {
        return new DeleteVpcPolicyExecutor().client(this).execute(request);
    }

    /**
     * 移除路由表规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveRouteTableRulesResponse removeRouteTableRules(RemoveRouteTableRulesRequest request) throws JdcloudSdkException {
        return new RemoveRouteTableRulesExecutor().client(this).execute(request);
    }

    /**
     * 修改VPC Policy接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyVpcPolicyResponse modifyVpcPolicy(ModifyVpcPolicyRequest request) throws JdcloudSdkException {
        return new ModifyVpcPolicyExecutor().client(this).execute(request);
    }

    /**
     * 创建VpcPeering接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateVpcPeeringResponse createVpcPeering(CreateVpcPeeringRequest request) throws JdcloudSdkException {
        return new CreateVpcPeeringExecutor().client(this).execute(request);
    }

    /**
     * 给网卡分配secondaryIp
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignSecondaryIpsResponse assignSecondaryIps(AssignSecondaryIpsRequest request) throws JdcloudSdkException {
        return new AssignSecondaryIpsExecutor().client(this).execute(request);
    }

    /**
     * 查询路由表列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRouteTablesResponse describeRouteTables(DescribeRouteTablesRequest request) throws JdcloudSdkException {
        return new DescribeRouteTablesExecutor().client(this).execute(request);
    }

    /**
     * 修改弹性网卡信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNetworkInterfaceResponse modifyNetworkInterface(ModifyNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new ModifyNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性公网IP列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeElasticIpsResponse describeElasticIps(DescribeElasticIpsRequest request) throws JdcloudSdkException {
        return new DescribeElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 修改安全组规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNetworkSecurityGroupRulesResponse modifyNetworkSecurityGroupRules(ModifyNetworkSecurityGroupRulesRequest request) throws JdcloudSdkException {
        return new ModifyNetworkSecurityGroupRulesExecutor().client(this).execute(request);
    }

    /**
     * 修改networkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNetworkAclResponse modifyNetworkAcl(ModifyNetworkAclRequest request) throws JdcloudSdkException {
        return new ModifyNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性网卡信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkInterfaceResponse describeNetworkInterface(DescribeNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new DescribeNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 给网卡解绑弹性Ip接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateElasticIpResponse disassociateElasticIp(DisassociateElasticIpRequest request) throws JdcloudSdkException {
        return new DisassociateElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 删除VpcPeering接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteVpcPeeringResponse deleteVpcPeering(DeleteVpcPeeringRequest request) throws JdcloudSdkException {
        return new DeleteVpcPeeringExecutor().client(this).execute(request);
    }

    /**
     * 
修改共享带宽包内弹性公网 IP 的带宽上限。

## 接口说明

- 共享带宽包中弹性公网IP的带宽上限不能高于共享带宽包的带宽上限。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyBandwidthPackageIpBandwidthResponse modifyBandwidthPackageIpBandwidth(ModifyBandwidthPackageIpBandwidthRequest request) throws JdcloudSdkException {
        return new ModifyBandwidthPackageIpBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 
查询共享带宽包列表

## 接口说明

- 使用 &#x60;filters&#x60; 过滤器进行条件筛选，每个 &#x60;filter&#x60; 之间的关系为逻辑与（AND）的关系。

- 如果使用子帐号查询，只会查询到该子帐号有权限的云主机实例。关于资源权限请参考 [IAM概述](https://docs.jdcloud.com/cn/iam/product-overview)。

- 单次查询最大可查询100条共享带宽包数据。

- 尽量一次调用接口查询多条数据，不建议使用该批量查询接口一次查询一条数据，如果使用不当导致查询过于密集，可能导致网关触发限流。

- 由于该接口为 &#x60;GET&#x60; 方式请求，最终参数会转换为 &#x60;URL&#x60; 上的参数，但是 &#x60;HTTP&#x60; 协议下的 &#x60;GET&#x60; 请求参数长度是有大小限制的，使用者需要注意参数超长的问题。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBandwidthPackagesResponse describeBandwidthPackages(DescribeBandwidthPackagesRequest request) throws JdcloudSdkException {
        return new DescribeBandwidthPackagesExecutor().client(this).execute(request);
    }

    /**
     * 创建网卡接口，只能创建辅助网卡
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateNetworkInterfaceResponse createNetworkInterface(CreateNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new CreateNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 创建私有网络
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateVpcResponse createVpc(CreateVpcRequest request) throws JdcloudSdkException {
        return new CreateVpcExecutor().client(this).execute(request);
    }

    /**
     * 查询NAT网关列表接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNatGatewaysResponse describeNatGateways(DescribeNatGatewaysRequest request) throws JdcloudSdkException {
        return new DescribeNatGatewaysExecutor().client(this).execute(request);
    }

    /**
     * 修改路由表规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyRouteTableRulesResponse modifyRouteTableRules(ModifyRouteTableRulesRequest request) throws JdcloudSdkException {
        return new ModifyRouteTableRulesExecutor().client(this).execute(request);
    }

    /**
     * 添加路由表规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddRouteTableRulesResponse addRouteTableRules(AddRouteTableRulesRequest request) throws JdcloudSdkException {
        return new AddRouteTableRulesExecutor().client(this).execute(request);
    }

    /**
     * ElasticIp资源信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeElasticIpResponse describeElasticIp(DescribeElasticIpRequest request) throws JdcloudSdkException {
        return new DescribeElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 给网卡删除secondaryIp
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UnassignSecondaryIpsResponse unassignSecondaryIps(UnassignSecondaryIpsRequest request) throws JdcloudSdkException {
        return new UnassignSecondaryIpsExecutor().client(this).execute(request);
    }

    /**
     * 修改路由表属性
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyRouteTableResponse modifyRouteTable(ModifyRouteTableRequest request) throws JdcloudSdkException {
        return new ModifyRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 停止NAT网关接口，非欠费停服，由客户自己停止的NAT网关继续计费
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopNatGatewayResponse stopNatGateway(StopNatGatewayRequest request) throws JdcloudSdkException {
        return new StopNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 给网卡绑定弹性Ip接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateElasticIpResponse associateElasticIp(AssociateElasticIpRequest request) throws JdcloudSdkException {
        return new AssociateElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 给路由表解绑子网接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateRouteTableResponse disassociateRouteTable(DisassociateRouteTableRequest request) throws JdcloudSdkException {
        return new DisassociateRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 修改私有网络接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyVpcResponse modifyVpc(ModifyVpcRequest request) throws JdcloudSdkException {
        return new ModifyVpcExecutor().client(this).execute(request);
    }

    /**
     * 给子网绑定networkAcl接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateNetworkAclResponse associateNetworkAcl(AssociateNetworkAclRequest request) throws JdcloudSdkException {
        return new AssociateNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 修改子网接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifySubnetResponse modifySubnet(ModifySubnetRequest request) throws JdcloudSdkException {
        return new ModifySubnetExecutor().client(this).execute(request);
    }

    /**
     * 创建一个或者多个弹性公网IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateElasticIpsResponse createElasticIps(CreateElasticIpsRequest request) throws JdcloudSdkException {
        return new CreateElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 删除弹性网卡
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteNetworkInterfaceResponse deleteNetworkInterface(DeleteNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new DeleteNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 修改NAT网关接口，修改网关规格或带宽需要先停止网关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNatGatewayResponse modifyNatGateway(ModifyNatGatewayRequest request) throws JdcloudSdkException {
        return new ModifyNatGatewayExecutor().client(this).execute(request);
    }

    /**
     * 查询networkAcl资源详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkAclResponse describeNetworkAcl(DescribeNetworkAclRequest request) throws JdcloudSdkException {
        return new DescribeNetworkAclExecutor().client(this).execute(request);
    }

    /**
     * 添加networkAcl规则接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddNetworkAclRulesResponse addNetworkAclRules(AddNetworkAclRulesRequest request) throws JdcloudSdkException {
        return new AddNetworkAclRulesExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public VpcClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private VpcClient vpcClient;

        public DefaultBuilder() {
            vpcClient = new VpcClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            vpcClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            vpcClient.httpRequestConfig = config;
            return this;
        }

        public VpcClient build() throws JdcloudSdkException {

            if (vpcClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                vpcClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (vpcClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("VpcClient build error: jdcloud credentials provider not set");
                }
            }
            if (vpcClient.httpRequestConfig == null) {
                vpcClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (vpcClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("VpcClient build error: http request config not set");
                }
            }
            return vpcClient;
        }

        public Builder environment(Environment environment) {
            vpcClient.environment = environment;
            return this;
        }
    }
}
