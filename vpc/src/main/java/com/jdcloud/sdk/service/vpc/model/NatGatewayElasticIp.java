/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vpc.model;


/**
 * natGatewayElasticIp
 */
public class NatGatewayElasticIp  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 公网IP ID
     */
    private String elasticIpId;

    /**
     * 公网IP地址
     */
    private String elasticIpAddress;

    /**
     * 公网IP的限速（单位：Mbps）
     */
    private Integer bandwidthMbps;

    /**
     * 公网IP的状态，取值范围：online、offline。online表示公网IP处于在线状态，可正常转发NAT网关流量；offline表示公网IP处于下线状态，下线的公网IP不再接受新建连接，已有连接可正常转发流量。下线的公网IP仍绑定NAT网关，如需解绑，请操作解绑公网IP
     */
    private String status;



    /**
     * get 公网IP ID
     *
     * @return
     */
    public String getElasticIpId() {
        return elasticIpId;
    }

    /**
     * set 公网IP ID
     *
     * @param elasticIpId
     */
    public void setElasticIpId(String elasticIpId) {
        this.elasticIpId = elasticIpId;
    }


    /**
     * get 公网IP地址
     *
     * @return
     */
    public String getElasticIpAddress() {
        return elasticIpAddress;
    }

    /**
     * set 公网IP地址
     *
     * @param elasticIpAddress
     */
    public void setElasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
    }


    /**
     * get 公网IP的限速（单位：Mbps）
     *
     * @return
     */
    public Integer getBandwidthMbps() {
        return bandwidthMbps;
    }

    /**
     * set 公网IP的限速（单位：Mbps）
     *
     * @param bandwidthMbps
     */
    public void setBandwidthMbps(Integer bandwidthMbps) {
        this.bandwidthMbps = bandwidthMbps;
    }


    /**
     * get 公网IP的状态，取值范围：online、offline。online表示公网IP处于在线状态，可正常转发NAT网关流量；offline表示公网IP处于下线状态，下线的公网IP不再接受新建连接，已有连接可正常转发流量。下线的公网IP仍绑定NAT网关，如需解绑，请操作解绑公网IP
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 公网IP的状态，取值范围：online、offline。online表示公网IP处于在线状态，可正常转发NAT网关流量；offline表示公网IP处于下线状态，下线的公网IP不再接受新建连接，已有连接可正常转发流量。下线的公网IP仍绑定NAT网关，如需解绑，请操作解绑公网IP
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }



    /**
     * set 公网IP ID
     *
     * @param elasticIpId
     */
    public NatGatewayElasticIp elasticIpId(String elasticIpId) {
        this.elasticIpId = elasticIpId;
        return this;
    }


    /**
     * set 公网IP地址
     *
     * @param elasticIpAddress
     */
    public NatGatewayElasticIp elasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
        return this;
    }


    /**
     * set 公网IP的限速（单位：Mbps）
     *
     * @param bandwidthMbps
     */
    public NatGatewayElasticIp bandwidthMbps(Integer bandwidthMbps) {
        this.bandwidthMbps = bandwidthMbps;
        return this;
    }


    /**
     * set 公网IP的状态，取值范围：online、offline。online表示公网IP处于在线状态，可正常转发NAT网关流量；offline表示公网IP处于下线状态，下线的公网IP不再接受新建连接，已有连接可正常转发流量。下线的公网IP仍绑定NAT网关，如需解绑，请操作解绑公网IP
     *
     * @param status
     */
    public NatGatewayElasticIp status(String status) {
        this.status = status;
        return this;
    }


}