/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vpc.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * trafficMirrorFilterSpec
 */
public class TrafficMirrorFilterSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     * Required:true
     */
    @Required
    private String mirrorFilterName;

    /**
     * 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     */
    private String description;

    /**
     * 在创建时可以带着Rules
     */
    
    private List<TrafficMirrorFilterRuleSpec> mirrorFilterRules;


    /**
     * get 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @return
     */
    public String getMirrorFilterName() {
        return mirrorFilterName;
    }

    /**
     * set 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param mirrorFilterName
     */
    public void setMirrorFilterName(String mirrorFilterName) {
        this.mirrorFilterName = mirrorFilterName;
    }


    /**
     * get 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
    * get 在创建时可以带着Rules
    *
    * @return
    */
    public List<TrafficMirrorFilterRuleSpec> getMirrorFilterRules() {
        return mirrorFilterRules;
    }

    /**
    * set 在创建时可以带着Rules
    *
    * @param mirrorFilterRules
    */
    public void setMirrorFilterRules(List<TrafficMirrorFilterRuleSpec> mirrorFilterRules) {
        this.mirrorFilterRules = mirrorFilterRules;
    }



    /**
     * set 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param mirrorFilterName
     */
    public TrafficMirrorFilterSpec mirrorFilterName(String mirrorFilterName) {
        this.mirrorFilterName = mirrorFilterName;
        return this;
    }


    /**
     * set 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public TrafficMirrorFilterSpec description(String description) {
        this.description = description;
        return this;
    }


    /**
    * set 在创建时可以带着Rules
    *
    * @param mirrorFilterRules
    */
    public TrafficMirrorFilterSpec mirrorFilterRules(List<TrafficMirrorFilterRuleSpec> mirrorFilterRules) {
        this.mirrorFilterRules = mirrorFilterRules;
        return this;
    }



    /**
     * add item to 在创建时可以带着Rules
     *
     * @param mirrorFilterRule
     */
    public void addMirrorFilterRule(TrafficMirrorFilterRuleSpec mirrorFilterRule) {
        if (this.mirrorFilterRules == null) {
            this.mirrorFilterRules = new ArrayList<>();
        }
        this.mirrorFilterRules.add(mirrorFilterRule);
    }
}