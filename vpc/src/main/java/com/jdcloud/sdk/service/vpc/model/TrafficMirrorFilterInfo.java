/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vpc.model;

import java.util.List;
import java.util.ArrayList;

/**
 * trafficMirrorFilterInfo
 */
public class TrafficMirrorFilterInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 镜像过滤器ID
     */
    private String mirrorFilterId;

    /**
     * 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     */
    private String mirrorFilterName;

    /**
     * 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     */
    private String description;

    /**
     * Filter创建时间
     */
    private String createdTime;

    /**
     * 出方向规则详情列表。
     */
    
    private List<TrafficMirrorFilterRule> egressRules;
    /**
     * 入方向规则详情列表。
     */
    
    private List<TrafficMirrorFilterRule> ingressRules;
    /**
     * 所关联的流量镜像会话
     */
    
    private List<TrafficMirrorSession> trafficMirrorSessions;


    /**
     * get 镜像过滤器ID
     *
     * @return
     */
    public String getMirrorFilterId() {
        return mirrorFilterId;
    }

    /**
     * set 镜像过滤器ID
     *
     * @param mirrorFilterId
     */
    public void setMirrorFilterId(String mirrorFilterId) {
        this.mirrorFilterId = mirrorFilterId;
    }


    /**
     * get 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @return
     */
    public String getMirrorFilterName() {
        return mirrorFilterName;
    }

    /**
     * set 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param mirrorFilterName
     */
    public void setMirrorFilterName(String mirrorFilterName) {
        this.mirrorFilterName = mirrorFilterName;
    }


    /**
     * get 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get Filter创建时间
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set Filter创建时间
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


    /**
    * get 出方向规则详情列表。
    *
    * @return
    */
    public List<TrafficMirrorFilterRule> getEgressRules() {
        return egressRules;
    }

    /**
    * set 出方向规则详情列表。
    *
    * @param egressRules
    */
    public void setEgressRules(List<TrafficMirrorFilterRule> egressRules) {
        this.egressRules = egressRules;
    }


    /**
    * get 入方向规则详情列表。
    *
    * @return
    */
    public List<TrafficMirrorFilterRule> getIngressRules() {
        return ingressRules;
    }

    /**
    * set 入方向规则详情列表。
    *
    * @param ingressRules
    */
    public void setIngressRules(List<TrafficMirrorFilterRule> ingressRules) {
        this.ingressRules = ingressRules;
    }


    /**
    * get 所关联的流量镜像会话
    *
    * @return
    */
    public List<TrafficMirrorSession> getTrafficMirrorSessions() {
        return trafficMirrorSessions;
    }

    /**
    * set 所关联的流量镜像会话
    *
    * @param trafficMirrorSessions
    */
    public void setTrafficMirrorSessions(List<TrafficMirrorSession> trafficMirrorSessions) {
        this.trafficMirrorSessions = trafficMirrorSessions;
    }



    /**
     * set 镜像过滤器ID
     *
     * @param mirrorFilterId
     */
    public TrafficMirrorFilterInfo mirrorFilterId(String mirrorFilterId) {
        this.mirrorFilterId = mirrorFilterId;
        return this;
    }


    /**
     * set 镜像过滤器名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param mirrorFilterName
     */
    public TrafficMirrorFilterInfo mirrorFilterName(String mirrorFilterName) {
        this.mirrorFilterName = mirrorFilterName;
        return this;
    }


    /**
     * set 描述,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public TrafficMirrorFilterInfo description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set Filter创建时间
     *
     * @param createdTime
     */
    public TrafficMirrorFilterInfo createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }


    /**
    * set 出方向规则详情列表。
    *
    * @param egressRules
    */
    public TrafficMirrorFilterInfo egressRules(List<TrafficMirrorFilterRule> egressRules) {
        this.egressRules = egressRules;
        return this;
    }


    /**
    * set 入方向规则详情列表。
    *
    * @param ingressRules
    */
    public TrafficMirrorFilterInfo ingressRules(List<TrafficMirrorFilterRule> ingressRules) {
        this.ingressRules = ingressRules;
        return this;
    }


    /**
    * set 所关联的流量镜像会话
    *
    * @param trafficMirrorSessions
    */
    public TrafficMirrorFilterInfo trafficMirrorSessions(List<TrafficMirrorSession> trafficMirrorSessions) {
        this.trafficMirrorSessions = trafficMirrorSessions;
        return this;
    }



    /**
     * add item to 出方向规则详情列表。
     *
     * @param egressRule
     */
    public void addEgressRule(TrafficMirrorFilterRule egressRule) {
        if (this.egressRules == null) {
            this.egressRules = new ArrayList<>();
        }
        this.egressRules.add(egressRule);
    }

    /**
     * add item to 入方向规则详情列表。
     *
     * @param ingressRule
     */
    public void addIngressRule(TrafficMirrorFilterRule ingressRule) {
        if (this.ingressRules == null) {
            this.ingressRules = new ArrayList<>();
        }
        this.ingressRules.add(ingressRule);
    }

    /**
     * add item to 所关联的流量镜像会话
     *
     * @param trafficMirrorSession
     */
    public void addTrafficMirrorSession(TrafficMirrorSession trafficMirrorSession) {
        if (this.trafficMirrorSessions == null) {
            this.trafficMirrorSessions = new ArrayList<>();
        }
        this.trafficMirrorSessions.add(trafficMirrorSession);
    }
}