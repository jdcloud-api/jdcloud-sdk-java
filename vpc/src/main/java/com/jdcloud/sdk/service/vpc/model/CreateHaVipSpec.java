/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vpc.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * createHaVipSpec
 */
public class CreateHaVipSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 高可用虚拟ip名称。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符中划线
     * Required:true
     */
    @Required
    private String haVipName;

    /**
     * 高可用虚拟ip所属子网 id
     * Required:true
     */
    @Required
    private String subnetId;

    /**
     * 该高可用虚拟ip描述
     */
    private String description;

    /**
     * 高可用虚拟ip,选取统一子网下的内网ip
     */
    private String ipAddress;

    /**
     * 预检标识，默认false，dryRun为true时只作检查，不做变更
     */
    private Boolean dryRun;



    /**
     * get 高可用虚拟ip名称。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符中划线
     *
     * @return
     */
    public String getHaVipName() {
        return haVipName;
    }

    /**
     * set 高可用虚拟ip名称。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符中划线
     *
     * @param haVipName
     */
    public void setHaVipName(String haVipName) {
        this.haVipName = haVipName;
    }


    /**
     * get 高可用虚拟ip所属子网 id
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 高可用虚拟ip所属子网 id
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get 该高可用虚拟ip描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 该高可用虚拟ip描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 高可用虚拟ip,选取统一子网下的内网ip
     *
     * @return
     */
    public String getIpAddress() {
        return ipAddress;
    }

    /**
     * set 高可用虚拟ip,选取统一子网下的内网ip
     *
     * @param ipAddress
     */
    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }


    /**
     * get 预检标识，默认false，dryRun为true时只作检查，不做变更
     *
     * @return
     */
    public Boolean getDryRun() {
        return dryRun;
    }

    /**
     * set 预检标识，默认false，dryRun为true时只作检查，不做变更
     *
     * @param dryRun
     */
    public void setDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
    }



    /**
     * set 高可用虚拟ip名称。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符中划线
     *
     * @param haVipName
     */
    public CreateHaVipSpec haVipName(String haVipName) {
        this.haVipName = haVipName;
        return this;
    }


    /**
     * set 高可用虚拟ip所属子网 id
     *
     * @param subnetId
     */
    public CreateHaVipSpec subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set 该高可用虚拟ip描述
     *
     * @param description
     */
    public CreateHaVipSpec description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 高可用虚拟ip,选取统一子网下的内网ip
     *
     * @param ipAddress
     */
    public CreateHaVipSpec ipAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }


    /**
     * set 预检标识，默认false，dryRun为true时只作检查，不做变更
     *
     * @param dryRun
     */
    public CreateHaVipSpec dryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }


}