/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iam.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * createSubUserInfoInner
 */
public class CreateSubUserInfoInner  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 子用户名，支持4~20位的字母，数字以及-和_，以字母开头
     * Required:true
     */
    @Required
    private String name;

    /**
     * 描述，0~256个字符
     */
    private String description;

    /**
     * 按照密码策略设置，默认8~20位，至少包含一个小写字母、大写字母和数字
     */
    private String password;

    /**
     * 手机号码，区号-手机号
     */
    private String phone;

    /**
     * 邮箱
     */
    private String email;

    /**
     * 姓名
     */
    private String nickName;

    /**
     * 是否创建accessKey，默认false
     */
    private Boolean createAk;

    /**
     * 子用户首次登录是否需要重置密码，默认false
     */
    private Boolean needResetPassword;

    /**
     * 子用户是否支持控制台登录，默认true
     */
    private Boolean consoleLogin;

    /**
     * 是否自动生成密码，默认false
     */
    private Boolean autoGeneratePassword;



    /**
     * get 子用户名，支持4~20位的字母，数字以及-和_，以字母开头
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 子用户名，支持4~20位的字母，数字以及-和_，以字母开头
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 描述，0~256个字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述，0~256个字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 按照密码策略设置，默认8~20位，至少包含一个小写字母、大写字母和数字
     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 按照密码策略设置，默认8~20位，至少包含一个小写字母、大写字母和数字
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }


    /**
     * get 手机号码，区号-手机号
     *
     * @return
     */
    public String getPhone() {
        return phone;
    }

    /**
     * set 手机号码，区号-手机号
     *
     * @param phone
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }


    /**
     * get 邮箱
     *
     * @return
     */
    public String getEmail() {
        return email;
    }

    /**
     * set 邮箱
     *
     * @param email
     */
    public void setEmail(String email) {
        this.email = email;
    }


    /**
     * get 姓名
     *
     * @return
     */
    public String getNickName() {
        return nickName;
    }

    /**
     * set 姓名
     *
     * @param nickName
     */
    public void setNickName(String nickName) {
        this.nickName = nickName;
    }


    /**
     * get 是否创建accessKey，默认false
     *
     * @return
     */
    public Boolean getCreateAk() {
        return createAk;
    }

    /**
     * set 是否创建accessKey，默认false
     *
     * @param createAk
     */
    public void setCreateAk(Boolean createAk) {
        this.createAk = createAk;
    }


    /**
     * get 子用户首次登录是否需要重置密码，默认false
     *
     * @return
     */
    public Boolean getNeedResetPassword() {
        return needResetPassword;
    }

    /**
     * set 子用户首次登录是否需要重置密码，默认false
     *
     * @param needResetPassword
     */
    public void setNeedResetPassword(Boolean needResetPassword) {
        this.needResetPassword = needResetPassword;
    }


    /**
     * get 子用户是否支持控制台登录，默认true
     *
     * @return
     */
    public Boolean getConsoleLogin() {
        return consoleLogin;
    }

    /**
     * set 子用户是否支持控制台登录，默认true
     *
     * @param consoleLogin
     */
    public void setConsoleLogin(Boolean consoleLogin) {
        this.consoleLogin = consoleLogin;
    }


    /**
     * get 是否自动生成密码，默认false
     *
     * @return
     */
    public Boolean getAutoGeneratePassword() {
        return autoGeneratePassword;
    }

    /**
     * set 是否自动生成密码，默认false
     *
     * @param autoGeneratePassword
     */
    public void setAutoGeneratePassword(Boolean autoGeneratePassword) {
        this.autoGeneratePassword = autoGeneratePassword;
    }



    /**
     * set 子用户名，支持4~20位的字母，数字以及-和_，以字母开头
     *
     * @param name
     */
    public CreateSubUserInfoInner name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 描述，0~256个字符
     *
     * @param description
     */
    public CreateSubUserInfoInner description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 按照密码策略设置，默认8~20位，至少包含一个小写字母、大写字母和数字
     *
     * @param password
     */
    public CreateSubUserInfoInner password(String password) {
        this.password = password;
        return this;
    }


    /**
     * set 手机号码，区号-手机号
     *
     * @param phone
     */
    public CreateSubUserInfoInner phone(String phone) {
        this.phone = phone;
        return this;
    }


    /**
     * set 邮箱
     *
     * @param email
     */
    public CreateSubUserInfoInner email(String email) {
        this.email = email;
        return this;
    }


    /**
     * set 姓名
     *
     * @param nickName
     */
    public CreateSubUserInfoInner nickName(String nickName) {
        this.nickName = nickName;
        return this;
    }


    /**
     * set 是否创建accessKey，默认false
     *
     * @param createAk
     */
    public CreateSubUserInfoInner createAk(Boolean createAk) {
        this.createAk = createAk;
        return this;
    }


    /**
     * set 子用户首次登录是否需要重置密码，默认false
     *
     * @param needResetPassword
     */
    public CreateSubUserInfoInner needResetPassword(Boolean needResetPassword) {
        this.needResetPassword = needResetPassword;
        return this;
    }


    /**
     * set 子用户是否支持控制台登录，默认true
     *
     * @param consoleLogin
     */
    public CreateSubUserInfoInner consoleLogin(Boolean consoleLogin) {
        this.consoleLogin = consoleLogin;
        return this;
    }


    /**
     * set 是否自动生成密码，默认false
     *
     * @param autoGeneratePassword
     */
    public CreateSubUserInfoInner autoGeneratePassword(Boolean autoGeneratePassword) {
        this.autoGeneratePassword = autoGeneratePassword;
        return this;
    }


}