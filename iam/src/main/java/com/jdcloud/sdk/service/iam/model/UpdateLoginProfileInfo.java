/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iam.model;


/**
 * updateLoginProfileInfo
 */
public class UpdateLoginProfileInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 子用户登录是否需要重置密码，默认false
     */
    private Boolean passwordResetRequired;

    /**
     * 指定密码，密码必须符合密码强度要求。关于密码强度设置接口，请参考describePasswordPolicy
     */
    private String password;

    /**
     * 是否自动生成密码，默认false
     */
    private Boolean autoGeneratePassword;

    /**
     * 指定子用户在下次登录时是否必须绑定多因素认证器
     */
    private Boolean mFABindRequired;



    /**
     * get 子用户登录是否需要重置密码，默认false
     *
     * @return
     */
    public Boolean getPasswordResetRequired() {
        return passwordResetRequired;
    }

    /**
     * set 子用户登录是否需要重置密码，默认false
     *
     * @param passwordResetRequired
     */
    public void setPasswordResetRequired(Boolean passwordResetRequired) {
        this.passwordResetRequired = passwordResetRequired;
    }


    /**
     * get 指定密码，密码必须符合密码强度要求。关于密码强度设置接口，请参考describePasswordPolicy
     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 指定密码，密码必须符合密码强度要求。关于密码强度设置接口，请参考describePasswordPolicy
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }


    /**
     * get 是否自动生成密码，默认false
     *
     * @return
     */
    public Boolean getAutoGeneratePassword() {
        return autoGeneratePassword;
    }

    /**
     * set 是否自动生成密码，默认false
     *
     * @param autoGeneratePassword
     */
    public void setAutoGeneratePassword(Boolean autoGeneratePassword) {
        this.autoGeneratePassword = autoGeneratePassword;
    }


    /**
     * get 指定子用户在下次登录时是否必须绑定多因素认证器
     *
     * @return
     */
    public Boolean getMFABindRequired() {
        return mFABindRequired;
    }

    /**
     * set 指定子用户在下次登录时是否必须绑定多因素认证器
     *
     * @param mFABindRequired
     */
    public void setMFABindRequired(Boolean mFABindRequired) {
        this.mFABindRequired = mFABindRequired;
    }



    /**
     * set 子用户登录是否需要重置密码，默认false
     *
     * @param passwordResetRequired
     */
    public UpdateLoginProfileInfo passwordResetRequired(Boolean passwordResetRequired) {
        this.passwordResetRequired = passwordResetRequired;
        return this;
    }


    /**
     * set 指定密码，密码必须符合密码强度要求。关于密码强度设置接口，请参考describePasswordPolicy
     *
     * @param password
     */
    public UpdateLoginProfileInfo password(String password) {
        this.password = password;
        return this;
    }


    /**
     * set 是否自动生成密码，默认false
     *
     * @param autoGeneratePassword
     */
    public UpdateLoginProfileInfo autoGeneratePassword(Boolean autoGeneratePassword) {
        this.autoGeneratePassword = autoGeneratePassword;
        return this;
    }


    /**
     * set 指定子用户在下次登录时是否必须绑定多因素认证器
     *
     * @param mFABindRequired
     */
    public UpdateLoginProfileInfo mFABindRequired(Boolean mFABindRequired) {
        this.mFABindRequired = mFABindRequired;
        return this;
    }


}