/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iam.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * createPolicyEditionInfo
 */
public class CreatePolicyEditionInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 权限策略文档，最多6144个字符
     * Required:true
     */
    @Required
    private String policyDocument;

    /**
     * 是否设置当前权限策略文档为默认权限策略，默认值为false
     */
    private Boolean setAsDefault;

    /**
     * 权限策略版本自动化轮转机制，可以删除历史权限策略版本。
  ·None：关闭轮转机制
  ·DeleteOldestNonDefaultVersionWhenLimitExceeded：当权限策略版本数量超限时，删除最早且非活跃的版本
默认值为None

     */
    private String rotateStrategy;



    /**
     * get 权限策略文档，最多6144个字符
     *
     * @return
     */
    public String getPolicyDocument() {
        return policyDocument;
    }

    /**
     * set 权限策略文档，最多6144个字符
     *
     * @param policyDocument
     */
    public void setPolicyDocument(String policyDocument) {
        this.policyDocument = policyDocument;
    }


    /**
     * get 是否设置当前权限策略文档为默认权限策略，默认值为false
     *
     * @return
     */
    public Boolean getSetAsDefault() {
        return setAsDefault;
    }

    /**
     * set 是否设置当前权限策略文档为默认权限策略，默认值为false
     *
     * @param setAsDefault
     */
    public void setSetAsDefault(Boolean setAsDefault) {
        this.setAsDefault = setAsDefault;
    }


    /**
     * get 权限策略版本自动化轮转机制，可以删除历史权限策略版本。
  ·None：关闭轮转机制
  ·DeleteOldestNonDefaultVersionWhenLimitExceeded：当权限策略版本数量超限时，删除最早且非活跃的版本
默认值为None

     *
     * @return
     */
    public String getRotateStrategy() {
        return rotateStrategy;
    }

    /**
     * set 权限策略版本自动化轮转机制，可以删除历史权限策略版本。
  ·None：关闭轮转机制
  ·DeleteOldestNonDefaultVersionWhenLimitExceeded：当权限策略版本数量超限时，删除最早且非活跃的版本
默认值为None

     *
     * @param rotateStrategy
     */
    public void setRotateStrategy(String rotateStrategy) {
        this.rotateStrategy = rotateStrategy;
    }



    /**
     * set 权限策略文档，最多6144个字符
     *
     * @param policyDocument
     */
    public CreatePolicyEditionInfo policyDocument(String policyDocument) {
        this.policyDocument = policyDocument;
        return this;
    }


    /**
     * set 是否设置当前权限策略文档为默认权限策略，默认值为false
     *
     * @param setAsDefault
     */
    public CreatePolicyEditionInfo setAsDefault(Boolean setAsDefault) {
        this.setAsDefault = setAsDefault;
        return this;
    }


    /**
     * set 权限策略版本自动化轮转机制，可以删除历史权限策略版本。
  ·None：关闭轮转机制
  ·DeleteOldestNonDefaultVersionWhenLimitExceeded：当权限策略版本数量超限时，删除最早且非活跃的版本
默认值为None

     *
     * @param rotateStrategy
     */
    public CreatePolicyEditionInfo rotateStrategy(String rotateStrategy) {
        this.rotateStrategy = rotateStrategy;
        return this;
    }


}