/*
 * Copyright 2018-2025 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.nc.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.charge.model.Charge;

/**
 * container
 */
public class Container  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 容器ID
     */
    private String containerId;

    /**
     * 容器状态
     */
    private String status;

    /**
     * 实例类型
     */
    private String instanceType;

    /**
     * 可用区
     */
    private String az;

    /**
     * 容器名称
     */
    private String name;

    /**
     * 域名和IP映射的信息
     */
    private List<HostAlias> hostAliases;

    /**
     * 主机名
     */
    private String hostname;

    /**
     * 容器执行命令
     */
    private List<String> command;

    /**
     * 容器执行命令的参数
     */
    private List<String> args;

    /**
     * 动态指定的容器执行的环境变量
     */
    private List<EnvVar> envs;

    /**
     * 镜像名称
     */
    private String image;

    /**
     * secret引用的名称
     */
    private String secret;

    /**
     * 容器是否分配tty
     */
    private Boolean tty;

    /**
     * 容器的工作目录
     */
    private String workingDir;

    /**
     * 根Volume信息
     */
    private VolumeMount rootVolume;

    /**
     * 挂载的数据Volume信息
     */
    private List<VolumeMount> dataVolumes;

    /**
     * 主网卡所属VPC的ID
     */
    private String vpcId;

    /**
     * 主网卡所属子网的ID
     */
    private String subnetId;

    /**
     * 主网卡主IP地址
     */
    private String privateIpAddress;

    /**
     * 主网卡主IP绑定弹性IP的ID
     */
    private String elasticIpId;

    /**
     * 主网卡主IP绑定弹性IP的地址
     */
    private String elasticIpAddress;

    /**
     * 主网卡信息
     */
    private InstanceNetworkInterfaceAttachment primaryNetworkInterface;

    /**
     * 弹性网卡信息
     */
    private List<InstanceNetworkInterfaceAttachment> secondaryNetworkInterfaces;

    /**
     * 容器日志配置信息
     */
    private LogConfiguration logConfiguration;

    /**
     * 计费配置信息
     */
    private Charge charge;

    /**
     * 创建时间
     */
    private String launchTime;

    /**
     * 容器终止原因
     */
    private String reason;

    /**
     * 容器描述
     */
    private String description;


    /**
     * get 容器ID
     *
     * @return
     */
    public String getContainerId() {
        return containerId;
    }

    /**
     * set 容器ID
     *
     * @param containerId
     */
    public void setContainerId(String containerId) {
        this.containerId = containerId;
    }

    /**
     * get 容器状态
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 容器状态
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * get 实例类型
     *
     * @return
     */
    public String getInstanceType() {
        return instanceType;
    }

    /**
     * set 实例类型
     *
     * @param instanceType
     */
    public void setInstanceType(String instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * get 可用区
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 可用区
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }

    /**
     * get 容器名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 容器名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 域名和IP映射的信息
     *
     * @return
     */
    public List<HostAlias> getHostAliases() {
        return hostAliases;
    }

    /**
     * set 域名和IP映射的信息
     *
     * @param hostAliases
     */
    public void setHostAliases(List<HostAlias> hostAliases) {
        this.hostAliases = hostAliases;
    }

    /**
     * get 主机名
     *
     * @return
     */
    public String getHostname() {
        return hostname;
    }

    /**
     * set 主机名
     *
     * @param hostname
     */
    public void setHostname(String hostname) {
        this.hostname = hostname;
    }

    /**
     * get 容器执行命令
     *
     * @return
     */
    public List<String> getCommand() {
        return command;
    }

    /**
     * set 容器执行命令
     *
     * @param command
     */
    public void setCommand(List<String> command) {
        this.command = command;
    }

    /**
     * get 容器执行命令的参数
     *
     * @return
     */
    public List<String> getArgs() {
        return args;
    }

    /**
     * set 容器执行命令的参数
     *
     * @param args
     */
    public void setArgs(List<String> args) {
        this.args = args;
    }

    /**
     * get 动态指定的容器执行的环境变量
     *
     * @return
     */
    public List<EnvVar> getEnvs() {
        return envs;
    }

    /**
     * set 动态指定的容器执行的环境变量
     *
     * @param envs
     */
    public void setEnvs(List<EnvVar> envs) {
        this.envs = envs;
    }

    /**
     * get 镜像名称
     *
     * @return
     */
    public String getImage() {
        return image;
    }

    /**
     * set 镜像名称
     *
     * @param image
     */
    public void setImage(String image) {
        this.image = image;
    }

    /**
     * get secret引用的名称
     *
     * @return
     */
    public String getSecret() {
        return secret;
    }

    /**
     * set secret引用的名称
     *
     * @param secret
     */
    public void setSecret(String secret) {
        this.secret = secret;
    }

    /**
     * get 容器是否分配tty
     *
     * @return
     */
    public Boolean getTty() {
        return tty;
    }

    /**
     * set 容器是否分配tty
     *
     * @param tty
     */
    public void setTty(Boolean tty) {
        this.tty = tty;
    }

    /**
     * get 容器的工作目录
     *
     * @return
     */
    public String getWorkingDir() {
        return workingDir;
    }

    /**
     * set 容器的工作目录
     *
     * @param workingDir
     */
    public void setWorkingDir(String workingDir) {
        this.workingDir = workingDir;
    }

    /**
     * get 根Volume信息
     *
     * @return
     */
    public VolumeMount getRootVolume() {
        return rootVolume;
    }

    /**
     * set 根Volume信息
     *
     * @param rootVolume
     */
    public void setRootVolume(VolumeMount rootVolume) {
        this.rootVolume = rootVolume;
    }

    /**
     * get 挂载的数据Volume信息
     *
     * @return
     */
    public List<VolumeMount> getDataVolumes() {
        return dataVolumes;
    }

    /**
     * set 挂载的数据Volume信息
     *
     * @param dataVolumes
     */
    public void setDataVolumes(List<VolumeMount> dataVolumes) {
        this.dataVolumes = dataVolumes;
    }

    /**
     * get 主网卡所属VPC的ID
     *
     * @return
     */
    public String getVpcId() {
        return vpcId;
    }

    /**
     * set 主网卡所属VPC的ID
     *
     * @param vpcId
     */
    public void setVpcId(String vpcId) {
        this.vpcId = vpcId;
    }

    /**
     * get 主网卡所属子网的ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 主网卡所属子网的ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }

    /**
     * get 主网卡主IP地址
     *
     * @return
     */
    public String getPrivateIpAddress() {
        return privateIpAddress;
    }

    /**
     * set 主网卡主IP地址
     *
     * @param privateIpAddress
     */
    public void setPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
    }

    /**
     * get 主网卡主IP绑定弹性IP的ID
     *
     * @return
     */
    public String getElasticIpId() {
        return elasticIpId;
    }

    /**
     * set 主网卡主IP绑定弹性IP的ID
     *
     * @param elasticIpId
     */
    public void setElasticIpId(String elasticIpId) {
        this.elasticIpId = elasticIpId;
    }

    /**
     * get 主网卡主IP绑定弹性IP的地址
     *
     * @return
     */
    public String getElasticIpAddress() {
        return elasticIpAddress;
    }

    /**
     * set 主网卡主IP绑定弹性IP的地址
     *
     * @param elasticIpAddress
     */
    public void setElasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
    }

    /**
     * get 主网卡信息
     *
     * @return
     */
    public InstanceNetworkInterfaceAttachment getPrimaryNetworkInterface() {
        return primaryNetworkInterface;
    }

    /**
     * set 主网卡信息
     *
     * @param primaryNetworkInterface
     */
    public void setPrimaryNetworkInterface(InstanceNetworkInterfaceAttachment primaryNetworkInterface) {
        this.primaryNetworkInterface = primaryNetworkInterface;
    }

    /**
     * get 弹性网卡信息
     *
     * @return
     */
    public List<InstanceNetworkInterfaceAttachment> getSecondaryNetworkInterfaces() {
        return secondaryNetworkInterfaces;
    }

    /**
     * set 弹性网卡信息
     *
     * @param secondaryNetworkInterfaces
     */
    public void setSecondaryNetworkInterfaces(List<InstanceNetworkInterfaceAttachment> secondaryNetworkInterfaces) {
        this.secondaryNetworkInterfaces = secondaryNetworkInterfaces;
    }

    /**
     * get 容器日志配置信息
     *
     * @return
     */
    public LogConfiguration getLogConfiguration() {
        return logConfiguration;
    }

    /**
     * set 容器日志配置信息
     *
     * @param logConfiguration
     */
    public void setLogConfiguration(LogConfiguration logConfiguration) {
        this.logConfiguration = logConfiguration;
    }

    /**
     * get 计费配置信息
     *
     * @return
     */
    public Charge getCharge() {
        return charge;
    }

    /**
     * set 计费配置信息
     *
     * @param charge
     */
    public void setCharge(Charge charge) {
        this.charge = charge;
    }

    /**
     * get 创建时间
     *
     * @return
     */
    public String getLaunchTime() {
        return launchTime;
    }

    /**
     * set 创建时间
     *
     * @param launchTime
     */
    public void setLaunchTime(String launchTime) {
        this.launchTime = launchTime;
    }

    /**
     * get 容器终止原因
     *
     * @return
     */
    public String getReason() {
        return reason;
    }

    /**
     * set 容器终止原因
     *
     * @param reason
     */
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * get 容器描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 容器描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * set 容器ID
     *
     * @param containerId
     */
    public Container containerId(String containerId) {
        this.containerId = containerId;
        return this;
    }

    /**
     * set 容器状态
     *
     * @param status
     */
    public Container status(String status) {
        this.status = status;
        return this;
    }

    /**
     * set 实例类型
     *
     * @param instanceType
     */
    public Container instanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * set 可用区
     *
     * @param az
     */
    public Container az(String az) {
        this.az = az;
        return this;
    }

    /**
     * set 容器名称
     *
     * @param name
     */
    public Container name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 域名和IP映射的信息
     *
     * @param hostAliases
     */
    public Container hostAliases(List<HostAlias> hostAliases) {
        this.hostAliases = hostAliases;
        return this;
    }

    /**
     * set 主机名
     *
     * @param hostname
     */
    public Container hostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * set 容器执行命令
     *
     * @param command
     */
    public Container command(List<String> command) {
        this.command = command;
        return this;
    }

    /**
     * set 容器执行命令的参数
     *
     * @param args
     */
    public Container args(List<String> args) {
        this.args = args;
        return this;
    }

    /**
     * set 动态指定的容器执行的环境变量
     *
     * @param envs
     */
    public Container envs(List<EnvVar> envs) {
        this.envs = envs;
        return this;
    }

    /**
     * set 镜像名称
     *
     * @param image
     */
    public Container image(String image) {
        this.image = image;
        return this;
    }

    /**
     * set secret引用的名称
     *
     * @param secret
     */
    public Container secret(String secret) {
        this.secret = secret;
        return this;
    }

    /**
     * set 容器是否分配tty
     *
     * @param tty
     */
    public Container tty(Boolean tty) {
        this.tty = tty;
        return this;
    }

    /**
     * set 容器的工作目录
     *
     * @param workingDir
     */
    public Container workingDir(String workingDir) {
        this.workingDir = workingDir;
        return this;
    }

    /**
     * set 根Volume信息
     *
     * @param rootVolume
     */
    public Container rootVolume(VolumeMount rootVolume) {
        this.rootVolume = rootVolume;
        return this;
    }

    /**
     * set 挂载的数据Volume信息
     *
     * @param dataVolumes
     */
    public Container dataVolumes(List<VolumeMount> dataVolumes) {
        this.dataVolumes = dataVolumes;
        return this;
    }

    /**
     * set 主网卡所属VPC的ID
     *
     * @param vpcId
     */
    public Container vpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }

    /**
     * set 主网卡所属子网的ID
     *
     * @param subnetId
     */
    public Container subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * set 主网卡主IP地址
     *
     * @param privateIpAddress
     */
    public Container privateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }

    /**
     * set 主网卡主IP绑定弹性IP的ID
     *
     * @param elasticIpId
     */
    public Container elasticIpId(String elasticIpId) {
        this.elasticIpId = elasticIpId;
        return this;
    }

    /**
     * set 主网卡主IP绑定弹性IP的地址
     *
     * @param elasticIpAddress
     */
    public Container elasticIpAddress(String elasticIpAddress) {
        this.elasticIpAddress = elasticIpAddress;
        return this;
    }

    /**
     * set 主网卡信息
     *
     * @param primaryNetworkInterface
     */
    public Container primaryNetworkInterface(InstanceNetworkInterfaceAttachment primaryNetworkInterface) {
        this.primaryNetworkInterface = primaryNetworkInterface;
        return this;
    }

    /**
     * set 弹性网卡信息
     *
     * @param secondaryNetworkInterfaces
     */
    public Container secondaryNetworkInterfaces(List<InstanceNetworkInterfaceAttachment> secondaryNetworkInterfaces) {
        this.secondaryNetworkInterfaces = secondaryNetworkInterfaces;
        return this;
    }

    /**
     * set 容器日志配置信息
     *
     * @param logConfiguration
     */
    public Container logConfiguration(LogConfiguration logConfiguration) {
        this.logConfiguration = logConfiguration;
        return this;
    }

    /**
     * set 计费配置信息
     *
     * @param charge
     */
    public Container charge(Charge charge) {
        this.charge = charge;
        return this;
    }

    /**
     * set 创建时间
     *
     * @param launchTime
     */
    public Container launchTime(String launchTime) {
        this.launchTime = launchTime;
        return this;
    }

    /**
     * set 容器终止原因
     *
     * @param reason
     */
    public Container reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * set 容器描述
     *
     * @param description
     */
    public Container description(String description) {
        this.description = description;
        return this;
    }


    /**
     * add item to 域名和IP映射的信息
     *
     * @param hostAliase
     */
    public void addHostAliase(HostAlias hostAliase) {
        if (this.hostAliases == null) {
            this.hostAliases = new ArrayList<>();
        }
        this.hostAliases.add(hostAliase);
    }

    /**
     * add item to 容器执行命令
     *
     * @param command
     */
    public void addCommand(String command) {
        if (this.command == null) {
            this.command = new ArrayList<>();
        }
        this.command.add(command);
    }

    /**
     * add item to 容器执行命令的参数
     *
     * @param arg
     */
    public void addArg(String arg) {
        if (this.args == null) {
            this.args = new ArrayList<>();
        }
        this.args.add(arg);
    }

    /**
     * add item to 动态指定的容器执行的环境变量
     *
     * @param env
     */
    public void addEnv(EnvVar env) {
        if (this.envs == null) {
            this.envs = new ArrayList<>();
        }
        this.envs.add(env);
    }

    /**
     * add item to 挂载的数据Volume信息
     *
     * @param dataVolume
     */
    public void addDataVolume(VolumeMount dataVolume) {
        if (this.dataVolumes == null) {
            this.dataVolumes = new ArrayList<>();
        }
        this.dataVolumes.add(dataVolume);
    }

    /**
     * add item to 弹性网卡信息
     *
     * @param secondaryNetworkInterface
     */
    public void addSecondaryNetworkInterface(InstanceNetworkInterfaceAttachment secondaryNetworkInterface) {
        if (this.secondaryNetworkInterfaces == null) {
            this.secondaryNetworkInterfaces = new ArrayList<>();
        }
        this.secondaryNetworkInterfaces.add(secondaryNetworkInterface);
    }

}