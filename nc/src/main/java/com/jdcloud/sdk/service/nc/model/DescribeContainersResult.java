/*
 * Copyright 2018-2025 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 容器服务
 * 关于容器服务相前接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.nc.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.nc.model.Container;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询容器列表
 */
public class DescribeContainersResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * containers
     */
    private List<Container> containers;

    /**
     * totalCount
     */
    private Number totalCount;


    /**
     * get containers
     *
     * @return
     */
    public List<Container> getContainers() {
        return containers;
    }

    /**
     * set containers
     *
     * @param containers
     */
    public void setContainers(List<Container> containers) {
        this.containers = containers;
    }

    /**
     * get totalCount
     *
     * @return
     */
    public Number getTotalCount() {
        return totalCount;
    }

    /**
     * set totalCount
     *
     * @param totalCount
     */
    public void setTotalCount(Number totalCount) {
        this.totalCount = totalCount;
    }


    /**
     * set containers
     *
     * @param containers
     */
    public DescribeContainersResult containers(List<Container> containers) {
        this.containers = containers;
        return this;
    }

    /**
     * set totalCount
     *
     * @param totalCount
     */
    public DescribeContainersResult totalCount(Number totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
     * add item to containers
     *
     * @param container
     */
    public void addContainer(Container container) {
        if (this.containers == null) {
            this.containers = new ArrayList<>();
        }
        this.containers.add(container);
    }

}