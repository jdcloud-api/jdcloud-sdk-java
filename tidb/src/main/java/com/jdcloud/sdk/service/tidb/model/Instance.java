/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.tidb.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.charge.model.Charge;

/**
 * instance
 */
public class Instance  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例ID
     */
    private String instanceId;

    /**
     * 实例名称
     */
    private String instanceName;

    /**
     * 实例引擎版本
     */
    private String engineVersion;

    /**
     * 实例引擎版本的详细版本号
     */
    private String minorVersion;

    /**
     * 集群中节点的总数
     */
    private Integer totalNodeNum;

    /**
     * 整个集群总的CPU核数
     */
    private Integer totalCPU;

    /**
     * 整个集群总的内存大小，单位GB
     */
    private Integer totalMemoryGB;

    /**
     * 整个集群总的存储空间大小，单位GB
     */
    private Integer totalStorageGB;

    /**
     * 地域ID
     */
    private String regionId;

    /**
     * 可用区ID，目前仅支持单可用区
     */
    
    private List<String> azId;
    /**
     * VPC的ID
     */
    private String vpcId;

    /**
     * 子网的ID
     */
    private String subnetId;

    /**
     * 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    private String instanceStatus;

    /**
     * 实例创建时间, UTC 时间格式
     */
    private String createTime;

    /**
     * 计费配置
     */
    private Charge charge;

    /**
     * 标签信息
     */
    
    private List<Tag> tags;


    /**
     * get 实例ID
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 实例名称
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 实例名称
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 实例引擎版本
     *
     * @return
     */
    public String getEngineVersion() {
        return engineVersion;
    }

    /**
     * set 实例引擎版本
     *
     * @param engineVersion
     */
    public void setEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
    }


    /**
     * get 实例引擎版本的详细版本号
     *
     * @return
     */
    public String getMinorVersion() {
        return minorVersion;
    }

    /**
     * set 实例引擎版本的详细版本号
     *
     * @param minorVersion
     */
    public void setMinorVersion(String minorVersion) {
        this.minorVersion = minorVersion;
    }


    /**
     * get 集群中节点的总数
     *
     * @return
     */
    public Integer getTotalNodeNum() {
        return totalNodeNum;
    }

    /**
     * set 集群中节点的总数
     *
     * @param totalNodeNum
     */
    public void setTotalNodeNum(Integer totalNodeNum) {
        this.totalNodeNum = totalNodeNum;
    }


    /**
     * get 整个集群总的CPU核数
     *
     * @return
     */
    public Integer getTotalCPU() {
        return totalCPU;
    }

    /**
     * set 整个集群总的CPU核数
     *
     * @param totalCPU
     */
    public void setTotalCPU(Integer totalCPU) {
        this.totalCPU = totalCPU;
    }


    /**
     * get 整个集群总的内存大小，单位GB
     *
     * @return
     */
    public Integer getTotalMemoryGB() {
        return totalMemoryGB;
    }

    /**
     * set 整个集群总的内存大小，单位GB
     *
     * @param totalMemoryGB
     */
    public void setTotalMemoryGB(Integer totalMemoryGB) {
        this.totalMemoryGB = totalMemoryGB;
    }


    /**
     * get 整个集群总的存储空间大小，单位GB
     *
     * @return
     */
    public Integer getTotalStorageGB() {
        return totalStorageGB;
    }

    /**
     * set 整个集群总的存储空间大小，单位GB
     *
     * @param totalStorageGB
     */
    public void setTotalStorageGB(Integer totalStorageGB) {
        this.totalStorageGB = totalStorageGB;
    }


    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
    * get 可用区ID，目前仅支持单可用区
    *
    * @return
    */
    public List<String> getAzId() {
        return azId;
    }

    /**
    * set 可用区ID，目前仅支持单可用区
    *
    * @param azId
    */
    public void setAzId(List<String> azId) {
        this.azId = azId;
    }


    /**
     * get VPC的ID
     *
     * @return
     */
    public String getVpcId() {
        return vpcId;
    }

    /**
     * set VPC的ID
     *
     * @param vpcId
     */
    public void setVpcId(String vpcId) {
        this.vpcId = vpcId;
    }


    /**
     * get 子网的ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网的ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @return
     */
    public String getInstanceStatus() {
        return instanceStatus;
    }

    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public void setInstanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
    }


    /**
     * get 实例创建时间, UTC 时间格式
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 实例创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 计费配置
     *
     * @return
     */
    public Charge getCharge() {
        return charge;
    }

    /**
     * set 计费配置
     *
     * @param charge
     */
    public void setCharge(Charge charge) {
        this.charge = charge;
    }


    /**
    * get 标签信息
    *
    * @return
    */
    public List<Tag> getTags() {
        return tags;
    }

    /**
    * set 标签信息
    *
    * @param tags
    */
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }



    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public Instance instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 实例名称
     *
     * @param instanceName
     */
    public Instance instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 实例引擎版本
     *
     * @param engineVersion
     */
    public Instance engineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }


    /**
     * set 实例引擎版本的详细版本号
     *
     * @param minorVersion
     */
    public Instance minorVersion(String minorVersion) {
        this.minorVersion = minorVersion;
        return this;
    }


    /**
     * set 集群中节点的总数
     *
     * @param totalNodeNum
     */
    public Instance totalNodeNum(Integer totalNodeNum) {
        this.totalNodeNum = totalNodeNum;
        return this;
    }


    /**
     * set 整个集群总的CPU核数
     *
     * @param totalCPU
     */
    public Instance totalCPU(Integer totalCPU) {
        this.totalCPU = totalCPU;
        return this;
    }


    /**
     * set 整个集群总的内存大小，单位GB
     *
     * @param totalMemoryGB
     */
    public Instance totalMemoryGB(Integer totalMemoryGB) {
        this.totalMemoryGB = totalMemoryGB;
        return this;
    }


    /**
     * set 整个集群总的存储空间大小，单位GB
     *
     * @param totalStorageGB
     */
    public Instance totalStorageGB(Integer totalStorageGB) {
        this.totalStorageGB = totalStorageGB;
        return this;
    }


    /**
     * set 地域ID
     *
     * @param regionId
     */
    public Instance regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
    * set 可用区ID，目前仅支持单可用区
    *
    * @param azId
    */
    public Instance azId(List<String> azId) {
        this.azId = azId;
        return this;
    }


    /**
     * set VPC的ID
     *
     * @param vpcId
     */
    public Instance vpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }


    /**
     * set 子网的ID
     *
     * @param subnetId
     */
    public Instance subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public Instance instanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
        return this;
    }


    /**
     * set 实例创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public Instance createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 计费配置
     *
     * @param charge
     */
    public Instance charge(Charge charge) {
        this.charge = charge;
        return this;
    }


    /**
    * set 标签信息
    *
    * @param tags
    */
    public Instance tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }



    /**
     * add item to 可用区ID，目前仅支持单可用区
     *
     * @param azId
     */
    public void addAzId(String azId) {
        if (this.azId == null) {
            this.azId = new ArrayList<>();
        }
        this.azId.add(azId);
    }

    /**
     * add item to 标签信息
     *
     * @param tag
     */
    public void addTag(Tag tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }
}