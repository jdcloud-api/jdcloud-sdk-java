/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.tidb.model;

import java.util.List;
import java.util.ArrayList;

/**
 * replicationSpec
 */
public class ReplicationSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 复制的起始时间戳
     */
    private String startTS;

    /**
     * 要复制的对象列表
     */
    
    private List<String> replicationObjects;
    /**
     * 目标实例类型
     */
    private String targetType;

    /**
     * 目标实例IP
     */
    private String targetIP;

    /**
     * 目标实例端口
     */
    private String targetPort;

    /**
     * 目标实例备注说明
     */
    private String targetComment;

    /**
     * 目标类型为TiDB或MySQL时，连接目标实例的用户名
     */
    private String targetUser;

    /**
     * 目标类型为TiDB或MySQL时，连接目标实例的密码
     */
    private String targetPassword;

    /**
     * Kafka的Topic
     */
    private String kafkaTopic;

    /**
     * Kafka的版本
     */
    private String kafkaVersion;

    /**
     * 消息的格式
     */
    private String kafkaProtocol;



    /**
     * get 复制的起始时间戳
     *
     * @return
     */
    public String getStartTS() {
        return startTS;
    }

    /**
     * set 复制的起始时间戳
     *
     * @param startTS
     */
    public void setStartTS(String startTS) {
        this.startTS = startTS;
    }


    /**
    * get 要复制的对象列表
    *
    * @return
    */
    public List<String> getReplicationObjects() {
        return replicationObjects;
    }

    /**
    * set 要复制的对象列表
    *
    * @param replicationObjects
    */
    public void setReplicationObjects(List<String> replicationObjects) {
        this.replicationObjects = replicationObjects;
    }


    /**
     * get 目标实例类型
     *
     * @return
     */
    public String getTargetType() {
        return targetType;
    }

    /**
     * set 目标实例类型
     *
     * @param targetType
     */
    public void setTargetType(String targetType) {
        this.targetType = targetType;
    }


    /**
     * get 目标实例IP
     *
     * @return
     */
    public String getTargetIP() {
        return targetIP;
    }

    /**
     * set 目标实例IP
     *
     * @param targetIP
     */
    public void setTargetIP(String targetIP) {
        this.targetIP = targetIP;
    }


    /**
     * get 目标实例端口
     *
     * @return
     */
    public String getTargetPort() {
        return targetPort;
    }

    /**
     * set 目标实例端口
     *
     * @param targetPort
     */
    public void setTargetPort(String targetPort) {
        this.targetPort = targetPort;
    }


    /**
     * get 目标实例备注说明
     *
     * @return
     */
    public String getTargetComment() {
        return targetComment;
    }

    /**
     * set 目标实例备注说明
     *
     * @param targetComment
     */
    public void setTargetComment(String targetComment) {
        this.targetComment = targetComment;
    }


    /**
     * get 目标类型为TiDB或MySQL时，连接目标实例的用户名
     *
     * @return
     */
    public String getTargetUser() {
        return targetUser;
    }

    /**
     * set 目标类型为TiDB或MySQL时，连接目标实例的用户名
     *
     * @param targetUser
     */
    public void setTargetUser(String targetUser) {
        this.targetUser = targetUser;
    }


    /**
     * get 目标类型为TiDB或MySQL时，连接目标实例的密码
     *
     * @return
     */
    public String getTargetPassword() {
        return targetPassword;
    }

    /**
     * set 目标类型为TiDB或MySQL时，连接目标实例的密码
     *
     * @param targetPassword
     */
    public void setTargetPassword(String targetPassword) {
        this.targetPassword = targetPassword;
    }


    /**
     * get Kafka的Topic
     *
     * @return
     */
    public String getKafkaTopic() {
        return kafkaTopic;
    }

    /**
     * set Kafka的Topic
     *
     * @param kafkaTopic
     */
    public void setKafkaTopic(String kafkaTopic) {
        this.kafkaTopic = kafkaTopic;
    }


    /**
     * get Kafka的版本
     *
     * @return
     */
    public String getKafkaVersion() {
        return kafkaVersion;
    }

    /**
     * set Kafka的版本
     *
     * @param kafkaVersion
     */
    public void setKafkaVersion(String kafkaVersion) {
        this.kafkaVersion = kafkaVersion;
    }


    /**
     * get 消息的格式
     *
     * @return
     */
    public String getKafkaProtocol() {
        return kafkaProtocol;
    }

    /**
     * set 消息的格式
     *
     * @param kafkaProtocol
     */
    public void setKafkaProtocol(String kafkaProtocol) {
        this.kafkaProtocol = kafkaProtocol;
    }



    /**
     * set 复制的起始时间戳
     *
     * @param startTS
     */
    public ReplicationSpec startTS(String startTS) {
        this.startTS = startTS;
        return this;
    }


    /**
    * set 要复制的对象列表
    *
    * @param replicationObjects
    */
    public ReplicationSpec replicationObjects(List<String> replicationObjects) {
        this.replicationObjects = replicationObjects;
        return this;
    }


    /**
     * set 目标实例类型
     *
     * @param targetType
     */
    public ReplicationSpec targetType(String targetType) {
        this.targetType = targetType;
        return this;
    }


    /**
     * set 目标实例IP
     *
     * @param targetIP
     */
    public ReplicationSpec targetIP(String targetIP) {
        this.targetIP = targetIP;
        return this;
    }


    /**
     * set 目标实例端口
     *
     * @param targetPort
     */
    public ReplicationSpec targetPort(String targetPort) {
        this.targetPort = targetPort;
        return this;
    }


    /**
     * set 目标实例备注说明
     *
     * @param targetComment
     */
    public ReplicationSpec targetComment(String targetComment) {
        this.targetComment = targetComment;
        return this;
    }


    /**
     * set 目标类型为TiDB或MySQL时，连接目标实例的用户名
     *
     * @param targetUser
     */
    public ReplicationSpec targetUser(String targetUser) {
        this.targetUser = targetUser;
        return this;
    }


    /**
     * set 目标类型为TiDB或MySQL时，连接目标实例的密码
     *
     * @param targetPassword
     */
    public ReplicationSpec targetPassword(String targetPassword) {
        this.targetPassword = targetPassword;
        return this;
    }


    /**
     * set Kafka的Topic
     *
     * @param kafkaTopic
     */
    public ReplicationSpec kafkaTopic(String kafkaTopic) {
        this.kafkaTopic = kafkaTopic;
        return this;
    }


    /**
     * set Kafka的版本
     *
     * @param kafkaVersion
     */
    public ReplicationSpec kafkaVersion(String kafkaVersion) {
        this.kafkaVersion = kafkaVersion;
        return this;
    }


    /**
     * set 消息的格式
     *
     * @param kafkaProtocol
     */
    public ReplicationSpec kafkaProtocol(String kafkaProtocol) {
        this.kafkaProtocol = kafkaProtocol;
        return this;
    }



    /**
     * add item to 要复制的对象列表
     *
     * @param replicationObject
     */
    public void addReplicationObject(String replicationObject) {
        if (this.replicationObjects == null) {
            this.replicationObjects = new ArrayList<>();
        }
        this.replicationObjects.add(replicationObject);
    }
}