/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 分布式数据库TiDB
 * 分布式数据库TiDB
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.tidb.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.tidb.model.DisableInternetAccessRequest;
import com.jdcloud.sdk.service.tidb.model.DisableInternetAccessResponse;
import com.jdcloud.sdk.service.tidb.client.DisableInternetAccessExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateAccountRequest;
import com.jdcloud.sdk.service.tidb.model.CreateAccountResponse;
import com.jdcloud.sdk.service.tidb.client.CreateAccountExecutor;
import com.jdcloud.sdk.service.tidb.model.DeleteWhiteListGroupRequest;
import com.jdcloud.sdk.service.tidb.model.DeleteWhiteListGroupResponse;
import com.jdcloud.sdk.service.tidb.client.DeleteWhiteListGroupExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeReplicationsRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeReplicationsResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeReplicationsExecutor;
import com.jdcloud.sdk.service.tidb.model.UpgradeEngineVersionRequest;
import com.jdcloud.sdk.service.tidb.model.UpgradeEngineVersionResponse;
import com.jdcloud.sdk.service.tidb.client.UpgradeEngineVersionExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyReplicationRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyReplicationResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyReplicationExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyInstanceNameRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyInstanceNameResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyInstanceNameExecutor;
import com.jdcloud.sdk.service.tidb.model.VerifyFilefromOSSRequest;
import com.jdcloud.sdk.service.tidb.model.VerifyFilefromOSSResponse;
import com.jdcloud.sdk.service.tidb.client.VerifyFilefromOSSExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateBackupRequest;
import com.jdcloud.sdk.service.tidb.model.CreateBackupResponse;
import com.jdcloud.sdk.service.tidb.client.CreateBackupExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyBackupPolicyRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyBackupPolicyResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyBackupPolicyExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeBackupsRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeBackupsResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeBackupsExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeDataMigrationRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeDataMigrationResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeDataMigrationExecutor;
import com.jdcloud.sdk.service.tidb.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.tidb.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.tidb.client.DeleteInstanceExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyParametersRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyParametersResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyParametersExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateDataMigrationRequest;
import com.jdcloud.sdk.service.tidb.model.CreateDataMigrationResponse;
import com.jdcloud.sdk.service.tidb.client.CreateDataMigrationExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeInstancesRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeInstancesResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeInstancesExecutor;
import com.jdcloud.sdk.service.tidb.model.AddWhiteListGroupRequest;
import com.jdcloud.sdk.service.tidb.model.AddWhiteListGroupResponse;
import com.jdcloud.sdk.service.tidb.client.AddWhiteListGroupExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyNodeNumRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyNodeNumResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyNodeNumExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeParametersRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeParametersResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeParametersExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeAccountsRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeAccountsResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeAccountsExecutor;
import com.jdcloud.sdk.service.tidb.model.EnableInternetAccessRequest;
import com.jdcloud.sdk.service.tidb.model.EnableInternetAccessResponse;
import com.jdcloud.sdk.service.tidb.client.EnableInternetAccessExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateInstanceFromBackupRequest;
import com.jdcloud.sdk.service.tidb.model.CreateInstanceFromBackupResponse;
import com.jdcloud.sdk.service.tidb.client.CreateInstanceFromBackupExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyInstanceSpecRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyInstanceSpecResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyInstanceSpecExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeWhiteListRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeWhiteListResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeWhiteListExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeVersionsRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeVersionsResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeVersionsExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeInstanceClassesRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeInstanceClassesResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeInstanceClassesExecutor;
import com.jdcloud.sdk.service.tidb.model.ModifyWhiteListRequest;
import com.jdcloud.sdk.service.tidb.model.ModifyWhiteListResponse;
import com.jdcloud.sdk.service.tidb.client.ModifyWhiteListExecutor;
import com.jdcloud.sdk.service.tidb.model.DeleteReplicationRequest;
import com.jdcloud.sdk.service.tidb.model.DeleteReplicationResponse;
import com.jdcloud.sdk.service.tidb.client.DeleteReplicationExecutor;
import com.jdcloud.sdk.service.tidb.model.ResetPasswordRequest;
import com.jdcloud.sdk.service.tidb.model.ResetPasswordResponse;
import com.jdcloud.sdk.service.tidb.client.ResetPasswordExecutor;
import com.jdcloud.sdk.service.tidb.model.RebootPodRequest;
import com.jdcloud.sdk.service.tidb.model.RebootPodResponse;
import com.jdcloud.sdk.service.tidb.client.RebootPodExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeBackupPolicyRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeBackupPolicyResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeBackupPolicyExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.tidb.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.tidb.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeSSLRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeSSLResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeSSLExecutor;
import com.jdcloud.sdk.service.tidb.model.StopReplicationRequest;
import com.jdcloud.sdk.service.tidb.model.StopReplicationResponse;
import com.jdcloud.sdk.service.tidb.client.StopReplicationExecutor;
import com.jdcloud.sdk.service.tidb.model.DisableSSLRequest;
import com.jdcloud.sdk.service.tidb.model.DisableSSLResponse;
import com.jdcloud.sdk.service.tidb.client.DisableSSLExecutor;
import com.jdcloud.sdk.service.tidb.model.CreateReplicationRequest;
import com.jdcloud.sdk.service.tidb.model.CreateReplicationResponse;
import com.jdcloud.sdk.service.tidb.client.CreateReplicationExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeOrderableInstanceTypeRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeOrderableInstanceTypeResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeOrderableInstanceTypeExecutor;
import com.jdcloud.sdk.service.tidb.model.ResumeReplicationRequest;
import com.jdcloud.sdk.service.tidb.model.ResumeReplicationResponse;
import com.jdcloud.sdk.service.tidb.client.ResumeReplicationExecutor;
import com.jdcloud.sdk.service.tidb.model.EnableSSLRequest;
import com.jdcloud.sdk.service.tidb.model.EnableSSLResponse;
import com.jdcloud.sdk.service.tidb.client.EnableSSLExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeNodesRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeNodesResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeNodesExecutor;
import com.jdcloud.sdk.service.tidb.model.DeleteBackupRequest;
import com.jdcloud.sdk.service.tidb.model.DeleteBackupResponse;
import com.jdcloud.sdk.service.tidb.client.DeleteBackupExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeInstanceAttributesRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeInstanceAttributesResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeInstanceAttributesExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeUpgradePlanRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeUpgradePlanResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeUpgradePlanExecutor;
import com.jdcloud.sdk.service.tidb.model.DescribeUpgradeVersionsRequest;
import com.jdcloud.sdk.service.tidb.model.DescribeUpgradeVersionsResponse;
import com.jdcloud.sdk.service.tidb.client.DescribeUpgradeVersionsExecutor;

/**
 * tidbClient
 */
public class TidbClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.9";
    public final static String DefaultEndpoint = "tidb.jdcloud-api.com";
    public final static String ServiceName = "tidb";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private TidbClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 关闭 TiDB 实例的 Internet 公网服务。 关闭后，将不能在 VPC 外访问 TiDB 实例。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableInternetAccessResponse disableInternetAccess(DisableInternetAccessRequest request) throws JdcloudSdkException {
        return new DisableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库的高权限管理账号，用户可以使用客户端、应用程序等通过该账号和密码登录 TiDB 实例，然后通过SQL创建数据库和其他用户。一个数据库实例只能创建一个高权限账号。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccountResponse createAccount(CreateAccountRequest request) throws JdcloudSdkException {
        return new CreateAccountExecutor().client(this).execute(request);
    }

    /**
     * 删除指定的白名单分组。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteWhiteListGroupResponse deleteWhiteListGroup(DeleteWhiteListGroupRequest request) throws JdcloudSdkException {
        return new DeleteWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询当前实例下所有的复制任务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeReplicationsResponse describeReplications(DescribeReplicationsRequest request) throws JdcloudSdkException {
        return new DescribeReplicationsExecutor().client(this).execute(request);
    }

    /**
     * 升级TiDB引擎版本，例如从4.0.8 升级到 5.4.0等。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpgradeEngineVersionResponse upgradeEngineVersion(UpgradeEngineVersionRequest request) throws JdcloudSdkException {
        return new UpgradeEngineVersionExecutor().client(this).execute(request);
    }

    /**
     * 修改复制任务，修改前需要先暂停复制任务。为保证复制任务的可靠性，目前仅允许修改部分配置。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyReplicationResponse modifyReplication(ModifyReplicationRequest request) throws JdcloudSdkException {
        return new ModifyReplicationExecutor().client(this).execute(request);
    }

    /**
     * 修改实例名称，可支持中文，实例名的具体规则可参见帮助中心文档。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceNameResponse modifyInstanceName(ModifyInstanceNameRequest request) throws JdcloudSdkException {
        return new ModifyInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 校验需要导入的备份文件在OSS上是否存在，需要的读取权限是否具备。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public VerifyFilefromOSSResponse verifyFilefromOSS(VerifyFilefromOSSRequest request) throws JdcloudSdkException {
        return new VerifyFilefromOSSExecutor().client(this).execute(request);
    }

    /**
     * 进行 TiDB 实例的全量备份，对实例中所有的数据库进行备份。同一时间，只能有一个正在运行的备份任务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBackupResponse createBackup(CreateBackupRequest request) throws JdcloudSdkException {
        return new CreateBackupExecutor().client(this).execute(request);
    }

    /**
     * 修改 TiDB 实例备份策略，例如全量备份的日期，时间等。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyBackupPolicyResponse modifyBackupPolicy(ModifyBackupPolicyRequest request) throws JdcloudSdkException {
        return new ModifyBackupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 查看该实例下所有备份的详细信息。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupsResponse describeBackups(DescribeBackupsRequest request) throws JdcloudSdkException {
        return new DescribeBackupsExecutor().client(this).execute(request);
    }

    /**
     * 查询 TiDB 数据迁移任务的详细信息，例如任务的开始、完成时间，任务状态等等。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataMigrationResponse describeDataMigration(DescribeDataMigrationRequest request) throws JdcloudSdkException {
        return new DescribeDataMigrationExecutor().client(this).execute(request);
    }

    /**
     * 删除指定的 TiDB 实例。实例删除后，数据不可恢复，请谨慎使用。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }

    /**
     * 修改TiDB实例的配置参数。部分参数修改后，需要重启才能生效，具体可以参考PingCAP的相关文档。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParametersResponse modifyParameters(ModifyParametersRequest request) throws JdcloudSdkException {
        return new ModifyParametersExecutor().client(this).execute(request);
    }

    /**
     * 创建一个数据迁移任务，可以将对象存储 OSS 中的数据导入到 TiDB 实例中，具体可以参考帮助文档。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataMigrationResponse createDataMigration(CreateDataMigrationRequest request) throws JdcloudSdkException {
        return new CreateDataMigrationExecutor().client(this).execute(request);
    }

    /**
     * 查询当前账号下所有的 TiDB 实例。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstancesResponse describeInstances(DescribeInstancesRequest request) throws JdcloudSdkException {
        return new DescribeInstancesExecutor().client(this).execute(request);
    }

    /**
     * 增加白名单分组，用于用户管理不同类型或者来源的 IP 白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddWhiteListGroupResponse addWhiteListGroup(AddWhiteListGroupRequest request) throws JdcloudSdkException {
        return new AddWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 修改 TiDB 实例中各类节点的数量。如果当前实例无TiFlash和TiCDC节点，那么在增加TiFlash和TiCDC节点数目时，可同时指定其规格。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyNodeNumResponse modifyNodeNum(ModifyNodeNumRequest request) throws JdcloudSdkException {
        return new ModifyNodeNumExecutor().client(this).execute(request);
    }

    /**
     * 查看TiDB实例的主要配置参数。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParametersResponse describeParameters(DescribeParametersRequest request) throws JdcloudSdkException {
        return new DescribeParametersExecutor().client(this).execute(request);
    }

    /**
     * 查看当前实例下的账号信息。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountsResponse describeAccounts(DescribeAccountsRequest request) throws JdcloudSdkException {
        return new DescribeAccountsExecutor().client(this).execute(request);
    }

    /**
     * 开启 TiDB 实例的 Internet 公网服务。开启后，并配置 IP 白名单后，可以在 VPC 外通过公网域名访问 TiDB 实例。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableInternetAccessResponse enableInternetAccess(EnableInternetAccessRequest request) throws JdcloudSdkException {
        return new EnableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 创建一个新的 TiDB 实例，并将指定的备份恢复到该实例上。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceFromBackupResponse createInstanceFromBackup(CreateInstanceFromBackupRequest request) throws JdcloudSdkException {
        return new CreateInstanceFromBackupExecutor().client(this).execute(request);
    }

    /**
     * 修改 TiDB 实例中各类节点中的数目与规格。支持 TiDB 节点和 Monitor 节点数目和规格的同时调整。 如果当前实例无 TiFlash 和 TiCDC 节点，那么在增加 TiFlash 和 TiCDC 节点数目时，可同时指定其规格。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceSpecResponse modifyInstanceSpec(ModifyInstanceSpecRequest request) throws JdcloudSdkException {
        return new ModifyInstanceSpecExecutor().client(this).execute(request);
    }

    /**
     * 查看实例当前白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeWhiteListResponse describeWhiteList(DescribeWhiteListRequest request) throws JdcloudSdkException {
        return new DescribeWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 查询指定地域下 TiDB 服务支持的数据库版本。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVersionsResponse describeVersions(DescribeVersionsRequest request) throws JdcloudSdkException {
        return new DescribeVersionsExecutor().client(this).execute(request);
    }

    /**
     * 获取各种 TiDB 节点支持的具体规格。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceClassesResponse describeInstanceClasses(DescribeInstanceClassesRequest request) throws JdcloudSdkException {
        return new DescribeInstanceClassesExecutor().client(this).execute(request);
    }

    /**
     * 修改允许访问实例的IP白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyWhiteListResponse modifyWhiteList(ModifyWhiteListRequest request) throws JdcloudSdkException {
        return new ModifyWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 删除指定的复制任务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteReplicationResponse deleteReplication(DeleteReplicationRequest request) throws JdcloudSdkException {
        return new DeleteReplicationExecutor().client(this).execute(request);
    }

    /**
     * 重置 TiDB 实例的高权限账号的密码。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetPasswordResponse resetPassword(ResetPasswordRequest request) throws JdcloudSdkException {
        return new ResetPasswordExecutor().client(this).execute(request);
    }

    /**
     * 重启实例的某类节点。重启采用滚动重启的方式，如果该类节点有多个，通常不会中断实例的服务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RebootPodResponse rebootPod(RebootPodRequest request) throws JdcloudSdkException {
        return new RebootPodExecutor().client(this).execute(request);
    }

    /**
     * 查看实例当前的备份策略。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupPolicyResponse describeBackupPolicy(DescribeBackupPolicyRequest request) throws JdcloudSdkException {
        return new DescribeBackupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 创建一个 TiDB 实例。创建时需要指定 TiDB 各类节点的数目，规格，存储空间等。 TiFlash和TiCDC节点在创建时不是必须的，可以在需要时，通过扩容的功能创建TiFlash和TiCDC节点。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询 TiDB 实例的 SSL 的开启状态。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSSLResponse describeSSL(DescribeSSLRequest request) throws JdcloudSdkException {
        return new DescribeSSLExecutor().client(this).execute(request);
    }

    /**
     * 暂停指定的复制任务。注意：如果暂停的时间过长，会导致 TiCDC 节点的磁盘空间写满，导致复制任务错误或失败。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopReplicationResponse stopReplication(StopReplicationRequest request) throws JdcloudSdkException {
        return new StopReplicationExecutor().client(this).execute(request);
    }

    /**
     * 关闭 TiDB 和 MySQL 客户端之间的 SSL 连接功能。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableSSLResponse disableSSL(DisableSSLRequest request) throws JdcloudSdkException {
        return new DisableSSLExecutor().client(this).execute(request);
    }

    /**
     * 创建一个数据复制任务，可以将 TiDB 的增量数据同步到下游的 MySQL， TiDB 或者 Kafka 中。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateReplicationResponse createReplication(CreateReplicationRequest request) throws JdcloudSdkException {
        return new CreateReplicationExecutor().client(this).execute(request);
    }

    /**
     * 获取当前用户售罄信息。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeOrderableInstanceTypeResponse describeOrderableInstanceType(DescribeOrderableInstanceTypeRequest request) throws JdcloudSdkException {
        return new DescribeOrderableInstanceTypeExecutor().client(this).execute(request);
    }

    /**
     * 继续处于“暂停”状态的复制任务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResumeReplicationResponse resumeReplication(ResumeReplicationRequest request) throws JdcloudSdkException {
        return new ResumeReplicationExecutor().client(this).execute(request);
    }

    /**
     * 开启 TiDB 和 MySQL 客户端之间的 SSL 连接功能。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableSSLResponse enableSSL(EnableSSLRequest request) throws JdcloudSdkException {
        return new EnableSSLExecutor().client(this).execute(request);
    }

    /**
     * 获取某个实例下的所有节点的主要性能信息，如CPU，内存，存储空间等。 该性能信息从云监控获取，为上一个监控周期的数据。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNodesResponse describeNodes(DescribeNodesRequest request) throws JdcloudSdkException {
        return new DescribeNodesExecutor().client(this).execute(request);
    }

    /**
     * 删除TiDB的备份，仅允许删除用户创建的备份，系统的自动备份不允许删除。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBackupResponse deleteBackup(DeleteBackupRequest request) throws JdcloudSdkException {
        return new DeleteBackupExecutor().client(this).execute(request);
    }

    /**
     * 查询 TiDB 实例的详细信息，例如TiDB的具体版本号，各个节点的规格、存储空间以及连接信息等等。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceAttributesResponse describeInstanceAttributes(DescribeInstanceAttributesRequest request) throws JdcloudSdkException {
        return new DescribeInstanceAttributesExecutor().client(this).execute(request);
    }

    /**
     * 查询当前 TiDB 实例的升级计划。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeUpgradePlanResponse describeUpgradePlan(DescribeUpgradePlanRequest request) throws JdcloudSdkException {
        return new DescribeUpgradePlanExecutor().client(this).execute(request);
    }

    /**
     * 获取当前 TiDB 实例可升级到的目标版本。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeUpgradeVersionsResponse describeUpgradeVersions(DescribeUpgradeVersionsRequest request) throws JdcloudSdkException {
        return new DescribeUpgradeVersionsExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public TidbClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private TidbClient tidbClient;

        public DefaultBuilder() {
            tidbClient = new TidbClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            tidbClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            tidbClient.httpRequestConfig = config;
            return this;
        }

        public TidbClient build() throws JdcloudSdkException {

            if (tidbClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                tidbClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (tidbClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("TidbClient build error: jdcloud credentials provider not set");
                }
            }
            if (tidbClient.httpRequestConfig == null) {
                tidbClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (tidbClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("TidbClient build error: http request config not set");
                }
            }
            return tidbClient;
        }

        public Builder environment(Environment environment) {
            tidbClient.environment = environment;
            return this;
        }
    }
}
