/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.tidb.model;

import java.util.List;
import java.util.ArrayList;

/**
 * flavor
 */
public class Flavor  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 规格代码,如tidb.s1.xlarge
     */
    private String instanceClass;

    /**
     * cpu核数
     */
    private Integer cpu;

    /**
     * 内存大小，单位GB
     */
    private Integer memoryGB;

    /**
     * 该规格支持的存储空间，单位GB
     */
    private List<Integer> storageGB;


    /**
     * get 规格代码,如tidb.s1.xlarge
     *
     * @return
     */
    public String getInstanceClass() {
        return instanceClass;
    }

    /**
     * set 规格代码,如tidb.s1.xlarge
     *
     * @param instanceClass
     */
    public void setInstanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
    }

    /**
     * get cpu核数
     *
     * @return
     */
    public Integer getCpu() {
        return cpu;
    }

    /**
     * set cpu核数
     *
     * @param cpu
     */
    public void setCpu(Integer cpu) {
        this.cpu = cpu;
    }

    /**
     * get 内存大小，单位GB
     *
     * @return
     */
    public Integer getMemoryGB() {
        return memoryGB;
    }

    /**
     * set 内存大小，单位GB
     *
     * @param memoryGB
     */
    public void setMemoryGB(Integer memoryGB) {
        this.memoryGB = memoryGB;
    }

    /**
     * get 该规格支持的存储空间，单位GB
     *
     * @return
     */
    public List<Integer> getStorageGB() {
        return storageGB;
    }

    /**
     * set 该规格支持的存储空间，单位GB
     *
     * @param storageGB
     */
    public void setStorageGB(List<Integer> storageGB) {
        this.storageGB = storageGB;
    }


    /**
     * set 规格代码,如tidb.s1.xlarge
     *
     * @param instanceClass
     */
    public Flavor instanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
        return this;
    }

    /**
     * set cpu核数
     *
     * @param cpu
     */
    public Flavor cpu(Integer cpu) {
        this.cpu = cpu;
        return this;
    }

    /**
     * set 内存大小，单位GB
     *
     * @param memoryGB
     */
    public Flavor memoryGB(Integer memoryGB) {
        this.memoryGB = memoryGB;
        return this;
    }

    /**
     * set 该规格支持的存储空间，单位GB
     *
     * @param storageGB
     */
    public Flavor storageGB(List<Integer> storageGB) {
        this.storageGB = storageGB;
        return this;
    }


    /**
     * add item to 该规格支持的存储空间，单位GB
     *
     * @param storageGB
     */
    public void addStorageGB(Integer storageGB) {
        if (this.storageGB == null) {
            this.storageGB = new ArrayList<>();
        }
        this.storageGB.add(storageGB);
    }

}