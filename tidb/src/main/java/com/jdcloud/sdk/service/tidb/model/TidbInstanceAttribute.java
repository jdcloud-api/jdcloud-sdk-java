/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.tidb.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.charge.model.Charge;

/**
 * tidbInstanceAttribute
 */
public class TidbInstanceAttribute  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例ID
     */
    private String instanceId;

    /**
     * 实例名称
     */
    private String instanceName;

    /**
     * 实例引擎版本
     */
    private String engineVersion;

    /**
     * CPU架构
     */
    private String architecture;

    /**
     * 实例引擎版本的详细版本号
     */
    private String minorVersion;

    /**
     * 集群中节点的总数
     */
    private Integer totalNodeNum;

    /**
     * TiDB节点规格和数目
     */
    private NodeSpec tidbNodeSpec;

    /**
     * TiKV节点规格和数目
     */
    private NodeSpec tikvNodeSpec;

    /**
     * PD节点规格和数目
     */
    private NodeSpec pdNodeSpec;

    /**
     * Monitor节点规格，只能有1个Monitor节点
     */
    private NodeSpec monitorNodeSpec;

    /**
     * TiFlash节点规格和数目
     */
    private NodeSpec tiflashNodeSpec;

    /**
     * Ticdc节点规格和数目
     */
    private NodeSpec ticdcNodeSpec;

    /**
     * 整个集群总的CPU核数
     */
    private Integer totalCPU;

    /**
     * 整个集群总的内存大小，单位GB
     */
    private Integer totalMemoryGB;

    /**
     * 整个集群总的存储空间大小，单位GB
     */
    private Integer totalStorageGB;

    /**
     * 地域ID
     */
    private String regionId;

    /**
     * 可用区ID，目前仅支持单可用区
     */
    
    private List<String> azId;
    /**
     * VPC的ID
     */
    private String vpcId;

    /**
     * 子网的ID
     */
    private String subnetId;

    /**
     * TiDB内网域名
     */
    private String internalDomainName;

    /**
     * TiDB公网域名
     */
    private String publicDomainName;

    /**
     * TiDB监控的内网域名
     */
    private String monitorInternalDomainName;

    /**
     * TiDB监控的公网域名
     */
    private String monitorPublicDomainName;

    /**
     * PD的内网域名
     */
    private String pdInternalDomainName;

    /**
     * PD的公网域名
     */
    private String pdPublicDomainName;

    /**
     * DMS的内网域名
     */
    private String dmsInternalDomainName;

    /**
     * DMS的公网域名
     */
    private String dmsPublicDomainName;

    /**
     * 应用访问端口
     */
    private String instancePort;

    /**
     * TiDB监控的端口
     */
    private String monitorPort;

    /**
     * PD的端口
     */
    private String pdPort;

    /**
     * DMS的端口
     */
    private String dmsPort;

    /**
     * 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    private String instanceStatus;

    /**
     * 实例创建时间, UTC 时间格式
     */
    private String createTime;

    /**
     * 计费配置
     */
    private Charge charge;

    /**
     * 标签信息
     */
    
    private List<Tag> tags;


    /**
     * get 实例ID
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 实例名称
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 实例名称
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 实例引擎版本
     *
     * @return
     */
    public String getEngineVersion() {
        return engineVersion;
    }

    /**
     * set 实例引擎版本
     *
     * @param engineVersion
     */
    public void setEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
    }


    /**
     * get CPU架构
     *
     * @return
     */
    public String getArchitecture() {
        return architecture;
    }

    /**
     * set CPU架构
     *
     * @param architecture
     */
    public void setArchitecture(String architecture) {
        this.architecture = architecture;
    }


    /**
     * get 实例引擎版本的详细版本号
     *
     * @return
     */
    public String getMinorVersion() {
        return minorVersion;
    }

    /**
     * set 实例引擎版本的详细版本号
     *
     * @param minorVersion
     */
    public void setMinorVersion(String minorVersion) {
        this.minorVersion = minorVersion;
    }


    /**
     * get 集群中节点的总数
     *
     * @return
     */
    public Integer getTotalNodeNum() {
        return totalNodeNum;
    }

    /**
     * set 集群中节点的总数
     *
     * @param totalNodeNum
     */
    public void setTotalNodeNum(Integer totalNodeNum) {
        this.totalNodeNum = totalNodeNum;
    }


    /**
     * get TiDB节点规格和数目
     *
     * @return
     */
    public NodeSpec getTidbNodeSpec() {
        return tidbNodeSpec;
    }

    /**
     * set TiDB节点规格和数目
     *
     * @param tidbNodeSpec
     */
    public void setTidbNodeSpec(NodeSpec tidbNodeSpec) {
        this.tidbNodeSpec = tidbNodeSpec;
    }


    /**
     * get TiKV节点规格和数目
     *
     * @return
     */
    public NodeSpec getTikvNodeSpec() {
        return tikvNodeSpec;
    }

    /**
     * set TiKV节点规格和数目
     *
     * @param tikvNodeSpec
     */
    public void setTikvNodeSpec(NodeSpec tikvNodeSpec) {
        this.tikvNodeSpec = tikvNodeSpec;
    }


    /**
     * get PD节点规格和数目
     *
     * @return
     */
    public NodeSpec getPdNodeSpec() {
        return pdNodeSpec;
    }

    /**
     * set PD节点规格和数目
     *
     * @param pdNodeSpec
     */
    public void setPdNodeSpec(NodeSpec pdNodeSpec) {
        this.pdNodeSpec = pdNodeSpec;
    }


    /**
     * get Monitor节点规格，只能有1个Monitor节点
     *
     * @return
     */
    public NodeSpec getMonitorNodeSpec() {
        return monitorNodeSpec;
    }

    /**
     * set Monitor节点规格，只能有1个Monitor节点
     *
     * @param monitorNodeSpec
     */
    public void setMonitorNodeSpec(NodeSpec monitorNodeSpec) {
        this.monitorNodeSpec = monitorNodeSpec;
    }


    /**
     * get TiFlash节点规格和数目
     *
     * @return
     */
    public NodeSpec getTiflashNodeSpec() {
        return tiflashNodeSpec;
    }

    /**
     * set TiFlash节点规格和数目
     *
     * @param tiflashNodeSpec
     */
    public void setTiflashNodeSpec(NodeSpec tiflashNodeSpec) {
        this.tiflashNodeSpec = tiflashNodeSpec;
    }


    /**
     * get Ticdc节点规格和数目
     *
     * @return
     */
    public NodeSpec getTicdcNodeSpec() {
        return ticdcNodeSpec;
    }

    /**
     * set Ticdc节点规格和数目
     *
     * @param ticdcNodeSpec
     */
    public void setTicdcNodeSpec(NodeSpec ticdcNodeSpec) {
        this.ticdcNodeSpec = ticdcNodeSpec;
    }


    /**
     * get 整个集群总的CPU核数
     *
     * @return
     */
    public Integer getTotalCPU() {
        return totalCPU;
    }

    /**
     * set 整个集群总的CPU核数
     *
     * @param totalCPU
     */
    public void setTotalCPU(Integer totalCPU) {
        this.totalCPU = totalCPU;
    }


    /**
     * get 整个集群总的内存大小，单位GB
     *
     * @return
     */
    public Integer getTotalMemoryGB() {
        return totalMemoryGB;
    }

    /**
     * set 整个集群总的内存大小，单位GB
     *
     * @param totalMemoryGB
     */
    public void setTotalMemoryGB(Integer totalMemoryGB) {
        this.totalMemoryGB = totalMemoryGB;
    }


    /**
     * get 整个集群总的存储空间大小，单位GB
     *
     * @return
     */
    public Integer getTotalStorageGB() {
        return totalStorageGB;
    }

    /**
     * set 整个集群总的存储空间大小，单位GB
     *
     * @param totalStorageGB
     */
    public void setTotalStorageGB(Integer totalStorageGB) {
        this.totalStorageGB = totalStorageGB;
    }


    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
    * get 可用区ID，目前仅支持单可用区
    *
    * @return
    */
    public List<String> getAzId() {
        return azId;
    }

    /**
    * set 可用区ID，目前仅支持单可用区
    *
    * @param azId
    */
    public void setAzId(List<String> azId) {
        this.azId = azId;
    }


    /**
     * get VPC的ID
     *
     * @return
     */
    public String getVpcId() {
        return vpcId;
    }

    /**
     * set VPC的ID
     *
     * @param vpcId
     */
    public void setVpcId(String vpcId) {
        this.vpcId = vpcId;
    }


    /**
     * get 子网的ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网的ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get TiDB内网域名
     *
     * @return
     */
    public String getInternalDomainName() {
        return internalDomainName;
    }

    /**
     * set TiDB内网域名
     *
     * @param internalDomainName
     */
    public void setInternalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
    }


    /**
     * get TiDB公网域名
     *
     * @return
     */
    public String getPublicDomainName() {
        return publicDomainName;
    }

    /**
     * set TiDB公网域名
     *
     * @param publicDomainName
     */
    public void setPublicDomainName(String publicDomainName) {
        this.publicDomainName = publicDomainName;
    }


    /**
     * get TiDB监控的内网域名
     *
     * @return
     */
    public String getMonitorInternalDomainName() {
        return monitorInternalDomainName;
    }

    /**
     * set TiDB监控的内网域名
     *
     * @param monitorInternalDomainName
     */
    public void setMonitorInternalDomainName(String monitorInternalDomainName) {
        this.monitorInternalDomainName = monitorInternalDomainName;
    }


    /**
     * get TiDB监控的公网域名
     *
     * @return
     */
    public String getMonitorPublicDomainName() {
        return monitorPublicDomainName;
    }

    /**
     * set TiDB监控的公网域名
     *
     * @param monitorPublicDomainName
     */
    public void setMonitorPublicDomainName(String monitorPublicDomainName) {
        this.monitorPublicDomainName = monitorPublicDomainName;
    }


    /**
     * get PD的内网域名
     *
     * @return
     */
    public String getPdInternalDomainName() {
        return pdInternalDomainName;
    }

    /**
     * set PD的内网域名
     *
     * @param pdInternalDomainName
     */
    public void setPdInternalDomainName(String pdInternalDomainName) {
        this.pdInternalDomainName = pdInternalDomainName;
    }


    /**
     * get PD的公网域名
     *
     * @return
     */
    public String getPdPublicDomainName() {
        return pdPublicDomainName;
    }

    /**
     * set PD的公网域名
     *
     * @param pdPublicDomainName
     */
    public void setPdPublicDomainName(String pdPublicDomainName) {
        this.pdPublicDomainName = pdPublicDomainName;
    }


    /**
     * get DMS的内网域名
     *
     * @return
     */
    public String getDmsInternalDomainName() {
        return dmsInternalDomainName;
    }

    /**
     * set DMS的内网域名
     *
     * @param dmsInternalDomainName
     */
    public void setDmsInternalDomainName(String dmsInternalDomainName) {
        this.dmsInternalDomainName = dmsInternalDomainName;
    }


    /**
     * get DMS的公网域名
     *
     * @return
     */
    public String getDmsPublicDomainName() {
        return dmsPublicDomainName;
    }

    /**
     * set DMS的公网域名
     *
     * @param dmsPublicDomainName
     */
    public void setDmsPublicDomainName(String dmsPublicDomainName) {
        this.dmsPublicDomainName = dmsPublicDomainName;
    }


    /**
     * get 应用访问端口
     *
     * @return
     */
    public String getInstancePort() {
        return instancePort;
    }

    /**
     * set 应用访问端口
     *
     * @param instancePort
     */
    public void setInstancePort(String instancePort) {
        this.instancePort = instancePort;
    }


    /**
     * get TiDB监控的端口
     *
     * @return
     */
    public String getMonitorPort() {
        return monitorPort;
    }

    /**
     * set TiDB监控的端口
     *
     * @param monitorPort
     */
    public void setMonitorPort(String monitorPort) {
        this.monitorPort = monitorPort;
    }


    /**
     * get PD的端口
     *
     * @return
     */
    public String getPdPort() {
        return pdPort;
    }

    /**
     * set PD的端口
     *
     * @param pdPort
     */
    public void setPdPort(String pdPort) {
        this.pdPort = pdPort;
    }


    /**
     * get DMS的端口
     *
     * @return
     */
    public String getDmsPort() {
        return dmsPort;
    }

    /**
     * set DMS的端口
     *
     * @param dmsPort
     */
    public void setDmsPort(String dmsPort) {
        this.dmsPort = dmsPort;
    }


    /**
     * get 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @return
     */
    public String getInstanceStatus() {
        return instanceStatus;
    }

    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public void setInstanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
    }


    /**
     * get 实例创建时间, UTC 时间格式
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 实例创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 计费配置
     *
     * @return
     */
    public Charge getCharge() {
        return charge;
    }

    /**
     * set 计费配置
     *
     * @param charge
     */
    public void setCharge(Charge charge) {
        this.charge = charge;
    }


    /**
    * get 标签信息
    *
    * @return
    */
    public List<Tag> getTags() {
        return tags;
    }

    /**
    * set 标签信息
    *
    * @param tags
    */
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }



    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public TidbInstanceAttribute instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 实例名称
     *
     * @param instanceName
     */
    public TidbInstanceAttribute instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 实例引擎版本
     *
     * @param engineVersion
     */
    public TidbInstanceAttribute engineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }


    /**
     * set CPU架构
     *
     * @param architecture
     */
    public TidbInstanceAttribute architecture(String architecture) {
        this.architecture = architecture;
        return this;
    }


    /**
     * set 实例引擎版本的详细版本号
     *
     * @param minorVersion
     */
    public TidbInstanceAttribute minorVersion(String minorVersion) {
        this.minorVersion = minorVersion;
        return this;
    }


    /**
     * set 集群中节点的总数
     *
     * @param totalNodeNum
     */
    public TidbInstanceAttribute totalNodeNum(Integer totalNodeNum) {
        this.totalNodeNum = totalNodeNum;
        return this;
    }


    /**
     * set TiDB节点规格和数目
     *
     * @param tidbNodeSpec
     */
    public TidbInstanceAttribute tidbNodeSpec(NodeSpec tidbNodeSpec) {
        this.tidbNodeSpec = tidbNodeSpec;
        return this;
    }


    /**
     * set TiKV节点规格和数目
     *
     * @param tikvNodeSpec
     */
    public TidbInstanceAttribute tikvNodeSpec(NodeSpec tikvNodeSpec) {
        this.tikvNodeSpec = tikvNodeSpec;
        return this;
    }


    /**
     * set PD节点规格和数目
     *
     * @param pdNodeSpec
     */
    public TidbInstanceAttribute pdNodeSpec(NodeSpec pdNodeSpec) {
        this.pdNodeSpec = pdNodeSpec;
        return this;
    }


    /**
     * set Monitor节点规格，只能有1个Monitor节点
     *
     * @param monitorNodeSpec
     */
    public TidbInstanceAttribute monitorNodeSpec(NodeSpec monitorNodeSpec) {
        this.monitorNodeSpec = monitorNodeSpec;
        return this;
    }


    /**
     * set TiFlash节点规格和数目
     *
     * @param tiflashNodeSpec
     */
    public TidbInstanceAttribute tiflashNodeSpec(NodeSpec tiflashNodeSpec) {
        this.tiflashNodeSpec = tiflashNodeSpec;
        return this;
    }


    /**
     * set Ticdc节点规格和数目
     *
     * @param ticdcNodeSpec
     */
    public TidbInstanceAttribute ticdcNodeSpec(NodeSpec ticdcNodeSpec) {
        this.ticdcNodeSpec = ticdcNodeSpec;
        return this;
    }


    /**
     * set 整个集群总的CPU核数
     *
     * @param totalCPU
     */
    public TidbInstanceAttribute totalCPU(Integer totalCPU) {
        this.totalCPU = totalCPU;
        return this;
    }


    /**
     * set 整个集群总的内存大小，单位GB
     *
     * @param totalMemoryGB
     */
    public TidbInstanceAttribute totalMemoryGB(Integer totalMemoryGB) {
        this.totalMemoryGB = totalMemoryGB;
        return this;
    }


    /**
     * set 整个集群总的存储空间大小，单位GB
     *
     * @param totalStorageGB
     */
    public TidbInstanceAttribute totalStorageGB(Integer totalStorageGB) {
        this.totalStorageGB = totalStorageGB;
        return this;
    }


    /**
     * set 地域ID
     *
     * @param regionId
     */
    public TidbInstanceAttribute regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
    * set 可用区ID，目前仅支持单可用区
    *
    * @param azId
    */
    public TidbInstanceAttribute azId(List<String> azId) {
        this.azId = azId;
        return this;
    }


    /**
     * set VPC的ID
     *
     * @param vpcId
     */
    public TidbInstanceAttribute vpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }


    /**
     * set 子网的ID
     *
     * @param subnetId
     */
    public TidbInstanceAttribute subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set TiDB内网域名
     *
     * @param internalDomainName
     */
    public TidbInstanceAttribute internalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
        return this;
    }


    /**
     * set TiDB公网域名
     *
     * @param publicDomainName
     */
    public TidbInstanceAttribute publicDomainName(String publicDomainName) {
        this.publicDomainName = publicDomainName;
        return this;
    }


    /**
     * set TiDB监控的内网域名
     *
     * @param monitorInternalDomainName
     */
    public TidbInstanceAttribute monitorInternalDomainName(String monitorInternalDomainName) {
        this.monitorInternalDomainName = monitorInternalDomainName;
        return this;
    }


    /**
     * set TiDB监控的公网域名
     *
     * @param monitorPublicDomainName
     */
    public TidbInstanceAttribute monitorPublicDomainName(String monitorPublicDomainName) {
        this.monitorPublicDomainName = monitorPublicDomainName;
        return this;
    }


    /**
     * set PD的内网域名
     *
     * @param pdInternalDomainName
     */
    public TidbInstanceAttribute pdInternalDomainName(String pdInternalDomainName) {
        this.pdInternalDomainName = pdInternalDomainName;
        return this;
    }


    /**
     * set PD的公网域名
     *
     * @param pdPublicDomainName
     */
    public TidbInstanceAttribute pdPublicDomainName(String pdPublicDomainName) {
        this.pdPublicDomainName = pdPublicDomainName;
        return this;
    }


    /**
     * set DMS的内网域名
     *
     * @param dmsInternalDomainName
     */
    public TidbInstanceAttribute dmsInternalDomainName(String dmsInternalDomainName) {
        this.dmsInternalDomainName = dmsInternalDomainName;
        return this;
    }


    /**
     * set DMS的公网域名
     *
     * @param dmsPublicDomainName
     */
    public TidbInstanceAttribute dmsPublicDomainName(String dmsPublicDomainName) {
        this.dmsPublicDomainName = dmsPublicDomainName;
        return this;
    }


    /**
     * set 应用访问端口
     *
     * @param instancePort
     */
    public TidbInstanceAttribute instancePort(String instancePort) {
        this.instancePort = instancePort;
        return this;
    }


    /**
     * set TiDB监控的端口
     *
     * @param monitorPort
     */
    public TidbInstanceAttribute monitorPort(String monitorPort) {
        this.monitorPort = monitorPort;
        return this;
    }


    /**
     * set PD的端口
     *
     * @param pdPort
     */
    public TidbInstanceAttribute pdPort(String pdPort) {
        this.pdPort = pdPort;
        return this;
    }


    /**
     * set DMS的端口
     *
     * @param dmsPort
     */
    public TidbInstanceAttribute dmsPort(String dmsPort) {
        this.dmsPort = dmsPort;
        return this;
    }


    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public TidbInstanceAttribute instanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
        return this;
    }


    /**
     * set 实例创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public TidbInstanceAttribute createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 计费配置
     *
     * @param charge
     */
    public TidbInstanceAttribute charge(Charge charge) {
        this.charge = charge;
        return this;
    }


    /**
    * set 标签信息
    *
    * @param tags
    */
    public TidbInstanceAttribute tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }



    /**
     * add item to 可用区ID，目前仅支持单可用区
     *
     * @param azId
     */
    public void addAzId(String azId) {
        if (this.azId == null) {
            this.azId = new ArrayList<>();
        }
        this.azId.add(azId);
    }

    /**
     * add item to 标签信息
     *
     * @param tag
     */
    public void addTag(Tag tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }
}