/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rdts.model;


/**
 * 流量监控信息
 */
public class TrafficMonitor  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 源端流量监控
     */
    private Monitor sourceCluster;

    /**
     * 迁移代理流量监控
     */
    private Monitor rdtsProxy;

    /**
     * 目的端流量监控
     */
    private Monitor targetProxy;

    /**
     * 迁移代理ops与源端ops百分比
     */
    private Integer diffPercent;

    /**
     * 当前时间(ISO 8601标准的UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ)
     */
    private String currentTime;


    /**
     * get 源端流量监控
     *
     * @return
     */
    public Monitor getSourceCluster() {
        return sourceCluster;
    }

    /**
     * set 源端流量监控
     *
     * @param sourceCluster
     */
    public void setSourceCluster(Monitor sourceCluster) {
        this.sourceCluster = sourceCluster;
    }

    /**
     * get 迁移代理流量监控
     *
     * @return
     */
    public Monitor getRdtsProxy() {
        return rdtsProxy;
    }

    /**
     * set 迁移代理流量监控
     *
     * @param rdtsProxy
     */
    public void setRdtsProxy(Monitor rdtsProxy) {
        this.rdtsProxy = rdtsProxy;
    }

    /**
     * get 目的端流量监控
     *
     * @return
     */
    public Monitor getTargetProxy() {
        return targetProxy;
    }

    /**
     * set 目的端流量监控
     *
     * @param targetProxy
     */
    public void setTargetProxy(Monitor targetProxy) {
        this.targetProxy = targetProxy;
    }

    /**
     * get 迁移代理ops与源端ops百分比
     *
     * @return
     */
    public Integer getDiffPercent() {
        return diffPercent;
    }

    /**
     * set 迁移代理ops与源端ops百分比
     *
     * @param diffPercent
     */
    public void setDiffPercent(Integer diffPercent) {
        this.diffPercent = diffPercent;
    }

    /**
     * get 当前时间(ISO 8601标准的UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ)
     *
     * @return
     */
    public String getCurrentTime() {
        return currentTime;
    }

    /**
     * set 当前时间(ISO 8601标准的UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ)
     *
     * @param currentTime
     */
    public void setCurrentTime(String currentTime) {
        this.currentTime = currentTime;
    }


    /**
     * set 源端流量监控
     *
     * @param sourceCluster
     */
    public TrafficMonitor sourceCluster(Monitor sourceCluster) {
        this.sourceCluster = sourceCluster;
        return this;
    }

    /**
     * set 迁移代理流量监控
     *
     * @param rdtsProxy
     */
    public TrafficMonitor rdtsProxy(Monitor rdtsProxy) {
        this.rdtsProxy = rdtsProxy;
        return this;
    }

    /**
     * set 目的端流量监控
     *
     * @param targetProxy
     */
    public TrafficMonitor targetProxy(Monitor targetProxy) {
        this.targetProxy = targetProxy;
        return this;
    }

    /**
     * set 迁移代理ops与源端ops百分比
     *
     * @param diffPercent
     */
    public TrafficMonitor diffPercent(Integer diffPercent) {
        this.diffPercent = diffPercent;
        return this;
    }

    /**
     * set 当前时间(ISO 8601标准的UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ)
     *
     * @param currentTime
     */
    public TrafficMonitor currentTime(String currentTime) {
        this.currentTime = currentTime;
        return this;
    }


}