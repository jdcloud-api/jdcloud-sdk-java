/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rdts.model;


/**
 * 监控信息
 */
public class Monitor  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 每秒请求个数
     */
    private Integer ops;

    /**
     * 输入流量，单位KBps
     */
    private Integer inputKBps;

    /**
     * 源端内存规格（jimdb没有），单位Byte
     */
    private Long maxMemory;

    /**
     * 源端已使用内存（jimdb没有），单位Byte
     */
    private Long usedMemory;


    /**
     * get 每秒请求个数
     *
     * @return
     */
    public Integer getOps() {
        return ops;
    }

    /**
     * set 每秒请求个数
     *
     * @param ops
     */
    public void setOps(Integer ops) {
        this.ops = ops;
    }

    /**
     * get 输入流量，单位KBps
     *
     * @return
     */
    public Integer getInputKBps() {
        return inputKBps;
    }

    /**
     * set 输入流量，单位KBps
     *
     * @param inputKBps
     */
    public void setInputKBps(Integer inputKBps) {
        this.inputKBps = inputKBps;
    }

    /**
     * get 源端内存规格（jimdb没有），单位Byte
     *
     * @return
     */
    public Long getMaxMemory() {
        return maxMemory;
    }

    /**
     * set 源端内存规格（jimdb没有），单位Byte
     *
     * @param maxMemory
     */
    public void setMaxMemory(Long maxMemory) {
        this.maxMemory = maxMemory;
    }

    /**
     * get 源端已使用内存（jimdb没有），单位Byte
     *
     * @return
     */
    public Long getUsedMemory() {
        return usedMemory;
    }

    /**
     * set 源端已使用内存（jimdb没有），单位Byte
     *
     * @param usedMemory
     */
    public void setUsedMemory(Long usedMemory) {
        this.usedMemory = usedMemory;
    }


    /**
     * set 每秒请求个数
     *
     * @param ops
     */
    public Monitor ops(Integer ops) {
        this.ops = ops;
        return this;
    }

    /**
     * set 输入流量，单位KBps
     *
     * @param inputKBps
     */
    public Monitor inputKBps(Integer inputKBps) {
        this.inputKBps = inputKBps;
        return this;
    }

    /**
     * set 源端内存规格（jimdb没有），单位Byte
     *
     * @param maxMemory
     */
    public Monitor maxMemory(Long maxMemory) {
        this.maxMemory = maxMemory;
        return this;
    }

    /**
     * set 源端已使用内存（jimdb没有），单位Byte
     *
     * @param usedMemory
     */
    public Monitor usedMemory(Long usedMemory) {
        this.usedMemory = usedMemory;
        return this;
    }


}