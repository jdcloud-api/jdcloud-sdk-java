/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;

/**
 * formatFilter
 */
public class FormatFilter  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 格式化枚举：json
     */
    private String type;

    /**
     * v
     */
    
    private List<FormatSelector> filter;


    /**
     * get 格式化枚举：json
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set 格式化枚举：json
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }


    /**
    * get v
    *
    * @return
    */
    public List<FormatSelector> getFilter() {
        return filter;
    }

    /**
    * set v
    *
    * @param filter
    */
    public void setFilter(List<FormatSelector> filter) {
        this.filter = filter;
    }



    /**
     * set 格式化枚举：json
     *
     * @param type
     */
    public FormatFilter type(String type) {
        this.type = type;
        return this;
    }


    /**
    * set v
    *
    * @param filter
    */
    public FormatFilter filter(List<FormatSelector> filter) {
        this.filter = filter;
        return this;
    }



    /**
     * add item to v
     *
     * @param filter
     */
    public void addFilter(FormatSelector filter) {
        if (this.filter == null) {
            this.filter = new ArrayList<>();
        }
        this.filter.add(filter);
    }
}