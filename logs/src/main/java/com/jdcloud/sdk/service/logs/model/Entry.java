/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * entry
 */
public class Entry  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 日志原文
     * Required:true
     */
    @Required
    private String content;

    /**
     * 日志流标识符,不传则使用全局日志流标识符
     */
    private String stream;

    /**
     * 标签，不传则取全局标签 map[string]string
     */
    private Object tags;

    /**
     * 时间戳，UTC格式，最多支持到纳秒级别，不传入则取全局时间戳。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     */
    private String timestamp;



    /**
     * get 日志原文
     *
     * @return
     */
    public String getContent() {
        return content;
    }

    /**
     * set 日志原文
     *
     * @param content
     */
    public void setContent(String content) {
        this.content = content;
    }


    /**
     * get 日志流标识符,不传则使用全局日志流标识符
     *
     * @return
     */
    public String getStream() {
        return stream;
    }

    /**
     * set 日志流标识符,不传则使用全局日志流标识符
     *
     * @param stream
     */
    public void setStream(String stream) {
        this.stream = stream;
    }


    /**
     * get 标签，不传则取全局标签 map[string]string
     *
     * @return
     */
    public Object getTags() {
        return tags;
    }

    /**
     * set 标签，不传则取全局标签 map[string]string
     *
     * @param tags
     */
    public void setTags(Object tags) {
        this.tags = tags;
    }


    /**
     * get 时间戳，UTC格式，最多支持到纳秒级别，不传入则取全局时间戳。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @return
     */
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * set 时间戳，UTC格式，最多支持到纳秒级别，不传入则取全局时间戳。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @param timestamp
     */
    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }



    /**
     * set 日志原文
     *
     * @param content
     */
    public Entry content(String content) {
        this.content = content;
        return this;
    }


    /**
     * set 日志流标识符,不传则使用全局日志流标识符
     *
     * @param stream
     */
    public Entry stream(String stream) {
        this.stream = stream;
        return this;
    }


    /**
     * set 标签，不传则取全局标签 map[string]string
     *
     * @param tags
     */
    public Entry tags(Object tags) {
        this.tags = tags;
        return this;
    }


    /**
     * set 时间戳，UTC格式，最多支持到纳秒级别，不传入则取全局时间戳。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @param timestamp
     */
    public Entry timestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }


}