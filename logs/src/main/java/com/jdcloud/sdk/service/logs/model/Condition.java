/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;

/**
 * condition
 */
public class Condition  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 租户信息
     */
    private String pin;

    /**
     * 搜索应用
     */
    
    private List<String> apps;
    /**
     * 搜索关键字
     */
    private String keyword;

    /**
     * 排除关键字
     */
    private String exclude;

    /**
     * 查询机器
     */
    
    private List<String> hosts;
    /**
     * 日志路径
     */
    
    private List<String> filePaths;
    /**
     * 日志等级，枚举类型取值为：DEBUG,INFO,WARN,ERROR,FATAL,ALL,UNKNOWN
     */
    private String logLevel;

    /**
     * 线程
     */
    private String thread;

    /**
     * 类名
     */
    private String clazz;

    /**
     * 限制条数
     */
    private Integer limit;

    /**
     * 开始时间
     */
    private String startTime;

    /**
     * 结束时间
     */
    private String endTime;

    /**
     * 查询时间单位，枚举类型取值为：NANOSECONDS,MICROSECONDS,SECONDS,MINUTES,DAYS
     */
    private String timeUnit;

    /**
     * 搜索类型：regular、exact
     */
    private String searchType;

    /**
     * 应用名
     */
    private String instanceName;

    /**
     * 产品名
     */
    private String productName;

    /**
     * 日志类型名称
     */
    private String logTypeName;

    /**
     * chunks
     */
    
    private List<String> chunks;
    /**
     * 匹配方向
     */
    private String direction;

    /**
     * 查询id
     */
    private String searchId;

    /**
     * 检索index
     */
    private Integer searchIndex;

    /**
     * searchEndTime
     */
    private Long searchEndTime;

    /**
     * lifecycle
     */
    private Integer lifecycle;

    /**
     * 查询sql
     */
    private String querySql;

    /**
     * 索引参数列表，map类型，key必须是string类型，value可自定义
     */
    private Object indexParams;



    /**
     * get 租户信息
     *
     * @return
     */
    public String getPin() {
        return pin;
    }

    /**
     * set 租户信息
     *
     * @param pin
     */
    public void setPin(String pin) {
        this.pin = pin;
    }


    /**
    * get 搜索应用
    *
    * @return
    */
    public List<String> getApps() {
        return apps;
    }

    /**
    * set 搜索应用
    *
    * @param apps
    */
    public void setApps(List<String> apps) {
        this.apps = apps;
    }


    /**
     * get 搜索关键字
     *
     * @return
     */
    public String getKeyword() {
        return keyword;
    }

    /**
     * set 搜索关键字
     *
     * @param keyword
     */
    public void setKeyword(String keyword) {
        this.keyword = keyword;
    }


    /**
     * get 排除关键字
     *
     * @return
     */
    public String getExclude() {
        return exclude;
    }

    /**
     * set 排除关键字
     *
     * @param exclude
     */
    public void setExclude(String exclude) {
        this.exclude = exclude;
    }


    /**
    * get 查询机器
    *
    * @return
    */
    public List<String> getHosts() {
        return hosts;
    }

    /**
    * set 查询机器
    *
    * @param hosts
    */
    public void setHosts(List<String> hosts) {
        this.hosts = hosts;
    }


    /**
    * get 日志路径
    *
    * @return
    */
    public List<String> getFilePaths() {
        return filePaths;
    }

    /**
    * set 日志路径
    *
    * @param filePaths
    */
    public void setFilePaths(List<String> filePaths) {
        this.filePaths = filePaths;
    }


    /**
     * get 日志等级，枚举类型取值为：DEBUG,INFO,WARN,ERROR,FATAL,ALL,UNKNOWN
     *
     * @return
     */
    public String getLogLevel() {
        return logLevel;
    }

    /**
     * set 日志等级，枚举类型取值为：DEBUG,INFO,WARN,ERROR,FATAL,ALL,UNKNOWN
     *
     * @param logLevel
     */
    public void setLogLevel(String logLevel) {
        this.logLevel = logLevel;
    }


    /**
     * get 线程
     *
     * @return
     */
    public String getThread() {
        return thread;
    }

    /**
     * set 线程
     *
     * @param thread
     */
    public void setThread(String thread) {
        this.thread = thread;
    }


    /**
     * get 类名
     *
     * @return
     */
    public String getClazz() {
        return clazz;
    }

    /**
     * set 类名
     *
     * @param clazz
     */
    public void setClazz(String clazz) {
        this.clazz = clazz;
    }


    /**
     * get 限制条数
     *
     * @return
     */
    public Integer getLimit() {
        return limit;
    }

    /**
     * set 限制条数
     *
     * @param limit
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }


    /**
     * get 开始时间
     *
     * @return
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * set 开始时间
     *
     * @param startTime
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }


    /**
     * get 结束时间
     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set 结束时间
     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }


    /**
     * get 查询时间单位，枚举类型取值为：NANOSECONDS,MICROSECONDS,SECONDS,MINUTES,DAYS
     *
     * @return
     */
    public String getTimeUnit() {
        return timeUnit;
    }

    /**
     * set 查询时间单位，枚举类型取值为：NANOSECONDS,MICROSECONDS,SECONDS,MINUTES,DAYS
     *
     * @param timeUnit
     */
    public void setTimeUnit(String timeUnit) {
        this.timeUnit = timeUnit;
    }


    /**
     * get 搜索类型：regular、exact
     *
     * @return
     */
    public String getSearchType() {
        return searchType;
    }

    /**
     * set 搜索类型：regular、exact
     *
     * @param searchType
     */
    public void setSearchType(String searchType) {
        this.searchType = searchType;
    }


    /**
     * get 应用名
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 应用名
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 产品名
     *
     * @return
     */
    public String getProductName() {
        return productName;
    }

    /**
     * set 产品名
     *
     * @param productName
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }


    /**
     * get 日志类型名称
     *
     * @return
     */
    public String getLogTypeName() {
        return logTypeName;
    }

    /**
     * set 日志类型名称
     *
     * @param logTypeName
     */
    public void setLogTypeName(String logTypeName) {
        this.logTypeName = logTypeName;
    }


    /**
    * get chunks
    *
    * @return
    */
    public List<String> getChunks() {
        return chunks;
    }

    /**
    * set chunks
    *
    * @param chunks
    */
    public void setChunks(List<String> chunks) {
        this.chunks = chunks;
    }


    /**
     * get 匹配方向
     *
     * @return
     */
    public String getDirection() {
        return direction;
    }

    /**
     * set 匹配方向
     *
     * @param direction
     */
    public void setDirection(String direction) {
        this.direction = direction;
    }


    /**
     * get 查询id
     *
     * @return
     */
    public String getSearchId() {
        return searchId;
    }

    /**
     * set 查询id
     *
     * @param searchId
     */
    public void setSearchId(String searchId) {
        this.searchId = searchId;
    }


    /**
     * get 检索index
     *
     * @return
     */
    public Integer getSearchIndex() {
        return searchIndex;
    }

    /**
     * set 检索index
     *
     * @param searchIndex
     */
    public void setSearchIndex(Integer searchIndex) {
        this.searchIndex = searchIndex;
    }


    /**
     * get searchEndTime
     *
     * @return
     */
    public Long getSearchEndTime() {
        return searchEndTime;
    }

    /**
     * set searchEndTime
     *
     * @param searchEndTime
     */
    public void setSearchEndTime(Long searchEndTime) {
        this.searchEndTime = searchEndTime;
    }


    /**
     * get lifecycle
     *
     * @return
     */
    public Integer getLifecycle() {
        return lifecycle;
    }

    /**
     * set lifecycle
     *
     * @param lifecycle
     */
    public void setLifecycle(Integer lifecycle) {
        this.lifecycle = lifecycle;
    }


    /**
     * get 查询sql
     *
     * @return
     */
    public String getQuerySql() {
        return querySql;
    }

    /**
     * set 查询sql
     *
     * @param querySql
     */
    public void setQuerySql(String querySql) {
        this.querySql = querySql;
    }


    /**
     * get 索引参数列表，map类型，key必须是string类型，value可自定义
     *
     * @return
     */
    public Object getIndexParams() {
        return indexParams;
    }

    /**
     * set 索引参数列表，map类型，key必须是string类型，value可自定义
     *
     * @param indexParams
     */
    public void setIndexParams(Object indexParams) {
        this.indexParams = indexParams;
    }



    /**
     * set 租户信息
     *
     * @param pin
     */
    public Condition pin(String pin) {
        this.pin = pin;
        return this;
    }


    /**
    * set 搜索应用
    *
    * @param apps
    */
    public Condition apps(List<String> apps) {
        this.apps = apps;
        return this;
    }


    /**
     * set 搜索关键字
     *
     * @param keyword
     */
    public Condition keyword(String keyword) {
        this.keyword = keyword;
        return this;
    }


    /**
     * set 排除关键字
     *
     * @param exclude
     */
    public Condition exclude(String exclude) {
        this.exclude = exclude;
        return this;
    }


    /**
    * set 查询机器
    *
    * @param hosts
    */
    public Condition hosts(List<String> hosts) {
        this.hosts = hosts;
        return this;
    }


    /**
    * set 日志路径
    *
    * @param filePaths
    */
    public Condition filePaths(List<String> filePaths) {
        this.filePaths = filePaths;
        return this;
    }


    /**
     * set 日志等级，枚举类型取值为：DEBUG,INFO,WARN,ERROR,FATAL,ALL,UNKNOWN
     *
     * @param logLevel
     */
    public Condition logLevel(String logLevel) {
        this.logLevel = logLevel;
        return this;
    }


    /**
     * set 线程
     *
     * @param thread
     */
    public Condition thread(String thread) {
        this.thread = thread;
        return this;
    }


    /**
     * set 类名
     *
     * @param clazz
     */
    public Condition clazz(String clazz) {
        this.clazz = clazz;
        return this;
    }


    /**
     * set 限制条数
     *
     * @param limit
     */
    public Condition limit(Integer limit) {
        this.limit = limit;
        return this;
    }


    /**
     * set 开始时间
     *
     * @param startTime
     */
    public Condition startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }


    /**
     * set 结束时间
     *
     * @param endTime
     */
    public Condition endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }


    /**
     * set 查询时间单位，枚举类型取值为：NANOSECONDS,MICROSECONDS,SECONDS,MINUTES,DAYS
     *
     * @param timeUnit
     */
    public Condition timeUnit(String timeUnit) {
        this.timeUnit = timeUnit;
        return this;
    }


    /**
     * set 搜索类型：regular、exact
     *
     * @param searchType
     */
    public Condition searchType(String searchType) {
        this.searchType = searchType;
        return this;
    }


    /**
     * set 应用名
     *
     * @param instanceName
     */
    public Condition instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 产品名
     *
     * @param productName
     */
    public Condition productName(String productName) {
        this.productName = productName;
        return this;
    }


    /**
     * set 日志类型名称
     *
     * @param logTypeName
     */
    public Condition logTypeName(String logTypeName) {
        this.logTypeName = logTypeName;
        return this;
    }


    /**
    * set chunks
    *
    * @param chunks
    */
    public Condition chunks(List<String> chunks) {
        this.chunks = chunks;
        return this;
    }


    /**
     * set 匹配方向
     *
     * @param direction
     */
    public Condition direction(String direction) {
        this.direction = direction;
        return this;
    }


    /**
     * set 查询id
     *
     * @param searchId
     */
    public Condition searchId(String searchId) {
        this.searchId = searchId;
        return this;
    }


    /**
     * set 检索index
     *
     * @param searchIndex
     */
    public Condition searchIndex(Integer searchIndex) {
        this.searchIndex = searchIndex;
        return this;
    }


    /**
     * set searchEndTime
     *
     * @param searchEndTime
     */
    public Condition searchEndTime(Long searchEndTime) {
        this.searchEndTime = searchEndTime;
        return this;
    }


    /**
     * set lifecycle
     *
     * @param lifecycle
     */
    public Condition lifecycle(Integer lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }


    /**
     * set 查询sql
     *
     * @param querySql
     */
    public Condition querySql(String querySql) {
        this.querySql = querySql;
        return this;
    }


    /**
     * set 索引参数列表，map类型，key必须是string类型，value可自定义
     *
     * @param indexParams
     */
    public Condition indexParams(Object indexParams) {
        this.indexParams = indexParams;
        return this;
    }



    /**
     * add item to 搜索应用
     *
     * @param app
     */
    public void addApp(String app) {
        if (this.apps == null) {
            this.apps = new ArrayList<>();
        }
        this.apps.add(app);
    }

    /**
     * add item to 查询机器
     *
     * @param host
     */
    public void addHost(String host) {
        if (this.hosts == null) {
            this.hosts = new ArrayList<>();
        }
        this.hosts.add(host);
    }

    /**
     * add item to 日志路径
     *
     * @param filePath
     */
    public void addFilePath(String filePath) {
        if (this.filePaths == null) {
            this.filePaths = new ArrayList<>();
        }
        this.filePaths.add(filePath);
    }

    /**
     * add item to chunks
     *
     * @param chunk
     */
    public void addChunk(String chunk) {
        if (this.chunks == null) {
            this.chunks = new ArrayList<>();
        }
        this.chunks.add(chunk);
    }
}