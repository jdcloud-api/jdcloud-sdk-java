/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Loki Log Search APIs
 * 产品日志查询（loki）
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.logs.model.StreamFilter;
import com.jdcloud.sdk.service.logs.model.LineFilter;
import com.jdcloud.sdk.service.logs.model.FormatFilter;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 获取满足条件的日志详情
 */
public class LogDetailRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 租户
     * Required:true
     */
    @Required
    private String pin;

    /**
     * UUID，同一批次保持一致，必填
     */
    private String searchId;

    /**
     * 产品名，必填
     * Required:true
     */
    @Required
    private String product;

    /**
     * 实例
     */
    private String instance;

    /**
     * 日志类型
     */
    private String logType;

    /**
     * ip
     */
    
    private List<String> ip;
    /**
     * pod name
     */
    
    private List<String> podName;
    /**
     * 命名空间
     */
    private String namespace;

    /**
     * 集群
     */
    private String cluster;

    /**
     * 容器名
     */
    private String containerName;

    /**
     * 文件路径
     */
    
    private List<String> filePath;
    /**
     * 开始时间纳秒数字，默认一小时前
     */
    private Long startTime;

    /**
     * 结束时间纳秒数字，默认现在
     */
    private Long endTime;

    /**
     * 正序：FORWARD、倒序：BACKWARD，默认BACKWARD
     */
    private String direction;

    /**
     * 查询数量数字，默认100
     */
    private Integer limit;

    /**
     * 步长时间（单位：秒），10、0.5
     */
    private Float step;

    /**
     * label过滤
     */
    
    private List<StreamFilter> streamFilter;
    /**
     * 行过滤
     */
    private LineFilter lineFilter;

    /**
     * 格式化过滤条件
     */
    private FormatFilter fmtFilter;



    /**
     * get 租户
     *
     * @return
     */
    public String getPin() {
        return pin;
    }

    /**
     * set 租户
     *
     * @param pin
     */
    public void setPin(String pin) {
        this.pin = pin;
    }


    /**
     * get UUID，同一批次保持一致，必填
     *
     * @return
     */
    public String getSearchId() {
        return searchId;
    }

    /**
     * set UUID，同一批次保持一致，必填
     *
     * @param searchId
     */
    public void setSearchId(String searchId) {
        this.searchId = searchId;
    }


    /**
     * get 产品名，必填
     *
     * @return
     */
    public String getProduct() {
        return product;
    }

    /**
     * set 产品名，必填
     *
     * @param product
     */
    public void setProduct(String product) {
        this.product = product;
    }


    /**
     * get 实例
     *
     * @return
     */
    public String getInstance() {
        return instance;
    }

    /**
     * set 实例
     *
     * @param instance
     */
    public void setInstance(String instance) {
        this.instance = instance;
    }


    /**
     * get 日志类型
     *
     * @return
     */
    public String getLogType() {
        return logType;
    }

    /**
     * set 日志类型
     *
     * @param logType
     */
    public void setLogType(String logType) {
        this.logType = logType;
    }


    /**
    * get ip
    *
    * @return
    */
    public List<String> getIp() {
        return ip;
    }

    /**
    * set ip
    *
    * @param ip
    */
    public void setIp(List<String> ip) {
        this.ip = ip;
    }


    /**
    * get pod name
    *
    * @return
    */
    public List<String> getPodName() {
        return podName;
    }

    /**
    * set pod name
    *
    * @param podName
    */
    public void setPodName(List<String> podName) {
        this.podName = podName;
    }


    /**
     * get 命名空间
     *
     * @return
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * set 命名空间
     *
     * @param namespace
     */
    public void setNamespace(String namespace) {
        this.namespace = namespace;
    }


    /**
     * get 集群
     *
     * @return
     */
    public String getCluster() {
        return cluster;
    }

    /**
     * set 集群
     *
     * @param cluster
     */
    public void setCluster(String cluster) {
        this.cluster = cluster;
    }


    /**
     * get 容器名
     *
     * @return
     */
    public String getContainerName() {
        return containerName;
    }

    /**
     * set 容器名
     *
     * @param containerName
     */
    public void setContainerName(String containerName) {
        this.containerName = containerName;
    }


    /**
    * get 文件路径
    *
    * @return
    */
    public List<String> getFilePath() {
        return filePath;
    }

    /**
    * set 文件路径
    *
    * @param filePath
    */
    public void setFilePath(List<String> filePath) {
        this.filePath = filePath;
    }


    /**
     * get 开始时间纳秒数字，默认一小时前
     *
     * @return
     */
    public Long getStartTime() {
        return startTime;
    }

    /**
     * set 开始时间纳秒数字，默认一小时前
     *
     * @param startTime
     */
    public void setStartTime(Long startTime) {
        this.startTime = startTime;
    }


    /**
     * get 结束时间纳秒数字，默认现在
     *
     * @return
     */
    public Long getEndTime() {
        return endTime;
    }

    /**
     * set 结束时间纳秒数字，默认现在
     *
     * @param endTime
     */
    public void setEndTime(Long endTime) {
        this.endTime = endTime;
    }


    /**
     * get 正序：FORWARD、倒序：BACKWARD，默认BACKWARD
     *
     * @return
     */
    public String getDirection() {
        return direction;
    }

    /**
     * set 正序：FORWARD、倒序：BACKWARD，默认BACKWARD
     *
     * @param direction
     */
    public void setDirection(String direction) {
        this.direction = direction;
    }


    /**
     * get 查询数量数字，默认100
     *
     * @return
     */
    public Integer getLimit() {
        return limit;
    }

    /**
     * set 查询数量数字，默认100
     *
     * @param limit
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }


    /**
     * get 步长时间（单位：秒），10、0.5
     *
     * @return
     */
    public Float getStep() {
        return step;
    }

    /**
     * set 步长时间（单位：秒），10、0.5
     *
     * @param step
     */
    public void setStep(Float step) {
        this.step = step;
    }


    /**
    * get label过滤
    *
    * @return
    */
    public List<StreamFilter> getStreamFilter() {
        return streamFilter;
    }

    /**
    * set label过滤
    *
    * @param streamFilter
    */
    public void setStreamFilter(List<StreamFilter> streamFilter) {
        this.streamFilter = streamFilter;
    }


    /**
     * get 行过滤
     *
     * @return
     */
    public LineFilter getLineFilter() {
        return lineFilter;
    }

    /**
     * set 行过滤
     *
     * @param lineFilter
     */
    public void setLineFilter(LineFilter lineFilter) {
        this.lineFilter = lineFilter;
    }


    /**
     * get 格式化过滤条件
     *
     * @return
     */
    public FormatFilter getFmtFilter() {
        return fmtFilter;
    }

    /**
     * set 格式化过滤条件
     *
     * @param fmtFilter
     */
    public void setFmtFilter(FormatFilter fmtFilter) {
        this.fmtFilter = fmtFilter;
    }



    /**
     * set 租户
     *
     * @param pin
     */
    public LogDetailRequest pin(String pin) {
        this.pin = pin;
        return this;
    }


    /**
     * set UUID，同一批次保持一致，必填
     *
     * @param searchId
     */
    public LogDetailRequest searchId(String searchId) {
        this.searchId = searchId;
        return this;
    }


    /**
     * set 产品名，必填
     *
     * @param product
     */
    public LogDetailRequest product(String product) {
        this.product = product;
        return this;
    }


    /**
     * set 实例
     *
     * @param instance
     */
    public LogDetailRequest instance(String instance) {
        this.instance = instance;
        return this;
    }


    /**
     * set 日志类型
     *
     * @param logType
     */
    public LogDetailRequest logType(String logType) {
        this.logType = logType;
        return this;
    }


    /**
    * set ip
    *
    * @param ip
    */
    public LogDetailRequest ip(List<String> ip) {
        this.ip = ip;
        return this;
    }


    /**
    * set pod name
    *
    * @param podName
    */
    public LogDetailRequest podName(List<String> podName) {
        this.podName = podName;
        return this;
    }


    /**
     * set 命名空间
     *
     * @param namespace
     */
    public LogDetailRequest namespace(String namespace) {
        this.namespace = namespace;
        return this;
    }


    /**
     * set 集群
     *
     * @param cluster
     */
    public LogDetailRequest cluster(String cluster) {
        this.cluster = cluster;
        return this;
    }


    /**
     * set 容器名
     *
     * @param containerName
     */
    public LogDetailRequest containerName(String containerName) {
        this.containerName = containerName;
        return this;
    }


    /**
    * set 文件路径
    *
    * @param filePath
    */
    public LogDetailRequest filePath(List<String> filePath) {
        this.filePath = filePath;
        return this;
    }


    /**
     * set 开始时间纳秒数字，默认一小时前
     *
     * @param startTime
     */
    public LogDetailRequest startTime(Long startTime) {
        this.startTime = startTime;
        return this;
    }


    /**
     * set 结束时间纳秒数字，默认现在
     *
     * @param endTime
     */
    public LogDetailRequest endTime(Long endTime) {
        this.endTime = endTime;
        return this;
    }


    /**
     * set 正序：FORWARD、倒序：BACKWARD，默认BACKWARD
     *
     * @param direction
     */
    public LogDetailRequest direction(String direction) {
        this.direction = direction;
        return this;
    }


    /**
     * set 查询数量数字，默认100
     *
     * @param limit
     */
    public LogDetailRequest limit(Integer limit) {
        this.limit = limit;
        return this;
    }


    /**
     * set 步长时间（单位：秒），10、0.5
     *
     * @param step
     */
    public LogDetailRequest step(Float step) {
        this.step = step;
        return this;
    }


    /**
    * set label过滤
    *
    * @param streamFilter
    */
    public LogDetailRequest streamFilter(List<StreamFilter> streamFilter) {
        this.streamFilter = streamFilter;
        return this;
    }


    /**
     * set 行过滤
     *
     * @param lineFilter
     */
    public LogDetailRequest lineFilter(LineFilter lineFilter) {
        this.lineFilter = lineFilter;
        return this;
    }


    /**
     * set 格式化过滤条件
     *
     * @param fmtFilter
     */
    public LogDetailRequest fmtFilter(FormatFilter fmtFilter) {
        this.fmtFilter = fmtFilter;
        return this;
    }



    /**
     * add item to ip
     *
     * @param ip
     */
    public void addIp(String ip) {
        if (this.ip == null) {
            this.ip = new ArrayList<>();
        }
        this.ip.add(ip);
    }

    /**
     * add item to pod name
     *
     * @param podName
     */
    public void addPodName(String podName) {
        if (this.podName == null) {
            this.podName = new ArrayList<>();
        }
        this.podName.add(podName);
    }

    /**
     * add item to 文件路径
     *
     * @param filePath
     */
    public void addFilePath(String filePath) {
        if (this.filePath == null) {
            this.filePath = new ArrayList<>();
        }
        this.filePath.add(filePath);
    }

    /**
     * add item to label过滤
     *
     * @param streamFilter
     */
    public void addStreamFilter(StreamFilter streamFilter) {
        if (this.streamFilter == null) {
            this.streamFilter = new ArrayList<>();
        }
        this.streamFilter.add(streamFilter);
    }
}