/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Logset APIs
 * 日志服务日志集相关管理控制接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.logs.model.Filter;
import com.jdcloud.sdk.service.logs.model.TagFilter;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 查询日志集列表。支持按照名称进行模糊查询。结果中包含了该日志集是否存在日志主题的信息。存在日志主题的日志集不允许删除。
 */
public class DescribeLogsetsRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 当前所在页，默认为1
     */
    private Long pageNumber;

    /**
     * 页面大小，默认为20；取值范围[1, 200]
     */
    private Long pageSize;

    /**
     * 日志集名称. 已废弃，需要通过filter传递
     */
    private String name;

    /**
     * 过滤条件，key，Values。 支持的key:  name
     */
    
    private List<Filter> filters;
    /**
     * 标签过滤条件，key，Values
     */
    
    private List<TagFilter> tags;
    /**
     * 资源组过滤条件
     */
    
    private List<String> resourceGroupIds;
    /**
     * 地域 Id
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 当前所在页，默认为1
     *
     * @return
     */
    public Long getPageNumber() {
        return pageNumber;
    }

    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
    }


    /**
     * get 页面大小，默认为20；取值范围[1, 200]
     *
     * @return
     */
    public Long getPageSize() {
        return pageSize;
    }

    /**
     * set 页面大小，默认为20；取值范围[1, 200]
     *
     * @param pageSize
     */
    public void setPageSize(Long pageSize) {
        this.pageSize = pageSize;
    }


    /**
     * get 日志集名称. 已废弃，需要通过filter传递
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 日志集名称. 已废弃，需要通过filter传递
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
    * get 过滤条件，key，Values。 支持的key:  name
    *
    * @return
    */
    public List<Filter> getFilters() {
        return filters;
    }

    /**
    * set 过滤条件，key，Values。 支持的key:  name
    *
    * @param filters
    */
    public void setFilters(List<Filter> filters) {
        this.filters = filters;
    }


    /**
    * get 标签过滤条件，key，Values
    *
    * @return
    */
    public List<TagFilter> getTags() {
        return tags;
    }

    /**
    * set 标签过滤条件，key，Values
    *
    * @param tags
    */
    public void setTags(List<TagFilter> tags) {
        this.tags = tags;
    }


    /**
    * get 资源组过滤条件
    *
    * @return
    */
    public List<String> getResourceGroupIds() {
        return resourceGroupIds;
    }

    /**
    * set 资源组过滤条件
    *
    * @param resourceGroupIds
    */
    public void setResourceGroupIds(List<String> resourceGroupIds) {
        this.resourceGroupIds = resourceGroupIds;
    }


    /**
     * get 地域 Id
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 当前所在页，默认为1
     *
     * @param pageNumber
     */
    public DescribeLogsetsRequest pageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }


    /**
     * set 页面大小，默认为20；取值范围[1, 200]
     *
     * @param pageSize
     */
    public DescribeLogsetsRequest pageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }


    /**
     * set 日志集名称. 已废弃，需要通过filter传递
     *
     * @param name
     */
    public DescribeLogsetsRequest name(String name) {
        this.name = name;
        return this;
    }


    /**
    * set 过滤条件，key，Values。 支持的key:  name
    *
    * @param filters
    */
    public DescribeLogsetsRequest filters(List<Filter> filters) {
        this.filters = filters;
        return this;
    }


    /**
    * set 标签过滤条件，key，Values
    *
    * @param tags
    */
    public DescribeLogsetsRequest tags(List<TagFilter> tags) {
        this.tags = tags;
        return this;
    }


    /**
    * set 资源组过滤条件
    *
    * @param resourceGroupIds
    */
    public DescribeLogsetsRequest resourceGroupIds(List<String> resourceGroupIds) {
        this.resourceGroupIds = resourceGroupIds;
        return this;
    }


    /**
     * set 地域 Id
     *
     * @param regionId
     */
    public DescribeLogsetsRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 过滤条件，key，Values。 支持的key:  name
     *
     * @param filter
     */
    public void addFilter(Filter filter) {
        if (this.filters == null) {
            this.filters = new ArrayList<>();
        }
        this.filters.add(filter);
    }

    /**
     * add item to 标签过滤条件，key，Values
     *
     * @param tag
     */
    public void addTag(TagFilter tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }

    /**
     * add item to 资源组过滤条件
     *
     * @param resourceGroupId
     */
    public void addResourceGroupId(String resourceGroupId) {
        if (this.resourceGroupIds == null) {
            this.resourceGroupIds = new ArrayList<>();
        }
        this.resourceGroupIds.add(resourceGroupId);
    }
}