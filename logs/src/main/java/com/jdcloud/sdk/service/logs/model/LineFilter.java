/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;

/**
 * lineFilter
 */
public class LineFilter  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * k
     */
    
    private List<String> keywords;
    /**
     * v
     */
    
    private List<String> excludeWords;
    /**
     * 表达式
     */
    
    private List<String> regex;
    /**
     * 表达式
     */
    
    private List<String> excludeRegex;


    /**
    * get k
    *
    * @return
    */
    public List<String> getKeywords() {
        return keywords;
    }

    /**
    * set k
    *
    * @param keywords
    */
    public void setKeywords(List<String> keywords) {
        this.keywords = keywords;
    }


    /**
    * get v
    *
    * @return
    */
    public List<String> getExcludeWords() {
        return excludeWords;
    }

    /**
    * set v
    *
    * @param excludeWords
    */
    public void setExcludeWords(List<String> excludeWords) {
        this.excludeWords = excludeWords;
    }


    /**
    * get 表达式
    *
    * @return
    */
    public List<String> getRegex() {
        return regex;
    }

    /**
    * set 表达式
    *
    * @param regex
    */
    public void setRegex(List<String> regex) {
        this.regex = regex;
    }


    /**
    * get 表达式
    *
    * @return
    */
    public List<String> getExcludeRegex() {
        return excludeRegex;
    }

    /**
    * set 表达式
    *
    * @param excludeRegex
    */
    public void setExcludeRegex(List<String> excludeRegex) {
        this.excludeRegex = excludeRegex;
    }



    /**
    * set k
    *
    * @param keywords
    */
    public LineFilter keywords(List<String> keywords) {
        this.keywords = keywords;
        return this;
    }


    /**
    * set v
    *
    * @param excludeWords
    */
    public LineFilter excludeWords(List<String> excludeWords) {
        this.excludeWords = excludeWords;
        return this;
    }


    /**
    * set 表达式
    *
    * @param regex
    */
    public LineFilter regex(List<String> regex) {
        this.regex = regex;
        return this;
    }


    /**
    * set 表达式
    *
    * @param excludeRegex
    */
    public LineFilter excludeRegex(List<String> excludeRegex) {
        this.excludeRegex = excludeRegex;
        return this;
    }



    /**
     * add item to k
     *
     * @param keyword
     */
    public void addKeyword(String keyword) {
        if (this.keywords == null) {
            this.keywords = new ArrayList<>();
        }
        this.keywords.add(keyword);
    }

    /**
     * add item to v
     *
     * @param excludeWord
     */
    public void addExcludeWord(String excludeWord) {
        if (this.excludeWords == null) {
            this.excludeWords = new ArrayList<>();
        }
        this.excludeWords.add(excludeWord);
    }

    /**
     * add item to 表达式
     *
     * @param regex
     */
    public void addRegex(String regex) {
        if (this.regex == null) {
            this.regex = new ArrayList<>();
        }
        this.regex.add(regex);
    }

    /**
     * add item to 表达式
     *
     * @param excludeRegex
     */
    public void addExcludeRegex(String excludeRegex) {
        if (this.excludeRegex == null) {
            this.excludeRegex = new ArrayList<>();
        }
        this.excludeRegex.add(excludeRegex);
    }
}