/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Push APIs
 * 自定义日志上报
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.logs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.logs.model.Entry;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 自定义日志上报。
 */
public class PushRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 全局 strean 日志流标识符（建议起能唯一界定一个文件的名字，如 /i-iqnvqpinkjiq/app.log），不传则写入default日志流中（会导致很多文件混合在一起，不推荐）
     */
    private String stream;

    /**
     * 全局时间戳，UTC格式，最多支持到纳秒级别，不传入则取服务器时间。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     */
    private String timestamp;

    /**
     * 全局标签 map[string]string
     */
    private Object tags;

    /**
     * 日志数据
     * Required:true
     */
    @Required
    private List<Entry> entries;

    /**
     * 日志主题uid
     * Required:true
     */
    @Required
    private String logtopicUID;


    /**
     * get 全局 strean 日志流标识符（建议起能唯一界定一个文件的名字，如 /i-iqnvqpinkjiq/app.log），不传则写入default日志流中（会导致很多文件混合在一起，不推荐）
     *
     * @return
     */
    public String getStream() {
        return stream;
    }

    /**
     * set 全局 strean 日志流标识符（建议起能唯一界定一个文件的名字，如 /i-iqnvqpinkjiq/app.log），不传则写入default日志流中（会导致很多文件混合在一起，不推荐）
     *
     * @param stream
     */
    public void setStream(String stream) {
        this.stream = stream;
    }

    /**
     * get 全局时间戳，UTC格式，最多支持到纳秒级别，不传入则取服务器时间。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @return
     */
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * set 全局时间戳，UTC格式，最多支持到纳秒级别，不传入则取服务器时间。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @param timestamp
     */
    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * get 全局标签 map[string]string
     *
     * @return
     */
    public Object getTags() {
        return tags;
    }

    /**
     * set 全局标签 map[string]string
     *
     * @param tags
     */
    public void setTags(Object tags) {
        this.tags = tags;
    }

    /**
     * get 日志数据
     *
     * @return
     */
    public List<Entry> getEntries() {
        return entries;
    }

    /**
     * set 日志数据
     *
     * @param entries
     */
    public void setEntries(List<Entry> entries) {
        this.entries = entries;
    }

    /**
     * get 日志主题uid
     *
     * @return
     */
    public String getLogtopicUID() {
        return logtopicUID;
    }

    /**
     * set 日志主题uid
     *
     * @param logtopicUID
     */
    public void setLogtopicUID(String logtopicUID) {
        this.logtopicUID = logtopicUID;
    }


    /**
     * set 全局 strean 日志流标识符（建议起能唯一界定一个文件的名字，如 /i-iqnvqpinkjiq/app.log），不传则写入default日志流中（会导致很多文件混合在一起，不推荐）
     *
     * @param stream
     */
    public PushRequest stream(String stream) {
        this.stream = stream;
        return this;
    }

    /**
     * set 全局时间戳，UTC格式，最多支持到纳秒级别，不传入则取服务器时间。如 2019-04-08T03:08:04.437670934Z、2019-04-08T03:08:04Z、2019-04-08T03:08:04.123Z
     *
     * @param timestamp
     */
    public PushRequest timestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * set 全局标签 map[string]string
     *
     * @param tags
     */
    public PushRequest tags(Object tags) {
        this.tags = tags;
        return this;
    }

    /**
     * set 日志数据
     *
     * @param entries
     */
    public PushRequest entries(List<Entry> entries) {
        this.entries = entries;
        return this;
    }

    /**
     * set 日志主题uid
     *
     * @param logtopicUID
     */
    public PushRequest logtopicUID(String logtopicUID) {
        this.logtopicUID = logtopicUID;
        return this;
    }


    /**
     * add item to 日志数据
     *
     * @param entrie
     */
    public void addEntrie(Entry entrie) {
        if (this.entries == null) {
            this.entries = new ArrayList<>();
        }
        this.entries.add(entrie);
    }

}