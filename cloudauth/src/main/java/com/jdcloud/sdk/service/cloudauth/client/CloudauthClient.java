/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 京东云实人认证-OpenAPI接口
 * 京东云实人认证-OpenAPI接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cloudauth.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.cloudauth.model.DescribeApplyStatusRequest;
import com.jdcloud.sdk.service.cloudauth.model.DescribeApplyStatusResponse;
import com.jdcloud.sdk.service.cloudauth.client.DescribeApplyStatusExecutor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalMobileRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalMobileResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalMobileExecutor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard4DetailRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard4DetailResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalBankcard4DetailExecutor;
import com.jdcloud.sdk.service.cloudauth.model.QueryBankBranchListRequest;
import com.jdcloud.sdk.service.cloudauth.model.QueryBankBranchListResponse;
import com.jdcloud.sdk.service.cloudauth.client.QueryBankBranchListExecutor;
import com.jdcloud.sdk.service.cloudauth.model.OneClickRequest;
import com.jdcloud.sdk.service.cloudauth.model.OneClickResponse;
import com.jdcloud.sdk.service.cloudauth.client.OneClickExecutor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalAuthRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalAuthResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalAuthExecutor;
import com.jdcloud.sdk.service.cloudauth.model.QueryBankListRequest;
import com.jdcloud.sdk.service.cloudauth.model.QueryBankListResponse;
import com.jdcloud.sdk.service.cloudauth.client.QueryBankListExecutor;
import com.jdcloud.sdk.service.cloudauth.model.IDCardRequest;
import com.jdcloud.sdk.service.cloudauth.model.IDCardResponse;
import com.jdcloud.sdk.service.cloudauth.client.IDCardExecutor;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveResultNewRequest;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveResultNewResponse;
import com.jdcloud.sdk.service.cloudauth.client.GetAliveResultNewExecutor;
import com.jdcloud.sdk.service.cloudauth.model.QueryCityListRequest;
import com.jdcloud.sdk.service.cloudauth.model.QueryCityListResponse;
import com.jdcloud.sdk.service.cloudauth.client.QueryCityListExecutor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard3DetailRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard3DetailResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalBankcard3DetailExecutor;
import com.jdcloud.sdk.service.cloudauth.model.AddressInfoRequest;
import com.jdcloud.sdk.service.cloudauth.model.AddressInfoResponse;
import com.jdcloud.sdk.service.cloudauth.client.AddressInfoExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyInfo3Request;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyInfo3Response;
import com.jdcloud.sdk.service.cloudauth.client.CheckCompanyInfo3Executor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard4OtherRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard4OtherResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalBankcard4OtherExecutor;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveResultRequest;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveResultResponse;
import com.jdcloud.sdk.service.cloudauth.client.GetAliveResultExecutor;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveUrlRequest;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveUrlResponse;
import com.jdcloud.sdk.service.cloudauth.client.GetAliveUrlExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CompanyTransferSimpleRequest;
import com.jdcloud.sdk.service.cloudauth.model.CompanyTransferSimpleResponse;
import com.jdcloud.sdk.service.cloudauth.client.CompanyTransferSimpleExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyTransferRequest;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyTransferResponse;
import com.jdcloud.sdk.service.cloudauth.client.CheckCompanyTransferExecutor;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveUrlNewRequest;
import com.jdcloud.sdk.service.cloudauth.model.GetAliveUrlNewResponse;
import com.jdcloud.sdk.service.cloudauth.client.GetAliveUrlNewExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyInfoRequest;
import com.jdcloud.sdk.service.cloudauth.model.CheckCompanyInfoResponse;
import com.jdcloud.sdk.service.cloudauth.client.CheckCompanyInfoExecutor;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard3OtherRequest;
import com.jdcloud.sdk.service.cloudauth.model.PersonalBankcard3OtherResponse;
import com.jdcloud.sdk.service.cloudauth.client.PersonalBankcard3OtherExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CheckLegalPersonRequest;
import com.jdcloud.sdk.service.cloudauth.model.CheckLegalPersonResponse;
import com.jdcloud.sdk.service.cloudauth.client.CheckLegalPersonExecutor;
import com.jdcloud.sdk.service.cloudauth.model.AddressDetailRequest;
import com.jdcloud.sdk.service.cloudauth.model.AddressDetailResponse;
import com.jdcloud.sdk.service.cloudauth.client.AddressDetailExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CompanyTransferRequest;
import com.jdcloud.sdk.service.cloudauth.model.CompanyTransferResponse;
import com.jdcloud.sdk.service.cloudauth.client.CompanyTransferExecutor;
import com.jdcloud.sdk.service.cloudauth.model.QueryCompanyTransferRequest;
import com.jdcloud.sdk.service.cloudauth.model.QueryCompanyTransferResponse;
import com.jdcloud.sdk.service.cloudauth.client.QueryCompanyTransferExecutor;
import com.jdcloud.sdk.service.cloudauth.model.CheckLegalPersonDetailRequest;
import com.jdcloud.sdk.service.cloudauth.model.CheckLegalPersonDetailResponse;
import com.jdcloud.sdk.service.cloudauth.client.CheckLegalPersonDetailExecutor;
import com.jdcloud.sdk.service.cloudauth.model.QueryProvinceListRequest;
import com.jdcloud.sdk.service.cloudauth.model.QueryProvinceListResponse;
import com.jdcloud.sdk.service.cloudauth.client.QueryProvinceListExecutor;

/**
 * cloudauthClient
 */
public class CloudauthClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.11";
    public final static String DefaultEndpoint = "cloudauth.jdcloud-api.com";
    public final static String ServiceName = "cloudauth";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private CloudauthClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询服务开通状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeApplyStatusResponse describeApplyStatus(DescribeApplyStatusRequest request) throws JdcloudSdkException {
        return new DescribeApplyStatusExecutor().client(this).execute(request);
    }

    /**
     * 个人手机号三要素详版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalMobileResponse personalMobile(PersonalMobileRequest request) throws JdcloudSdkException {
        return new PersonalMobileExecutor().client(this).execute(request);
    }

    /**
     * 个人银行卡四要素详版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalBankcard4DetailResponse personalBankcard4Detail(PersonalBankcard4DetailRequest request) throws JdcloudSdkException {
        return new PersonalBankcard4DetailExecutor().client(this).execute(request);
    }

    /**
     * 查询城市下银行分行列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBankBranchListResponse queryBankBranchList(QueryBankBranchListRequest request) throws JdcloudSdkException {
        return new QueryBankBranchListExecutor().client(this).execute(request);
    }

    /**
     * 一键登录
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OneClickResponse oneClick(OneClickRequest request) throws JdcloudSdkException {
        return new OneClickExecutor().client(this).execute(request);
    }

    /**
     * 个人实名认证
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalAuthResponse personalAuth(PersonalAuthRequest request) throws JdcloudSdkException {
        return new PersonalAuthExecutor().client(this).execute(request);
    }

    /**
     * 查询所有支持的银行
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBankListResponse queryBankList(QueryBankListRequest request) throws JdcloudSdkException {
        return new QueryBankListExecutor().client(this).execute(request);
    }

    /**
     * 个人身份证OCR
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public IDCardResponse iDCard(IDCardRequest request) throws JdcloudSdkException {
        return new IDCardExecutor().client(this).execute(request);
    }

    /**
     * H5活体检测结果新版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAliveResultNewResponse getAliveResultNew(GetAliveResultNewRequest request) throws JdcloudSdkException {
        return new GetAliveResultNewExecutor().client(this).execute(request);
    }

    /**
     * 查询省份下城市编码
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCityListResponse queryCityList(QueryCityListRequest request) throws JdcloudSdkException {
        return new QueryCityListExecutor().client(this).execute(request);
    }

    /**
     * 个人银行卡三要素详版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalBankcard3DetailResponse personalBankcard3Detail(PersonalBankcard3DetailRequest request) throws JdcloudSdkException {
        return new PersonalBankcard3DetailExecutor().client(this).execute(request);
    }

    /**
     * 失联地址识别状态查询
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddressInfoResponse addressInfo(AddressInfoRequest request) throws JdcloudSdkException {
        return new AddressInfoExecutor().client(this).execute(request);
    }

    /**
     * 企业三要素
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckCompanyInfo3Response checkCompanyInfo3(CheckCompanyInfo3Request request) throws JdcloudSdkException {
        return new CheckCompanyInfo3Executor().client(this).execute(request);
    }

    /**
     * 个人银行卡四要素非身份证版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalBankcard4OtherResponse personalBankcard4Other(PersonalBankcard4OtherRequest request) throws JdcloudSdkException {
        return new PersonalBankcard4OtherExecutor().client(this).execute(request);
    }

    /**
     * H5活体检测结果
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAliveResultResponse getAliveResult(GetAliveResultRequest request) throws JdcloudSdkException {
        return new GetAliveResultExecutor().client(this).execute(request);
    }

    /**
     * H5活体检测获取采集页面链接
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAliveUrlResponse getAliveUrl(GetAliveUrlRequest request) throws JdcloudSdkException {
        return new GetAliveUrlExecutor().client(this).execute(request);
    }

    /**
     * 对公银行账户打款(随机小额)——简单版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CompanyTransferSimpleResponse companyTransferSimple(CompanyTransferSimpleRequest request) throws JdcloudSdkException {
        return new CompanyTransferSimpleExecutor().client(this).execute(request);
    }

    /**
     * 对公打款验证
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckCompanyTransferResponse checkCompanyTransfer(CheckCompanyTransferRequest request) throws JdcloudSdkException {
        return new CheckCompanyTransferExecutor().client(this).execute(request);
    }

    /**
     * H5活体检测获取采集页面链接新版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAliveUrlNewResponse getAliveUrlNew(GetAliveUrlNewRequest request) throws JdcloudSdkException {
        return new GetAliveUrlNewExecutor().client(this).execute(request);
    }

    /**
     * 企业基础信息核验
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckCompanyInfoResponse checkCompanyInfo(CheckCompanyInfoRequest request) throws JdcloudSdkException {
        return new CheckCompanyInfoExecutor().client(this).execute(request);
    }

    /**
     * 个人银行卡三要素非身份证版
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PersonalBankcard3OtherResponse personalBankcard3Other(PersonalBankcard3OtherRequest request) throws JdcloudSdkException {
        return new PersonalBankcard3OtherExecutor().client(this).execute(request);
    }

    /**
     * 法人信息校验
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckLegalPersonResponse checkLegalPerson(CheckLegalPersonRequest request) throws JdcloudSdkException {
        return new CheckLegalPersonExecutor().client(this).execute(request);
    }

    /**
     * 失联地址识别结果
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddressDetailResponse addressDetail(AddressDetailRequest request) throws JdcloudSdkException {
        return new AddressDetailExecutor().client(this).execute(request);
    }

    /**
     * 对公银行账户打款(随机小额)
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CompanyTransferResponse companyTransfer(CompanyTransferRequest request) throws JdcloudSdkException {
        return new CompanyTransferExecutor().client(this).execute(request);
    }

    /**
     * 对公打款状态查询
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCompanyTransferResponse queryCompanyTransfer(QueryCompanyTransferRequest request) throws JdcloudSdkException {
        return new QueryCompanyTransferExecutor().client(this).execute(request);
    }

    /**
     * 法人信息校验(详版)
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckLegalPersonDetailResponse checkLegalPersonDetail(CheckLegalPersonDetailRequest request) throws JdcloudSdkException {
        return new CheckLegalPersonDetailExecutor().client(this).execute(request);
    }

    /**
     * 查询所有省份列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryProvinceListResponse queryProvinceList(QueryProvinceListRequest request) throws JdcloudSdkException {
        return new QueryProvinceListExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public CloudauthClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private CloudauthClient cloudauthClient;

        public DefaultBuilder() {
            cloudauthClient = new CloudauthClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            cloudauthClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            cloudauthClient.httpRequestConfig = config;
            return this;
        }

        public CloudauthClient build() throws JdcloudSdkException {

            if (cloudauthClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                cloudauthClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (cloudauthClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("CloudauthClient build error: jdcloud credentials provider not set");
                }
            }
            if (cloudauthClient.httpRequestConfig == null) {
                cloudauthClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (cloudauthClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("CloudauthClient build error: http request config not set");
                }
            }
            return cloudauthClient;
        }

        public Builder environment(Environment environment) {
            cloudauthClient.environment = environment;
            return this;
        }
    }
}
