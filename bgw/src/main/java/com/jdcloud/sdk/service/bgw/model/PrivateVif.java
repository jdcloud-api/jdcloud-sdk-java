/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bgw.model;

import java.util.List;
import java.util.ArrayList;

/**
 * privateVif
 */
public class PrivateVif  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 通道的Id
     */
    private String privateVifId;

    /**
     * 通道的名称
     */
    private String privateVifName;

    /**
     * 连接Id
     */
    private String connectionId;

    /**
     * 通道类型,hosted:托管通道; directed:专线通道
     */
    private String type;

    /**
     * 通道的owner:用户pin
     */
    private String privateVifOwner;

    /**
     * 边界网关的Id
     */
    private String bgwId;

    /**
     * 通道涉及BgpPeer信息
     */
    
    private List<BgpPeer> bgpPeers;
    /**
     * 通道的业务vlan,取值范围 [1,4000]
     */
    private Integer vlan;

    /**
     * 通道的状态，取值为：Confirming(待确认),Rejected（已拒绝）,Pending（配置中）,Active（可用）,Down（不可用）,Deleting（删除中）,Deleted（已删除）,Unknown（未知状态）,InActive(不可用)
     */
    private String privateVifStatus;

    /**
     * 通道的描述
     */
    private String description;

    /**
     * 通道创建的时间
     */
    private String createdTime;

    /**
     * 是否开启bgp，仅支持开启
     */
    private Boolean enableBgp;

    /**
     * 通道Peer相关信息详情
     */
    
    private List<Peer> peers;
    /**
     * 通道Bgp相关信息详情
     */
    private Bgp bgp;

    /**
     * 通道健康检查相关信息详情
     */
    private HealthCheck healthCheck;



    /**
     * get 通道的Id
     *
     * @return
     */
    public String getPrivateVifId() {
        return privateVifId;
    }

    /**
     * set 通道的Id
     *
     * @param privateVifId
     */
    public void setPrivateVifId(String privateVifId) {
        this.privateVifId = privateVifId;
    }


    /**
     * get 通道的名称
     *
     * @return
     */
    public String getPrivateVifName() {
        return privateVifName;
    }

    /**
     * set 通道的名称
     *
     * @param privateVifName
     */
    public void setPrivateVifName(String privateVifName) {
        this.privateVifName = privateVifName;
    }


    /**
     * get 连接Id
     *
     * @return
     */
    public String getConnectionId() {
        return connectionId;
    }

    /**
     * set 连接Id
     *
     * @param connectionId
     */
    public void setConnectionId(String connectionId) {
        this.connectionId = connectionId;
    }


    /**
     * get 通道类型,hosted:托管通道; directed:专线通道
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set 通道类型,hosted:托管通道; directed:专线通道
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }


    /**
     * get 通道的owner:用户pin
     *
     * @return
     */
    public String getPrivateVifOwner() {
        return privateVifOwner;
    }

    /**
     * set 通道的owner:用户pin
     *
     * @param privateVifOwner
     */
    public void setPrivateVifOwner(String privateVifOwner) {
        this.privateVifOwner = privateVifOwner;
    }


    /**
     * get 边界网关的Id
     *
     * @return
     */
    public String getBgwId() {
        return bgwId;
    }

    /**
     * set 边界网关的Id
     *
     * @param bgwId
     */
    public void setBgwId(String bgwId) {
        this.bgwId = bgwId;
    }


    /**
    * get 通道涉及BgpPeer信息
    *
    * @return
    */
    public List<BgpPeer> getBgpPeers() {
        return bgpPeers;
    }

    /**
    * set 通道涉及BgpPeer信息
    *
    * @param bgpPeers
    */
    public void setBgpPeers(List<BgpPeer> bgpPeers) {
        this.bgpPeers = bgpPeers;
    }


    /**
     * get 通道的业务vlan,取值范围 [1,4000]
     *
     * @return
     */
    public Integer getVlan() {
        return vlan;
    }

    /**
     * set 通道的业务vlan,取值范围 [1,4000]
     *
     * @param vlan
     */
    public void setVlan(Integer vlan) {
        this.vlan = vlan;
    }


    /**
     * get 通道的状态，取值为：Confirming(待确认),Rejected（已拒绝）,Pending（配置中）,Active（可用）,Down（不可用）,Deleting（删除中）,Deleted（已删除）,Unknown（未知状态）,InActive(不可用)
     *
     * @return
     */
    public String getPrivateVifStatus() {
        return privateVifStatus;
    }

    /**
     * set 通道的状态，取值为：Confirming(待确认),Rejected（已拒绝）,Pending（配置中）,Active（可用）,Down（不可用）,Deleting（删除中）,Deleted（已删除）,Unknown（未知状态）,InActive(不可用)
     *
     * @param privateVifStatus
     */
    public void setPrivateVifStatus(String privateVifStatus) {
        this.privateVifStatus = privateVifStatus;
    }


    /**
     * get 通道的描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 通道的描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 通道创建的时间
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set 通道创建的时间
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


    /**
     * get 是否开启bgp，仅支持开启
     *
     * @return
     */
    public Boolean getEnableBgp() {
        return enableBgp;
    }

    /**
     * set 是否开启bgp，仅支持开启
     *
     * @param enableBgp
     */
    public void setEnableBgp(Boolean enableBgp) {
        this.enableBgp = enableBgp;
    }


    /**
    * get 通道Peer相关信息详情
    *
    * @return
    */
    public List<Peer> getPeers() {
        return peers;
    }

    /**
    * set 通道Peer相关信息详情
    *
    * @param peers
    */
    public void setPeers(List<Peer> peers) {
        this.peers = peers;
    }


    /**
     * get 通道Bgp相关信息详情
     *
     * @return
     */
    public Bgp getBgp() {
        return bgp;
    }

    /**
     * set 通道Bgp相关信息详情
     *
     * @param bgp
     */
    public void setBgp(Bgp bgp) {
        this.bgp = bgp;
    }


    /**
     * get 通道健康检查相关信息详情
     *
     * @return
     */
    public HealthCheck getHealthCheck() {
        return healthCheck;
    }

    /**
     * set 通道健康检查相关信息详情
     *
     * @param healthCheck
     */
    public void setHealthCheck(HealthCheck healthCheck) {
        this.healthCheck = healthCheck;
    }



    /**
     * set 通道的Id
     *
     * @param privateVifId
     */
    public PrivateVif privateVifId(String privateVifId) {
        this.privateVifId = privateVifId;
        return this;
    }


    /**
     * set 通道的名称
     *
     * @param privateVifName
     */
    public PrivateVif privateVifName(String privateVifName) {
        this.privateVifName = privateVifName;
        return this;
    }


    /**
     * set 连接Id
     *
     * @param connectionId
     */
    public PrivateVif connectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }


    /**
     * set 通道类型,hosted:托管通道; directed:专线通道
     *
     * @param type
     */
    public PrivateVif type(String type) {
        this.type = type;
        return this;
    }


    /**
     * set 通道的owner:用户pin
     *
     * @param privateVifOwner
     */
    public PrivateVif privateVifOwner(String privateVifOwner) {
        this.privateVifOwner = privateVifOwner;
        return this;
    }


    /**
     * set 边界网关的Id
     *
     * @param bgwId
     */
    public PrivateVif bgwId(String bgwId) {
        this.bgwId = bgwId;
        return this;
    }


    /**
    * set 通道涉及BgpPeer信息
    *
    * @param bgpPeers
    */
    public PrivateVif bgpPeers(List<BgpPeer> bgpPeers) {
        this.bgpPeers = bgpPeers;
        return this;
    }


    /**
     * set 通道的业务vlan,取值范围 [1,4000]
     *
     * @param vlan
     */
    public PrivateVif vlan(Integer vlan) {
        this.vlan = vlan;
        return this;
    }


    /**
     * set 通道的状态，取值为：Confirming(待确认),Rejected（已拒绝）,Pending（配置中）,Active（可用）,Down（不可用）,Deleting（删除中）,Deleted（已删除）,Unknown（未知状态）,InActive(不可用)
     *
     * @param privateVifStatus
     */
    public PrivateVif privateVifStatus(String privateVifStatus) {
        this.privateVifStatus = privateVifStatus;
        return this;
    }


    /**
     * set 通道的描述
     *
     * @param description
     */
    public PrivateVif description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 通道创建的时间
     *
     * @param createdTime
     */
    public PrivateVif createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }


    /**
     * set 是否开启bgp，仅支持开启
     *
     * @param enableBgp
     */
    public PrivateVif enableBgp(Boolean enableBgp) {
        this.enableBgp = enableBgp;
        return this;
    }


    /**
    * set 通道Peer相关信息详情
    *
    * @param peers
    */
    public PrivateVif peers(List<Peer> peers) {
        this.peers = peers;
        return this;
    }


    /**
     * set 通道Bgp相关信息详情
     *
     * @param bgp
     */
    public PrivateVif bgp(Bgp bgp) {
        this.bgp = bgp;
        return this;
    }


    /**
     * set 通道健康检查相关信息详情
     *
     * @param healthCheck
     */
    public PrivateVif healthCheck(HealthCheck healthCheck) {
        this.healthCheck = healthCheck;
        return this;
    }



    /**
     * add item to 通道涉及BgpPeer信息
     *
     * @param bgpPeer
     */
    public void addBgpPeer(BgpPeer bgpPeer) {
        if (this.bgpPeers == null) {
            this.bgpPeers = new ArrayList<>();
        }
        this.bgpPeers.add(bgpPeer);
    }

    /**
     * add item to 通道Peer相关信息详情
     *
     * @param peer
     */
    public void addPeer(Peer peer) {
        if (this.peers == null) {
            this.peers = new ArrayList<>();
        }
        this.peers.add(peer);
    }
}