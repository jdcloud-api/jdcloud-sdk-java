/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bgw.model;


/**
 * locationSpec
 */
public class LocationSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 专线创建的地域编码;只在创建自助连接时生效，通过调用[describeLocations](../Location/describeLocations.md)接口获取
     */
    private String locationCode;

    /**
     * 专线接入端口规格代码，在创建自助连接和托管专线时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     */
    private String locationPortSpecCode;

    /**
     * 专线接入运营商代码，只在创建自助连接时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     */
    private String locationISPCode;



    /**
     * get 专线创建的地域编码;只在创建自助连接时生效，通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @return
     */
    public String getLocationCode() {
        return locationCode;
    }

    /**
     * set 专线创建的地域编码;只在创建自助连接时生效，通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationCode
     */
    public void setLocationCode(String locationCode) {
        this.locationCode = locationCode;
    }


    /**
     * get 专线接入端口规格代码，在创建自助连接和托管专线时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @return
     */
    public String getLocationPortSpecCode() {
        return locationPortSpecCode;
    }

    /**
     * set 专线接入端口规格代码，在创建自助连接和托管专线时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationPortSpecCode
     */
    public void setLocationPortSpecCode(String locationPortSpecCode) {
        this.locationPortSpecCode = locationPortSpecCode;
    }


    /**
     * get 专线接入运营商代码，只在创建自助连接时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @return
     */
    public String getLocationISPCode() {
        return locationISPCode;
    }

    /**
     * set 专线接入运营商代码，只在创建自助连接时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationISPCode
     */
    public void setLocationISPCode(String locationISPCode) {
        this.locationISPCode = locationISPCode;
    }



    /**
     * set 专线创建的地域编码;只在创建自助连接时生效，通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationCode
     */
    public LocationSpec locationCode(String locationCode) {
        this.locationCode = locationCode;
        return this;
    }


    /**
     * set 专线接入端口规格代码，在创建自助连接和托管专线时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationPortSpecCode
     */
    public LocationSpec locationPortSpecCode(String locationPortSpecCode) {
        this.locationPortSpecCode = locationPortSpecCode;
        return this;
    }


    /**
     * set 专线接入运营商代码，只在创建自助连接时生效.通过调用[describeLocations](../Location/describeLocations.md)接口获取
     *
     * @param locationISPCode
     */
    public LocationSpec locationISPCode(String locationISPCode) {
        this.locationISPCode = locationISPCode;
        return this;
    }


}