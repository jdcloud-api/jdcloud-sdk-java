/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bgw.model;

import java.util.List;
import java.util.ArrayList;

/**
 * modifyVpnConnectionSpec
 */
public class ModifyVpnConnectionSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * VPN连接的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     */
    private String vpnConnectionName;

    /**
     * VPN连接的描述，允许输入UTF-8编码下的全部字符，不超过256字符。
     */
    private String description;

    /**
     * “是否使用BGP路由，取值范围为：false（不使能）、true（使能）”
     */
    private Boolean bgpEnabled;

    /**
     * vpn connection policy，IPSec VPN的感兴趣流，用于第二阶段协商
     */
    
    private List<VpnTrafficSelectorSpec> trafficSelectors;


    /**
     * get VPN连接的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @return
     */
    public String getVpnConnectionName() {
        return vpnConnectionName;
    }

    /**
     * set VPN连接的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @param vpnConnectionName
     */
    public void setVpnConnectionName(String vpnConnectionName) {
        this.vpnConnectionName = vpnConnectionName;
    }


    /**
     * get VPN连接的描述，允许输入UTF-8编码下的全部字符，不超过256字符。
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set VPN连接的描述，允许输入UTF-8编码下的全部字符，不超过256字符。
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get “是否使用BGP路由，取值范围为：false（不使能）、true（使能）”
     *
     * @return
     */
    public Boolean getBgpEnabled() {
        return bgpEnabled;
    }

    /**
     * set “是否使用BGP路由，取值范围为：false（不使能）、true（使能）”
     *
     * @param bgpEnabled
     */
    public void setBgpEnabled(Boolean bgpEnabled) {
        this.bgpEnabled = bgpEnabled;
    }


    /**
    * get vpn connection policy，IPSec VPN的感兴趣流，用于第二阶段协商
    *
    * @return
    */
    public List<VpnTrafficSelectorSpec> getTrafficSelectors() {
        return trafficSelectors;
    }

    /**
    * set vpn connection policy，IPSec VPN的感兴趣流，用于第二阶段协商
    *
    * @param trafficSelectors
    */
    public void setTrafficSelectors(List<VpnTrafficSelectorSpec> trafficSelectors) {
        this.trafficSelectors = trafficSelectors;
    }



    /**
     * set VPN连接的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @param vpnConnectionName
     */
    public ModifyVpnConnectionSpec vpnConnectionName(String vpnConnectionName) {
        this.vpnConnectionName = vpnConnectionName;
        return this;
    }


    /**
     * set VPN连接的描述，允许输入UTF-8编码下的全部字符，不超过256字符。
     *
     * @param description
     */
    public ModifyVpnConnectionSpec description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set “是否使用BGP路由，取值范围为：false（不使能）、true（使能）”
     *
     * @param bgpEnabled
     */
    public ModifyVpnConnectionSpec bgpEnabled(Boolean bgpEnabled) {
        this.bgpEnabled = bgpEnabled;
        return this;
    }


    /**
    * set vpn connection policy，IPSec VPN的感兴趣流，用于第二阶段协商
    *
    * @param trafficSelectors
    */
    public ModifyVpnConnectionSpec trafficSelectors(List<VpnTrafficSelectorSpec> trafficSelectors) {
        this.trafficSelectors = trafficSelectors;
        return this;
    }



    /**
     * add item to vpn connection policy，IPSec VPN的感兴趣流，用于第二阶段协商
     *
     * @param trafficSelector
     */
    public void addTrafficSelector(VpnTrafficSelectorSpec trafficSelector) {
        if (this.trafficSelectors == null) {
            this.trafficSelectors = new ArrayList<>();
        }
        this.trafficSelectors.add(trafficSelector);
    }
}