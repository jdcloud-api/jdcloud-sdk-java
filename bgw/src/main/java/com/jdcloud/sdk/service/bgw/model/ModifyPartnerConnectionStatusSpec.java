/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bgw.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * modifyPartnerConnectionStatusSpec
 */
public class ModifyPartnerConnectionStatusSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 专线所有者的用户pin
     * Required:true
     */
    @Required
    private String connectionOwner;

    /**
     * 专线的状态，取值为 Pending(施工中),Confirming(等待确认),Deleted(删除)。状态流转只允许由Installation_Paying设置为Pending、由Pending设置为Confirming、由Deleting设置为Deleted
     * Required:true
     */
    @Required
    private String connectionStatus;



    /**
     * get 专线所有者的用户pin
     *
     * @return
     */
    public String getConnectionOwner() {
        return connectionOwner;
    }

    /**
     * set 专线所有者的用户pin
     *
     * @param connectionOwner
     */
    public void setConnectionOwner(String connectionOwner) {
        this.connectionOwner = connectionOwner;
    }


    /**
     * get 专线的状态，取值为 Pending(施工中),Confirming(等待确认),Deleted(删除)。状态流转只允许由Installation_Paying设置为Pending、由Pending设置为Confirming、由Deleting设置为Deleted
     *
     * @return
     */
    public String getConnectionStatus() {
        return connectionStatus;
    }

    /**
     * set 专线的状态，取值为 Pending(施工中),Confirming(等待确认),Deleted(删除)。状态流转只允许由Installation_Paying设置为Pending、由Pending设置为Confirming、由Deleting设置为Deleted
     *
     * @param connectionStatus
     */
    public void setConnectionStatus(String connectionStatus) {
        this.connectionStatus = connectionStatus;
    }



    /**
     * set 专线所有者的用户pin
     *
     * @param connectionOwner
     */
    public ModifyPartnerConnectionStatusSpec connectionOwner(String connectionOwner) {
        this.connectionOwner = connectionOwner;
        return this;
    }


    /**
     * set 专线的状态，取值为 Pending(施工中),Confirming(等待确认),Deleted(删除)。状态流转只允许由Installation_Paying设置为Pending、由Pending设置为Confirming、由Deleting设置为Deleted
     *
     * @param connectionStatus
     */
    public ModifyPartnerConnectionStatusSpec connectionStatus(String connectionStatus) {
        this.connectionStatus = connectionStatus;
        return this;
    }


}