/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bgw.model;


/**
 * nqa
 */
public class Nqa  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 连续两次发送探测报文的时间间隔。
     */
    private Integer txInterval;

    /**
     * 指定发送连续探测报文的个数。
     */
    private Integer thresholdCount;

    /**
     * 一次NQA探测的超时时间。
     */
    private Integer responseTimeout;



    /**
     * get 连续两次发送探测报文的时间间隔。
     *
     * @return
     */
    public Integer getTxInterval() {
        return txInterval;
    }

    /**
     * set 连续两次发送探测报文的时间间隔。
     *
     * @param txInterval
     */
    public void setTxInterval(Integer txInterval) {
        this.txInterval = txInterval;
    }


    /**
     * get 指定发送连续探测报文的个数。
     *
     * @return
     */
    public Integer getThresholdCount() {
        return thresholdCount;
    }

    /**
     * set 指定发送连续探测报文的个数。
     *
     * @param thresholdCount
     */
    public void setThresholdCount(Integer thresholdCount) {
        this.thresholdCount = thresholdCount;
    }


    /**
     * get 一次NQA探测的超时时间。
     *
     * @return
     */
    public Integer getResponseTimeout() {
        return responseTimeout;
    }

    /**
     * set 一次NQA探测的超时时间。
     *
     * @param responseTimeout
     */
    public void setResponseTimeout(Integer responseTimeout) {
        this.responseTimeout = responseTimeout;
    }



    /**
     * set 连续两次发送探测报文的时间间隔。
     *
     * @param txInterval
     */
    public Nqa txInterval(Integer txInterval) {
        this.txInterval = txInterval;
        return this;
    }


    /**
     * set 指定发送连续探测报文的个数。
     *
     * @param thresholdCount
     */
    public Nqa thresholdCount(Integer thresholdCount) {
        this.thresholdCount = thresholdCount;
        return this;
    }


    /**
     * set 一次NQA探测的超时时间。
     *
     * @param responseTimeout
     */
    public Nqa responseTimeout(Integer responseTimeout) {
        this.responseTimeout = responseTimeout;
        return this;
    }


}