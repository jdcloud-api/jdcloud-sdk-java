/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.openjrtc.model;

import java.util.List;
import java.util.ArrayList;

/**
 * null
 */
public class UsersMetricsReq  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T10:00:00Z
     */
    private String startTime;

    /**
     * UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T11:00:00Z
     */
    private String endTime;

    /**
     * 查询数据的间隔粒度,支持 15s 30s 1m 5m 10m
     */
    private String interval;

    /**
     * 业务接入方定义的且在JRTC系统内注册过的房间号
     */
    private String userRoomId;

    /**
     * 业务接入方定义的且在JRTC系统内注册过userId列表,最多支持20个userId
     */
    
    private List<String> userIds;
    /**
     * 支持的metricType：Network,Audio,Video,Screen,System
     */
    private String metricType;

    /**
     * 指标名称列表，每个metricType下支持的指标名称如下,可以指定一个或多个指标名称
&lt;b&gt;Network&lt;/b&gt;
- &#x60;NetDelay&#x60;: 网络延时
- &#x60;DownlinkPacketLoss&#x60;: 下行网络丢包
- &#x60;DownlinkBandwidth&#x60;: 下行网络带宽
- &#x60;UplinkPacketLoss&#x60;: 上行网络丢包
- &#x60;UplinkBandwidth&#x60;: 上行网络带宽
&lt;b&gt;Audio&lt;/b&gt;
- &#x60;UplinkAudioBitRate&#x60;: 上行音频码率
- &#x60;UplinkAudioDelay&#x60;: 上行音频延时
- &#x60;UplinkAudioJitter&#x60;: 上行音频抖动
- &#x60;UplinkAudioLevel&#x60;: 上行音量大小
- &#x60;DownlinkAudioBitRate&#x60;: 下行音频码率
- &#x60;DownlinkAudioDelay&#x60;: 下行音频延时
- &#x60;DownlinkAudioJitter&#x60;: 下行音频抖动
- &#x60;DownlinkAudioLevel&#x60;: 下行音量大小
&lt;b&gt;Video&lt;/b&gt;：
- &#x60;UplinkVideoBitRate&#x60;: 上行视频码率
- &#x60;UplinkVideoFrameRate&#x60;: 上行视频帧率
- &#x60;UplinkVideoResolution&#x60;: 上行视频分辨率
- &#x60;UplinkVideoDelay&#x60;: 上行视频延时
- &#x60;UplinkVideoJitter&#x60;: 上行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoFrameRate&#x60;: 下行视频帧率
- &#x60;DownlinkVideoResolution&#x60;: 下行视频分辨率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
&lt;b&gt;Screen&lt;/b&gt;：
- &#x60;UplinkScreenBitRate&#x60;: 上行共享屏幕视频码率
- &#x60;UplinkScreenFrameRate&#x60;: 上行共享屏幕视频帧率
- &#x60;UplinkScreenResolution&#x60;: 上行共享屏幕视频分辨率
- &#x60;UplinkScreenDelay&#x60;: 上行共享屏幕视频延时
- &#x60;UplinkScreenJitter&#x60;: 上行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenDelay&#x60;: 下行共享屏幕视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenFrameRate&#x60;: 下行共享屏幕视频帧率
- &#x60;DownlinkScreenResolution&#x60;: 下行共享屏幕视频分辨率
- &#x60;DownlinkScreenDelay&#x60;: 下行视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行视频抖动
&lt;b&gt;System&lt;/b&gt;
- &#x60;AppCpuUtilization&#x60;: app的cpu占用率
- &#x60;SystemCpuUtilization&#x60;: 系统的cpu占用率
- &#x60;AppMemUtilization&#x60;: app的内存占用

     */
    
    private List<String> metricNames;


    /**
     * get UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T10:00:00Z
     *
     * @return
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * set UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T10:00:00Z
     *
     * @param startTime
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }


    /**
     * get UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T11:00:00Z
     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T11:00:00Z
     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }


    /**
     * get 查询数据的间隔粒度,支持 15s 30s 1m 5m 10m
     *
     * @return
     */
    public String getInterval() {
        return interval;
    }

    /**
     * set 查询数据的间隔粒度,支持 15s 30s 1m 5m 10m
     *
     * @param interval
     */
    public void setInterval(String interval) {
        this.interval = interval;
    }


    /**
     * get 业务接入方定义的且在JRTC系统内注册过的房间号
     *
     * @return
     */
    public String getUserRoomId() {
        return userRoomId;
    }

    /**
     * set 业务接入方定义的且在JRTC系统内注册过的房间号
     *
     * @param userRoomId
     */
    public void setUserRoomId(String userRoomId) {
        this.userRoomId = userRoomId;
    }


    /**
    * get 业务接入方定义的且在JRTC系统内注册过userId列表,最多支持20个userId
    *
    * @return
    */
    public List<String> getUserIds() {
        return userIds;
    }

    /**
    * set 业务接入方定义的且在JRTC系统内注册过userId列表,最多支持20个userId
    *
    * @param userIds
    */
    public void setUserIds(List<String> userIds) {
        this.userIds = userIds;
    }


    /**
     * get 支持的metricType：Network,Audio,Video,Screen,System
     *
     * @return
     */
    public String getMetricType() {
        return metricType;
    }

    /**
     * set 支持的metricType：Network,Audio,Video,Screen,System
     *
     * @param metricType
     */
    public void setMetricType(String metricType) {
        this.metricType = metricType;
    }


    /**
    * get 指标名称列表，每个metricType下支持的指标名称如下,可以指定一个或多个指标名称
&lt;b&gt;Network&lt;/b&gt;
- &#x60;NetDelay&#x60;: 网络延时
- &#x60;DownlinkPacketLoss&#x60;: 下行网络丢包
- &#x60;DownlinkBandwidth&#x60;: 下行网络带宽
- &#x60;UplinkPacketLoss&#x60;: 上行网络丢包
- &#x60;UplinkBandwidth&#x60;: 上行网络带宽
&lt;b&gt;Audio&lt;/b&gt;
- &#x60;UplinkAudioBitRate&#x60;: 上行音频码率
- &#x60;UplinkAudioDelay&#x60;: 上行音频延时
- &#x60;UplinkAudioJitter&#x60;: 上行音频抖动
- &#x60;UplinkAudioLevel&#x60;: 上行音量大小
- &#x60;DownlinkAudioBitRate&#x60;: 下行音频码率
- &#x60;DownlinkAudioDelay&#x60;: 下行音频延时
- &#x60;DownlinkAudioJitter&#x60;: 下行音频抖动
- &#x60;DownlinkAudioLevel&#x60;: 下行音量大小
&lt;b&gt;Video&lt;/b&gt;：
- &#x60;UplinkVideoBitRate&#x60;: 上行视频码率
- &#x60;UplinkVideoFrameRate&#x60;: 上行视频帧率
- &#x60;UplinkVideoResolution&#x60;: 上行视频分辨率
- &#x60;UplinkVideoDelay&#x60;: 上行视频延时
- &#x60;UplinkVideoJitter&#x60;: 上行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoFrameRate&#x60;: 下行视频帧率
- &#x60;DownlinkVideoResolution&#x60;: 下行视频分辨率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
&lt;b&gt;Screen&lt;/b&gt;：
- &#x60;UplinkScreenBitRate&#x60;: 上行共享屏幕视频码率
- &#x60;UplinkScreenFrameRate&#x60;: 上行共享屏幕视频帧率
- &#x60;UplinkScreenResolution&#x60;: 上行共享屏幕视频分辨率
- &#x60;UplinkScreenDelay&#x60;: 上行共享屏幕视频延时
- &#x60;UplinkScreenJitter&#x60;: 上行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenDelay&#x60;: 下行共享屏幕视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenFrameRate&#x60;: 下行共享屏幕视频帧率
- &#x60;DownlinkScreenResolution&#x60;: 下行共享屏幕视频分辨率
- &#x60;DownlinkScreenDelay&#x60;: 下行视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行视频抖动
&lt;b&gt;System&lt;/b&gt;
- &#x60;AppCpuUtilization&#x60;: app的cpu占用率
- &#x60;SystemCpuUtilization&#x60;: 系统的cpu占用率
- &#x60;AppMemUtilization&#x60;: app的内存占用

    *
    * @return
    */
    public List<String> getMetricNames() {
        return metricNames;
    }

    /**
    * set 指标名称列表，每个metricType下支持的指标名称如下,可以指定一个或多个指标名称
&lt;b&gt;Network&lt;/b&gt;
- &#x60;NetDelay&#x60;: 网络延时
- &#x60;DownlinkPacketLoss&#x60;: 下行网络丢包
- &#x60;DownlinkBandwidth&#x60;: 下行网络带宽
- &#x60;UplinkPacketLoss&#x60;: 上行网络丢包
- &#x60;UplinkBandwidth&#x60;: 上行网络带宽
&lt;b&gt;Audio&lt;/b&gt;
- &#x60;UplinkAudioBitRate&#x60;: 上行音频码率
- &#x60;UplinkAudioDelay&#x60;: 上行音频延时
- &#x60;UplinkAudioJitter&#x60;: 上行音频抖动
- &#x60;UplinkAudioLevel&#x60;: 上行音量大小
- &#x60;DownlinkAudioBitRate&#x60;: 下行音频码率
- &#x60;DownlinkAudioDelay&#x60;: 下行音频延时
- &#x60;DownlinkAudioJitter&#x60;: 下行音频抖动
- &#x60;DownlinkAudioLevel&#x60;: 下行音量大小
&lt;b&gt;Video&lt;/b&gt;：
- &#x60;UplinkVideoBitRate&#x60;: 上行视频码率
- &#x60;UplinkVideoFrameRate&#x60;: 上行视频帧率
- &#x60;UplinkVideoResolution&#x60;: 上行视频分辨率
- &#x60;UplinkVideoDelay&#x60;: 上行视频延时
- &#x60;UplinkVideoJitter&#x60;: 上行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoFrameRate&#x60;: 下行视频帧率
- &#x60;DownlinkVideoResolution&#x60;: 下行视频分辨率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
&lt;b&gt;Screen&lt;/b&gt;：
- &#x60;UplinkScreenBitRate&#x60;: 上行共享屏幕视频码率
- &#x60;UplinkScreenFrameRate&#x60;: 上行共享屏幕视频帧率
- &#x60;UplinkScreenResolution&#x60;: 上行共享屏幕视频分辨率
- &#x60;UplinkScreenDelay&#x60;: 上行共享屏幕视频延时
- &#x60;UplinkScreenJitter&#x60;: 上行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenDelay&#x60;: 下行共享屏幕视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenFrameRate&#x60;: 下行共享屏幕视频帧率
- &#x60;DownlinkScreenResolution&#x60;: 下行共享屏幕视频分辨率
- &#x60;DownlinkScreenDelay&#x60;: 下行视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行视频抖动
&lt;b&gt;System&lt;/b&gt;
- &#x60;AppCpuUtilization&#x60;: app的cpu占用率
- &#x60;SystemCpuUtilization&#x60;: 系统的cpu占用率
- &#x60;AppMemUtilization&#x60;: app的内存占用

    *
    * @param metricNames
    */
    public void setMetricNames(List<String> metricNames) {
        this.metricNames = metricNames;
    }



    /**
     * set UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T10:00:00Z
     *
     * @param startTime
     */
    public UsersMetricsReq startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }


    /**
     * set UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2023-12-31T11:00:00Z
     *
     * @param endTime
     */
    public UsersMetricsReq endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }


    /**
     * set 查询数据的间隔粒度,支持 15s 30s 1m 5m 10m
     *
     * @param interval
     */
    public UsersMetricsReq interval(String interval) {
        this.interval = interval;
        return this;
    }


    /**
     * set 业务接入方定义的且在JRTC系统内注册过的房间号
     *
     * @param userRoomId
     */
    public UsersMetricsReq userRoomId(String userRoomId) {
        this.userRoomId = userRoomId;
        return this;
    }


    /**
    * set 业务接入方定义的且在JRTC系统内注册过userId列表,最多支持20个userId
    *
    * @param userIds
    */
    public UsersMetricsReq userIds(List<String> userIds) {
        this.userIds = userIds;
        return this;
    }


    /**
     * set 支持的metricType：Network,Audio,Video,Screen,System
     *
     * @param metricType
     */
    public UsersMetricsReq metricType(String metricType) {
        this.metricType = metricType;
        return this;
    }


    /**
    * set 指标名称列表，每个metricType下支持的指标名称如下,可以指定一个或多个指标名称
&lt;b&gt;Network&lt;/b&gt;
- &#x60;NetDelay&#x60;: 网络延时
- &#x60;DownlinkPacketLoss&#x60;: 下行网络丢包
- &#x60;DownlinkBandwidth&#x60;: 下行网络带宽
- &#x60;UplinkPacketLoss&#x60;: 上行网络丢包
- &#x60;UplinkBandwidth&#x60;: 上行网络带宽
&lt;b&gt;Audio&lt;/b&gt;
- &#x60;UplinkAudioBitRate&#x60;: 上行音频码率
- &#x60;UplinkAudioDelay&#x60;: 上行音频延时
- &#x60;UplinkAudioJitter&#x60;: 上行音频抖动
- &#x60;UplinkAudioLevel&#x60;: 上行音量大小
- &#x60;DownlinkAudioBitRate&#x60;: 下行音频码率
- &#x60;DownlinkAudioDelay&#x60;: 下行音频延时
- &#x60;DownlinkAudioJitter&#x60;: 下行音频抖动
- &#x60;DownlinkAudioLevel&#x60;: 下行音量大小
&lt;b&gt;Video&lt;/b&gt;：
- &#x60;UplinkVideoBitRate&#x60;: 上行视频码率
- &#x60;UplinkVideoFrameRate&#x60;: 上行视频帧率
- &#x60;UplinkVideoResolution&#x60;: 上行视频分辨率
- &#x60;UplinkVideoDelay&#x60;: 上行视频延时
- &#x60;UplinkVideoJitter&#x60;: 上行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoFrameRate&#x60;: 下行视频帧率
- &#x60;DownlinkVideoResolution&#x60;: 下行视频分辨率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
&lt;b&gt;Screen&lt;/b&gt;：
- &#x60;UplinkScreenBitRate&#x60;: 上行共享屏幕视频码率
- &#x60;UplinkScreenFrameRate&#x60;: 上行共享屏幕视频帧率
- &#x60;UplinkScreenResolution&#x60;: 上行共享屏幕视频分辨率
- &#x60;UplinkScreenDelay&#x60;: 上行共享屏幕视频延时
- &#x60;UplinkScreenJitter&#x60;: 上行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenDelay&#x60;: 下行共享屏幕视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenFrameRate&#x60;: 下行共享屏幕视频帧率
- &#x60;DownlinkScreenResolution&#x60;: 下行共享屏幕视频分辨率
- &#x60;DownlinkScreenDelay&#x60;: 下行视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行视频抖动
&lt;b&gt;System&lt;/b&gt;
- &#x60;AppCpuUtilization&#x60;: app的cpu占用率
- &#x60;SystemCpuUtilization&#x60;: 系统的cpu占用率
- &#x60;AppMemUtilization&#x60;: app的内存占用

    *
    * @param metricNames
    */
    public UsersMetricsReq metricNames(List<String> metricNames) {
        this.metricNames = metricNames;
        return this;
    }



    /**
     * add item to 业务接入方定义的且在JRTC系统内注册过userId列表,最多支持20个userId
     *
     * @param userId
     */
    public void addUserId(String userId) {
        if (this.userIds == null) {
            this.userIds = new ArrayList<>();
        }
        this.userIds.add(userId);
    }

    /**
     * add item to 指标名称列表，每个metricType下支持的指标名称如下,可以指定一个或多个指标名称
&lt;b&gt;Network&lt;/b&gt;
- &#x60;NetDelay&#x60;: 网络延时
- &#x60;DownlinkPacketLoss&#x60;: 下行网络丢包
- &#x60;DownlinkBandwidth&#x60;: 下行网络带宽
- &#x60;UplinkPacketLoss&#x60;: 上行网络丢包
- &#x60;UplinkBandwidth&#x60;: 上行网络带宽
&lt;b&gt;Audio&lt;/b&gt;
- &#x60;UplinkAudioBitRate&#x60;: 上行音频码率
- &#x60;UplinkAudioDelay&#x60;: 上行音频延时
- &#x60;UplinkAudioJitter&#x60;: 上行音频抖动
- &#x60;UplinkAudioLevel&#x60;: 上行音量大小
- &#x60;DownlinkAudioBitRate&#x60;: 下行音频码率
- &#x60;DownlinkAudioDelay&#x60;: 下行音频延时
- &#x60;DownlinkAudioJitter&#x60;: 下行音频抖动
- &#x60;DownlinkAudioLevel&#x60;: 下行音量大小
&lt;b&gt;Video&lt;/b&gt;：
- &#x60;UplinkVideoBitRate&#x60;: 上行视频码率
- &#x60;UplinkVideoFrameRate&#x60;: 上行视频帧率
- &#x60;UplinkVideoResolution&#x60;: 上行视频分辨率
- &#x60;UplinkVideoDelay&#x60;: 上行视频延时
- &#x60;UplinkVideoJitter&#x60;: 上行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
- &#x60;DownlinkVideoBitRate&#x60;: 下行视频码率
- &#x60;DownlinkVideoFrameRate&#x60;: 下行视频帧率
- &#x60;DownlinkVideoResolution&#x60;: 下行视频分辨率
- &#x60;DownlinkVideoDelay&#x60;: 下行视频延时
- &#x60;DownlinkVideoJitter&#x60;: 下行视频抖动
&lt;b&gt;Screen&lt;/b&gt;：
- &#x60;UplinkScreenBitRate&#x60;: 上行共享屏幕视频码率
- &#x60;UplinkScreenFrameRate&#x60;: 上行共享屏幕视频帧率
- &#x60;UplinkScreenResolution&#x60;: 上行共享屏幕视频分辨率
- &#x60;UplinkScreenDelay&#x60;: 上行共享屏幕视频延时
- &#x60;UplinkScreenJitter&#x60;: 上行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenDelay&#x60;: 下行共享屏幕视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行共享屏幕视频抖动
- &#x60;DownlinkScreenBitRate&#x60;: 下行共享屏幕视频码率
- &#x60;DownlinkScreenFrameRate&#x60;: 下行共享屏幕视频帧率
- &#x60;DownlinkScreenResolution&#x60;: 下行共享屏幕视频分辨率
- &#x60;DownlinkScreenDelay&#x60;: 下行视频延时
- &#x60;DownlinkScreenJitter&#x60;: 下行视频抖动
&lt;b&gt;System&lt;/b&gt;
- &#x60;AppCpuUtilization&#x60;: app的cpu占用率
- &#x60;SystemCpuUtilization&#x60;: 系统的cpu占用率
- &#x60;AppMemUtilization&#x60;: app的内存占用

     *
     * @param metricName
     */
    public void addMetricName(String metricName) {
        if (this.metricNames == null) {
            this.metricNames = new ArrayList<>();
        }
        this.metricNames.add(metricName);
    }
}