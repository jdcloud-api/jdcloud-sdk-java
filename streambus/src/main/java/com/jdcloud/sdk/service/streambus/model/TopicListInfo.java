/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.streambus.model;


/**
 * topicListInfo
 */
public class TopicListInfo  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 是否归档（0：未归档，1：已归档）
     */
    private Integer archived;

    /**
     * 创建topic的时间戳
     */
    private String createdTime;

    /**
     * topic是否已删除（0：未删除，1：删除）
     */
    private Integer deleted;

    /**
     * topic的id值
     */
    private Integer id;

    /**
     * 数据写入后的保留时间
     */
    private Integer lifecycle;

    /**
     * 流数据总线中topic的名字
     */
    private String name;

    /**
     * 对应kafka中的分区数
     */
    private String partitionNum;

    /**
     * 备注
     */
    private String remark;

    /**
     * 流数据总线shard的数量
     */
    private String shardNum;

    /**
     * 0: 已创建, 1: 创建中
     */
    private Integer status;

    /**
     * 对应kafka中的topic名字
     */
    private String topicName;

    /**
     * 对应kafka中的uid
     */
    private String uid;

    /**
     * 更新topic的时间戳
     */
    private String updatedTime;

    /**
     * 用户的userPin
     */
    private String userPin;

    /**
     * dataSize
     */
    private String dataSize;


    /**
     * get 是否归档（0：未归档，1：已归档）
     *
     * @return
     */
    public Integer getArchived() {
        return archived;
    }

    /**
     * set 是否归档（0：未归档，1：已归档）
     *
     * @param archived
     */
    public void setArchived(Integer archived) {
        this.archived = archived;
    }

    /**
     * get 创建topic的时间戳
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set 创建topic的时间戳
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }

    /**
     * get topic是否已删除（0：未删除，1：删除）
     *
     * @return
     */
    public Integer getDeleted() {
        return deleted;
    }

    /**
     * set topic是否已删除（0：未删除，1：删除）
     *
     * @param deleted
     */
    public void setDeleted(Integer deleted) {
        this.deleted = deleted;
    }

    /**
     * get topic的id值
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set topic的id值
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * get 数据写入后的保留时间
     *
     * @return
     */
    public Integer getLifecycle() {
        return lifecycle;
    }

    /**
     * set 数据写入后的保留时间
     *
     * @param lifecycle
     */
    public void setLifecycle(Integer lifecycle) {
        this.lifecycle = lifecycle;
    }

    /**
     * get 流数据总线中topic的名字
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 流数据总线中topic的名字
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 对应kafka中的分区数
     *
     * @return
     */
    public String getPartitionNum() {
        return partitionNum;
    }

    /**
     * set 对应kafka中的分区数
     *
     * @param partitionNum
     */
    public void setPartitionNum(String partitionNum) {
        this.partitionNum = partitionNum;
    }

    /**
     * get 备注
     *
     * @return
     */
    public String getRemark() {
        return remark;
    }

    /**
     * set 备注
     *
     * @param remark
     */
    public void setRemark(String remark) {
        this.remark = remark;
    }

    /**
     * get 流数据总线shard的数量
     *
     * @return
     */
    public String getShardNum() {
        return shardNum;
    }

    /**
     * set 流数据总线shard的数量
     *
     * @param shardNum
     */
    public void setShardNum(String shardNum) {
        this.shardNum = shardNum;
    }

    /**
     * get 0: 已创建, 1: 创建中
     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 0: 已创建, 1: 创建中
     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * get 对应kafka中的topic名字
     *
     * @return
     */
    public String getTopicName() {
        return topicName;
    }

    /**
     * set 对应kafka中的topic名字
     *
     * @param topicName
     */
    public void setTopicName(String topicName) {
        this.topicName = topicName;
    }

    /**
     * get 对应kafka中的uid
     *
     * @return
     */
    public String getUid() {
        return uid;
    }

    /**
     * set 对应kafka中的uid
     *
     * @param uid
     */
    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * get 更新topic的时间戳
     *
     * @return
     */
    public String getUpdatedTime() {
        return updatedTime;
    }

    /**
     * set 更新topic的时间戳
     *
     * @param updatedTime
     */
    public void setUpdatedTime(String updatedTime) {
        this.updatedTime = updatedTime;
    }

    /**
     * get 用户的userPin
     *
     * @return
     */
    public String getUserPin() {
        return userPin;
    }

    /**
     * set 用户的userPin
     *
     * @param userPin
     */
    public void setUserPin(String userPin) {
        this.userPin = userPin;
    }

    /**
     * get dataSize
     *
     * @return
     */
    public String getDataSize() {
        return dataSize;
    }

    /**
     * set dataSize
     *
     * @param dataSize
     */
    public void setDataSize(String dataSize) {
        this.dataSize = dataSize;
    }


    /**
     * set 是否归档（0：未归档，1：已归档）
     *
     * @param archived
     */
    public TopicListInfo archived(Integer archived) {
        this.archived = archived;
        return this;
    }

    /**
     * set 创建topic的时间戳
     *
     * @param createdTime
     */
    public TopicListInfo createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * set topic是否已删除（0：未删除，1：删除）
     *
     * @param deleted
     */
    public TopicListInfo deleted(Integer deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * set topic的id值
     *
     * @param id
     */
    public TopicListInfo id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * set 数据写入后的保留时间
     *
     * @param lifecycle
     */
    public TopicListInfo lifecycle(Integer lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }

    /**
     * set 流数据总线中topic的名字
     *
     * @param name
     */
    public TopicListInfo name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 对应kafka中的分区数
     *
     * @param partitionNum
     */
    public TopicListInfo partitionNum(String partitionNum) {
        this.partitionNum = partitionNum;
        return this;
    }

    /**
     * set 备注
     *
     * @param remark
     */
    public TopicListInfo remark(String remark) {
        this.remark = remark;
        return this;
    }

    /**
     * set 流数据总线shard的数量
     *
     * @param shardNum
     */
    public TopicListInfo shardNum(String shardNum) {
        this.shardNum = shardNum;
        return this;
    }

    /**
     * set 0: 已创建, 1: 创建中
     *
     * @param status
     */
    public TopicListInfo status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * set 对应kafka中的topic名字
     *
     * @param topicName
     */
    public TopicListInfo topicName(String topicName) {
        this.topicName = topicName;
        return this;
    }

    /**
     * set 对应kafka中的uid
     *
     * @param uid
     */
    public TopicListInfo uid(String uid) {
        this.uid = uid;
        return this;
    }

    /**
     * set 更新topic的时间戳
     *
     * @param updatedTime
     */
    public TopicListInfo updatedTime(String updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }

    /**
     * set 用户的userPin
     *
     * @param userPin
     */
    public TopicListInfo userPin(String userPin) {
        this.userPin = userPin;
        return this;
    }

    /**
     * set dataSize
     *
     * @param dataSize
     */
    public TopicListInfo dataSize(String dataSize) {
        this.dataSize = dataSize;
        return this;
    }


}