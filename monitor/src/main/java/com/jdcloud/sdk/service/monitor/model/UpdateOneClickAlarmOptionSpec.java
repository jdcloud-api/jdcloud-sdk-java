/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;

/**
 * updateOneClickAlarmOptionSpec
 */
public class UpdateOneClickAlarmOptionSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 告警通知联系人
in: body
     */
    private List<BaseContact> contacts;

    /**
     * 通知策略
in: body
     */
    private List<NoticeOption> noticeOption;

    /**
     * 一键报警规则下的报警规则id
     * Required:true
     */
    @Required
    private String policyId;

    /**
     * ruleOption
     * Required:true
     */
    @Required
    private RuleOption ruleOption;

    /**
     * webHookOption
     */
    private WebHookOption webHookOption;


    /**
     * get 告警通知联系人
in: body
     *
     * @return
     */
    public List<BaseContact> getContacts() {
        return contacts;
    }

    /**
     * set 告警通知联系人
in: body
     *
     * @param contacts
     */
    public void setContacts(List<BaseContact> contacts) {
        this.contacts = contacts;
    }

    /**
     * get 通知策略
in: body
     *
     * @return
     */
    public List<NoticeOption> getNoticeOption() {
        return noticeOption;
    }

    /**
     * set 通知策略
in: body
     *
     * @param noticeOption
     */
    public void setNoticeOption(List<NoticeOption> noticeOption) {
        this.noticeOption = noticeOption;
    }

    /**
     * get 一键报警规则下的报警规则id
     *
     * @return
     */
    public String getPolicyId() {
        return policyId;
    }

    /**
     * set 一键报警规则下的报警规则id
     *
     * @param policyId
     */
    public void setPolicyId(String policyId) {
        this.policyId = policyId;
    }

    /**
     * get ruleOption
     *
     * @return
     */
    public RuleOption getRuleOption() {
        return ruleOption;
    }

    /**
     * set ruleOption
     *
     * @param ruleOption
     */
    public void setRuleOption(RuleOption ruleOption) {
        this.ruleOption = ruleOption;
    }

    /**
     * get webHookOption
     *
     * @return
     */
    public WebHookOption getWebHookOption() {
        return webHookOption;
    }

    /**
     * set webHookOption
     *
     * @param webHookOption
     */
    public void setWebHookOption(WebHookOption webHookOption) {
        this.webHookOption = webHookOption;
    }


    /**
     * set 告警通知联系人
in: body
     *
     * @param contacts
     */
    public UpdateOneClickAlarmOptionSpec contacts(List<BaseContact> contacts) {
        this.contacts = contacts;
        return this;
    }

    /**
     * set 通知策略
in: body
     *
     * @param noticeOption
     */
    public UpdateOneClickAlarmOptionSpec noticeOption(List<NoticeOption> noticeOption) {
        this.noticeOption = noticeOption;
        return this;
    }

    /**
     * set 一键报警规则下的报警规则id
     *
     * @param policyId
     */
    public UpdateOneClickAlarmOptionSpec policyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * set ruleOption
     *
     * @param ruleOption
     */
    public UpdateOneClickAlarmOptionSpec ruleOption(RuleOption ruleOption) {
        this.ruleOption = ruleOption;
        return this;
    }

    /**
     * set webHookOption
     *
     * @param webHookOption
     */
    public UpdateOneClickAlarmOptionSpec webHookOption(WebHookOption webHookOption) {
        this.webHookOption = webHookOption;
        return this;
    }


    /**
     * add item to 告警通知联系人
in: body
     *
     * @param contact
     */
    public void addContact(BaseContact contact) {
        if (this.contacts == null) {
            this.contacts = new ArrayList<>();
        }
        this.contacts.add(contact);
    }

    /**
     * add item to 通知策略
in: body
     *
     * @param noticeOption
     */
    public void addNoticeOption(NoticeOption noticeOption) {
        if (this.noticeOption == null) {
            this.noticeOption = new ArrayList<>();
        }
        this.noticeOption.add(noticeOption);
    }

}