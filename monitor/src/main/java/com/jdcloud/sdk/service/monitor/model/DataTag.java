/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * dataTag
 */
public class DataTag  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 标签名称
     * Required:true
     */
    @Required
    private String tagKey;

    /**
     * 标签值
     * Required:true
     */
    @Required
    private String tagValue;

    /**
     * 标签的处理方式，1 代表对于新增标签的时候，如果数据点存在该标签，跳过不处理，2、代表新增标签的时候，如果标签存在进行覆盖
     */
    private Long operation;


    /**
     * get 标签名称
     *
     * @return
     */
    public String getTagKey() {
        return tagKey;
    }

    /**
     * set 标签名称
     *
     * @param tagKey
     */
    public void setTagKey(String tagKey) {
        this.tagKey = tagKey;
    }

    /**
     * get 标签值
     *
     * @return
     */
    public String getTagValue() {
        return tagValue;
    }

    /**
     * set 标签值
     *
     * @param tagValue
     */
    public void setTagValue(String tagValue) {
        this.tagValue = tagValue;
    }

    /**
     * get 标签的处理方式，1 代表对于新增标签的时候，如果数据点存在该标签，跳过不处理，2、代表新增标签的时候，如果标签存在进行覆盖
     *
     * @return
     */
    public Long getOperation() {
        return operation;
    }

    /**
     * set 标签的处理方式，1 代表对于新增标签的时候，如果数据点存在该标签，跳过不处理，2、代表新增标签的时候，如果标签存在进行覆盖
     *
     * @param operation
     */
    public void setOperation(Long operation) {
        this.operation = operation;
    }


    /**
     * set 标签名称
     *
     * @param tagKey
     */
    public DataTag tagKey(String tagKey) {
        this.tagKey = tagKey;
        return this;
    }

    /**
     * set 标签值
     *
     * @param tagValue
     */
    public DataTag tagValue(String tagValue) {
        this.tagValue = tagValue;
        return this;
    }

    /**
     * set 标签的处理方式，1 代表对于新增标签的时候，如果数据点存在该标签，跳过不处理，2、代表新增标签的时候，如果标签存在进行覆盖
     *
     * @param operation
     */
    public DataTag operation(Long operation) {
        this.operation = operation;
        return this;
    }


}