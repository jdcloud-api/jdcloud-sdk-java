/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * tsdbFilter
 */
public class TsdbFilter  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 过滤类型支持以下几种
literal_or：精确匹配一个或多个值，比如key为host，value为web1，表示过滤host&#x3D;web1的数据(若要匹配多个值，value通过&#39;\\|&#39;分割，比如web1\\|web2)；
not_key：返回不包含key值的时序数据
wildcard：支持通配，比如key为host，value为web*，会匹配所有key为host，value为web开头的数据
     * Required:true
     */
    @Required
    private String filterType;

    /**
     * 是否对查询的tags分组,默认false
     */
    private Boolean groupBy;

    /**
     * Tag键，对应上报数据中tag中的key，必传参数
     * Required:true
     */
    @Required
    private String key;

    /**
     * Tag值，对应上报数据中tag中的value
     */
    private String value;


    /**
     * get 过滤类型支持以下几种
literal_or：精确匹配一个或多个值，比如key为host，value为web1，表示过滤host&#x3D;web1的数据(若要匹配多个值，value通过&#39;\\|&#39;分割，比如web1\\|web2)；
not_key：返回不包含key值的时序数据
wildcard：支持通配，比如key为host，value为web*，会匹配所有key为host，value为web开头的数据
     *
     * @return
     */
    public String getFilterType() {
        return filterType;
    }

    /**
     * set 过滤类型支持以下几种
literal_or：精确匹配一个或多个值，比如key为host，value为web1，表示过滤host&#x3D;web1的数据(若要匹配多个值，value通过&#39;\\|&#39;分割，比如web1\\|web2)；
not_key：返回不包含key值的时序数据
wildcard：支持通配，比如key为host，value为web*，会匹配所有key为host，value为web开头的数据
     *
     * @param filterType
     */
    public void setFilterType(String filterType) {
        this.filterType = filterType;
    }

    /**
     * get 是否对查询的tags分组,默认false
     *
     * @return
     */
    public Boolean getGroupBy() {
        return groupBy;
    }

    /**
     * set 是否对查询的tags分组,默认false
     *
     * @param groupBy
     */
    public void setGroupBy(Boolean groupBy) {
        this.groupBy = groupBy;
    }

    /**
     * get Tag键，对应上报数据中tag中的key，必传参数
     *
     * @return
     */
    public String getKey() {
        return key;
    }

    /**
     * set Tag键，对应上报数据中tag中的key，必传参数
     *
     * @param key
     */
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * get Tag值，对应上报数据中tag中的value
     *
     * @return
     */
    public String getValue() {
        return value;
    }

    /**
     * set Tag值，对应上报数据中tag中的value
     *
     * @param value
     */
    public void setValue(String value) {
        this.value = value;
    }


    /**
     * set 过滤类型支持以下几种
literal_or：精确匹配一个或多个值，比如key为host，value为web1，表示过滤host&#x3D;web1的数据(若要匹配多个值，value通过&#39;\\|&#39;分割，比如web1\\|web2)；
not_key：返回不包含key值的时序数据
wildcard：支持通配，比如key为host，value为web*，会匹配所有key为host，value为web开头的数据
     *
     * @param filterType
     */
    public TsdbFilter filterType(String filterType) {
        this.filterType = filterType;
        return this;
    }

    /**
     * set 是否对查询的tags分组,默认false
     *
     * @param groupBy
     */
    public TsdbFilter groupBy(Boolean groupBy) {
        this.groupBy = groupBy;
        return this;
    }

    /**
     * set Tag键，对应上报数据中tag中的key，必传参数
     *
     * @param key
     */
    public TsdbFilter key(String key) {
        this.key = key;
        return this;
    }

    /**
     * set Tag值，对应上报数据中tag中的value
     *
     * @param value
     */
    public TsdbFilter value(String value) {
        this.value = value;
        return this;
    }


}