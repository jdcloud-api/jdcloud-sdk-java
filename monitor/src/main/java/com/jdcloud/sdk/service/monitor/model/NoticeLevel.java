/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * noticeLevel
 */
public class NoticeLevel  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 是否为用户自己定义的级别，自定义(true) or 固定(false)
     * Required:true
     */
    @Required
    private Boolean custom;

    /**
     * 报警级别以及对应的阈值，是一个map[string]float64对象。key:common(一般)、critial(严重)、 fatal(紧急),value:各报警级别对应的阀值，要符合operation参数对应的递进关系。 eg: &quot;levels&quot;:{&quot;common&quot;:1000,&quot;critial&quot;:10000,&quot;fatal&quot;:15000}
     * Required:true
     */
    @Required
    private Object levels;


    /**
     * get 是否为用户自己定义的级别，自定义(true) or 固定(false)
     *
     * @return
     */
    public Boolean getCustom() {
        return custom;
    }

    /**
     * set 是否为用户自己定义的级别，自定义(true) or 固定(false)
     *
     * @param custom
     */
    public void setCustom(Boolean custom) {
        this.custom = custom;
    }

    /**
     * get 报警级别以及对应的阈值，是一个map[string]float64对象。key:common(一般)、critial(严重)、 fatal(紧急),value:各报警级别对应的阀值，要符合operation参数对应的递进关系。 eg: &quot;levels&quot;:{&quot;common&quot;:1000,&quot;critial&quot;:10000,&quot;fatal&quot;:15000}
     *
     * @return
     */
    public Object getLevels() {
        return levels;
    }

    /**
     * set 报警级别以及对应的阈值，是一个map[string]float64对象。key:common(一般)、critial(严重)、 fatal(紧急),value:各报警级别对应的阀值，要符合operation参数对应的递进关系。 eg: &quot;levels&quot;:{&quot;common&quot;:1000,&quot;critial&quot;:10000,&quot;fatal&quot;:15000}
     *
     * @param levels
     */
    public void setLevels(Object levels) {
        this.levels = levels;
    }


    /**
     * set 是否为用户自己定义的级别，自定义(true) or 固定(false)
     *
     * @param custom
     */
    public NoticeLevel custom(Boolean custom) {
        this.custom = custom;
        return this;
    }

    /**
     * set 报警级别以及对应的阈值，是一个map[string]float64对象。key:common(一般)、critial(严重)、 fatal(紧急),value:各报警级别对应的阀值，要符合operation参数对应的递进关系。 eg: &quot;levels&quot;:{&quot;common&quot;:1000,&quot;critial&quot;:10000,&quot;fatal&quot;:15000}
     *
     * @param levels
     */
    public NoticeLevel levels(Object levels) {
        this.levels = levels;
        return this;
    }


}