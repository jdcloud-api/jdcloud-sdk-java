/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;


/**
 * webHookOption
 */
public class WebHookOption  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 回调content 注：仅webHookUrl和webHookProtocol均不为空时，才会创建webHook。当前支持的变量:${resourceId},${resourceName},${ipAddress},${requestId},${metric},${currentValue},${times},${tags},${alertTime},${region},${threshold},${serviceCode},${asGroupId},${unhealthyInstance}
     */
    private String webHookContent;

    /**
     * webHook协议
     */
    private String webHookProtocol;

    /**
     * 回调secret，用户请求签名，防伪造
     */
    private String webHookSecret;

    /**
     * 回调url
     */
    private String webHookUrl;


    /**
     * get 回调content 注：仅webHookUrl和webHookProtocol均不为空时，才会创建webHook。当前支持的变量:${resourceId},${resourceName},${ipAddress},${requestId},${metric},${currentValue},${times},${tags},${alertTime},${region},${threshold},${serviceCode},${asGroupId},${unhealthyInstance}
     *
     * @return
     */
    public String getWebHookContent() {
        return webHookContent;
    }

    /**
     * set 回调content 注：仅webHookUrl和webHookProtocol均不为空时，才会创建webHook。当前支持的变量:${resourceId},${resourceName},${ipAddress},${requestId},${metric},${currentValue},${times},${tags},${alertTime},${region},${threshold},${serviceCode},${asGroupId},${unhealthyInstance}
     *
     * @param webHookContent
     */
    public void setWebHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
    }

    /**
     * get webHook协议
     *
     * @return
     */
    public String getWebHookProtocol() {
        return webHookProtocol;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public void setWebHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
    }

    /**
     * get 回调secret，用户请求签名，防伪造
     *
     * @return
     */
    public String getWebHookSecret() {
        return webHookSecret;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public void setWebHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
    }

    /**
     * get 回调url
     *
     * @return
     */
    public String getWebHookUrl() {
        return webHookUrl;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public void setWebHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
    }


    /**
     * set 回调content 注：仅webHookUrl和webHookProtocol均不为空时，才会创建webHook。当前支持的变量:${resourceId},${resourceName},${ipAddress},${requestId},${metric},${currentValue},${times},${tags},${alertTime},${region},${threshold},${serviceCode},${asGroupId},${unhealthyInstance}
     *
     * @param webHookContent
     */
    public WebHookOption webHookContent(String webHookContent) {
        this.webHookContent = webHookContent;
        return this;
    }

    /**
     * set webHook协议
     *
     * @param webHookProtocol
     */
    public WebHookOption webHookProtocol(String webHookProtocol) {
        this.webHookProtocol = webHookProtocol;
        return this;
    }

    /**
     * set 回调secret，用户请求签名，防伪造
     *
     * @param webHookSecret
     */
    public WebHookOption webHookSecret(String webHookSecret) {
        this.webHookSecret = webHookSecret;
        return this;
    }

    /**
     * set 回调url
     *
     * @param webHookUrl
     */
    public WebHookOption webHookUrl(String webHookUrl) {
        this.webHookUrl = webHookUrl;
        return this;
    }


}