/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.monitor.model;

import java.util.List;
import java.util.ArrayList;

/**
 * ruleOptionDetail
 */
public class RuleOptionDetail  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 规则触发条件,与模板参数同时指定时，优先使用rules
     */
    private List<BasicRuleDetail> rules;

    /**
     * templateOption
     */
    private TemplateOption templateOption;


    /**
     * get 规则触发条件,与模板参数同时指定时，优先使用rules
     *
     * @return
     */
    public List<BasicRuleDetail> getRules() {
        return rules;
    }

    /**
     * set 规则触发条件,与模板参数同时指定时，优先使用rules
     *
     * @param rules
     */
    public void setRules(List<BasicRuleDetail> rules) {
        this.rules = rules;
    }

    /**
     * get templateOption
     *
     * @return
     */
    public TemplateOption getTemplateOption() {
        return templateOption;
    }

    /**
     * set templateOption
     *
     * @param templateOption
     */
    public void setTemplateOption(TemplateOption templateOption) {
        this.templateOption = templateOption;
    }


    /**
     * set 规则触发条件,与模板参数同时指定时，优先使用rules
     *
     * @param rules
     */
    public RuleOptionDetail rules(List<BasicRuleDetail> rules) {
        this.rules = rules;
        return this;
    }

    /**
     * set templateOption
     *
     * @param templateOption
     */
    public RuleOptionDetail templateOption(TemplateOption templateOption) {
        this.templateOption = templateOption;
        return this;
    }


    /**
     * add item to 规则触发条件,与模板参数同时指定时，优先使用rules
     *
     * @param rule
     */
    public void addRule(BasicRuleDetail rule) {
        if (this.rules == null) {
            this.rules = new ArrayList<>();
        }
        this.rules.add(rule);
    }

}