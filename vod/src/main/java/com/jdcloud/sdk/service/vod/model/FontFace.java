/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.vod.model;


/**
 * 字体样式
 */
public class FontFace  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 加粗
     */
    private Boolean bold;

    /**
     * 斜体
     */
    private Boolean italic;

    /**
     * 下划线
     */
    private Boolean underline;


    /**
     * get 加粗
     *
     * @return
     */
    public Boolean getBold() {
        return bold;
    }

    /**
     * set 加粗
     *
     * @param bold
     */
    public void setBold(Boolean bold) {
        this.bold = bold;
    }

    /**
     * get 斜体
     *
     * @return
     */
    public Boolean getItalic() {
        return italic;
    }

    /**
     * set 斜体
     *
     * @param italic
     */
    public void setItalic(Boolean italic) {
        this.italic = italic;
    }

    /**
     * get 下划线
     *
     * @return
     */
    public Boolean getUnderline() {
        return underline;
    }

    /**
     * set 下划线
     *
     * @param underline
     */
    public void setUnderline(Boolean underline) {
        this.underline = underline;
    }


    /**
     * set 加粗
     *
     * @param bold
     */
    public FontFace bold(Boolean bold) {
        this.bold = bold;
        return this;
    }

    /**
     * set 斜体
     *
     * @param italic
     */
    public FontFace italic(Boolean italic) {
        this.italic = italic;
        return this;
    }

    /**
     * set 下划线
     *
     * @param underline
     */
    public FontFace underline(Boolean underline) {
        this.underline = underline;
        return this;
    }


}