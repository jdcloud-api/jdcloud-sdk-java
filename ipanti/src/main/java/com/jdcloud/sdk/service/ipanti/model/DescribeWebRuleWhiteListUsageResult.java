/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Anti DDoS Pro Web Rule Configuration APIs
 * Anti DDoS Pro Web Rule Configuration APIs
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ipanti.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询网站类防护规则的白名单用量信息
 */
public class DescribeWebRuleWhiteListUsageResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 已配置的白名单规则数量
     */
    private Integer allocatedNum;

    /**
     * 开启的白名单规则数量
     */
    private Integer activeNum;

    /**
     * 还可添加的白名单规则数量
     */
    private Integer surplusAllocateNum;

    /**
     * 最多可添加的白名单规则数量
     */
    private Integer maxAllocateNum;


    /**
     * get 已配置的白名单规则数量
     *
     * @return
     */
    public Integer getAllocatedNum() {
        return allocatedNum;
    }

    /**
     * set 已配置的白名单规则数量
     *
     * @param allocatedNum
     */
    public void setAllocatedNum(Integer allocatedNum) {
        this.allocatedNum = allocatedNum;
    }

    /**
     * get 开启的白名单规则数量
     *
     * @return
     */
    public Integer getActiveNum() {
        return activeNum;
    }

    /**
     * set 开启的白名单规则数量
     *
     * @param activeNum
     */
    public void setActiveNum(Integer activeNum) {
        this.activeNum = activeNum;
    }

    /**
     * get 还可添加的白名单规则数量
     *
     * @return
     */
    public Integer getSurplusAllocateNum() {
        return surplusAllocateNum;
    }

    /**
     * set 还可添加的白名单规则数量
     *
     * @param surplusAllocateNum
     */
    public void setSurplusAllocateNum(Integer surplusAllocateNum) {
        this.surplusAllocateNum = surplusAllocateNum;
    }

    /**
     * get 最多可添加的白名单规则数量
     *
     * @return
     */
    public Integer getMaxAllocateNum() {
        return maxAllocateNum;
    }

    /**
     * set 最多可添加的白名单规则数量
     *
     * @param maxAllocateNum
     */
    public void setMaxAllocateNum(Integer maxAllocateNum) {
        this.maxAllocateNum = maxAllocateNum;
    }


    /**
     * set 已配置的白名单规则数量
     *
     * @param allocatedNum
     */
    public DescribeWebRuleWhiteListUsageResult allocatedNum(Integer allocatedNum) {
        this.allocatedNum = allocatedNum;
        return this;
    }

    /**
     * set 开启的白名单规则数量
     *
     * @param activeNum
     */
    public DescribeWebRuleWhiteListUsageResult activeNum(Integer activeNum) {
        this.activeNum = activeNum;
        return this;
    }

    /**
     * set 还可添加的白名单规则数量
     *
     * @param surplusAllocateNum
     */
    public DescribeWebRuleWhiteListUsageResult surplusAllocateNum(Integer surplusAllocateNum) {
        this.surplusAllocateNum = surplusAllocateNum;
        return this;
    }

    /**
     * set 最多可添加的白名单规则数量
     *
     * @param maxAllocateNum
     */
    public DescribeWebRuleWhiteListUsageResult maxAllocateNum(Integer maxAllocateNum) {
        this.maxAllocateNum = maxAllocateNum;
        return this;
    }


}