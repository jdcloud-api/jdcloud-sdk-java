/*
 * Copyright 2018-2025 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ipanti.model;

import java.util.List;
import java.util.ArrayList;

/**
 * forwardRule
 */
public class ForwardRule  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 规则id
     */
    private Long forwardRuleId;

    /**
     * TCP或UDP
     */
    private String protocol;

    /**
     * 规则的cname
     */
    private String cname;

    /**
     * 回源类型：ip或者domain
     */
    private String originType;

    /**
     * 端口号
     */
    private Integer port;

    /**
     * 转发规则：wrr-&gt;带权重的轮询，wlc-&gt;加权最小连接，rr-&gt;不带权重的轮询，sh-&gt;源地址hash
     */
    private String algorithm;

    /**
     * 回源地址：originType为ip时为多个填多个ip，originType为domain时填一个域名
     */
    private List<String> originAddr;

    /**
     * 回源域名
     */
    private String originDomain;

    /**
     * 回源端口号
     */
    private Integer originPort;

    /**
     * 0防御状态，1回源状态
     */
    private Integer status;


    /**
     * get 规则id
     *
     * @return
     */
    public Long getForwardRuleId() {
        return forwardRuleId;
    }

    /**
     * set 规则id
     *
     * @param forwardRuleId
     */
    public void setForwardRuleId(Long forwardRuleId) {
        this.forwardRuleId = forwardRuleId;
    }

    /**
     * get TCP或UDP
     *
     * @return
     */
    public String getProtocol() {
        return protocol;
    }

    /**
     * set TCP或UDP
     *
     * @param protocol
     */
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    /**
     * get 规则的cname
     *
     * @return
     */
    public String getCname() {
        return cname;
    }

    /**
     * set 规则的cname
     *
     * @param cname
     */
    public void setCname(String cname) {
        this.cname = cname;
    }

    /**
     * get 回源类型：ip或者domain
     *
     * @return
     */
    public String getOriginType() {
        return originType;
    }

    /**
     * set 回源类型：ip或者domain
     *
     * @param originType
     */
    public void setOriginType(String originType) {
        this.originType = originType;
    }

    /**
     * get 端口号
     *
     * @return
     */
    public Integer getPort() {
        return port;
    }

    /**
     * set 端口号
     *
     * @param port
     */
    public void setPort(Integer port) {
        this.port = port;
    }

    /**
     * get 转发规则：wrr-&gt;带权重的轮询，wlc-&gt;加权最小连接，rr-&gt;不带权重的轮询，sh-&gt;源地址hash
     *
     * @return
     */
    public String getAlgorithm() {
        return algorithm;
    }

    /**
     * set 转发规则：wrr-&gt;带权重的轮询，wlc-&gt;加权最小连接，rr-&gt;不带权重的轮询，sh-&gt;源地址hash
     *
     * @param algorithm
     */
    public void setAlgorithm(String algorithm) {
        this.algorithm = algorithm;
    }

    /**
     * get 回源地址：originType为ip时为多个填多个ip，originType为domain时填一个域名
     *
     * @return
     */
    public List<String> getOriginAddr() {
        return originAddr;
    }

    /**
     * set 回源地址：originType为ip时为多个填多个ip，originType为domain时填一个域名
     *
     * @param originAddr
     */
    public void setOriginAddr(List<String> originAddr) {
        this.originAddr = originAddr;
    }

    /**
     * get 回源域名
     *
     * @return
     */
    public String getOriginDomain() {
        return originDomain;
    }

    /**
     * set 回源域名
     *
     * @param originDomain
     */
    public void setOriginDomain(String originDomain) {
        this.originDomain = originDomain;
    }

    /**
     * get 回源端口号
     *
     * @return
     */
    public Integer getOriginPort() {
        return originPort;
    }

    /**
     * set 回源端口号
     *
     * @param originPort
     */
    public void setOriginPort(Integer originPort) {
        this.originPort = originPort;
    }

    /**
     * get 0防御状态，1回源状态
     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 0防御状态，1回源状态
     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }


    /**
     * set 规则id
     *
     * @param forwardRuleId
     */
    public ForwardRule forwardRuleId(Long forwardRuleId) {
        this.forwardRuleId = forwardRuleId;
        return this;
    }

    /**
     * set TCP或UDP
     *
     * @param protocol
     */
    public ForwardRule protocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * set 规则的cname
     *
     * @param cname
     */
    public ForwardRule cname(String cname) {
        this.cname = cname;
        return this;
    }

    /**
     * set 回源类型：ip或者domain
     *
     * @param originType
     */
    public ForwardRule originType(String originType) {
        this.originType = originType;
        return this;
    }

    /**
     * set 端口号
     *
     * @param port
     */
    public ForwardRule port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * set 转发规则：wrr-&gt;带权重的轮询，wlc-&gt;加权最小连接，rr-&gt;不带权重的轮询，sh-&gt;源地址hash
     *
     * @param algorithm
     */
    public ForwardRule algorithm(String algorithm) {
        this.algorithm = algorithm;
        return this;
    }

    /**
     * set 回源地址：originType为ip时为多个填多个ip，originType为domain时填一个域名
     *
     * @param originAddr
     */
    public ForwardRule originAddr(List<String> originAddr) {
        this.originAddr = originAddr;
        return this;
    }

    /**
     * set 回源域名
     *
     * @param originDomain
     */
    public ForwardRule originDomain(String originDomain) {
        this.originDomain = originDomain;
        return this;
    }

    /**
     * set 回源端口号
     *
     * @param originPort
     */
    public ForwardRule originPort(Integer originPort) {
        this.originPort = originPort;
        return this;
    }

    /**
     * set 0防御状态，1回源状态
     *
     * @param status
     */
    public ForwardRule status(Integer status) {
        this.status = status;
        return this;
    }


    /**
     * add item to 回源地址：originType为ip时为多个填多个ip，originType为domain时填一个域名
     *
     * @param originAddr
     */
    public void addOriginAddr(String originAddr) {
        if (this.originAddr == null) {
            this.originAddr = new ArrayList<>();
        }
        this.originAddr.add(originAddr);
    }

}