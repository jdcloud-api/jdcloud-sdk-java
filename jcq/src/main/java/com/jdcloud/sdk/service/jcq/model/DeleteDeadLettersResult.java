/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * DeadLetter
 * 死信队列相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.jcq.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 删除死信消息
 */
public class DeleteDeadLettersResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 被删除的消息的id列表
     */
    private List<String> messageIds;


    /**
     * get 被删除的消息的id列表
     *
     * @return
     */
    public List<String> getMessageIds() {
        return messageIds;
    }

    /**
     * set 被删除的消息的id列表
     *
     * @param messageIds
     */
    public void setMessageIds(List<String> messageIds) {
        this.messageIds = messageIds;
    }


    /**
     * set 被删除的消息的id列表
     *
     * @param messageIds
     */
    public DeleteDeadLettersResult messageIds(List<String> messageIds) {
        this.messageIds = messageIds;
        return this;
    }


    /**
     * add item to 被删除的消息的id列表
     *
     * @param messageId
     */
    public void addMessageId(String messageId) {
        if (this.messageIds == null) {
            this.messageIds = new ArrayList<>();
        }
        this.messageIds.add(messageId);
    }

}