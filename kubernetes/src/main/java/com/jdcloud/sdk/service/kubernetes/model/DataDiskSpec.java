/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * NodeGroup 的数据盘配置
- 磁盘大小
  - cloud：取值范围: 20-16000GB，步长 10GB
- ssd.io1 云盘iops
  - 步长 10
  - 范围 [200，min(32000，size×50)]
  - 默认值 size×30

 */
public class DataDiskSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 云硬盘类型，取值为ssd、premium-hdd、ssd.gp1、ssd.io1、hdd.std1之一
     * Required:true
     */
    @Required
    private String diskType;

    /**
     * 云硬盘大小，单位为 GiB，ssd 类型取值范围[20,1000]GB，步长为10G，premium-hdd 类型取值范围[20,3000]GB，步长为10G, ssd.gp1, ssd.io1, hdd.std1 类型取值均是范围[20,16000]GB，步长为10G
     * Required:true
     */
    @Required
    private Integer diskSizeGB;

    /**
     * 云硬盘IOPS的大小，当且仅当云盘类型是ssd.io1型的云盘有效，步长是10.
     */
    private Integer iops;

    /**
     * 用于创建云硬盘的快照ID
     */
    private String snapshotId;

    /**
     * 随虚机删除，默认true
     */
    private Boolean autoDelete;

    /**
     * 自动format，默认true
     */
    private Boolean autoFormat;

    /**
     * 支持ext4,xfs
     * Required:true
     */
    @Required
    private String fsType;

    /**
     * 挂载点，默认 /var/lib/docker
     */
    private String mountPoint;



    /**
     * get 云硬盘类型，取值为ssd、premium-hdd、ssd.gp1、ssd.io1、hdd.std1之一
     *
     * @return
     */
    public String getDiskType() {
        return diskType;
    }

    /**
     * set 云硬盘类型，取值为ssd、premium-hdd、ssd.gp1、ssd.io1、hdd.std1之一
     *
     * @param diskType
     */
    public void setDiskType(String diskType) {
        this.diskType = diskType;
    }


    /**
     * get 云硬盘大小，单位为 GiB，ssd 类型取值范围[20,1000]GB，步长为10G，premium-hdd 类型取值范围[20,3000]GB，步长为10G, ssd.gp1, ssd.io1, hdd.std1 类型取值均是范围[20,16000]GB，步长为10G
     *
     * @return
     */
    public Integer getDiskSizeGB() {
        return diskSizeGB;
    }

    /**
     * set 云硬盘大小，单位为 GiB，ssd 类型取值范围[20,1000]GB，步长为10G，premium-hdd 类型取值范围[20,3000]GB，步长为10G, ssd.gp1, ssd.io1, hdd.std1 类型取值均是范围[20,16000]GB，步长为10G
     *
     * @param diskSizeGB
     */
    public void setDiskSizeGB(Integer diskSizeGB) {
        this.diskSizeGB = diskSizeGB;
    }


    /**
     * get 云硬盘IOPS的大小，当且仅当云盘类型是ssd.io1型的云盘有效，步长是10.
     *
     * @return
     */
    public Integer getIops() {
        return iops;
    }

    /**
     * set 云硬盘IOPS的大小，当且仅当云盘类型是ssd.io1型的云盘有效，步长是10.
     *
     * @param iops
     */
    public void setIops(Integer iops) {
        this.iops = iops;
    }


    /**
     * get 用于创建云硬盘的快照ID
     *
     * @return
     */
    public String getSnapshotId() {
        return snapshotId;
    }

    /**
     * set 用于创建云硬盘的快照ID
     *
     * @param snapshotId
     */
    public void setSnapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
    }


    /**
     * get 随虚机删除，默认true
     *
     * @return
     */
    public Boolean getAutoDelete() {
        return autoDelete;
    }

    /**
     * set 随虚机删除，默认true
     *
     * @param autoDelete
     */
    public void setAutoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
    }


    /**
     * get 自动format，默认true
     *
     * @return
     */
    public Boolean getAutoFormat() {
        return autoFormat;
    }

    /**
     * set 自动format，默认true
     *
     * @param autoFormat
     */
    public void setAutoFormat(Boolean autoFormat) {
        this.autoFormat = autoFormat;
    }


    /**
     * get 支持ext4,xfs
     *
     * @return
     */
    public String getFsType() {
        return fsType;
    }

    /**
     * set 支持ext4,xfs
     *
     * @param fsType
     */
    public void setFsType(String fsType) {
        this.fsType = fsType;
    }


    /**
     * get 挂载点，默认 /var/lib/docker
     *
     * @return
     */
    public String getMountPoint() {
        return mountPoint;
    }

    /**
     * set 挂载点，默认 /var/lib/docker
     *
     * @param mountPoint
     */
    public void setMountPoint(String mountPoint) {
        this.mountPoint = mountPoint;
    }



    /**
     * set 云硬盘类型，取值为ssd、premium-hdd、ssd.gp1、ssd.io1、hdd.std1之一
     *
     * @param diskType
     */
    public DataDiskSpec diskType(String diskType) {
        this.diskType = diskType;
        return this;
    }


    /**
     * set 云硬盘大小，单位为 GiB，ssd 类型取值范围[20,1000]GB，步长为10G，premium-hdd 类型取值范围[20,3000]GB，步长为10G, ssd.gp1, ssd.io1, hdd.std1 类型取值均是范围[20,16000]GB，步长为10G
     *
     * @param diskSizeGB
     */
    public DataDiskSpec diskSizeGB(Integer diskSizeGB) {
        this.diskSizeGB = diskSizeGB;
        return this;
    }


    /**
     * set 云硬盘IOPS的大小，当且仅当云盘类型是ssd.io1型的云盘有效，步长是10.
     *
     * @param iops
     */
    public DataDiskSpec iops(Integer iops) {
        this.iops = iops;
        return this;
    }


    /**
     * set 用于创建云硬盘的快照ID
     *
     * @param snapshotId
     */
    public DataDiskSpec snapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
        return this;
    }


    /**
     * set 随虚机删除，默认true
     *
     * @param autoDelete
     */
    public DataDiskSpec autoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
        return this;
    }


    /**
     * set 自动format，默认true
     *
     * @param autoFormat
     */
    public DataDiskSpec autoFormat(Boolean autoFormat) {
        this.autoFormat = autoFormat;
        return this;
    }


    /**
     * set 支持ext4,xfs
     *
     * @param fsType
     */
    public DataDiskSpec fsType(String fsType) {
        this.fsType = fsType;
        return this;
    }


    /**
     * set 挂载点，默认 /var/lib/docker
     *
     * @param mountPoint
     */
    public DataDiskSpec mountPoint(String mountPoint) {
        this.mountPoint = mountPoint;
        return this;
    }


}