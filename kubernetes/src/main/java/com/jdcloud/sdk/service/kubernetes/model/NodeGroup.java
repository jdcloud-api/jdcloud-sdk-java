/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 描述工作节点组配置信息
 */
public class NodeGroup  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 集群 id
     */
    private String clusterId;

    /**
     * 工作节点组 id
     */
    private String nodeGroupId;

    /**
     * 工作节点组名称
     */
    private String name;

    /**
     * 工作节点组描述
     */
    private String description;

    /**
     * 工作节点组配置信息
     */
    private NodeConfig nodeConfig;

    /**
     * 工作节点版本
     */
    private String version;

    /**
     * 工作节点所属的网络信息
     */
    private NodeNetwork nodeNetwork;

    /**
     * 当前工作节点数量
     */
    private Integer currentCount;

    /**
     * 期望的工作节点数量
     */
    private Integer expectCount;

    /**
     * 工作节点组的ag id ，通过agid可以查询该工作节点组下的实例
     */
    private String agId;

    /**
     * 工作节点组所在的 az
     */
    
    private List<String> azs;
    /**
     * 工作节点组的 ag 对应的实例模板
     */
    private String instanceTemplateId;

    /**
     * 状态  [pending,running,resizing,reconciling,deleting,deleted,error,running_with_error(部分节点有问题)]
     */
    private String state;

    /**
     * tags
     */
    
    private List<Tag> tags;
    /**
     * 更新时间
     */
    private String updateTime;

    /**
     * 状态变更原因
     */
    private String stateMessage;

    /**
     * 控制节点操作进度
     */
    private NodeGroupProgress progress;

    /**
     * 自动伸缩配置
     */
    private CAConfig caConfig;

    /**
     * 创建时间
     */
    private String createdTime;



    /**
     * get 集群 id
     *
     * @return
     */
    public String getClusterId() {
        return clusterId;
    }

    /**
     * set 集群 id
     *
     * @param clusterId
     */
    public void setClusterId(String clusterId) {
        this.clusterId = clusterId;
    }


    /**
     * get 工作节点组 id
     *
     * @return
     */
    public String getNodeGroupId() {
        return nodeGroupId;
    }

    /**
     * set 工作节点组 id
     *
     * @param nodeGroupId
     */
    public void setNodeGroupId(String nodeGroupId) {
        this.nodeGroupId = nodeGroupId;
    }


    /**
     * get 工作节点组名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 工作节点组名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 工作节点组描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 工作节点组描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 工作节点组配置信息
     *
     * @return
     */
    public NodeConfig getNodeConfig() {
        return nodeConfig;
    }

    /**
     * set 工作节点组配置信息
     *
     * @param nodeConfig
     */
    public void setNodeConfig(NodeConfig nodeConfig) {
        this.nodeConfig = nodeConfig;
    }


    /**
     * get 工作节点版本
     *
     * @return
     */
    public String getVersion() {
        return version;
    }

    /**
     * set 工作节点版本
     *
     * @param version
     */
    public void setVersion(String version) {
        this.version = version;
    }


    /**
     * get 工作节点所属的网络信息
     *
     * @return
     */
    public NodeNetwork getNodeNetwork() {
        return nodeNetwork;
    }

    /**
     * set 工作节点所属的网络信息
     *
     * @param nodeNetwork
     */
    public void setNodeNetwork(NodeNetwork nodeNetwork) {
        this.nodeNetwork = nodeNetwork;
    }


    /**
     * get 当前工作节点数量
     *
     * @return
     */
    public Integer getCurrentCount() {
        return currentCount;
    }

    /**
     * set 当前工作节点数量
     *
     * @param currentCount
     */
    public void setCurrentCount(Integer currentCount) {
        this.currentCount = currentCount;
    }


    /**
     * get 期望的工作节点数量
     *
     * @return
     */
    public Integer getExpectCount() {
        return expectCount;
    }

    /**
     * set 期望的工作节点数量
     *
     * @param expectCount
     */
    public void setExpectCount(Integer expectCount) {
        this.expectCount = expectCount;
    }


    /**
     * get 工作节点组的ag id ，通过agid可以查询该工作节点组下的实例
     *
     * @return
     */
    public String getAgId() {
        return agId;
    }

    /**
     * set 工作节点组的ag id ，通过agid可以查询该工作节点组下的实例
     *
     * @param agId
     */
    public void setAgId(String agId) {
        this.agId = agId;
    }


    /**
    * get 工作节点组所在的 az
    *
    * @return
    */
    public List<String> getAzs() {
        return azs;
    }

    /**
    * set 工作节点组所在的 az
    *
    * @param azs
    */
    public void setAzs(List<String> azs) {
        this.azs = azs;
    }


    /**
     * get 工作节点组的 ag 对应的实例模板
     *
     * @return
     */
    public String getInstanceTemplateId() {
        return instanceTemplateId;
    }

    /**
     * set 工作节点组的 ag 对应的实例模板
     *
     * @param instanceTemplateId
     */
    public void setInstanceTemplateId(String instanceTemplateId) {
        this.instanceTemplateId = instanceTemplateId;
    }


    /**
     * get 状态  [pending,running,resizing,reconciling,deleting,deleted,error,running_with_error(部分节点有问题)]
     *
     * @return
     */
    public String getState() {
        return state;
    }

    /**
     * set 状态  [pending,running,resizing,reconciling,deleting,deleted,error,running_with_error(部分节点有问题)]
     *
     * @param state
     */
    public void setState(String state) {
        this.state = state;
    }


    /**
    * get tags
    *
    * @return
    */
    public List<Tag> getTags() {
        return tags;
    }

    /**
    * set tags
    *
    * @param tags
    */
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }


    /**
     * get 更新时间
     *
     * @return
     */
    public String getUpdateTime() {
        return updateTime;
    }

    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }


    /**
     * get 状态变更原因
     *
     * @return
     */
    public String getStateMessage() {
        return stateMessage;
    }

    /**
     * set 状态变更原因
     *
     * @param stateMessage
     */
    public void setStateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
    }


    /**
     * get 控制节点操作进度
     *
     * @return
     */
    public NodeGroupProgress getProgress() {
        return progress;
    }

    /**
     * set 控制节点操作进度
     *
     * @param progress
     */
    public void setProgress(NodeGroupProgress progress) {
        this.progress = progress;
    }


    /**
     * get 自动伸缩配置
     *
     * @return
     */
    public CAConfig getCaConfig() {
        return caConfig;
    }

    /**
     * set 自动伸缩配置
     *
     * @param caConfig
     */
    public void setCaConfig(CAConfig caConfig) {
        this.caConfig = caConfig;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }



    /**
     * set 集群 id
     *
     * @param clusterId
     */
    public NodeGroup clusterId(String clusterId) {
        this.clusterId = clusterId;
        return this;
    }


    /**
     * set 工作节点组 id
     *
     * @param nodeGroupId
     */
    public NodeGroup nodeGroupId(String nodeGroupId) {
        this.nodeGroupId = nodeGroupId;
        return this;
    }


    /**
     * set 工作节点组名称
     *
     * @param name
     */
    public NodeGroup name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 工作节点组描述
     *
     * @param description
     */
    public NodeGroup description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 工作节点组配置信息
     *
     * @param nodeConfig
     */
    public NodeGroup nodeConfig(NodeConfig nodeConfig) {
        this.nodeConfig = nodeConfig;
        return this;
    }


    /**
     * set 工作节点版本
     *
     * @param version
     */
    public NodeGroup version(String version) {
        this.version = version;
        return this;
    }


    /**
     * set 工作节点所属的网络信息
     *
     * @param nodeNetwork
     */
    public NodeGroup nodeNetwork(NodeNetwork nodeNetwork) {
        this.nodeNetwork = nodeNetwork;
        return this;
    }


    /**
     * set 当前工作节点数量
     *
     * @param currentCount
     */
    public NodeGroup currentCount(Integer currentCount) {
        this.currentCount = currentCount;
        return this;
    }


    /**
     * set 期望的工作节点数量
     *
     * @param expectCount
     */
    public NodeGroup expectCount(Integer expectCount) {
        this.expectCount = expectCount;
        return this;
    }


    /**
     * set 工作节点组的ag id ，通过agid可以查询该工作节点组下的实例
     *
     * @param agId
     */
    public NodeGroup agId(String agId) {
        this.agId = agId;
        return this;
    }


    /**
    * set 工作节点组所在的 az
    *
    * @param azs
    */
    public NodeGroup azs(List<String> azs) {
        this.azs = azs;
        return this;
    }


    /**
     * set 工作节点组的 ag 对应的实例模板
     *
     * @param instanceTemplateId
     */
    public NodeGroup instanceTemplateId(String instanceTemplateId) {
        this.instanceTemplateId = instanceTemplateId;
        return this;
    }


    /**
     * set 状态  [pending,running,resizing,reconciling,deleting,deleted,error,running_with_error(部分节点有问题)]
     *
     * @param state
     */
    public NodeGroup state(String state) {
        this.state = state;
        return this;
    }


    /**
    * set tags
    *
    * @param tags
    */
    public NodeGroup tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }


    /**
     * set 更新时间
     *
     * @param updateTime
     */
    public NodeGroup updateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }


    /**
     * set 状态变更原因
     *
     * @param stateMessage
     */
    public NodeGroup stateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
        return this;
    }


    /**
     * set 控制节点操作进度
     *
     * @param progress
     */
    public NodeGroup progress(NodeGroupProgress progress) {
        this.progress = progress;
        return this;
    }


    /**
     * set 自动伸缩配置
     *
     * @param caConfig
     */
    public NodeGroup caConfig(CAConfig caConfig) {
        this.caConfig = caConfig;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public NodeGroup createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }



    /**
     * add item to 工作节点组所在的 az
     *
     * @param az
     */
    public void addAz(String az) {
        if (this.azs == null) {
            this.azs = new ArrayList<>();
        }
        this.azs.add(az);
    }

    /**
     * add item to tags
     *
     * @param tag
     */
    public void addTag(Tag tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }
}