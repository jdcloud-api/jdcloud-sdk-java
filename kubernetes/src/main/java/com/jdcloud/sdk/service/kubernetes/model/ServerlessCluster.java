/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;

import java.util.List;
import java.util.ArrayList;

/**
 * serverlessCluster 详情
 */
public class ServerlessCluster  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 集群id
     */
    private String clusterId;

    /**
     * 名称
     */
    private String name;

    /**
     * 描述
     */
    private String description;

    /**
     * kubernetes的版本
     */
    private String version;

    /**
     * 集群所在的az
     */
    
    private List<String> azs;
    /**
     * k8s的cluster的cidr
     */
    private String clusterCidr;

    /**
     * 认证信息
     */
    private MasterAuth masterAuth;

    /**
     * 状态  [pending,running,reconciling（升级时的状态）, deleting, deleted, error]
     */
    private String clusterState;

    /**
     * 状态变更原因
     */
    private String stateMessage;

    /**
     * 用户的AccessKey，插件调用open-api时的认证凭证
     */
    private String accessKey;

    /**
     * 基本验证方式
     */
    private Boolean basicAuth;

    /**
     * 证书验证方式
     */
    private Boolean clientCertificate;

    /**
     * 用户访问的内网ip
     */
    private String privateEndpoint;

    /**
     * 用户访问的ip
     */
    private String endpoint;

    /**
     * IPv6地址
     */
    private String endpointIPV6;

    /**
     * endpoint的port
     */
    private String endpointPort;

    /**
     * endpoint的dashboard port
     */
    private String dashboardPort;

    /**
     * deprecated 优先以addonsConfig中的配置为准 &lt;br&gt;用户是否启用集群自定义监控，true 表示开启用，false 表示未开启用
     */
    private Boolean userMetrics;

    /**
     * 集群组件配置信息
     */
    
    private List<AddonConfig> addonsConfig;
    /**
     * 控制节点操作进度
     */
    private MaintenanceWindow masterProgress;

    /**
     * 网络配置信息
     */
    private ServerlessClusterNetworkConfig clusterNetwork;

    /**
     * 创建时间
     */
    private String createTime;

    /**
     * 集群网络类型,可取值为auto和customized
     */
    private String networkMode;

    /**
     * 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
     */
    
    private List<StringKeyValuePair> clusterEnvironments;
    /**
     * 是否是边缘计算集群
     */
    private Boolean isEdge;



    /**
     * get 集群id
     *
     * @return
     */
    public String getClusterId() {
        return clusterId;
    }

    /**
     * set 集群id
     *
     * @param clusterId
     */
    public void setClusterId(String clusterId) {
        this.clusterId = clusterId;
    }


    /**
     * get 名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get kubernetes的版本
     *
     * @return
     */
    public String getVersion() {
        return version;
    }

    /**
     * set kubernetes的版本
     *
     * @param version
     */
    public void setVersion(String version) {
        this.version = version;
    }


    /**
    * get 集群所在的az
    *
    * @return
    */
    public List<String> getAzs() {
        return azs;
    }

    /**
    * set 集群所在的az
    *
    * @param azs
    */
    public void setAzs(List<String> azs) {
        this.azs = azs;
    }


    /**
     * get k8s的cluster的cidr
     *
     * @return
     */
    public String getClusterCidr() {
        return clusterCidr;
    }

    /**
     * set k8s的cluster的cidr
     *
     * @param clusterCidr
     */
    public void setClusterCidr(String clusterCidr) {
        this.clusterCidr = clusterCidr;
    }


    /**
     * get 认证信息
     *
     * @return
     */
    public MasterAuth getMasterAuth() {
        return masterAuth;
    }

    /**
     * set 认证信息
     *
     * @param masterAuth
     */
    public void setMasterAuth(MasterAuth masterAuth) {
        this.masterAuth = masterAuth;
    }


    /**
     * get 状态  [pending,running,reconciling（升级时的状态）, deleting, deleted, error]
     *
     * @return
     */
    public String getClusterState() {
        return clusterState;
    }

    /**
     * set 状态  [pending,running,reconciling（升级时的状态）, deleting, deleted, error]
     *
     * @param clusterState
     */
    public void setClusterState(String clusterState) {
        this.clusterState = clusterState;
    }


    /**
     * get 状态变更原因
     *
     * @return
     */
    public String getStateMessage() {
        return stateMessage;
    }

    /**
     * set 状态变更原因
     *
     * @param stateMessage
     */
    public void setStateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
    }


    /**
     * get 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @return
     */
    public String getAccessKey() {
        return accessKey;
    }

    /**
     * set 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @param accessKey
     */
    public void setAccessKey(String accessKey) {
        this.accessKey = accessKey;
    }


    /**
     * get 基本验证方式
     *
     * @return
     */
    public Boolean getBasicAuth() {
        return basicAuth;
    }

    /**
     * set 基本验证方式
     *
     * @param basicAuth
     */
    public void setBasicAuth(Boolean basicAuth) {
        this.basicAuth = basicAuth;
    }


    /**
     * get 证书验证方式
     *
     * @return
     */
    public Boolean getClientCertificate() {
        return clientCertificate;
    }

    /**
     * set 证书验证方式
     *
     * @param clientCertificate
     */
    public void setClientCertificate(Boolean clientCertificate) {
        this.clientCertificate = clientCertificate;
    }


    /**
     * get 用户访问的内网ip
     *
     * @return
     */
    public String getPrivateEndpoint() {
        return privateEndpoint;
    }

    /**
     * set 用户访问的内网ip
     *
     * @param privateEndpoint
     */
    public void setPrivateEndpoint(String privateEndpoint) {
        this.privateEndpoint = privateEndpoint;
    }


    /**
     * get 用户访问的ip
     *
     * @return
     */
    public String getEndpoint() {
        return endpoint;
    }

    /**
     * set 用户访问的ip
     *
     * @param endpoint
     */
    public void setEndpoint(String endpoint) {
        this.endpoint = endpoint;
    }


    /**
     * get IPv6地址
     *
     * @return
     */
    public String getEndpointIPV6() {
        return endpointIPV6;
    }

    /**
     * set IPv6地址
     *
     * @param endpointIPV6
     */
    public void setEndpointIPV6(String endpointIPV6) {
        this.endpointIPV6 = endpointIPV6;
    }


    /**
     * get endpoint的port
     *
     * @return
     */
    public String getEndpointPort() {
        return endpointPort;
    }

    /**
     * set endpoint的port
     *
     * @param endpointPort
     */
    public void setEndpointPort(String endpointPort) {
        this.endpointPort = endpointPort;
    }


    /**
     * get endpoint的dashboard port
     *
     * @return
     */
    public String getDashboardPort() {
        return dashboardPort;
    }

    /**
     * set endpoint的dashboard port
     *
     * @param dashboardPort
     */
    public void setDashboardPort(String dashboardPort) {
        this.dashboardPort = dashboardPort;
    }


    /**
     * get deprecated 优先以addonsConfig中的配置为准 &lt;br&gt;用户是否启用集群自定义监控，true 表示开启用，false 表示未开启用
     *
     * @return
     */
    public Boolean getUserMetrics() {
        return userMetrics;
    }

    /**
     * set deprecated 优先以addonsConfig中的配置为准 &lt;br&gt;用户是否启用集群自定义监控，true 表示开启用，false 表示未开启用
     *
     * @param userMetrics
     */
    public void setUserMetrics(Boolean userMetrics) {
        this.userMetrics = userMetrics;
    }


    /**
    * get 集群组件配置信息
    *
    * @return
    */
    public List<AddonConfig> getAddonsConfig() {
        return addonsConfig;
    }

    /**
    * set 集群组件配置信息
    *
    * @param addonsConfig
    */
    public void setAddonsConfig(List<AddonConfig> addonsConfig) {
        this.addonsConfig = addonsConfig;
    }


    /**
     * get 控制节点操作进度
     *
     * @return
     */
    public MaintenanceWindow getMasterProgress() {
        return masterProgress;
    }

    /**
     * set 控制节点操作进度
     *
     * @param masterProgress
     */
    public void setMasterProgress(MaintenanceWindow masterProgress) {
        this.masterProgress = masterProgress;
    }


    /**
     * get 网络配置信息
     *
     * @return
     */
    public ServerlessClusterNetworkConfig getClusterNetwork() {
        return clusterNetwork;
    }

    /**
     * set 网络配置信息
     *
     * @param clusterNetwork
     */
    public void setClusterNetwork(ServerlessClusterNetworkConfig clusterNetwork) {
        this.clusterNetwork = clusterNetwork;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 集群网络类型,可取值为auto和customized
     *
     * @return
     */
    public String getNetworkMode() {
        return networkMode;
    }

    /**
     * set 集群网络类型,可取值为auto和customized
     *
     * @param networkMode
     */
    public void setNetworkMode(String networkMode) {
        this.networkMode = networkMode;
    }


    /**
    * get 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @return
    */
    public List<StringKeyValuePair> getClusterEnvironments() {
        return clusterEnvironments;
    }

    /**
    * set 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @param clusterEnvironments
    */
    public void setClusterEnvironments(List<StringKeyValuePair> clusterEnvironments) {
        this.clusterEnvironments = clusterEnvironments;
    }


    /**
     * get 是否是边缘计算集群
     *
     * @return
     */
    public Boolean getIsEdge() {
        return isEdge;
    }

    /**
     * set 是否是边缘计算集群
     *
     * @param isEdge
     */
    public void setIsEdge(Boolean isEdge) {
        this.isEdge = isEdge;
    }



    /**
     * set 集群id
     *
     * @param clusterId
     */
    public ServerlessCluster clusterId(String clusterId) {
        this.clusterId = clusterId;
        return this;
    }


    /**
     * set 名称
     *
     * @param name
     */
    public ServerlessCluster name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 描述
     *
     * @param description
     */
    public ServerlessCluster description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set kubernetes的版本
     *
     * @param version
     */
    public ServerlessCluster version(String version) {
        this.version = version;
        return this;
    }


    /**
    * set 集群所在的az
    *
    * @param azs
    */
    public ServerlessCluster azs(List<String> azs) {
        this.azs = azs;
        return this;
    }


    /**
     * set k8s的cluster的cidr
     *
     * @param clusterCidr
     */
    public ServerlessCluster clusterCidr(String clusterCidr) {
        this.clusterCidr = clusterCidr;
        return this;
    }


    /**
     * set 认证信息
     *
     * @param masterAuth
     */
    public ServerlessCluster masterAuth(MasterAuth masterAuth) {
        this.masterAuth = masterAuth;
        return this;
    }


    /**
     * set 状态  [pending,running,reconciling（升级时的状态）, deleting, deleted, error]
     *
     * @param clusterState
     */
    public ServerlessCluster clusterState(String clusterState) {
        this.clusterState = clusterState;
        return this;
    }


    /**
     * set 状态变更原因
     *
     * @param stateMessage
     */
    public ServerlessCluster stateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
        return this;
    }


    /**
     * set 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @param accessKey
     */
    public ServerlessCluster accessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }


    /**
     * set 基本验证方式
     *
     * @param basicAuth
     */
    public ServerlessCluster basicAuth(Boolean basicAuth) {
        this.basicAuth = basicAuth;
        return this;
    }


    /**
     * set 证书验证方式
     *
     * @param clientCertificate
     */
    public ServerlessCluster clientCertificate(Boolean clientCertificate) {
        this.clientCertificate = clientCertificate;
        return this;
    }


    /**
     * set 用户访问的内网ip
     *
     * @param privateEndpoint
     */
    public ServerlessCluster privateEndpoint(String privateEndpoint) {
        this.privateEndpoint = privateEndpoint;
        return this;
    }


    /**
     * set 用户访问的ip
     *
     * @param endpoint
     */
    public ServerlessCluster endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }


    /**
     * set IPv6地址
     *
     * @param endpointIPV6
     */
    public ServerlessCluster endpointIPV6(String endpointIPV6) {
        this.endpointIPV6 = endpointIPV6;
        return this;
    }


    /**
     * set endpoint的port
     *
     * @param endpointPort
     */
    public ServerlessCluster endpointPort(String endpointPort) {
        this.endpointPort = endpointPort;
        return this;
    }


    /**
     * set endpoint的dashboard port
     *
     * @param dashboardPort
     */
    public ServerlessCluster dashboardPort(String dashboardPort) {
        this.dashboardPort = dashboardPort;
        return this;
    }


    /**
     * set deprecated 优先以addonsConfig中的配置为准 &lt;br&gt;用户是否启用集群自定义监控，true 表示开启用，false 表示未开启用
     *
     * @param userMetrics
     */
    public ServerlessCluster userMetrics(Boolean userMetrics) {
        this.userMetrics = userMetrics;
        return this;
    }


    /**
    * set 集群组件配置信息
    *
    * @param addonsConfig
    */
    public ServerlessCluster addonsConfig(List<AddonConfig> addonsConfig) {
        this.addonsConfig = addonsConfig;
        return this;
    }


    /**
     * set 控制节点操作进度
     *
     * @param masterProgress
     */
    public ServerlessCluster masterProgress(MaintenanceWindow masterProgress) {
        this.masterProgress = masterProgress;
        return this;
    }


    /**
     * set 网络配置信息
     *
     * @param clusterNetwork
     */
    public ServerlessCluster clusterNetwork(ServerlessClusterNetworkConfig clusterNetwork) {
        this.clusterNetwork = clusterNetwork;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createTime
     */
    public ServerlessCluster createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 集群网络类型,可取值为auto和customized
     *
     * @param networkMode
     */
    public ServerlessCluster networkMode(String networkMode) {
        this.networkMode = networkMode;
        return this;
    }


    /**
    * set 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @param clusterEnvironments
    */
    public ServerlessCluster clusterEnvironments(List<StringKeyValuePair> clusterEnvironments) {
        this.clusterEnvironments = clusterEnvironments;
        return this;
    }


    /**
     * set 是否是边缘计算集群
     *
     * @param isEdge
     */
    public ServerlessCluster isEdge(Boolean isEdge) {
        this.isEdge = isEdge;
        return this;
    }



    /**
     * add item to 集群所在的az
     *
     * @param az
     */
    public void addAz(String az) {
        if (this.azs == null) {
            this.azs = new ArrayList<>();
        }
        this.azs.add(az);
    }

    /**
     * add item to 集群组件配置信息
     *
     * @param addonsConfig
     */
    public void addAddonsConfig(AddonConfig addonsConfig) {
        if (this.addonsConfig == null) {
            this.addonsConfig = new ArrayList<>();
        }
        this.addonsConfig.add(addonsConfig);
    }

    /**
     * add item to 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
     *
     * @param clusterEnvironment
     */
    public void addClusterEnvironment(StringKeyValuePair clusterEnvironment) {
        if (this.clusterEnvironments == null) {
            this.clusterEnvironments = new ArrayList<>();
        }
        this.clusterEnvironments.add(clusterEnvironment);
    }
}