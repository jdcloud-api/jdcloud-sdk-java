/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;


/**
 * 集群Pod子网配置
 */
public class ClusterNetworkPodSubnet  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 子网 ID
     */
    private String subnetId;

    /**
     * 子网类型，可取值为：pod_subnet/lb_subnet/node_subnet
     */
    private String subnetType;

    /**
     * 子网是否启用，仅pod子网可用
     */
    private Boolean enabled;

    /**
     * 是否允许自动删除
     */
    private Boolean autoDelete;

    /**
     * ip mask of subnet view
     */
    private Integer ipMaskLen;

    /**
     * 可用的node数量
     */
    private Integer availableCidrCount;

    /**
     * ip count of each cidr. defined by user
     */
    private Integer eniLen;

    /**
     * ipam policy. defined by user
     */
    private String ipamPolicy;

    /**
     * tell if runtime subnet has error
     */
    private String runtimeError;



    /**
     * get 子网 ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网 ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get 子网类型，可取值为：pod_subnet/lb_subnet/node_subnet
     *
     * @return
     */
    public String getSubnetType() {
        return subnetType;
    }

    /**
     * set 子网类型，可取值为：pod_subnet/lb_subnet/node_subnet
     *
     * @param subnetType
     */
    public void setSubnetType(String subnetType) {
        this.subnetType = subnetType;
    }


    /**
     * get 子网是否启用，仅pod子网可用
     *
     * @return
     */
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * set 子网是否启用，仅pod子网可用
     *
     * @param enabled
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }


    /**
     * get 是否允许自动删除
     *
     * @return
     */
    public Boolean getAutoDelete() {
        return autoDelete;
    }

    /**
     * set 是否允许自动删除
     *
     * @param autoDelete
     */
    public void setAutoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
    }


    /**
     * get ip mask of subnet view
     *
     * @return
     */
    public Integer getIpMaskLen() {
        return ipMaskLen;
    }

    /**
     * set ip mask of subnet view
     *
     * @param ipMaskLen
     */
    public void setIpMaskLen(Integer ipMaskLen) {
        this.ipMaskLen = ipMaskLen;
    }


    /**
     * get 可用的node数量
     *
     * @return
     */
    public Integer getAvailableCidrCount() {
        return availableCidrCount;
    }

    /**
     * set 可用的node数量
     *
     * @param availableCidrCount
     */
    public void setAvailableCidrCount(Integer availableCidrCount) {
        this.availableCidrCount = availableCidrCount;
    }


    /**
     * get ip count of each cidr. defined by user
     *
     * @return
     */
    public Integer getEniLen() {
        return eniLen;
    }

    /**
     * set ip count of each cidr. defined by user
     *
     * @param eniLen
     */
    public void setEniLen(Integer eniLen) {
        this.eniLen = eniLen;
    }


    /**
     * get ipam policy. defined by user
     *
     * @return
     */
    public String getIpamPolicy() {
        return ipamPolicy;
    }

    /**
     * set ipam policy. defined by user
     *
     * @param ipamPolicy
     */
    public void setIpamPolicy(String ipamPolicy) {
        this.ipamPolicy = ipamPolicy;
    }


    /**
     * get tell if runtime subnet has error
     *
     * @return
     */
    public String getRuntimeError() {
        return runtimeError;
    }

    /**
     * set tell if runtime subnet has error
     *
     * @param runtimeError
     */
    public void setRuntimeError(String runtimeError) {
        this.runtimeError = runtimeError;
    }



    /**
     * set 子网 ID
     *
     * @param subnetId
     */
    public ClusterNetworkPodSubnet subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set 子网类型，可取值为：pod_subnet/lb_subnet/node_subnet
     *
     * @param subnetType
     */
    public ClusterNetworkPodSubnet subnetType(String subnetType) {
        this.subnetType = subnetType;
        return this;
    }


    /**
     * set 子网是否启用，仅pod子网可用
     *
     * @param enabled
     */
    public ClusterNetworkPodSubnet enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }


    /**
     * set 是否允许自动删除
     *
     * @param autoDelete
     */
    public ClusterNetworkPodSubnet autoDelete(Boolean autoDelete) {
        this.autoDelete = autoDelete;
        return this;
    }


    /**
     * set ip mask of subnet view
     *
     * @param ipMaskLen
     */
    public ClusterNetworkPodSubnet ipMaskLen(Integer ipMaskLen) {
        this.ipMaskLen = ipMaskLen;
        return this;
    }


    /**
     * set 可用的node数量
     *
     * @param availableCidrCount
     */
    public ClusterNetworkPodSubnet availableCidrCount(Integer availableCidrCount) {
        this.availableCidrCount = availableCidrCount;
        return this;
    }


    /**
     * set ip count of each cidr. defined by user
     *
     * @param eniLen
     */
    public ClusterNetworkPodSubnet eniLen(Integer eniLen) {
        this.eniLen = eniLen;
        return this;
    }


    /**
     * set ipam policy. defined by user
     *
     * @param ipamPolicy
     */
    public ClusterNetworkPodSubnet ipamPolicy(String ipamPolicy) {
        this.ipamPolicy = ipamPolicy;
        return this;
    }


    /**
     * set tell if runtime subnet has error
     *
     * @param runtimeError
     */
    public ClusterNetworkPodSubnet runtimeError(String runtimeError) {
        this.runtimeError = runtimeError;
        return this;
    }


}