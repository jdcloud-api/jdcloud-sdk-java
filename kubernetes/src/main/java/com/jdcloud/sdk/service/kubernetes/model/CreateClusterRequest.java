/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Cluster
 * 集群相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.kubernetes.model.NodeGroupSpec;
import com.jdcloud.sdk.service.kubernetes.model.AddonConfigSpec;
import com.jdcloud.sdk.service.kubernetes.model.AutoClusterNetworkSpec;
import com.jdcloud.sdk.service.kubernetes.model.CustomizedClusterNetworkSpec;
import com.jdcloud.sdk.service.kubernetes.model.StringKeyValuePair;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * - 创建集群
- 证书
  - 关于kubernetes的证书，默认生成，不需要用户传入。
- nodegroup
  - cluster必须与nodeGroup进行绑定
  - cluster支持多nodegroup
  - 状态
    - pending,reconciling,deleting状态不可以操作更新接口
    - running，running_with_error状态可以操作nodegroup所有接口
    - error状态只可以查询，删除
    - delete状态的cluster在十五分钟内可以查询，十五分钟后无法查询到
- 状态限制
  - pending,reconciling,deleting状态不可以操作更新接口
  - running状态可以操作cluster所有接口
  - error状态只可以查询，删除
  - delete状态的cluster在十五分钟内可以查询，十五分钟后无法查询到

 */
public class CreateClusterRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 名称（同一用户的 cluster 允许重名）
     * Required:true
     */
    @Required
    private String name;

    /**
     * 描述
     */
    private String description;

    /**
     * kubernetes的版本
     */
    private String version;

    /**
     * 是否是边缘计算集群
     */
    private Boolean isEdge;

    /**
     * 集群所在的az
     * Required:true
     */
    @Required
    
    private List<String> azs;
    /**
     * 集群节点组
     * Required:true
     */
    @Required
    private NodeGroupSpec nodeGroup;

    /**
     * 用户的AccessKey，插件调用open-api时的认证凭证
     * Required:true
     */
    @Required
    private String accessKey;

    /**
     * 用户的SecretKey，插件调用open-api时的认证凭证
     * Required:true
     */
    @Required
    private String secretKey;

    /**
     * 集群组件配置
     */
    
    private List<AddonConfigSpec> addonsConfig;
    /**
     * 集群网络配置类型，取值：auto，customized，创建集群接口合并，原CreateCusomizedCluster接口废弃
     */
    private String clusterNetworkType;

    /**
     * clusterNetworkType为【auto】时，此配置必须要配置
     */
    private AutoClusterNetworkSpec autoClusterNetworkSpec;

    /**
     * clusterNetworkType为【customized】时，此配置必须要配置
     */
    private CustomizedClusterNetworkSpec customizedClusterNetworkSpec;

    /**
     * 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
     */
    
    private List<StringKeyValuePair> clusterEnvironments;
    /**
     * 地域 ID
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 名称（同一用户的 cluster 允许重名）
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 名称（同一用户的 cluster 允许重名）
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get kubernetes的版本
     *
     * @return
     */
    public String getVersion() {
        return version;
    }

    /**
     * set kubernetes的版本
     *
     * @param version
     */
    public void setVersion(String version) {
        this.version = version;
    }


    /**
     * get 是否是边缘计算集群
     *
     * @return
     */
    public Boolean getIsEdge() {
        return isEdge;
    }

    /**
     * set 是否是边缘计算集群
     *
     * @param isEdge
     */
    public void setIsEdge(Boolean isEdge) {
        this.isEdge = isEdge;
    }


    /**
    * get 集群所在的az
    *
    * @return
    */
    public List<String> getAzs() {
        return azs;
    }

    /**
    * set 集群所在的az
    *
    * @param azs
    */
    public void setAzs(List<String> azs) {
        this.azs = azs;
    }


    /**
     * get 集群节点组
     *
     * @return
     */
    public NodeGroupSpec getNodeGroup() {
        return nodeGroup;
    }

    /**
     * set 集群节点组
     *
     * @param nodeGroup
     */
    public void setNodeGroup(NodeGroupSpec nodeGroup) {
        this.nodeGroup = nodeGroup;
    }


    /**
     * get 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @return
     */
    public String getAccessKey() {
        return accessKey;
    }

    /**
     * set 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @param accessKey
     */
    public void setAccessKey(String accessKey) {
        this.accessKey = accessKey;
    }


    /**
     * get 用户的SecretKey，插件调用open-api时的认证凭证
     *
     * @return
     */
    public String getSecretKey() {
        return secretKey;
    }

    /**
     * set 用户的SecretKey，插件调用open-api时的认证凭证
     *
     * @param secretKey
     */
    public void setSecretKey(String secretKey) {
        this.secretKey = secretKey;
    }


    /**
    * get 集群组件配置
    *
    * @return
    */
    public List<AddonConfigSpec> getAddonsConfig() {
        return addonsConfig;
    }

    /**
    * set 集群组件配置
    *
    * @param addonsConfig
    */
    public void setAddonsConfig(List<AddonConfigSpec> addonsConfig) {
        this.addonsConfig = addonsConfig;
    }


    /**
     * get 集群网络配置类型，取值：auto，customized，创建集群接口合并，原CreateCusomizedCluster接口废弃
     *
     * @return
     */
    public String getClusterNetworkType() {
        return clusterNetworkType;
    }

    /**
     * set 集群网络配置类型，取值：auto，customized，创建集群接口合并，原CreateCusomizedCluster接口废弃
     *
     * @param clusterNetworkType
     */
    public void setClusterNetworkType(String clusterNetworkType) {
        this.clusterNetworkType = clusterNetworkType;
    }


    /**
     * get clusterNetworkType为【auto】时，此配置必须要配置
     *
     * @return
     */
    public AutoClusterNetworkSpec getAutoClusterNetworkSpec() {
        return autoClusterNetworkSpec;
    }

    /**
     * set clusterNetworkType为【auto】时，此配置必须要配置
     *
     * @param autoClusterNetworkSpec
     */
    public void setAutoClusterNetworkSpec(AutoClusterNetworkSpec autoClusterNetworkSpec) {
        this.autoClusterNetworkSpec = autoClusterNetworkSpec;
    }


    /**
     * get clusterNetworkType为【customized】时，此配置必须要配置
     *
     * @return
     */
    public CustomizedClusterNetworkSpec getCustomizedClusterNetworkSpec() {
        return customizedClusterNetworkSpec;
    }

    /**
     * set clusterNetworkType为【customized】时，此配置必须要配置
     *
     * @param customizedClusterNetworkSpec
     */
    public void setCustomizedClusterNetworkSpec(CustomizedClusterNetworkSpec customizedClusterNetworkSpec) {
        this.customizedClusterNetworkSpec = customizedClusterNetworkSpec;
    }


    /**
    * get 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @return
    */
    public List<StringKeyValuePair> getClusterEnvironments() {
        return clusterEnvironments;
    }

    /**
    * set 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @param clusterEnvironments
    */
    public void setClusterEnvironments(List<StringKeyValuePair> clusterEnvironments) {
        this.clusterEnvironments = clusterEnvironments;
    }


    /**
     * get 地域 ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域 ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 名称（同一用户的 cluster 允许重名）
     *
     * @param name
     */
    public CreateClusterRequest name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 描述
     *
     * @param description
     */
    public CreateClusterRequest description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set kubernetes的版本
     *
     * @param version
     */
    public CreateClusterRequest version(String version) {
        this.version = version;
        return this;
    }


    /**
     * set 是否是边缘计算集群
     *
     * @param isEdge
     */
    public CreateClusterRequest isEdge(Boolean isEdge) {
        this.isEdge = isEdge;
        return this;
    }


    /**
    * set 集群所在的az
    *
    * @param azs
    */
    public CreateClusterRequest azs(List<String> azs) {
        this.azs = azs;
        return this;
    }


    /**
     * set 集群节点组
     *
     * @param nodeGroup
     */
    public CreateClusterRequest nodeGroup(NodeGroupSpec nodeGroup) {
        this.nodeGroup = nodeGroup;
        return this;
    }


    /**
     * set 用户的AccessKey，插件调用open-api时的认证凭证
     *
     * @param accessKey
     */
    public CreateClusterRequest accessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }


    /**
     * set 用户的SecretKey，插件调用open-api时的认证凭证
     *
     * @param secretKey
     */
    public CreateClusterRequest secretKey(String secretKey) {
        this.secretKey = secretKey;
        return this;
    }


    /**
    * set 集群组件配置
    *
    * @param addonsConfig
    */
    public CreateClusterRequest addonsConfig(List<AddonConfigSpec> addonsConfig) {
        this.addonsConfig = addonsConfig;
        return this;
    }


    /**
     * set 集群网络配置类型，取值：auto，customized，创建集群接口合并，原CreateCusomizedCluster接口废弃
     *
     * @param clusterNetworkType
     */
    public CreateClusterRequest clusterNetworkType(String clusterNetworkType) {
        this.clusterNetworkType = clusterNetworkType;
        return this;
    }


    /**
     * set clusterNetworkType为【auto】时，此配置必须要配置
     *
     * @param autoClusterNetworkSpec
     */
    public CreateClusterRequest autoClusterNetworkSpec(AutoClusterNetworkSpec autoClusterNetworkSpec) {
        this.autoClusterNetworkSpec = autoClusterNetworkSpec;
        return this;
    }


    /**
     * set clusterNetworkType为【customized】时，此配置必须要配置
     *
     * @param customizedClusterNetworkSpec
     */
    public CreateClusterRequest customizedClusterNetworkSpec(CustomizedClusterNetworkSpec customizedClusterNetworkSpec) {
        this.customizedClusterNetworkSpec = customizedClusterNetworkSpec;
        return this;
    }


    /**
    * set 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
    *
    * @param clusterEnvironments
    */
    public CreateClusterRequest clusterEnvironments(List<StringKeyValuePair> clusterEnvironments) {
        this.clusterEnvironments = clusterEnvironments;
        return this;
    }


    /**
     * set 地域 ID
     *
     * @param regionId
     */
    public CreateClusterRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 集群所在的az
     *
     * @param az
     */
    public void addAz(String az) {
        if (this.azs == null) {
            this.azs = new ArrayList<>();
        }
        this.azs.add(az);
    }

    /**
     * add item to 集群组件配置
     *
     * @param addonsConfig
     */
    public void addAddonsConfig(AddonConfigSpec addonsConfig) {
        if (this.addonsConfig == null) {
            this.addonsConfig = new ArrayList<>();
        }
        this.addonsConfig.add(addonsConfig);
    }

    /**
     * add item to 用户自定义的集群的环境信息，会影响到创建集群时的组件模版的渲染
     *
     * @param clusterEnvironment
     */
    public void addClusterEnvironment(StringKeyValuePair clusterEnvironment) {
        if (this.clusterEnvironments == null) {
            this.clusterEnvironments = new ArrayList<>();
        }
        this.clusterEnvironments.add(clusterEnvironment);
    }
}