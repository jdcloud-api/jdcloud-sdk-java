/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.kubernetes.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * 集群的网络配置参数
 */
public class ClusterNetworkSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * kube-apiserver是否可公网访问，false则kube-apiserver不绑定公网地址，true绑定公网地址
     * Required:true
     */
    @Required
    private Boolean publicApiServer;

    /**
     * master网络的cidr
     * Required:true
     */
    @Required
    private String masterCidr;

    /**
     * service网络的cidr
     * Required:true
     */
    @Required
    private String serviceCidr;

    /**
     * 用户侧承载node和pod的vpc id
     * Required:true
     */
    @Required
    private String vpcId;

    /**
     * 初始pod的子网id
     * Required:true
     */
    @Required
    private String podSubnetId;

    /**
     * 初始loadbalancer类型的service所创建的lb所在的subnet
     * Required:true
     */
    @Required
    private String lbSubnetId;

    /**
     * 初始的node子网ID
     * Required:true
     */
    @Required
    private String nodeSubnetId;

    /**
     * nat网关配置
     * Required:true
     */
    @Required
    private NatGatewaySpec natGateway;



    /**
     * get kube-apiserver是否可公网访问，false则kube-apiserver不绑定公网地址，true绑定公网地址
     *
     * @return
     */
    public Boolean getPublicApiServer() {
        return publicApiServer;
    }

    /**
     * set kube-apiserver是否可公网访问，false则kube-apiserver不绑定公网地址，true绑定公网地址
     *
     * @param publicApiServer
     */
    public void setPublicApiServer(Boolean publicApiServer) {
        this.publicApiServer = publicApiServer;
    }


    /**
     * get master网络的cidr
     *
     * @return
     */
    public String getMasterCidr() {
        return masterCidr;
    }

    /**
     * set master网络的cidr
     *
     * @param masterCidr
     */
    public void setMasterCidr(String masterCidr) {
        this.masterCidr = masterCidr;
    }


    /**
     * get service网络的cidr
     *
     * @return
     */
    public String getServiceCidr() {
        return serviceCidr;
    }

    /**
     * set service网络的cidr
     *
     * @param serviceCidr
     */
    public void setServiceCidr(String serviceCidr) {
        this.serviceCidr = serviceCidr;
    }


    /**
     * get 用户侧承载node和pod的vpc id
     *
     * @return
     */
    public String getVpcId() {
        return vpcId;
    }

    /**
     * set 用户侧承载node和pod的vpc id
     *
     * @param vpcId
     */
    public void setVpcId(String vpcId) {
        this.vpcId = vpcId;
    }


    /**
     * get 初始pod的子网id
     *
     * @return
     */
    public String getPodSubnetId() {
        return podSubnetId;
    }

    /**
     * set 初始pod的子网id
     *
     * @param podSubnetId
     */
    public void setPodSubnetId(String podSubnetId) {
        this.podSubnetId = podSubnetId;
    }


    /**
     * get 初始loadbalancer类型的service所创建的lb所在的subnet
     *
     * @return
     */
    public String getLbSubnetId() {
        return lbSubnetId;
    }

    /**
     * set 初始loadbalancer类型的service所创建的lb所在的subnet
     *
     * @param lbSubnetId
     */
    public void setLbSubnetId(String lbSubnetId) {
        this.lbSubnetId = lbSubnetId;
    }


    /**
     * get 初始的node子网ID
     *
     * @return
     */
    public String getNodeSubnetId() {
        return nodeSubnetId;
    }

    /**
     * set 初始的node子网ID
     *
     * @param nodeSubnetId
     */
    public void setNodeSubnetId(String nodeSubnetId) {
        this.nodeSubnetId = nodeSubnetId;
    }


    /**
     * get nat网关配置
     *
     * @return
     */
    public NatGatewaySpec getNatGateway() {
        return natGateway;
    }

    /**
     * set nat网关配置
     *
     * @param natGateway
     */
    public void setNatGateway(NatGatewaySpec natGateway) {
        this.natGateway = natGateway;
    }



    /**
     * set kube-apiserver是否可公网访问，false则kube-apiserver不绑定公网地址，true绑定公网地址
     *
     * @param publicApiServer
     */
    public ClusterNetworkSpec publicApiServer(Boolean publicApiServer) {
        this.publicApiServer = publicApiServer;
        return this;
    }


    /**
     * set master网络的cidr
     *
     * @param masterCidr
     */
    public ClusterNetworkSpec masterCidr(String masterCidr) {
        this.masterCidr = masterCidr;
        return this;
    }


    /**
     * set service网络的cidr
     *
     * @param serviceCidr
     */
    public ClusterNetworkSpec serviceCidr(String serviceCidr) {
        this.serviceCidr = serviceCidr;
        return this;
    }


    /**
     * set 用户侧承载node和pod的vpc id
     *
     * @param vpcId
     */
    public ClusterNetworkSpec vpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }


    /**
     * set 初始pod的子网id
     *
     * @param podSubnetId
     */
    public ClusterNetworkSpec podSubnetId(String podSubnetId) {
        this.podSubnetId = podSubnetId;
        return this;
    }


    /**
     * set 初始loadbalancer类型的service所创建的lb所在的subnet
     *
     * @param lbSubnetId
     */
    public ClusterNetworkSpec lbSubnetId(String lbSubnetId) {
        this.lbSubnetId = lbSubnetId;
        return this;
    }


    /**
     * set 初始的node子网ID
     *
     * @param nodeSubnetId
     */
    public ClusterNetworkSpec nodeSubnetId(String nodeSubnetId) {
        this.nodeSubnetId = nodeSubnetId;
        return this;
    }


    /**
     * set nat网关配置
     *
     * @param natGateway
     */
    public ClusterNetworkSpec natGateway(NatGatewaySpec natGateway) {
        this.natGateway = natGateway;
        return this;
    }


}