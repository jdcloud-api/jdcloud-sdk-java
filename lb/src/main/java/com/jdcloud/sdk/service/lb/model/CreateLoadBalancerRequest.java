/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * LoadBalancer
 * 负载均衡器相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.lb.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.charge.model.ChargeSpec;
import com.jdcloud.sdk.service.vpc.model.ElasticIpSpec;
import com.jdcloud.sdk.service.lb.model.Tag;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建负载均衡
 */
public class CreateLoadBalancerRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * LoadBalancer的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     * Required:true
     */
    @Required
    private String loadBalancerName;

    /**
     * LoadBalancer所属子网的Id
     * Required:true
     */
    @Required
    private String subnetId;

    /**
     * LoadBalancer的类型，取值：alb、nlb、dnlb，默认为alb
     */
    private String type;

    /**
     * 【alb，nlb】LoadBalancer所属availability Zone列表,对于alb,nlb是必选参数，可用区个数不能超过2个 &lt;br&gt;【dnlb】中心可用区，dnlb不需要传该参数，全可用区可用；边缘可用区，仅支持传入单可用区
     */
    
    private List<String> azs;
    /**
     * 【alb】支持按用量计费，默认为按用量。【nlb】支持按用量计费。【dnlb】支持按配置计费
     */
    private ChargeSpec chargeSpec;

    /**
     * 负载均衡关联的弹性IP规格
     */
    private ElasticIpSpec elasticIp;

    /**
     * 指定LoadBalancer的VIP(内网IPv4地址)，需要属于指定的子网并且未被占用
     */
    private String privateIpAddress;

    /**
     * 【alb】 安全组 ID列表
     */
    
    private List<String> securityGroupIds;
    /**
     * LoadBalancer的描述信息,允许输入UTF-8编码下的全部字符，不超过256字符
     */
    private String description;

    /**
     * 删除保护，取值为True(开启)或False(关闭)，默认为False
     */
    private Boolean deleteProtection;

    /**
     * 用户tag 信息
     */
    
    private List<Tag> userTags;
    /**
     * Region ID
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get LoadBalancer的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @return
     */
    public String getLoadBalancerName() {
        return loadBalancerName;
    }

    /**
     * set LoadBalancer的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param loadBalancerName
     */
    public void setLoadBalancerName(String loadBalancerName) {
        this.loadBalancerName = loadBalancerName;
    }


    /**
     * get LoadBalancer所属子网的Id
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set LoadBalancer所属子网的Id
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get LoadBalancer的类型，取值：alb、nlb、dnlb，默认为alb
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set LoadBalancer的类型，取值：alb、nlb、dnlb，默认为alb
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }


    /**
    * get 【alb，nlb】LoadBalancer所属availability Zone列表,对于alb,nlb是必选参数，可用区个数不能超过2个 &lt;br&gt;【dnlb】中心可用区，dnlb不需要传该参数，全可用区可用；边缘可用区，仅支持传入单可用区
    *
    * @return
    */
    public List<String> getAzs() {
        return azs;
    }

    /**
    * set 【alb，nlb】LoadBalancer所属availability Zone列表,对于alb,nlb是必选参数，可用区个数不能超过2个 &lt;br&gt;【dnlb】中心可用区，dnlb不需要传该参数，全可用区可用；边缘可用区，仅支持传入单可用区
    *
    * @param azs
    */
    public void setAzs(List<String> azs) {
        this.azs = azs;
    }


    /**
     * get 【alb】支持按用量计费，默认为按用量。【nlb】支持按用量计费。【dnlb】支持按配置计费
     *
     * @return
     */
    public ChargeSpec getChargeSpec() {
        return chargeSpec;
    }

    /**
     * set 【alb】支持按用量计费，默认为按用量。【nlb】支持按用量计费。【dnlb】支持按配置计费
     *
     * @param chargeSpec
     */
    public void setChargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
    }


    /**
     * get 负载均衡关联的弹性IP规格
     *
     * @return
     */
    public ElasticIpSpec getElasticIp() {
        return elasticIp;
    }

    /**
     * set 负载均衡关联的弹性IP规格
     *
     * @param elasticIp
     */
    public void setElasticIp(ElasticIpSpec elasticIp) {
        this.elasticIp = elasticIp;
    }


    /**
     * get 指定LoadBalancer的VIP(内网IPv4地址)，需要属于指定的子网并且未被占用
     *
     * @return
     */
    public String getPrivateIpAddress() {
        return privateIpAddress;
    }

    /**
     * set 指定LoadBalancer的VIP(内网IPv4地址)，需要属于指定的子网并且未被占用
     *
     * @param privateIpAddress
     */
    public void setPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
    }


    /**
    * get 【alb】 安全组 ID列表
    *
    * @return
    */
    public List<String> getSecurityGroupIds() {
        return securityGroupIds;
    }

    /**
    * set 【alb】 安全组 ID列表
    *
    * @param securityGroupIds
    */
    public void setSecurityGroupIds(List<String> securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
    }


    /**
     * get LoadBalancer的描述信息,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set LoadBalancer的描述信息,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 删除保护，取值为True(开启)或False(关闭)，默认为False
     *
     * @return
     */
    public Boolean getDeleteProtection() {
        return deleteProtection;
    }

    /**
     * set 删除保护，取值为True(开启)或False(关闭)，默认为False
     *
     * @param deleteProtection
     */
    public void setDeleteProtection(Boolean deleteProtection) {
        this.deleteProtection = deleteProtection;
    }


    /**
    * get 用户tag 信息
    *
    * @return
    */
    public List<Tag> getUserTags() {
        return userTags;
    }

    /**
    * set 用户tag 信息
    *
    * @param userTags
    */
    public void setUserTags(List<Tag> userTags) {
        this.userTags = userTags;
    }


    /**
     * get Region ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set LoadBalancer的名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
     *
     * @param loadBalancerName
     */
    public CreateLoadBalancerRequest loadBalancerName(String loadBalancerName) {
        this.loadBalancerName = loadBalancerName;
        return this;
    }


    /**
     * set LoadBalancer所属子网的Id
     *
     * @param subnetId
     */
    public CreateLoadBalancerRequest subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set LoadBalancer的类型，取值：alb、nlb、dnlb，默认为alb
     *
     * @param type
     */
    public CreateLoadBalancerRequest type(String type) {
        this.type = type;
        return this;
    }


    /**
    * set 【alb，nlb】LoadBalancer所属availability Zone列表,对于alb,nlb是必选参数，可用区个数不能超过2个 &lt;br&gt;【dnlb】中心可用区，dnlb不需要传该参数，全可用区可用；边缘可用区，仅支持传入单可用区
    *
    * @param azs
    */
    public CreateLoadBalancerRequest azs(List<String> azs) {
        this.azs = azs;
        return this;
    }


    /**
     * set 【alb】支持按用量计费，默认为按用量。【nlb】支持按用量计费。【dnlb】支持按配置计费
     *
     * @param chargeSpec
     */
    public CreateLoadBalancerRequest chargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
        return this;
    }


    /**
     * set 负载均衡关联的弹性IP规格
     *
     * @param elasticIp
     */
    public CreateLoadBalancerRequest elasticIp(ElasticIpSpec elasticIp) {
        this.elasticIp = elasticIp;
        return this;
    }


    /**
     * set 指定LoadBalancer的VIP(内网IPv4地址)，需要属于指定的子网并且未被占用
     *
     * @param privateIpAddress
     */
    public CreateLoadBalancerRequest privateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }


    /**
    * set 【alb】 安全组 ID列表
    *
    * @param securityGroupIds
    */
    public CreateLoadBalancerRequest securityGroupIds(List<String> securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
        return this;
    }


    /**
     * set LoadBalancer的描述信息,允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public CreateLoadBalancerRequest description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 删除保护，取值为True(开启)或False(关闭)，默认为False
     *
     * @param deleteProtection
     */
    public CreateLoadBalancerRequest deleteProtection(Boolean deleteProtection) {
        this.deleteProtection = deleteProtection;
        return this;
    }


    /**
    * set 用户tag 信息
    *
    * @param userTags
    */
    public CreateLoadBalancerRequest userTags(List<Tag> userTags) {
        this.userTags = userTags;
        return this;
    }


    /**
     * set Region ID
     *
     * @param regionId
     */
    public CreateLoadBalancerRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 【alb，nlb】LoadBalancer所属availability Zone列表,对于alb,nlb是必选参数，可用区个数不能超过2个 &lt;br&gt;【dnlb】中心可用区，dnlb不需要传该参数，全可用区可用；边缘可用区，仅支持传入单可用区
     *
     * @param az
     */
    public void addAz(String az) {
        if (this.azs == null) {
            this.azs = new ArrayList<>();
        }
        this.azs.add(az);
    }

    /**
     * add item to 【alb】 安全组 ID列表
     *
     * @param securityGroupId
     */
    public void addSecurityGroupId(String securityGroupId) {
        if (this.securityGroupIds == null) {
            this.securityGroupIds = new ArrayList<>();
        }
        this.securityGroupIds.add(securityGroupId);
    }

    /**
     * add item to 用户tag 信息
     *
     * @param userTag
     */
    public void addUserTag(Tag userTag) {
        if (this.userTags == null) {
            this.userTags = new ArrayList<>();
        }
        this.userTags.add(userTag);
    }
}