/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.lb.model;


/**
 * targetHealth
 */
public class TargetHealth  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * Target所在的虚拟服务器组Id, 与agId不能并存
     */
    private String targetGroupId;

    /**
     * Target所在的高可用组Id，与targetGroupId不能并存
     */
    private String agId;

    /**
     * Target所属实例的Id（type为vm或container时显示）
     */
    private String instanceId;

    /**
     * Target所属的type，取值为vm、container或ip,默认为vm
     */
    private String type;

    /**
     * 健康检查的port
     */
    private Integer port;

    /**
     * 该Target的权重，取值范围：0-100 ，默认为10。0表示不参与流量转发
     */
    private Integer weight;

    /**
     * 该Target的健康状态，取值为healthy、unhealthy
     */
    private String status;

    /**
     * Target的IP地址。当Target type为vm或container时，表示vm或container的私网IP；当Target type为ip时，表示注册Target时指定的IP地址
     */
    private String ipAddress;

    /**
     * 健康异常结构
     */
    private UnhealthReason unhealthReason;



    /**
     * get Target所在的虚拟服务器组Id, 与agId不能并存
     *
     * @return
     */
    public String getTargetGroupId() {
        return targetGroupId;
    }

    /**
     * set Target所在的虚拟服务器组Id, 与agId不能并存
     *
     * @param targetGroupId
     */
    public void setTargetGroupId(String targetGroupId) {
        this.targetGroupId = targetGroupId;
    }


    /**
     * get Target所在的高可用组Id，与targetGroupId不能并存
     *
     * @return
     */
    public String getAgId() {
        return agId;
    }

    /**
     * set Target所在的高可用组Id，与targetGroupId不能并存
     *
     * @param agId
     */
    public void setAgId(String agId) {
        this.agId = agId;
    }


    /**
     * get Target所属实例的Id（type为vm或container时显示）
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set Target所属实例的Id（type为vm或container时显示）
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get Target所属的type，取值为vm、container或ip,默认为vm
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set Target所属的type，取值为vm、container或ip,默认为vm
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }


    /**
     * get 健康检查的port
     *
     * @return
     */
    public Integer getPort() {
        return port;
    }

    /**
     * set 健康检查的port
     *
     * @param port
     */
    public void setPort(Integer port) {
        this.port = port;
    }


    /**
     * get 该Target的权重，取值范围：0-100 ，默认为10。0表示不参与流量转发
     *
     * @return
     */
    public Integer getWeight() {
        return weight;
    }

    /**
     * set 该Target的权重，取值范围：0-100 ，默认为10。0表示不参与流量转发
     *
     * @param weight
     */
    public void setWeight(Integer weight) {
        this.weight = weight;
    }


    /**
     * get 该Target的健康状态，取值为healthy、unhealthy
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 该Target的健康状态，取值为healthy、unhealthy
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * get Target的IP地址。当Target type为vm或container时，表示vm或container的私网IP；当Target type为ip时，表示注册Target时指定的IP地址
     *
     * @return
     */
    public String getIpAddress() {
        return ipAddress;
    }

    /**
     * set Target的IP地址。当Target type为vm或container时，表示vm或container的私网IP；当Target type为ip时，表示注册Target时指定的IP地址
     *
     * @param ipAddress
     */
    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }


    /**
     * get 健康异常结构
     *
     * @return
     */
    public UnhealthReason getUnhealthReason() {
        return unhealthReason;
    }

    /**
     * set 健康异常结构
     *
     * @param unhealthReason
     */
    public void setUnhealthReason(UnhealthReason unhealthReason) {
        this.unhealthReason = unhealthReason;
    }



    /**
     * set Target所在的虚拟服务器组Id, 与agId不能并存
     *
     * @param targetGroupId
     */
    public TargetHealth targetGroupId(String targetGroupId) {
        this.targetGroupId = targetGroupId;
        return this;
    }


    /**
     * set Target所在的高可用组Id，与targetGroupId不能并存
     *
     * @param agId
     */
    public TargetHealth agId(String agId) {
        this.agId = agId;
        return this;
    }


    /**
     * set Target所属实例的Id（type为vm或container时显示）
     *
     * @param instanceId
     */
    public TargetHealth instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set Target所属的type，取值为vm、container或ip,默认为vm
     *
     * @param type
     */
    public TargetHealth type(String type) {
        this.type = type;
        return this;
    }


    /**
     * set 健康检查的port
     *
     * @param port
     */
    public TargetHealth port(Integer port) {
        this.port = port;
        return this;
    }


    /**
     * set 该Target的权重，取值范围：0-100 ，默认为10。0表示不参与流量转发
     *
     * @param weight
     */
    public TargetHealth weight(Integer weight) {
        this.weight = weight;
        return this;
    }


    /**
     * set 该Target的健康状态，取值为healthy、unhealthy
     *
     * @param status
     */
    public TargetHealth status(String status) {
        this.status = status;
        return this;
    }


    /**
     * set Target的IP地址。当Target type为vm或container时，表示vm或container的私网IP；当Target type为ip时，表示注册Target时指定的IP地址
     *
     * @param ipAddress
     */
    public TargetHealth ipAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }


    /**
     * set 健康异常结构
     *
     * @param unhealthReason
     */
    public TargetHealth unhealthReason(UnhealthReason unhealthReason) {
        this.unhealthReason = unhealthReason;
        return this;
    }


}