/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.lb.model;


/**
 * preAction
 */
public class PreAction  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 负载均衡将客户端流量向后端服务器转发时的前置动作类型：1.rewrite动作；2.mirror动作；3.插入http header动作；4.删除http header动作
     */
    private Integer extendActionType;

    /**
     * mirror动作的目的backendId，当extendActionType为2时有值
     */
    private String mirrorBackendId;

    /**
     * 插入http header动作配置，当extendActionType为3时有值
     */
    private InsertHeader insertHeader;

    /**
     * 删除http header动作配置，当extendActionType为4时有值
     */
    private DeleteHeader deleteHeader;

    /**
     * rewrite动作配置，当extendActionType为1时有值
     */
    private Rewrite rewrite;



    /**
     * get 负载均衡将客户端流量向后端服务器转发时的前置动作类型：1.rewrite动作；2.mirror动作；3.插入http header动作；4.删除http header动作
     *
     * @return
     */
    public Integer getExtendActionType() {
        return extendActionType;
    }

    /**
     * set 负载均衡将客户端流量向后端服务器转发时的前置动作类型：1.rewrite动作；2.mirror动作；3.插入http header动作；4.删除http header动作
     *
     * @param extendActionType
     */
    public void setExtendActionType(Integer extendActionType) {
        this.extendActionType = extendActionType;
    }


    /**
     * get mirror动作的目的backendId，当extendActionType为2时有值
     *
     * @return
     */
    public String getMirrorBackendId() {
        return mirrorBackendId;
    }

    /**
     * set mirror动作的目的backendId，当extendActionType为2时有值
     *
     * @param mirrorBackendId
     */
    public void setMirrorBackendId(String mirrorBackendId) {
        this.mirrorBackendId = mirrorBackendId;
    }


    /**
     * get 插入http header动作配置，当extendActionType为3时有值
     *
     * @return
     */
    public InsertHeader getInsertHeader() {
        return insertHeader;
    }

    /**
     * set 插入http header动作配置，当extendActionType为3时有值
     *
     * @param insertHeader
     */
    public void setInsertHeader(InsertHeader insertHeader) {
        this.insertHeader = insertHeader;
    }


    /**
     * get 删除http header动作配置，当extendActionType为4时有值
     *
     * @return
     */
    public DeleteHeader getDeleteHeader() {
        return deleteHeader;
    }

    /**
     * set 删除http header动作配置，当extendActionType为4时有值
     *
     * @param deleteHeader
     */
    public void setDeleteHeader(DeleteHeader deleteHeader) {
        this.deleteHeader = deleteHeader;
    }


    /**
     * get rewrite动作配置，当extendActionType为1时有值
     *
     * @return
     */
    public Rewrite getRewrite() {
        return rewrite;
    }

    /**
     * set rewrite动作配置，当extendActionType为1时有值
     *
     * @param rewrite
     */
    public void setRewrite(Rewrite rewrite) {
        this.rewrite = rewrite;
    }



    /**
     * set 负载均衡将客户端流量向后端服务器转发时的前置动作类型：1.rewrite动作；2.mirror动作；3.插入http header动作；4.删除http header动作
     *
     * @param extendActionType
     */
    public PreAction extendActionType(Integer extendActionType) {
        this.extendActionType = extendActionType;
        return this;
    }


    /**
     * set mirror动作的目的backendId，当extendActionType为2时有值
     *
     * @param mirrorBackendId
     */
    public PreAction mirrorBackendId(String mirrorBackendId) {
        this.mirrorBackendId = mirrorBackendId;
        return this;
    }


    /**
     * set 插入http header动作配置，当extendActionType为3时有值
     *
     * @param insertHeader
     */
    public PreAction insertHeader(InsertHeader insertHeader) {
        this.insertHeader = insertHeader;
        return this;
    }


    /**
     * set 删除http header动作配置，当extendActionType为4时有值
     *
     * @param deleteHeader
     */
    public PreAction deleteHeader(DeleteHeader deleteHeader) {
        this.deleteHeader = deleteHeader;
        return this;
    }


    /**
     * set rewrite动作配置，当extendActionType为1时有值
     *
     * @param rewrite
     */
    public PreAction rewrite(Rewrite rewrite) {
        this.rewrite = rewrite;
        return this;
    }


}