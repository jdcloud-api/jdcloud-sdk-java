/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云鼎2.0 openApi
 * 云鼎2.0 openApi 相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.yunding.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsInstanceRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsInstanceResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeRdsInstanceExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeYdRdsInstancesRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeYdRdsInstancesResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeYdRdsInstancesExecutor;
import com.jdcloud.sdk.service.yunding.model.DeleteSubnetRequest;
import com.jdcloud.sdk.service.yunding.model.DeleteSubnetResponse;
import com.jdcloud.sdk.service.yunding.client.DeleteSubnetExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeSubnetsRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeSubnetsResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeSubnetsExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsAccountsRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsAccountsResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeRdsAccountsExecutor;
import com.jdcloud.sdk.service.yunding.model.CreateSubnetRequest;
import com.jdcloud.sdk.service.yunding.model.CreateSubnetResponse;
import com.jdcloud.sdk.service.yunding.client.CreateSubnetExecutor;
import com.jdcloud.sdk.service.yunding.model.PutProductMetricDataRequest;
import com.jdcloud.sdk.service.yunding.model.PutProductMetricDataResponse;
import com.jdcloud.sdk.service.yunding.client.PutProductMetricDataExecutor;
import com.jdcloud.sdk.service.yunding.model.DeleteRdsDatabaseRequest;
import com.jdcloud.sdk.service.yunding.model.DeleteRdsDatabaseResponse;
import com.jdcloud.sdk.service.yunding.client.DeleteRdsDatabaseExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeTasksRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeTasksResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeTasksExecutor;
import com.jdcloud.sdk.service.yunding.model.RevokePrivilegeRequest;
import com.jdcloud.sdk.service.yunding.model.RevokePrivilegeResponse;
import com.jdcloud.sdk.service.yunding.client.RevokePrivilegeExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsDatabasesRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsDatabasesResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeRdsDatabasesExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeNetworkInterfaceRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeNetworkInterfaceResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.yunding.model.PutRequest;
import com.jdcloud.sdk.service.yunding.model.PutResponse;
import com.jdcloud.sdk.service.yunding.client.PutExecutor;
import com.jdcloud.sdk.service.yunding.model.UnassignSecondaryIpsRequest;
import com.jdcloud.sdk.service.yunding.model.UnassignSecondaryIpsResponse;
import com.jdcloud.sdk.service.yunding.client.UnassignSecondaryIpsExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeNetworkInterfacesRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeNetworkInterfacesResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeNetworkInterfacesExecutor;
import com.jdcloud.sdk.service.yunding.model.AssignSecondaryIpsRequest;
import com.jdcloud.sdk.service.yunding.model.AssignSecondaryIpsResponse;
import com.jdcloud.sdk.service.yunding.client.AssignSecondaryIpsExecutor;
import com.jdcloud.sdk.service.yunding.model.ModifyRdsWhiteListRequest;
import com.jdcloud.sdk.service.yunding.model.ModifyRdsWhiteListResponse;
import com.jdcloud.sdk.service.yunding.client.ModifyRdsWhiteListExecutor;
import com.jdcloud.sdk.service.yunding.model.CreateRdsDatabaseRequest;
import com.jdcloud.sdk.service.yunding.model.CreateRdsDatabaseResponse;
import com.jdcloud.sdk.service.yunding.client.CreateRdsDatabaseExecutor;
import com.jdcloud.sdk.service.yunding.model.GrantRdsPrivilegeRequest;
import com.jdcloud.sdk.service.yunding.model.GrantRdsPrivilegeResponse;
import com.jdcloud.sdk.service.yunding.client.GrantRdsPrivilegeExecutor;
import com.jdcloud.sdk.service.yunding.model.CreateNetworkInterfaceRequest;
import com.jdcloud.sdk.service.yunding.model.CreateNetworkInterfaceResponse;
import com.jdcloud.sdk.service.yunding.client.CreateNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeSubnetRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeSubnetResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeSubnetExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsInstancesRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsInstancesResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeRdsInstancesExecutor;
import com.jdcloud.sdk.service.yunding.model.DeleteNetworkInterfaceRequest;
import com.jdcloud.sdk.service.yunding.model.DeleteNetworkInterfaceResponse;
import com.jdcloud.sdk.service.yunding.client.DeleteNetworkInterfaceExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeInstanceInfoRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeInstanceInfoResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeInstanceInfoExecutor;
import com.jdcloud.sdk.service.yunding.model.CreateRdsAccountRequest;
import com.jdcloud.sdk.service.yunding.model.CreateRdsAccountResponse;
import com.jdcloud.sdk.service.yunding.client.CreateRdsAccountExecutor;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsWhiteListRequest;
import com.jdcloud.sdk.service.yunding.model.DescribeRdsWhiteListResponse;
import com.jdcloud.sdk.service.yunding.client.DescribeRdsWhiteListExecutor;
import com.jdcloud.sdk.service.yunding.model.DeleteRdsAccountRequest;
import com.jdcloud.sdk.service.yunding.model.DeleteRdsAccountResponse;
import com.jdcloud.sdk.service.yunding.client.DeleteRdsAccountExecutor;

/**
 * yundingClient
 */
public class YundingClient extends JdcloudClient {

    public final static String ApiVersion = "v2";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "yunding.jdcloud-api.com";
    public final static String ServiceName = "yunding";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private YundingClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询RDS实例（MySQL、SQL Server等）的详细信息以及MySQL只读实例详细信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRdsInstanceResponse describeRdsInstance(DescribeRdsInstanceRequest request) throws JdcloudSdkException {
        return new DescribeRdsInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询云鼎数据库实例列表

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeYdRdsInstancesResponse describeYdRdsInstances(DescribeYdRdsInstancesRequest request) throws JdcloudSdkException {
        return new DescribeYdRdsInstancesExecutor().client(this).execute(request);
    }

    /**
     * 删除子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteSubnetResponse deleteSubnet(DeleteSubnetRequest request) throws JdcloudSdkException {
        return new DeleteSubnetExecutor().client(this).execute(request);
    }

    /**
     * 查询子网列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetsResponse describeSubnets(DescribeSubnetsRequest request) throws JdcloudSdkException {
        return new DescribeSubnetsExecutor().client(this).execute(request);
    }

    /**
     * 查看某个RDS实例下所有账号信息，包括账号名称、对各个数据库的访问权限信息等
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRdsAccountsResponse describeRdsAccounts(DescribeRdsAccountsRequest request) throws JdcloudSdkException {
        return new DescribeRdsAccountsExecutor().client(this).execute(request);
    }

    /**
     * 创建子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSubnetResponse createSubnet(CreateSubnetRequest request) throws JdcloudSdkException {
        return new CreateSubnetExecutor().client(this).execute(request);
    }

    /**
     * 监控数据上报。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PutProductMetricDataResponse putProductMetricData(PutProductMetricDataRequest request) throws JdcloudSdkException {
        return new PutProductMetricDataExecutor().client(this).execute(request);
    }

    /**
     * 从RDS实例中删除数据库。为便于管理和数据恢复，RDS对用户权限进行了控制，用户仅能通过控制台或本接口删除数据库 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteRdsDatabaseResponse deleteRdsDatabase(DeleteRdsDatabaseRequest request) throws JdcloudSdkException {
        return new DeleteRdsDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 云拔测-可用性agent任务查询接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeTasksResponse describeTasks(DescribeTasksRequest request) throws JdcloudSdkException {
        return new DescribeTasksExecutor().client(this).execute(request);
    }

    /**
     * 取消该账号对某个数据库的所有权限。权限取消后，该账号将不能访问此数据库。取消账号对某个数据库的访问权限，不影响该账号对其他数据库的访问权限
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RevokePrivilegeResponse revokePrivilege(RevokePrivilegeRequest request) throws JdcloudSdkException {
        return new RevokePrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例的所有数据库详细信息的列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRdsDatabasesResponse describeRdsDatabases(DescribeRdsDatabasesRequest request) throws JdcloudSdkException {
        return new DescribeRdsDatabasesExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性网卡信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkInterfaceResponse describeNetworkInterface(DescribeNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new DescribeNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 监控数据上报。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PutResponse put(PutRequest request) throws JdcloudSdkException {
        return new PutExecutor().client(this).execute(request);
    }

    /**
     * 给网卡删除secondaryIp接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UnassignSecondaryIpsResponse unassignSecondaryIps(UnassignSecondaryIpsRequest request) throws JdcloudSdkException {
        return new UnassignSecondaryIpsExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性网卡列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) throws JdcloudSdkException {
        return new DescribeNetworkInterfacesExecutor().client(this).execute(request);
    }

    /**
     * 给网卡分配secondaryIp接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignSecondaryIpsResponse assignSecondaryIps(AssignSecondaryIpsRequest request) throws JdcloudSdkException {
        return new AssignSecondaryIpsExecutor().client(this).execute(request);
    }

    /**
     * 修改允许访问实例的IP白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyRdsWhiteListResponse modifyRdsWhiteList(ModifyRdsWhiteListRequest request) throws JdcloudSdkException {
        return new ModifyRdsWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 创建一个数据库。 为了实例的管理和数据恢复，RDS对用户权限进行了限制，用户仅能通过控制台或本接口创建数据库
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRdsDatabaseResponse createRdsDatabase(CreateRdsDatabaseRequest request) throws JdcloudSdkException {
        return new CreateRdsDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 授予账号的数据库访问权限，即该账号对数据库拥有什么权限。一个账号可以对多个数据库具有访问权限。&lt;br&gt;为便于管理，RDS对权限进行了归类，目前提供以下两种权限&lt;br&gt;- ro：只读权限，用户只能读取数据库中的数据，不能进行创建、插入、删除、更改等操作。&lt;br&gt;- rw：读写权限，用户可以对数据库进行增删改查等操作
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GrantRdsPrivilegeResponse grantRdsPrivilege(GrantRdsPrivilegeRequest request) throws JdcloudSdkException {
        return new GrantRdsPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 创建网卡接口，只能创建辅助网卡
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateNetworkInterfaceResponse createNetworkInterface(CreateNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new CreateNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 查询子网信息详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetResponse describeSubnet(DescribeSubnetRequest request) throws JdcloudSdkException {
        return new DescribeSubnetExecutor().client(this).execute(request);
    }

    /**
     * 批量查询云数据库实例列表信息&lt;br&gt;此接口支持分页查询，默认每页20条。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRdsInstancesResponse describeRdsInstances(DescribeRdsInstancesRequest request) throws JdcloudSdkException {
        return new DescribeRdsInstancesExecutor().client(this).execute(request);
    }

    /**
     * 删除弹性网卡接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteNetworkInterfaceResponse deleteNetworkInterface(DeleteNetworkInterfaceRequest request) throws JdcloudSdkException {
        return new DeleteNetworkInterfaceExecutor().client(this).execute(request);
    }

    /**
     * 查询RDS实例（MySQL、SQL Server等）的真实状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceInfoResponse describeInstanceInfo(DescribeInstanceInfoRequest request) throws JdcloudSdkException {
        return new DescribeInstanceInfoExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库账号，用户可以使用客户端，应用程序等通过该账号和密码登录RDS数据库实例。&lt;br&gt;为便于管理和恢复，RDS对账号进行了限制，数据库账号只能通过控制台或者OpenAPI进行创建、删除账号以及对账号授权等，用户不能通过SQL语句对账号进行相关操作。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRdsAccountResponse createRdsAccount(CreateRdsAccountRequest request) throws JdcloudSdkException {
        return new CreateRdsAccountExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS实例当前白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRdsWhiteListResponse describeRdsWhiteList(DescribeRdsWhiteListRequest request) throws JdcloudSdkException {
        return new DescribeRdsWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 删除数据库账号，账号删除后不可恢复，用户无法再使用该账号登录RDS实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteRdsAccountResponse deleteRdsAccount(DeleteRdsAccountRequest request) throws JdcloudSdkException {
        return new DeleteRdsAccountExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public YundingClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private YundingClient yundingClient;

        public DefaultBuilder() {
            yundingClient = new YundingClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            yundingClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            yundingClient.httpRequestConfig = config;
            return this;
        }

        public YundingClient build() throws JdcloudSdkException {

            if (yundingClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                yundingClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (yundingClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("YundingClient build error: jdcloud credentials provider not set");
                }
            }
            if (yundingClient.httpRequestConfig == null) {
                yundingClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (yundingClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("YundingClient build error: http request config not set");
                }
            }
            return yundingClient;
        }

        public Builder environment(Environment environment) {
            yundingClient.environment = environment;
            return this;
        }
    }
}
