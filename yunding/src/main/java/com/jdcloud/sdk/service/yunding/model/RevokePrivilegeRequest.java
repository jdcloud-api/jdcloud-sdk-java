/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * yunding-rds
 * 云鼎-云数据库管理相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.yunding.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 取消该账号对某个数据库的所有权限。权限取消后，该账号将不能访问此数据库。取消账号对某个数据库的访问权限，不影响该账号对其他数据库的访问权限
 */
public class RevokePrivilegeRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
     * Required:true
     */
    @Required
    private List<String> dbNames;

    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * RDS 实例ID，唯一标识一个RDS实例
     * Required:true
     */
    @Required
    private String instanceId;

    /**
     * 账号名，在同一个实例中账号名不能重复
     * Required:true
     */
    @Required
    private String accountName;


    /**
     * get 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
     *
     * @return
     */
    public List<String> getDbNames() {
        return dbNames;
    }

    /**
     * set 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
     *
     * @param dbNames
     */
    public void setDbNames(List<String> dbNames) {
        this.dbNames = dbNames;
    }

    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    /**
     * get RDS 实例ID，唯一标识一个RDS实例
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }

    /**
     * get 账号名，在同一个实例中账号名不能重复
     *
     * @return
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * set 账号名，在同一个实例中账号名不能重复
     *
     * @param accountName
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }


    /**
     * set 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
     *
     * @param dbNames
     */
    public RevokePrivilegeRequest dbNames(List<String> dbNames) {
        this.dbNames = dbNames;
        return this;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public RevokePrivilegeRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public RevokePrivilegeRequest instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }

    /**
     * set 账号名，在同一个实例中账号名不能重复
     *
     * @param accountName
     */
    public RevokePrivilegeRequest accountName(String accountName) {
        this.accountName = accountName;
        return this;
    }


    /**
     * add item to 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
     *
     * @param dbName
     */
    public void addDbName(String dbName) {
        if (this.dbNames == null) {
            this.dbNames = new ArrayList<>();
        }
        this.dbNames.add(dbName);
    }

}