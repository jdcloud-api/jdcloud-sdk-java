/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * yunding-networkInterface
 * 云鼎-弹性网卡相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.yunding.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建网卡接口，只能创建辅助网卡
 */
public class CreateNetworkInterfaceRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 子网ID
     * Required:true
     */
    @Required
    private String subnetId;

    /**
     * 可用区，用户的默认可用区，该参数无效，不建议使用
     */
    private String az;

    /**
     * 网卡名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     */
    private String networkInterfaceName;

    /**
     * 网卡主IP，如果不指定，会自动从子网中分配
     */
    private String primaryIpAddress;

    /**
     * SecondaryIp列表
     */
    private List<String> secondaryIpAddresses;

    /**
     * 自动分配的SecondaryIp数量
     */
    private Integer secondaryIpCount;

    /**
     * 要绑定的安全组ID列表，最多指定5个安全组
     */
    private List<String> securityGroups;

    /**
     * 源和目标IP地址校验，取值为0或者1,默认为1
     */
    private Integer sanityCheck;

    /**
     * 描述,​ 允许输入UTF-8编码下的全部字符，不超过256字符
     */
    private String description;

    /**
     * Region ID
     * Required:true
     */
    @Required
    private String regionId;


    /**
     * get 子网ID
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }

    /**
     * get 可用区，用户的默认可用区，该参数无效，不建议使用
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 可用区，用户的默认可用区，该参数无效，不建议使用
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }

    /**
     * get 网卡名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @return
     */
    public String getNetworkInterfaceName() {
        return networkInterfaceName;
    }

    /**
     * set 网卡名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @param networkInterfaceName
     */
    public void setNetworkInterfaceName(String networkInterfaceName) {
        this.networkInterfaceName = networkInterfaceName;
    }

    /**
     * get 网卡主IP，如果不指定，会自动从子网中分配
     *
     * @return
     */
    public String getPrimaryIpAddress() {
        return primaryIpAddress;
    }

    /**
     * set 网卡主IP，如果不指定，会自动从子网中分配
     *
     * @param primaryIpAddress
     */
    public void setPrimaryIpAddress(String primaryIpAddress) {
        this.primaryIpAddress = primaryIpAddress;
    }

    /**
     * get SecondaryIp列表
     *
     * @return
     */
    public List<String> getSecondaryIpAddresses() {
        return secondaryIpAddresses;
    }

    /**
     * set SecondaryIp列表
     *
     * @param secondaryIpAddresses
     */
    public void setSecondaryIpAddresses(List<String> secondaryIpAddresses) {
        this.secondaryIpAddresses = secondaryIpAddresses;
    }

    /**
     * get 自动分配的SecondaryIp数量
     *
     * @return
     */
    public Integer getSecondaryIpCount() {
        return secondaryIpCount;
    }

    /**
     * set 自动分配的SecondaryIp数量
     *
     * @param secondaryIpCount
     */
    public void setSecondaryIpCount(Integer secondaryIpCount) {
        this.secondaryIpCount = secondaryIpCount;
    }

    /**
     * get 要绑定的安全组ID列表，最多指定5个安全组
     *
     * @return
     */
    public List<String> getSecurityGroups() {
        return securityGroups;
    }

    /**
     * set 要绑定的安全组ID列表，最多指定5个安全组
     *
     * @param securityGroups
     */
    public void setSecurityGroups(List<String> securityGroups) {
        this.securityGroups = securityGroups;
    }

    /**
     * get 源和目标IP地址校验，取值为0或者1,默认为1
     *
     * @return
     */
    public Integer getSanityCheck() {
        return sanityCheck;
    }

    /**
     * set 源和目标IP地址校验，取值为0或者1,默认为1
     *
     * @param sanityCheck
     */
    public void setSanityCheck(Integer sanityCheck) {
        this.sanityCheck = sanityCheck;
    }

    /**
     * get 描述,​ 允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 描述,​ 允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * get Region ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * set 子网ID
     *
     * @param subnetId
     */
    public CreateNetworkInterfaceRequest subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * set 可用区，用户的默认可用区，该参数无效，不建议使用
     *
     * @param az
     */
    public CreateNetworkInterfaceRequest az(String az) {
        this.az = az;
        return this;
    }

    /**
     * set 网卡名称，只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符。
     *
     * @param networkInterfaceName
     */
    public CreateNetworkInterfaceRequest networkInterfaceName(String networkInterfaceName) {
        this.networkInterfaceName = networkInterfaceName;
        return this;
    }

    /**
     * set 网卡主IP，如果不指定，会自动从子网中分配
     *
     * @param primaryIpAddress
     */
    public CreateNetworkInterfaceRequest primaryIpAddress(String primaryIpAddress) {
        this.primaryIpAddress = primaryIpAddress;
        return this;
    }

    /**
     * set SecondaryIp列表
     *
     * @param secondaryIpAddresses
     */
    public CreateNetworkInterfaceRequest secondaryIpAddresses(List<String> secondaryIpAddresses) {
        this.secondaryIpAddresses = secondaryIpAddresses;
        return this;
    }

    /**
     * set 自动分配的SecondaryIp数量
     *
     * @param secondaryIpCount
     */
    public CreateNetworkInterfaceRequest secondaryIpCount(Integer secondaryIpCount) {
        this.secondaryIpCount = secondaryIpCount;
        return this;
    }

    /**
     * set 要绑定的安全组ID列表，最多指定5个安全组
     *
     * @param securityGroups
     */
    public CreateNetworkInterfaceRequest securityGroups(List<String> securityGroups) {
        this.securityGroups = securityGroups;
        return this;
    }

    /**
     * set 源和目标IP地址校验，取值为0或者1,默认为1
     *
     * @param sanityCheck
     */
    public CreateNetworkInterfaceRequest sanityCheck(Integer sanityCheck) {
        this.sanityCheck = sanityCheck;
        return this;
    }

    /**
     * set 描述,​ 允许输入UTF-8编码下的全部字符，不超过256字符
     *
     * @param description
     */
    public CreateNetworkInterfaceRequest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * set Region ID
     *
     * @param regionId
     */
    public CreateNetworkInterfaceRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * add item to SecondaryIp列表
     *
     * @param secondaryIpAddresse
     */
    public void addSecondaryIpAddresse(String secondaryIpAddresse) {
        if (this.secondaryIpAddresses == null) {
            this.secondaryIpAddresses = new ArrayList<>();
        }
        this.secondaryIpAddresses.add(secondaryIpAddresse);
    }

    /**
     * add item to 要绑定的安全组ID列表，最多指定5个安全组
     *
     * @param securityGroup
     */
    public void addSecurityGroup(String securityGroup) {
        if (this.securityGroups == null) {
            this.securityGroups = new ArrayList<>();
        }
        this.securityGroups.add(securityGroup);
    }

}