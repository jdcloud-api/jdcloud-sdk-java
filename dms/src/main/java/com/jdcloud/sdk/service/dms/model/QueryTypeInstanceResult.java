/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Instance
 * 用户实例相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.dms.model.DmsInstance;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询用户数据类型实例
 */
public class QueryTypeInstanceResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 查询分类方式：LOGIN_STATUS，DB_TYPE。
     */
    private String regionId;

    /**
     * 数据库类型。
     */
    private Integer dbType;

    /**
     * loginedInstance
     */
    
    private List<DmsInstance> loginedInstance;
    /**
     * unloginedInstance
     */
    
    private List<DmsInstance> unloginedInstance;


    /**
     * get 查询分类方式：LOGIN_STATUS，DB_TYPE。
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 查询分类方式：LOGIN_STATUS，DB_TYPE。
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get 数据库类型。
     *
     * @return
     */
    public Integer getDbType() {
        return dbType;
    }

    /**
     * set 数据库类型。
     *
     * @param dbType
     */
    public void setDbType(Integer dbType) {
        this.dbType = dbType;
    }


    /**
    * get loginedInstance
    *
    * @return
    */
    public List<DmsInstance> getLoginedInstance() {
        return loginedInstance;
    }

    /**
    * set loginedInstance
    *
    * @param loginedInstance
    */
    public void setLoginedInstance(List<DmsInstance> loginedInstance) {
        this.loginedInstance = loginedInstance;
    }


    /**
    * get unloginedInstance
    *
    * @return
    */
    public List<DmsInstance> getUnloginedInstance() {
        return unloginedInstance;
    }

    /**
    * set unloginedInstance
    *
    * @param unloginedInstance
    */
    public void setUnloginedInstance(List<DmsInstance> unloginedInstance) {
        this.unloginedInstance = unloginedInstance;
    }



    /**
     * set 查询分类方式：LOGIN_STATUS，DB_TYPE。
     *
     * @param regionId
     */
    public QueryTypeInstanceResult regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set 数据库类型。
     *
     * @param dbType
     */
    public QueryTypeInstanceResult dbType(Integer dbType) {
        this.dbType = dbType;
        return this;
    }


    /**
    * set loginedInstance
    *
    * @param loginedInstance
    */
    public QueryTypeInstanceResult loginedInstance(List<DmsInstance> loginedInstance) {
        this.loginedInstance = loginedInstance;
        return this;
    }


    /**
    * set unloginedInstance
    *
    * @param unloginedInstance
    */
    public QueryTypeInstanceResult unloginedInstance(List<DmsInstance> unloginedInstance) {
        this.unloginedInstance = unloginedInstance;
        return this;
    }



    /**
     * add item to loginedInstance
     *
     * @param loginedInstance
     */
    public void addLoginedInstance(DmsInstance loginedInstance) {
        if (this.loginedInstance == null) {
            this.loginedInstance = new ArrayList<>();
        }
        this.loginedInstance.add(loginedInstance);
    }

    /**
     * add item to unloginedInstance
     *
     * @param unloginedInstance
     */
    public void addUnloginedInstance(DmsInstance unloginedInstance) {
        if (this.unloginedInstance == null) {
            this.unloginedInstance = new ArrayList<>();
        }
        this.unloginedInstance.add(unloginedInstance);
    }
}