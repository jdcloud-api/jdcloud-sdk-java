/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * DmsUserManagement
 * 用户管理模块
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.model;

import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 用户管理列表
 */
public class QueryUserListRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 查询的用户状态(启用(true),禁用(false))
     */
    private Boolean activeStatus;

    /**
     * 查询的用户角色,枚举值(Admin(&quot;Admin&quot;,&quot;管理员&quot;),DBA(&quot;DBA&quot;,&quot;DBA&quot;),StructureReadOnly(&quot;StructureReadOnly&quot;,&quot;结构只读&quot;),Normal(&quot;Normal&quot;,&quot;普通用户&quot;))
     */
    private String role;

    /**
     * 查询的用户登录开始时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     */
    private String loginDateStart;

    /**
     * 查询的用户登录结束时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     */
    private String loginDateEnd;

    /**
     * 查询用户的用户名称
     */
    private String username;

    /**
     * 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。
     */
    private Integer pageNumber;

    /**
     * 每页显示的数据条数，用于查询列表的接口。
     */
    private Integer pageSize;



    /**
     * get 查询的用户状态(启用(true),禁用(false))
     *
     * @return
     */
    public Boolean getActiveStatus() {
        return activeStatus;
    }

    /**
     * set 查询的用户状态(启用(true),禁用(false))
     *
     * @param activeStatus
     */
    public void setActiveStatus(Boolean activeStatus) {
        this.activeStatus = activeStatus;
    }


    /**
     * get 查询的用户角色,枚举值(Admin(&quot;Admin&quot;,&quot;管理员&quot;),DBA(&quot;DBA&quot;,&quot;DBA&quot;),StructureReadOnly(&quot;StructureReadOnly&quot;,&quot;结构只读&quot;),Normal(&quot;Normal&quot;,&quot;普通用户&quot;))
     *
     * @return
     */
    public String getRole() {
        return role;
    }

    /**
     * set 查询的用户角色,枚举值(Admin(&quot;Admin&quot;,&quot;管理员&quot;),DBA(&quot;DBA&quot;,&quot;DBA&quot;),StructureReadOnly(&quot;StructureReadOnly&quot;,&quot;结构只读&quot;),Normal(&quot;Normal&quot;,&quot;普通用户&quot;))
     *
     * @param role
     */
    public void setRole(String role) {
        this.role = role;
    }


    /**
     * get 查询的用户登录开始时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @return
     */
    public String getLoginDateStart() {
        return loginDateStart;
    }

    /**
     * set 查询的用户登录开始时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @param loginDateStart
     */
    public void setLoginDateStart(String loginDateStart) {
        this.loginDateStart = loginDateStart;
    }


    /**
     * get 查询的用户登录结束时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @return
     */
    public String getLoginDateEnd() {
        return loginDateEnd;
    }

    /**
     * set 查询的用户登录结束时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @param loginDateEnd
     */
    public void setLoginDateEnd(String loginDateEnd) {
        this.loginDateEnd = loginDateEnd;
    }


    /**
     * get 查询用户的用户名称
     *
     * @return
     */
    public String getUsername() {
        return username;
    }

    /**
     * set 查询用户的用户名称
     *
     * @param username
     */
    public void setUsername(String username) {
        this.username = username;
    }


    /**
     * get 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。
     *
     * @return
     */
    public Integer getPageNumber() {
        return pageNumber;
    }

    /**
     * set 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。
     *
     * @param pageNumber
     */
    public void setPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
    }


    /**
     * get 每页显示的数据条数，用于查询列表的接口。
     *
     * @return
     */
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * set 每页显示的数据条数，用于查询列表的接口。
     *
     * @param pageSize
     */
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }



    /**
     * set 查询的用户状态(启用(true),禁用(false))
     *
     * @param activeStatus
     */
    public QueryUserListRequest activeStatus(Boolean activeStatus) {
        this.activeStatus = activeStatus;
        return this;
    }


    /**
     * set 查询的用户角色,枚举值(Admin(&quot;Admin&quot;,&quot;管理员&quot;),DBA(&quot;DBA&quot;,&quot;DBA&quot;),StructureReadOnly(&quot;StructureReadOnly&quot;,&quot;结构只读&quot;),Normal(&quot;Normal&quot;,&quot;普通用户&quot;))
     *
     * @param role
     */
    public QueryUserListRequest role(String role) {
        this.role = role;
        return this;
    }


    /**
     * set 查询的用户登录开始时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @param loginDateStart
     */
    public QueryUserListRequest loginDateStart(String loginDateStart) {
        this.loginDateStart = loginDateStart;
        return this;
    }


    /**
     * set 查询的用户登录结束时间(yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;)
     *
     * @param loginDateEnd
     */
    public QueryUserListRequest loginDateEnd(String loginDateEnd) {
        this.loginDateEnd = loginDateEnd;
        return this;
    }


    /**
     * set 查询用户的用户名称
     *
     * @param username
     */
    public QueryUserListRequest username(String username) {
        this.username = username;
        return this;
    }


    /**
     * set 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。
     *
     * @param pageNumber
     */
    public QueryUserListRequest pageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }


    /**
     * set 每页显示的数据条数，用于查询列表的接口。
     *
     * @param pageSize
     */
    public QueryUserListRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }


}