/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * DmsUserManagement
 * 用户管理模块
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.dms.model.DmsPrivilegeVO;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查看当前用户授权信息列表
 */
public class QueryPrivilegeSelfListResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 符合条件的用户的总数
     */
    private Integer count;

    /**
     * 如果为真则表示这个账号默认就拥有所有的实例登录权限
     */
    private Boolean isAdmin;

    /**
     * dmsPrivilegeVOList
     */
    
    private List<DmsPrivilegeVO> dmsPrivilegeVOList;


    /**
     * get 符合条件的用户的总数
     *
     * @return
     */
    public Integer getCount() {
        return count;
    }

    /**
     * set 符合条件的用户的总数
     *
     * @param count
     */
    public void setCount(Integer count) {
        this.count = count;
    }


    /**
     * get 如果为真则表示这个账号默认就拥有所有的实例登录权限
     *
     * @return
     */
    public Boolean getIsAdmin() {
        return isAdmin;
    }

    /**
     * set 如果为真则表示这个账号默认就拥有所有的实例登录权限
     *
     * @param isAdmin
     */
    public void setIsAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
    }


    /**
    * get dmsPrivilegeVOList
    *
    * @return
    */
    public List<DmsPrivilegeVO> getDmsPrivilegeVOList() {
        return dmsPrivilegeVOList;
    }

    /**
    * set dmsPrivilegeVOList
    *
    * @param dmsPrivilegeVOList
    */
    public void setDmsPrivilegeVOList(List<DmsPrivilegeVO> dmsPrivilegeVOList) {
        this.dmsPrivilegeVOList = dmsPrivilegeVOList;
    }



    /**
     * set 符合条件的用户的总数
     *
     * @param count
     */
    public QueryPrivilegeSelfListResult count(Integer count) {
        this.count = count;
        return this;
    }


    /**
     * set 如果为真则表示这个账号默认就拥有所有的实例登录权限
     *
     * @param isAdmin
     */
    public QueryPrivilegeSelfListResult isAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
        return this;
    }


    /**
    * set dmsPrivilegeVOList
    *
    * @param dmsPrivilegeVOList
    */
    public QueryPrivilegeSelfListResult dmsPrivilegeVOList(List<DmsPrivilegeVO> dmsPrivilegeVOList) {
        this.dmsPrivilegeVOList = dmsPrivilegeVOList;
        return this;
    }



    /**
     * add item to dmsPrivilegeVOList
     *
     * @param dmsPrivilegeVOList
     */
    public void addDmsPrivilegeVOList(DmsPrivilegeVO dmsPrivilegeVOList) {
        if (this.dmsPrivilegeVOList == null) {
            this.dmsPrivilegeVOList = new ArrayList<>();
        }
        this.dmsPrivilegeVOList.add(dmsPrivilegeVOList);
    }
}