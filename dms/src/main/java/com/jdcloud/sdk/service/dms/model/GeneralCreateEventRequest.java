/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * DmsEvent
 * 事件相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 生产创建事件SQL语句，支持Mysql
 */
public class GeneralCreateEventRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据源id。
     */
    private Integer dataSourceId;

    /**
     * 数据库名称。
     */
    private String dbName;

    /**
     * 事件名称。
     */
    private String eventName;

    /**
     * 注释。
     */
    private String eventComment;

    /**
     * 状态，ENABLED,DISABLED, SLAVESIDE_DISABLED。
     */
    private String eventStatus;

    /**
     * 完成后是否保存。
     */
    private Boolean isPreserve;

    /**
     * 事件定义。
     */
    private String eventDefinition;

    /**
     * 调度方式，ONE_TIME,RECURRING。
     */
    private String eventType;

    /**
     * 执行一次的时间。
     */
    private String executeAt;

    /**
     * 循环执行时间隔时间的值。
     */
    private String intervalValue;

    /**
     * 循环执行时间隔时间的单位，YEAR,QUARTER,MONTH,WEEK,DAY,HOUR,MINUTE,SECOND,YEAR_MONTH,DAY_HOUR,DAY_MINUTE,DAY_SECOND,HOUR_MINUTE,HOUR_SECOND,MINUTE_SECOND。
     */
    private String intervalField;

    /**
     * 循环执行开始时间。
     */
    private String starts;

    /**
     * 循环执行结束时间。
     */
    private String ends;

    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 数据源id。
     *
     * @return
     */
    public Integer getDataSourceId() {
        return dataSourceId;
    }

    /**
     * set 数据源id。
     *
     * @param dataSourceId
     */
    public void setDataSourceId(Integer dataSourceId) {
        this.dataSourceId = dataSourceId;
    }


    /**
     * get 数据库名称。
     *
     * @return
     */
    public String getDbName() {
        return dbName;
    }

    /**
     * set 数据库名称。
     *
     * @param dbName
     */
    public void setDbName(String dbName) {
        this.dbName = dbName;
    }


    /**
     * get 事件名称。
     *
     * @return
     */
    public String getEventName() {
        return eventName;
    }

    /**
     * set 事件名称。
     *
     * @param eventName
     */
    public void setEventName(String eventName) {
        this.eventName = eventName;
    }


    /**
     * get 注释。
     *
     * @return
     */
    public String getEventComment() {
        return eventComment;
    }

    /**
     * set 注释。
     *
     * @param eventComment
     */
    public void setEventComment(String eventComment) {
        this.eventComment = eventComment;
    }


    /**
     * get 状态，ENABLED,DISABLED, SLAVESIDE_DISABLED。
     *
     * @return
     */
    public String getEventStatus() {
        return eventStatus;
    }

    /**
     * set 状态，ENABLED,DISABLED, SLAVESIDE_DISABLED。
     *
     * @param eventStatus
     */
    public void setEventStatus(String eventStatus) {
        this.eventStatus = eventStatus;
    }


    /**
     * get 完成后是否保存。
     *
     * @return
     */
    public Boolean getIsPreserve() {
        return isPreserve;
    }

    /**
     * set 完成后是否保存。
     *
     * @param isPreserve
     */
    public void setIsPreserve(Boolean isPreserve) {
        this.isPreserve = isPreserve;
    }


    /**
     * get 事件定义。
     *
     * @return
     */
    public String getEventDefinition() {
        return eventDefinition;
    }

    /**
     * set 事件定义。
     *
     * @param eventDefinition
     */
    public void setEventDefinition(String eventDefinition) {
        this.eventDefinition = eventDefinition;
    }


    /**
     * get 调度方式，ONE_TIME,RECURRING。
     *
     * @return
     */
    public String getEventType() {
        return eventType;
    }

    /**
     * set 调度方式，ONE_TIME,RECURRING。
     *
     * @param eventType
     */
    public void setEventType(String eventType) {
        this.eventType = eventType;
    }


    /**
     * get 执行一次的时间。
     *
     * @return
     */
    public String getExecuteAt() {
        return executeAt;
    }

    /**
     * set 执行一次的时间。
     *
     * @param executeAt
     */
    public void setExecuteAt(String executeAt) {
        this.executeAt = executeAt;
    }


    /**
     * get 循环执行时间隔时间的值。
     *
     * @return
     */
    public String getIntervalValue() {
        return intervalValue;
    }

    /**
     * set 循环执行时间隔时间的值。
     *
     * @param intervalValue
     */
    public void setIntervalValue(String intervalValue) {
        this.intervalValue = intervalValue;
    }


    /**
     * get 循环执行时间隔时间的单位，YEAR,QUARTER,MONTH,WEEK,DAY,HOUR,MINUTE,SECOND,YEAR_MONTH,DAY_HOUR,DAY_MINUTE,DAY_SECOND,HOUR_MINUTE,HOUR_SECOND,MINUTE_SECOND。
     *
     * @return
     */
    public String getIntervalField() {
        return intervalField;
    }

    /**
     * set 循环执行时间隔时间的单位，YEAR,QUARTER,MONTH,WEEK,DAY,HOUR,MINUTE,SECOND,YEAR_MONTH,DAY_HOUR,DAY_MINUTE,DAY_SECOND,HOUR_MINUTE,HOUR_SECOND,MINUTE_SECOND。
     *
     * @param intervalField
     */
    public void setIntervalField(String intervalField) {
        this.intervalField = intervalField;
    }


    /**
     * get 循环执行开始时间。
     *
     * @return
     */
    public String getStarts() {
        return starts;
    }

    /**
     * set 循环执行开始时间。
     *
     * @param starts
     */
    public void setStarts(String starts) {
        this.starts = starts;
    }


    /**
     * get 循环执行结束时间。
     *
     * @return
     */
    public String getEnds() {
        return ends;
    }

    /**
     * set 循环执行结束时间。
     *
     * @param ends
     */
    public void setEnds(String ends) {
        this.ends = ends;
    }


    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 数据源id。
     *
     * @param dataSourceId
     */
    public GeneralCreateEventRequest dataSourceId(Integer dataSourceId) {
        this.dataSourceId = dataSourceId;
        return this;
    }


    /**
     * set 数据库名称。
     *
     * @param dbName
     */
    public GeneralCreateEventRequest dbName(String dbName) {
        this.dbName = dbName;
        return this;
    }


    /**
     * set 事件名称。
     *
     * @param eventName
     */
    public GeneralCreateEventRequest eventName(String eventName) {
        this.eventName = eventName;
        return this;
    }


    /**
     * set 注释。
     *
     * @param eventComment
     */
    public GeneralCreateEventRequest eventComment(String eventComment) {
        this.eventComment = eventComment;
        return this;
    }


    /**
     * set 状态，ENABLED,DISABLED, SLAVESIDE_DISABLED。
     *
     * @param eventStatus
     */
    public GeneralCreateEventRequest eventStatus(String eventStatus) {
        this.eventStatus = eventStatus;
        return this;
    }


    /**
     * set 完成后是否保存。
     *
     * @param isPreserve
     */
    public GeneralCreateEventRequest isPreserve(Boolean isPreserve) {
        this.isPreserve = isPreserve;
        return this;
    }


    /**
     * set 事件定义。
     *
     * @param eventDefinition
     */
    public GeneralCreateEventRequest eventDefinition(String eventDefinition) {
        this.eventDefinition = eventDefinition;
        return this;
    }


    /**
     * set 调度方式，ONE_TIME,RECURRING。
     *
     * @param eventType
     */
    public GeneralCreateEventRequest eventType(String eventType) {
        this.eventType = eventType;
        return this;
    }


    /**
     * set 执行一次的时间。
     *
     * @param executeAt
     */
    public GeneralCreateEventRequest executeAt(String executeAt) {
        this.executeAt = executeAt;
        return this;
    }


    /**
     * set 循环执行时间隔时间的值。
     *
     * @param intervalValue
     */
    public GeneralCreateEventRequest intervalValue(String intervalValue) {
        this.intervalValue = intervalValue;
        return this;
    }


    /**
     * set 循环执行时间隔时间的单位，YEAR,QUARTER,MONTH,WEEK,DAY,HOUR,MINUTE,SECOND,YEAR_MONTH,DAY_HOUR,DAY_MINUTE,DAY_SECOND,HOUR_MINUTE,HOUR_SECOND,MINUTE_SECOND。
     *
     * @param intervalField
     */
    public GeneralCreateEventRequest intervalField(String intervalField) {
        this.intervalField = intervalField;
        return this;
    }


    /**
     * set 循环执行开始时间。
     *
     * @param starts
     */
    public GeneralCreateEventRequest starts(String starts) {
        this.starts = starts;
        return this;
    }


    /**
     * set 循环执行结束时间。
     *
     * @param ends
     */
    public GeneralCreateEventRequest ends(String ends) {
        this.ends = ends;
        return this;
    }


    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public GeneralCreateEventRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}