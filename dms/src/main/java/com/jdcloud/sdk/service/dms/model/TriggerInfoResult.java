/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * DmsTrigger
 * 触发器相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 获取触发器详情，支持Mysql
 */
public class TriggerInfoResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据库名称。
     */
    private String dbName;

    /**
     * 存储过程名称。
     */
    private String triggerName;

    /**
     * 触发时机，BEFORE(&quot;BEFORE&quot;, 1),AFTER(&quot;AFTER&quot;, 2)。
     */
    private String triggerTiming;

    /**
     * 激活触发器的事件，INSERT(&quot;INSERT&quot;, 1),UPDATE(&quot;UPDATE&quot;, 2), DELETE(&quot;DELETE&quot;, 3)。
     */
    private String triggerEvent;

    /**
     * 触发表
     */
    private String triggerTable;

    /**
     * 触发器定义。
     */
    private String triggerStatement;



    /**
     * get 数据库名称。
     *
     * @return
     */
    public String getDbName() {
        return dbName;
    }

    /**
     * set 数据库名称。
     *
     * @param dbName
     */
    public void setDbName(String dbName) {
        this.dbName = dbName;
    }


    /**
     * get 存储过程名称。
     *
     * @return
     */
    public String getTriggerName() {
        return triggerName;
    }

    /**
     * set 存储过程名称。
     *
     * @param triggerName
     */
    public void setTriggerName(String triggerName) {
        this.triggerName = triggerName;
    }


    /**
     * get 触发时机，BEFORE(&quot;BEFORE&quot;, 1),AFTER(&quot;AFTER&quot;, 2)。
     *
     * @return
     */
    public String getTriggerTiming() {
        return triggerTiming;
    }

    /**
     * set 触发时机，BEFORE(&quot;BEFORE&quot;, 1),AFTER(&quot;AFTER&quot;, 2)。
     *
     * @param triggerTiming
     */
    public void setTriggerTiming(String triggerTiming) {
        this.triggerTiming = triggerTiming;
    }


    /**
     * get 激活触发器的事件，INSERT(&quot;INSERT&quot;, 1),UPDATE(&quot;UPDATE&quot;, 2), DELETE(&quot;DELETE&quot;, 3)。
     *
     * @return
     */
    public String getTriggerEvent() {
        return triggerEvent;
    }

    /**
     * set 激活触发器的事件，INSERT(&quot;INSERT&quot;, 1),UPDATE(&quot;UPDATE&quot;, 2), DELETE(&quot;DELETE&quot;, 3)。
     *
     * @param triggerEvent
     */
    public void setTriggerEvent(String triggerEvent) {
        this.triggerEvent = triggerEvent;
    }


    /**
     * get 触发表
     *
     * @return
     */
    public String getTriggerTable() {
        return triggerTable;
    }

    /**
     * set 触发表
     *
     * @param triggerTable
     */
    public void setTriggerTable(String triggerTable) {
        this.triggerTable = triggerTable;
    }


    /**
     * get 触发器定义。
     *
     * @return
     */
    public String getTriggerStatement() {
        return triggerStatement;
    }

    /**
     * set 触发器定义。
     *
     * @param triggerStatement
     */
    public void setTriggerStatement(String triggerStatement) {
        this.triggerStatement = triggerStatement;
    }



    /**
     * set 数据库名称。
     *
     * @param dbName
     */
    public TriggerInfoResult dbName(String dbName) {
        this.dbName = dbName;
        return this;
    }


    /**
     * set 存储过程名称。
     *
     * @param triggerName
     */
    public TriggerInfoResult triggerName(String triggerName) {
        this.triggerName = triggerName;
        return this;
    }


    /**
     * set 触发时机，BEFORE(&quot;BEFORE&quot;, 1),AFTER(&quot;AFTER&quot;, 2)。
     *
     * @param triggerTiming
     */
    public TriggerInfoResult triggerTiming(String triggerTiming) {
        this.triggerTiming = triggerTiming;
        return this;
    }


    /**
     * set 激活触发器的事件，INSERT(&quot;INSERT&quot;, 1),UPDATE(&quot;UPDATE&quot;, 2), DELETE(&quot;DELETE&quot;, 3)。
     *
     * @param triggerEvent
     */
    public TriggerInfoResult triggerEvent(String triggerEvent) {
        this.triggerEvent = triggerEvent;
        return this;
    }


    /**
     * set 触发表
     *
     * @param triggerTable
     */
    public TriggerInfoResult triggerTable(String triggerTable) {
        this.triggerTable = triggerTable;
        return this;
    }


    /**
     * set 触发器定义。
     *
     * @param triggerStatement
     */
    public TriggerInfoResult triggerStatement(String triggerStatement) {
        this.triggerStatement = triggerStatement;
        return this;
    }


}