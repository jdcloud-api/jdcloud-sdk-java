/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 数据管理系统DMS
 * 数据管理系统DMS
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.dms.model.StartFlowRequest;
import com.jdcloud.sdk.service.dms.model.StartFlowResponse;
import com.jdcloud.sdk.service.dms.client.StartFlowExecutor;
import com.jdcloud.sdk.service.dms.model.FunctionListRequest;
import com.jdcloud.sdk.service.dms.model.FunctionListResponse;
import com.jdcloud.sdk.service.dms.client.FunctionListExecutor;
import com.jdcloud.sdk.service.dms.model.QueryInstanceRequest;
import com.jdcloud.sdk.service.dms.model.QueryInstanceResponse;
import com.jdcloud.sdk.service.dms.client.QueryInstanceExecutor;
import com.jdcloud.sdk.service.dms.model.ViewInfoRequest;
import com.jdcloud.sdk.service.dms.model.ViewInfoResponse;
import com.jdcloud.sdk.service.dms.client.ViewInfoExecutor;
import com.jdcloud.sdk.service.dms.model.ExeProgramRequest;
import com.jdcloud.sdk.service.dms.model.ExeProgramResponse;
import com.jdcloud.sdk.service.dms.client.ExeProgramExecutor;
import com.jdcloud.sdk.service.dms.model.RestartOnlineSqlTaskRequest;
import com.jdcloud.sdk.service.dms.model.RestartOnlineSqlTaskResponse;
import com.jdcloud.sdk.service.dms.client.RestartOnlineSqlTaskExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropTriggerRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropTriggerResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropTriggerExecutor;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainsRequest;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainsResponse;
import com.jdcloud.sdk.service.dms.client.GetDmsDomainsExecutor;
import com.jdcloud.sdk.service.dms.model.TableInfoRequest;
import com.jdcloud.sdk.service.dms.model.TableInfoResponse;
import com.jdcloud.sdk.service.dms.client.TableInfoExecutor;
import com.jdcloud.sdk.service.dms.model.CreateImportFileTaskRequest;
import com.jdcloud.sdk.service.dms.model.CreateImportFileTaskResponse;
import com.jdcloud.sdk.service.dms.client.CreateImportFileTaskExecutor;
import com.jdcloud.sdk.service.dms.model.CreateExportFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateExportFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateExportFlowExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTriggerRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTriggerResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterTriggerExecutor;
import com.jdcloud.sdk.service.dms.model.DmsConsoleCheckRequest;
import com.jdcloud.sdk.service.dms.model.DmsConsoleCheckResponse;
import com.jdcloud.sdk.service.dms.client.DmsConsoleCheckExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateFunctionRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateFunctionResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateFunctionExecutor;
import com.jdcloud.sdk.service.dms.model.SyncSubUserRequest;
import com.jdcloud.sdk.service.dms.model.SyncSubUserResponse;
import com.jdcloud.sdk.service.dms.client.SyncSubUserExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterFunctionRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterFunctionResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterFunctionExecutor;
import com.jdcloud.sdk.service.dms.model.StartOnlineSqlTaskRequest;
import com.jdcloud.sdk.service.dms.model.StartOnlineSqlTaskResponse;
import com.jdcloud.sdk.service.dms.client.StartOnlineSqlTaskExecutor;
import com.jdcloud.sdk.service.dms.model.QueryPrivilegeSelfListRequest;
import com.jdcloud.sdk.service.dms.model.QueryPrivilegeSelfListResponse;
import com.jdcloud.sdk.service.dms.client.QueryPrivilegeSelfListExecutor;
import com.jdcloud.sdk.service.dms.model.OnlineSqlTaskQueryRequest;
import com.jdcloud.sdk.service.dms.model.OnlineSqlTaskQueryResponse;
import com.jdcloud.sdk.service.dms.client.OnlineSqlTaskQueryExecutor;
import com.jdcloud.sdk.service.dms.model.TableListRequest;
import com.jdcloud.sdk.service.dms.model.TableListResponse;
import com.jdcloud.sdk.service.dms.client.TableListExecutor;
import com.jdcloud.sdk.service.dms.model.AuthPrivilegeRequest;
import com.jdcloud.sdk.service.dms.model.AuthPrivilegeResponse;
import com.jdcloud.sdk.service.dms.client.AuthPrivilegeExecutor;
import com.jdcloud.sdk.service.dms.model.EventInfoRequest;
import com.jdcloud.sdk.service.dms.model.EventInfoResponse;
import com.jdcloud.sdk.service.dms.client.EventInfoExecutor;
import com.jdcloud.sdk.service.dms.model.LogoutRequest;
import com.jdcloud.sdk.service.dms.model.LogoutResponse;
import com.jdcloud.sdk.service.dms.client.LogoutExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropViewExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleExplainRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleExplainResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleExplainExecutor;
import com.jdcloud.sdk.service.dms.model.QueryOperationLogRequest;
import com.jdcloud.sdk.service.dms.model.QueryOperationLogResponse;
import com.jdcloud.sdk.service.dms.client.QueryOperationLogExecutor;
import com.jdcloud.sdk.service.dms.model.OnlineSubSqlTaskQueryRequest;
import com.jdcloud.sdk.service.dms.model.OnlineSubSqlTaskQueryResponse;
import com.jdcloud.sdk.service.dms.client.OnlineSubSqlTaskQueryExecutor;
import com.jdcloud.sdk.service.dms.model.CreateDataFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateDataFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateDataFlowExecutor;
import com.jdcloud.sdk.service.dms.model.DeletePersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.DeletePersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.DeletePersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.QueryUserNotSyncRequest;
import com.jdcloud.sdk.service.dms.model.QueryUserNotSyncResponse;
import com.jdcloud.sdk.service.dms.client.QueryUserNotSyncExecutor;
import com.jdcloud.sdk.service.dms.model.DatabaseListRequest;
import com.jdcloud.sdk.service.dms.model.DatabaseListResponse;
import com.jdcloud.sdk.service.dms.client.DatabaseListExecutor;
import com.jdcloud.sdk.service.dms.model.LoginRequest;
import com.jdcloud.sdk.service.dms.model.LoginResponse;
import com.jdcloud.sdk.service.dms.client.LoginExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterProcedureRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterProcedureResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterProcedureExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTriggerRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTriggerResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateTriggerExecutor;
import com.jdcloud.sdk.service.dms.model.QueryUserListRequest;
import com.jdcloud.sdk.service.dms.model.QueryUserListResponse;
import com.jdcloud.sdk.service.dms.client.QueryUserListExecutor;
import com.jdcloud.sdk.service.dms.model.UploadImportFileTaskRequest;
import com.jdcloud.sdk.service.dms.model.UploadImportFileTaskResponse;
import com.jdcloud.sdk.service.dms.client.UploadImportFileTaskExecutor;
import com.jdcloud.sdk.service.dms.model.ModifyPrivilegeExpireDateRequest;
import com.jdcloud.sdk.service.dms.model.ModifyPrivilegeExpireDateResponse;
import com.jdcloud.sdk.service.dms.client.ModifyPrivilegeExpireDateExecutor;
import com.jdcloud.sdk.service.dms.model.OperationDetailRequest;
import com.jdcloud.sdk.service.dms.model.OperationDetailResponse;
import com.jdcloud.sdk.service.dms.client.OperationDetailExecutor;
import com.jdcloud.sdk.service.dms.model.UpdatePersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.UpdatePersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.UpdatePersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.QueryTypeInstanceRequest;
import com.jdcloud.sdk.service.dms.model.QueryTypeInstanceResponse;
import com.jdcloud.sdk.service.dms.client.QueryTypeInstanceExecutor;
import com.jdcloud.sdk.service.dms.model.QueryPrivilegeListRequest;
import com.jdcloud.sdk.service.dms.model.QueryPrivilegeListResponse;
import com.jdcloud.sdk.service.dms.client.QueryPrivilegeListExecutor;
import com.jdcloud.sdk.service.dms.model.GetCreateTableBatchSqlRequest;
import com.jdcloud.sdk.service.dms.model.GetCreateTableBatchSqlResponse;
import com.jdcloud.sdk.service.dms.client.GetCreateTableBatchSqlExecutor;
import com.jdcloud.sdk.service.dms.model.CheckInstanceRequest;
import com.jdcloud.sdk.service.dms.model.CheckInstanceResponse;
import com.jdcloud.sdk.service.dms.client.CheckInstanceExecutor;
import com.jdcloud.sdk.service.dms.model.CreateStructureFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateStructureFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateStructureFlowExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTableSqlRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTableSqlResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateTableSqlExecutor;
import com.jdcloud.sdk.service.dms.model.ReleasePrivilegeRequest;
import com.jdcloud.sdk.service.dms.model.ReleasePrivilegeResponse;
import com.jdcloud.sdk.service.dms.client.ReleasePrivilegeExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateProcedureRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateProcedureResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateProcedureExecutor;
import com.jdcloud.sdk.service.dms.model.TriggerListRequest;
import com.jdcloud.sdk.service.dms.model.TriggerListResponse;
import com.jdcloud.sdk.service.dms.client.TriggerListExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleSqlRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleSqlResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleSqlExecutor;
import com.jdcloud.sdk.service.dms.model.FormatSqlRequest;
import com.jdcloud.sdk.service.dms.model.FormatSqlResponse;
import com.jdcloud.sdk.service.dms.client.FormatSqlExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropFunctionRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropFunctionResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropFunctionExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateViewExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateEventRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateEventResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateEventExecutor;
import com.jdcloud.sdk.service.dms.model.OpenRequest;
import com.jdcloud.sdk.service.dms.model.OpenResponse;
import com.jdcloud.sdk.service.dms.client.OpenExecutor;
import com.jdcloud.sdk.service.dms.model.CreateTableBatchRequest;
import com.jdcloud.sdk.service.dms.model.CreateTableBatchResponse;
import com.jdcloud.sdk.service.dms.client.CreateTableBatchExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropProcedureRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropProcedureResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropProcedureExecutor;
import com.jdcloud.sdk.service.dms.model.QueryOperationTypeRequest;
import com.jdcloud.sdk.service.dms.model.QueryOperationTypeResponse;
import com.jdcloud.sdk.service.dms.client.QueryOperationTypeExecutor;
import com.jdcloud.sdk.service.dms.model.UpdateUserInfoRequest;
import com.jdcloud.sdk.service.dms.model.UpdateUserInfoResponse;
import com.jdcloud.sdk.service.dms.client.UpdateUserInfoExecutor;
import com.jdcloud.sdk.service.dms.model.FunctionInvokeRequest;
import com.jdcloud.sdk.service.dms.model.FunctionInvokeResponse;
import com.jdcloud.sdk.service.dms.client.FunctionInvokeExecutor;
import com.jdcloud.sdk.service.dms.model.ProcedureInvokeRequest;
import com.jdcloud.sdk.service.dms.model.ProcedureInvokeResponse;
import com.jdcloud.sdk.service.dms.client.ProcedureInvokeExecutor;
import com.jdcloud.sdk.service.dms.model.HistorySqlRequest;
import com.jdcloud.sdk.service.dms.model.HistorySqlResponse;
import com.jdcloud.sdk.service.dms.client.HistorySqlExecutor;
import com.jdcloud.sdk.service.dms.model.SqlTableInfoRequest;
import com.jdcloud.sdk.service.dms.model.SqlTableInfoResponse;
import com.jdcloud.sdk.service.dms.client.SqlTableInfoExecutor;
import com.jdcloud.sdk.service.dms.model.ProcedureListRequest;
import com.jdcloud.sdk.service.dms.model.ProcedureListResponse;
import com.jdcloud.sdk.service.dms.client.ProcedureListExecutor;
import com.jdcloud.sdk.service.dms.model.OnlineProxySubTaskQueryRequest;
import com.jdcloud.sdk.service.dms.model.OnlineProxySubTaskQueryResponse;
import com.jdcloud.sdk.service.dms.client.OnlineProxySubTaskQueryExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterEventRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterEventResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterEventExecutor;
import com.jdcloud.sdk.service.dms.model.FunctionInfoRequest;
import com.jdcloud.sdk.service.dms.model.FunctionInfoResponse;
import com.jdcloud.sdk.service.dms.client.FunctionInfoExecutor;
import com.jdcloud.sdk.service.dms.model.TriggerInfoRequest;
import com.jdcloud.sdk.service.dms.model.TriggerInfoResponse;
import com.jdcloud.sdk.service.dms.client.TriggerInfoExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTableSqlRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTableSqlResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterTableSqlExecutor;
import com.jdcloud.sdk.service.dms.model.SuspendOnlineSqlTaskRequest;
import com.jdcloud.sdk.service.dms.model.SuspendOnlineSqlTaskResponse;
import com.jdcloud.sdk.service.dms.client.SuspendOnlineSqlTaskExecutor;
import com.jdcloud.sdk.service.dms.model.GetUserInfoRequest;
import com.jdcloud.sdk.service.dms.model.GetUserInfoResponse;
import com.jdcloud.sdk.service.dms.client.GetUserInfoExecutor;
import com.jdcloud.sdk.service.dms.model.HistoryImportDataRequest;
import com.jdcloud.sdk.service.dms.model.HistoryImportDataResponse;
import com.jdcloud.sdk.service.dms.client.HistoryImportDataExecutor;
import com.jdcloud.sdk.service.dms.model.AddPersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.AddPersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.AddPersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.ProcedureInfoRequest;
import com.jdcloud.sdk.service.dms.model.ProcedureInfoResponse;
import com.jdcloud.sdk.service.dms.client.ProcedureInfoExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleGeneralDataRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleGeneralDataResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleGeneralDataExecutor;
import com.jdcloud.sdk.service.dms.model.EnableUserRequest;
import com.jdcloud.sdk.service.dms.model.EnableUserResponse;
import com.jdcloud.sdk.service.dms.client.EnableUserExecutor;
import com.jdcloud.sdk.service.dms.model.QueryPersonalSqlsRequest;
import com.jdcloud.sdk.service.dms.model.QueryPersonalSqlsResponse;
import com.jdcloud.sdk.service.dms.client.QueryPersonalSqlsExecutor;
import com.jdcloud.sdk.service.dms.model.ProgramListRequest;
import com.jdcloud.sdk.service.dms.model.ProgramListResponse;
import com.jdcloud.sdk.service.dms.client.ProgramListExecutor;
import com.jdcloud.sdk.service.dms.model.DeleteUserRequest;
import com.jdcloud.sdk.service.dms.model.DeleteUserResponse;
import com.jdcloud.sdk.service.dms.client.DeleteUserExecutor;
import com.jdcloud.sdk.service.dms.model.CreateOnlineSqlTaskRequest;
import com.jdcloud.sdk.service.dms.model.CreateOnlineSqlTaskResponse;
import com.jdcloud.sdk.service.dms.client.CreateOnlineSqlTaskExecutor;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainRequest;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainResponse;
import com.jdcloud.sdk.service.dms.client.GetDmsDomainExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterViewExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropEventRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropEventResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropEventExecutor;

/**
 * dmsClient
 */
public class DmsClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.9";
    public final static String DefaultEndpoint = "dms.jdcloud-api.com";
    public final static String ServiceName = "dms";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private DmsClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 任务执行，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartFlowResponse startFlow(StartFlowRequest request) throws JdcloudSdkException {
        return new StartFlowExecutor().client(this).execute(request);
    }

    /**
     * 获取函数列表，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FunctionListResponse functionList(FunctionListRequest request) throws JdcloudSdkException {
        return new FunctionListExecutor().client(this).execute(request);
    }

    /**
     * 查询用户实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryInstanceResponse queryInstance(QueryInstanceRequest request) throws JdcloudSdkException {
        return new QueryInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取视图详情，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ViewInfoResponse viewInfo(ViewInfoRequest request) throws JdcloudSdkException {
        return new ViewInfoExecutor().client(this).execute(request);
    }

    /**
     * 执行编程对象sql，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExeProgramResponse exeProgram(ExeProgramRequest request) throws JdcloudSdkException {
        return new ExeProgramExecutor().client(this).execute(request);
    }

    /**
     * 重启Sql任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestartOnlineSqlTaskResponse restartOnlineSqlTask(RestartOnlineSqlTaskRequest request) throws JdcloudSdkException {
        return new RestartOnlineSqlTaskExecutor().client(this).execute(request);
    }

    /**
     * 生成删除触发器sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropTriggerResponse generalDropTrigger(GeneralDropTriggerRequest request) throws JdcloudSdkException {
        return new GeneralDropTriggerExecutor().client(this).execute(request);
    }

    /**
     * 获取Dms域名，仅供前端使用
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDmsDomainsResponse getDmsDomains(GetDmsDomainsRequest request) throws JdcloudSdkException {
        return new GetDmsDomainsExecutor().client(this).execute(request);
    }

    /**
     * 获取表元数据，支持Mysql，Stardb，Tidb，ClickHouse
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TableInfoResponse tableInfo(TableInfoRequest request) throws JdcloudSdkException {
        return new TableInfoExecutor().client(this).execute(request);
    }

    /**
     * 创建导入文件任务，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateImportFileTaskResponse createImportFileTask(CreateImportFileTaskRequest request) throws JdcloudSdkException {
        return new CreateImportFileTaskExecutor().client(this).execute(request);
    }

    /**
     * 创建数据导出工单，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateExportFlowResponse createExportFlow(CreateExportFlowRequest request) throws JdcloudSdkException {
        return new CreateExportFlowExecutor().client(this).execute(request);
    }

    /**
     * 生成修改触发器sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterTriggerResponse generalAlterTrigger(GeneralAlterTriggerRequest request) throws JdcloudSdkException {
        return new GeneralAlterTriggerExecutor().client(this).execute(request);
    }

    /**
     * 校验当前的用户是否允许访问DMS控制台
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DmsConsoleCheckResponse dmsConsoleCheck(DmsConsoleCheckRequest request) throws JdcloudSdkException {
        return new DmsConsoleCheckExecutor().client(this).execute(request);
    }

    /**
     * 生产创建函数过程SQL语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateFunctionResponse generalCreateFunction(GeneralCreateFunctionRequest request) throws JdcloudSdkException {
        return new GeneralCreateFunctionExecutor().client(this).execute(request);
    }

    /**
     * 同步子账号
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SyncSubUserResponse syncSubUser(SyncSubUserRequest request) throws JdcloudSdkException {
        return new SyncSubUserExecutor().client(this).execute(request);
    }

    /**
     * 生成修改函数sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterFunctionResponse generalAlterFunction(GeneralAlterFunctionRequest request) throws JdcloudSdkException {
        return new GeneralAlterFunctionExecutor().client(this).execute(request);
    }

    /**
     * 启动Sql任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartOnlineSqlTaskResponse startOnlineSqlTask(StartOnlineSqlTaskRequest request) throws JdcloudSdkException {
        return new StartOnlineSqlTaskExecutor().client(this).execute(request);
    }

    /**
     * 查看当前用户授权信息列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPrivilegeSelfListResponse queryPrivilegeSelfList(QueryPrivilegeSelfListRequest request) throws JdcloudSdkException {
        return new QueryPrivilegeSelfListExecutor().client(this).execute(request);
    }

    /**
     * 查询任务状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OnlineSqlTaskQueryResponse onlineSqlTaskQuery(OnlineSqlTaskQueryRequest request) throws JdcloudSdkException {
        return new OnlineSqlTaskQueryExecutor().client(this).execute(request);
    }

    /**
     * 获取数据库中的表列表，支持Mysql，Stardb，Tidb，ClickHouse
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TableListResponse tableList(TableListRequest request) throws JdcloudSdkException {
        return new TableListExecutor().client(this).execute(request);
    }

    /**
     * 实例授权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AuthPrivilegeResponse authPrivilege(AuthPrivilegeRequest request) throws JdcloudSdkException {
        return new AuthPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 获取事件详情，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EventInfoResponse eventInfo(EventInfoRequest request) throws JdcloudSdkException {
        return new EventInfoExecutor().client(this).execute(request);
    }

    /**
     * 退出登录
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public LogoutResponse logout(LogoutRequest request) throws JdcloudSdkException {
        return new LogoutExecutor().client(this).execute(request);
    }

    /**
     * 生成删除视图sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropViewResponse generalDropView(GeneralDropViewRequest request) throws JdcloudSdkException {
        return new GeneralDropViewExecutor().client(this).execute(request);
    }

    /**
     * 执行计划，支持Mysql，Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleExplainResponse consoleExplain(ConsoleExplainRequest request) throws JdcloudSdkException {
        return new ConsoleExplainExecutor().client(this).execute(request);
    }

    /**
     * 获取操作日志列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryOperationLogResponse queryOperationLog(QueryOperationLogRequest request) throws JdcloudSdkException {
        return new QueryOperationLogExecutor().client(this).execute(request);
    }

    /**
     * 查询sql子任务状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OnlineSubSqlTaskQueryResponse onlineSubSqlTaskQuery(OnlineSubSqlTaskQueryRequest request) throws JdcloudSdkException {
        return new OnlineSubSqlTaskQueryExecutor().client(this).execute(request);
    }

    /**
     * 创建数据变更工单，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataFlowResponse createDataFlow(CreateDataFlowRequest request) throws JdcloudSdkException {
        return new CreateDataFlowExecutor().client(this).execute(request);
    }

    /**
     * 删除收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeletePersonalSqlResponse deletePersonalSql(DeletePersonalSqlRequest request) throws JdcloudSdkException {
        return new DeletePersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 获取主账号下未同步的子账号数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUserNotSyncResponse queryUserNotSync(QueryUserNotSyncRequest request) throws JdcloudSdkException {
        return new QueryUserNotSyncExecutor().client(this).execute(request);
    }

    /**
     * 获取数据库实例的库列表，支持Mysql，Stardb，Tidb，ClickHouse
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DatabaseListResponse databaseList(DatabaseListRequest request) throws JdcloudSdkException {
        return new DatabaseListExecutor().client(this).execute(request);
    }

    /**
     * rds，drds登录实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public LoginResponse login(LoginRequest request) throws JdcloudSdkException {
        return new LoginExecutor().client(this).execute(request);
    }

    /**
     * 生成修改存储过程sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterProcedureResponse generalAlterProcedure(GeneralAlterProcedureRequest request) throws JdcloudSdkException {
        return new GeneralAlterProcedureExecutor().client(this).execute(request);
    }

    /**
     * 生成创建触发器SQL语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateTriggerResponse generalCreateTrigger(GeneralCreateTriggerRequest request) throws JdcloudSdkException {
        return new GeneralCreateTriggerExecutor().client(this).execute(request);
    }

    /**
     * 用户管理列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUserListResponse queryUserList(QueryUserListRequest request) throws JdcloudSdkException {
        return new QueryUserListExecutor().client(this).execute(request);
    }

    /**
     * 上传文件，支持Stardb，只支持前端页面使用
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UploadImportFileTaskResponse uploadImportFileTask(UploadImportFileTaskRequest request) throws JdcloudSdkException {
        return new UploadImportFileTaskExecutor().client(this).execute(request);
    }

    /**
     * 修改权限到期时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyPrivilegeExpireDateResponse modifyPrivilegeExpireDate(ModifyPrivilegeExpireDateRequest request) throws JdcloudSdkException {
        return new ModifyPrivilegeExpireDateExecutor().client(this).execute(request);
    }

    /**
     * 获取操作详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OperationDetailResponse operationDetail(OperationDetailRequest request) throws JdcloudSdkException {
        return new OperationDetailExecutor().client(this).execute(request);
    }

    /**
     * 更新收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdatePersonalSqlResponse updatePersonalSql(UpdatePersonalSqlRequest request) throws JdcloudSdkException {
        return new UpdatePersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 查询用户数据类型实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryTypeInstanceResponse queryTypeInstance(QueryTypeInstanceRequest request) throws JdcloudSdkException {
        return new QueryTypeInstanceExecutor().client(this).execute(request);
    }

    /**
     * 用户授权信息列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPrivilegeListResponse queryPrivilegeList(QueryPrivilegeListRequest request) throws JdcloudSdkException {
        return new QueryPrivilegeListExecutor().client(this).execute(request);
    }

    /**
     * 获取批量建表sql，仅供前端使用，支持Stardb，OpenGauss
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetCreateTableBatchSqlResponse getCreateTableBatchSql(GetCreateTableBatchSqlRequest request) throws JdcloudSdkException {
        return new GetCreateTableBatchSqlExecutor().client(this).execute(request);
    }

    /**
     * 校验用户是否有实例权限
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckInstanceResponse checkInstance(CheckInstanceRequest request) throws JdcloudSdkException {
        return new CheckInstanceExecutor().client(this).execute(request);
    }

    /**
     * 创建结构变更工单，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateStructureFlowResponse createStructureFlow(CreateStructureFlowRequest request) throws JdcloudSdkException {
        return new CreateStructureFlowExecutor().client(this).execute(request);
    }

    /**
     * 生成建表语句sql，支持Mysql，Stardb，OpenGauss
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateTableSqlResponse generalCreateTableSql(GeneralCreateTableSqlRequest request) throws JdcloudSdkException {
        return new GeneralCreateTableSqlExecutor().client(this).execute(request);
    }

    /**
     * 释放权限
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ReleasePrivilegeResponse releasePrivilege(ReleasePrivilegeRequest request) throws JdcloudSdkException {
        return new ReleasePrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 生产创建存储过程SQL语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateProcedureResponse generalCreateProcedure(GeneralCreateProcedureRequest request) throws JdcloudSdkException {
        return new GeneralCreateProcedureExecutor().client(this).execute(request);
    }

    /**
     * 获取触发器列表，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TriggerListResponse triggerList(TriggerListRequest request) throws JdcloudSdkException {
        return new TriggerListExecutor().client(this).execute(request);
    }

    /**
     * 执行sql语句，支持Mysql，Stardb，Tidb，ClickHouse
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleSqlResponse consoleSql(ConsoleSqlRequest request) throws JdcloudSdkException {
        return new ConsoleSqlExecutor().client(this).execute(request);
    }

    /**
     * sql格式化，支持Mysql，Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FormatSqlResponse formatSql(FormatSqlRequest request) throws JdcloudSdkException {
        return new FormatSqlExecutor().client(this).execute(request);
    }

    /**
     * 生成删除函数sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropFunctionResponse generalDropFunction(GeneralDropFunctionRequest request) throws JdcloudSdkException {
        return new GeneralDropFunctionExecutor().client(this).execute(request);
    }

    /**
     * 生产创建视图SQL语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateViewResponse generalCreateView(GeneralCreateViewRequest request) throws JdcloudSdkException {
        return new GeneralCreateViewExecutor().client(this).execute(request);
    }

    /**
     * 生产创建事件SQL语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateEventResponse generalCreateEvent(GeneralCreateEventRequest request) throws JdcloudSdkException {
        return new GeneralCreateEventExecutor().client(this).execute(request);
    }

    /**
     * 打开实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenResponse open(OpenRequest request) throws JdcloudSdkException {
        return new OpenExecutor().client(this).execute(request);
    }

    /**
     * 批量建表，支持Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateTableBatchResponse createTableBatch(CreateTableBatchRequest request) throws JdcloudSdkException {
        return new CreateTableBatchExecutor().client(this).execute(request);
    }

    /**
     * 生成删除存储过程sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropProcedureResponse generalDropProcedure(GeneralDropProcedureRequest request) throws JdcloudSdkException {
        return new GeneralDropProcedureExecutor().client(this).execute(request);
    }

    /**
     * 获取操作对应控制台功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryOperationTypeResponse queryOperationType(QueryOperationTypeRequest request) throws JdcloudSdkException {
        return new QueryOperationTypeExecutor().client(this).execute(request);
    }

    /**
     * 更新用户信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateUserInfoResponse updateUserInfo(UpdateUserInfoRequest request) throws JdcloudSdkException {
        return new UpdateUserInfoExecutor().client(this).execute(request);
    }

    /**
     * 调用函数，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FunctionInvokeResponse functionInvoke(FunctionInvokeRequest request) throws JdcloudSdkException {
        return new FunctionInvokeExecutor().client(this).execute(request);
    }

    /**
     * 执行存储过程，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ProcedureInvokeResponse procedureInvoke(ProcedureInvokeRequest request) throws JdcloudSdkException {
        return new ProcedureInvokeExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户查询sql历史
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public HistorySqlResponse historySql(HistorySqlRequest request) throws JdcloudSdkException {
        return new HistorySqlExecutor().client(this).execute(request);
    }

    /**
     * 获取sql中建表语句，表中列信息，支持Mysql，Stardb，Tidb，ClickHouse
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SqlTableInfoResponse sqlTableInfo(SqlTableInfoRequest request) throws JdcloudSdkException {
        return new SqlTableInfoExecutor().client(this).execute(request);
    }

    /**
     * 获取存储过程列表，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ProcedureListResponse procedureList(ProcedureListRequest request) throws JdcloudSdkException {
        return new ProcedureListExecutor().client(this).execute(request);
    }

    /**
     * 查询sql子任务状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OnlineProxySubTaskQueryResponse onlineProxySubTaskQuery(OnlineProxySubTaskQueryRequest request) throws JdcloudSdkException {
        return new OnlineProxySubTaskQueryExecutor().client(this).execute(request);
    }

    /**
     * 生成修改事件sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterEventResponse generalAlterEvent(GeneralAlterEventRequest request) throws JdcloudSdkException {
        return new GeneralAlterEventExecutor().client(this).execute(request);
    }

    /**
     * 获取函数详情，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FunctionInfoResponse functionInfo(FunctionInfoRequest request) throws JdcloudSdkException {
        return new FunctionInfoExecutor().client(this).execute(request);
    }

    /**
     * 获取触发器详情，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TriggerInfoResponse triggerInfo(TriggerInfoRequest request) throws JdcloudSdkException {
        return new TriggerInfoExecutor().client(this).execute(request);
    }

    /**
     * 生成修改表结构语句sql，支持Mysql，Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterTableSqlResponse generalAlterTableSql(GeneralAlterTableSqlRequest request) throws JdcloudSdkException {
        return new GeneralAlterTableSqlExecutor().client(this).execute(request);
    }

    /**
     * 暂停Sql任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SuspendOnlineSqlTaskResponse suspendOnlineSqlTask(SuspendOnlineSqlTaskRequest request) throws JdcloudSdkException {
        return new SuspendOnlineSqlTaskExecutor().client(this).execute(request);
    }

    /**
     * 获取用户信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetUserInfoResponse getUserInfo(GetUserInfoRequest request) throws JdcloudSdkException {
        return new GetUserInfoExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户查询导入数据sql历史
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public HistoryImportDataResponse historyImportData(HistoryImportDataRequest request) throws JdcloudSdkException {
        return new HistoryImportDataExecutor().client(this).execute(request);
    }

    /**
     * 收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddPersonalSqlResponse addPersonalSql(AddPersonalSqlRequest request) throws JdcloudSdkException {
        return new AddPersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 获取存储过程详情，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ProcedureInfoResponse procedureInfo(ProcedureInfoRequest request) throws JdcloudSdkException {
        return new ProcedureInfoExecutor().client(this).execute(request);
    }

    /**
     * 生成数据，支持Mysql，Stardb
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleGeneralDataResponse consoleGeneralData(ConsoleGeneralDataRequest request) throws JdcloudSdkException {
        return new ConsoleGeneralDataExecutor().client(this).execute(request);
    }

    /**
     * 启用/禁用用户
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableUserResponse enableUser(EnableUserRequest request) throws JdcloudSdkException {
        return new EnableUserExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPersonalSqlsResponse queryPersonalSqls(QueryPersonalSqlsRequest request) throws JdcloudSdkException {
        return new QueryPersonalSqlsExecutor().client(this).execute(request);
    }

    /**
     * 获取视图列表，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ProgramListResponse programList(ProgramListRequest request) throws JdcloudSdkException {
        return new ProgramListExecutor().client(this).execute(request);
    }

    /**
     * 删除用户
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteUserResponse deleteUser(DeleteUserRequest request) throws JdcloudSdkException {
        return new DeleteUserExecutor().client(this).execute(request);
    }

    /**
     * 创建Sql任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateOnlineSqlTaskResponse createOnlineSqlTask(CreateOnlineSqlTaskRequest request) throws JdcloudSdkException {
        return new CreateOnlineSqlTaskExecutor().client(this).execute(request);
    }

    /**
     * 获取Dms域名，仅供前端使用
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDmsDomainResponse getDmsDomain(GetDmsDomainRequest request) throws JdcloudSdkException {
        return new GetDmsDomainExecutor().client(this).execute(request);
    }

    /**
     * 生成修改视图sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterViewResponse generalAlterView(GeneralAlterViewRequest request) throws JdcloudSdkException {
        return new GeneralAlterViewExecutor().client(this).execute(request);
    }

    /**
     * 生成删除事件sql语句，支持Mysql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropEventResponse generalDropEvent(GeneralDropEventRequest request) throws JdcloudSdkException {
        return new GeneralDropEventExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public DmsClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private DmsClient dmsClient;

        public DefaultBuilder() {
            dmsClient = new DmsClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            dmsClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            dmsClient.httpRequestConfig = config;
            return this;
        }

        public DmsClient build() throws JdcloudSdkException {

            if (dmsClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                dmsClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (dmsClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("DmsClient build error: jdcloud credentials provider not set");
                }
            }
            if (dmsClient.httpRequestConfig == null) {
                dmsClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (dmsClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("DmsClient build error: http request config not set");
                }
            }
            return dmsClient;
        }

        public Builder environment(Environment environment) {
            dmsClient.environment = environment;
            return this;
        }
    }
}
