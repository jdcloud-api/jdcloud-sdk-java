/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 数据管理系统DMS
 * 数据管理系统DMS
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dms.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.dms.model.StartFlowRequest;
import com.jdcloud.sdk.service.dms.model.StartFlowResponse;
import com.jdcloud.sdk.service.dms.client.StartFlowExecutor;
import com.jdcloud.sdk.service.dms.model.QueryInstanceRequest;
import com.jdcloud.sdk.service.dms.model.QueryInstanceResponse;
import com.jdcloud.sdk.service.dms.client.QueryInstanceExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleSqlRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleSqlResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleSqlExecutor;
import com.jdcloud.sdk.service.dms.model.ViewInfoRequest;
import com.jdcloud.sdk.service.dms.model.ViewInfoResponse;
import com.jdcloud.sdk.service.dms.client.ViewInfoExecutor;
import com.jdcloud.sdk.service.dms.model.ExeProgramRequest;
import com.jdcloud.sdk.service.dms.model.ExeProgramResponse;
import com.jdcloud.sdk.service.dms.client.ExeProgramExecutor;
import com.jdcloud.sdk.service.dms.model.OpenTableRequest;
import com.jdcloud.sdk.service.dms.model.OpenTableResponse;
import com.jdcloud.sdk.service.dms.client.OpenTableExecutor;
import com.jdcloud.sdk.service.dms.model.FormatSqlRequest;
import com.jdcloud.sdk.service.dms.model.FormatSqlResponse;
import com.jdcloud.sdk.service.dms.client.FormatSqlExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateViewExecutor;
import com.jdcloud.sdk.service.dms.model.TableInfoRequest;
import com.jdcloud.sdk.service.dms.model.TableInfoResponse;
import com.jdcloud.sdk.service.dms.client.TableInfoExecutor;
import com.jdcloud.sdk.service.dms.model.CreateImportFileTaskRequest;
import com.jdcloud.sdk.service.dms.model.CreateImportFileTaskResponse;
import com.jdcloud.sdk.service.dms.client.CreateImportFileTaskExecutor;
import com.jdcloud.sdk.service.dms.model.CreateExportFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateExportFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateExportFlowExecutor;
import com.jdcloud.sdk.service.dms.model.ImportDdlDmlRequest;
import com.jdcloud.sdk.service.dms.model.ImportDdlDmlResponse;
import com.jdcloud.sdk.service.dms.client.ImportDdlDmlExecutor;
import com.jdcloud.sdk.service.dms.model.OpenRequest;
import com.jdcloud.sdk.service.dms.model.OpenResponse;
import com.jdcloud.sdk.service.dms.client.OpenExecutor;
import com.jdcloud.sdk.service.dms.model.CreateTableBatchRequest;
import com.jdcloud.sdk.service.dms.model.CreateTableBatchResponse;
import com.jdcloud.sdk.service.dms.client.CreateTableBatchExecutor;
import com.jdcloud.sdk.service.dms.model.TableListRequest;
import com.jdcloud.sdk.service.dms.model.TableListResponse;
import com.jdcloud.sdk.service.dms.client.TableListExecutor;
import com.jdcloud.sdk.service.dms.model.LogoutRequest;
import com.jdcloud.sdk.service.dms.model.LogoutResponse;
import com.jdcloud.sdk.service.dms.client.LogoutExecutor;
import com.jdcloud.sdk.service.dms.model.ExportDataRequest;
import com.jdcloud.sdk.service.dms.model.ExportDataResponse;
import com.jdcloud.sdk.service.dms.client.ExportDataExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralDropViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralDropViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralDropViewExecutor;
import com.jdcloud.sdk.service.dms.model.HistorySqlRequest;
import com.jdcloud.sdk.service.dms.model.HistorySqlResponse;
import com.jdcloud.sdk.service.dms.client.HistorySqlExecutor;
import com.jdcloud.sdk.service.dms.model.GetExportDataIdRequest;
import com.jdcloud.sdk.service.dms.model.GetExportDataIdResponse;
import com.jdcloud.sdk.service.dms.client.GetExportDataIdExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleExplainRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleExplainResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleExplainExecutor;
import com.jdcloud.sdk.service.dms.model.SqlTableInfoRequest;
import com.jdcloud.sdk.service.dms.model.SqlTableInfoResponse;
import com.jdcloud.sdk.service.dms.client.SqlTableInfoExecutor;
import com.jdcloud.sdk.service.dms.model.CreateDataFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateDataFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateDataFlowExecutor;
import com.jdcloud.sdk.service.dms.model.DeletePersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.DeletePersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.DeletePersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.DatabaseListRequest;
import com.jdcloud.sdk.service.dms.model.DatabaseListResponse;
import com.jdcloud.sdk.service.dms.client.DatabaseListExecutor;
import com.jdcloud.sdk.service.dms.model.LoginRequest;
import com.jdcloud.sdk.service.dms.model.LoginResponse;
import com.jdcloud.sdk.service.dms.client.LoginExecutor;
import com.jdcloud.sdk.service.dms.model.DownloadExportFileRequest;
import com.jdcloud.sdk.service.dms.model.DownloadExportFileResponse;
import com.jdcloud.sdk.service.dms.client.DownloadExportFileExecutor;
import com.jdcloud.sdk.service.dms.model.UploadImportFileTaskRequest;
import com.jdcloud.sdk.service.dms.model.UploadImportFileTaskResponse;
import com.jdcloud.sdk.service.dms.client.UploadImportFileTaskExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTableSqlRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterTableSqlResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterTableSqlExecutor;
import com.jdcloud.sdk.service.dms.model.ExportStructRequest;
import com.jdcloud.sdk.service.dms.model.ExportStructResponse;
import com.jdcloud.sdk.service.dms.client.ExportStructExecutor;
import com.jdcloud.sdk.service.dms.model.HistoryImportDataRequest;
import com.jdcloud.sdk.service.dms.model.HistoryImportDataResponse;
import com.jdcloud.sdk.service.dms.client.HistoryImportDataExecutor;
import com.jdcloud.sdk.service.dms.model.AddPersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.AddPersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.AddPersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.UpdatePersonalSqlRequest;
import com.jdcloud.sdk.service.dms.model.UpdatePersonalSqlResponse;
import com.jdcloud.sdk.service.dms.client.UpdatePersonalSqlExecutor;
import com.jdcloud.sdk.service.dms.model.ConsoleGeneralDataRequest;
import com.jdcloud.sdk.service.dms.model.ConsoleGeneralDataResponse;
import com.jdcloud.sdk.service.dms.client.ConsoleGeneralDataExecutor;
import com.jdcloud.sdk.service.dms.model.GetExportIdRequest;
import com.jdcloud.sdk.service.dms.model.GetExportIdResponse;
import com.jdcloud.sdk.service.dms.client.GetExportIdExecutor;
import com.jdcloud.sdk.service.dms.model.QueryPersonalSqlsRequest;
import com.jdcloud.sdk.service.dms.model.QueryPersonalSqlsResponse;
import com.jdcloud.sdk.service.dms.client.QueryPersonalSqlsExecutor;
import com.jdcloud.sdk.service.dms.model.ProgramListRequest;
import com.jdcloud.sdk.service.dms.model.ProgramListResponse;
import com.jdcloud.sdk.service.dms.client.ProgramListExecutor;
import com.jdcloud.sdk.service.dms.model.GetCreateTableBatchSqlRequest;
import com.jdcloud.sdk.service.dms.model.GetCreateTableBatchSqlResponse;
import com.jdcloud.sdk.service.dms.client.GetCreateTableBatchSqlExecutor;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainRequest;
import com.jdcloud.sdk.service.dms.model.GetDmsDomainResponse;
import com.jdcloud.sdk.service.dms.client.GetDmsDomainExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralAlterViewRequest;
import com.jdcloud.sdk.service.dms.model.GeneralAlterViewResponse;
import com.jdcloud.sdk.service.dms.client.GeneralAlterViewExecutor;
import com.jdcloud.sdk.service.dms.model.CreateStructureFlowRequest;
import com.jdcloud.sdk.service.dms.model.CreateStructureFlowResponse;
import com.jdcloud.sdk.service.dms.client.CreateStructureFlowExecutor;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTableSqlRequest;
import com.jdcloud.sdk.service.dms.model.GeneralCreateTableSqlResponse;
import com.jdcloud.sdk.service.dms.client.GeneralCreateTableSqlExecutor;

/**
 * dmsClient
 */
public class DmsClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.9";
    public final static String DefaultEndpoint = "dms.jdcloud-api.com";
    public final static String ServiceName = "dms";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private DmsClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 任务执行
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartFlowResponse startFlow(StartFlowRequest request) throws JdcloudSdkException {
        return new StartFlowExecutor().client(this).execute(request);
    }

    /**
     * 查询用户实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryInstanceResponse queryInstance(QueryInstanceRequest request) throws JdcloudSdkException {
        return new QueryInstanceExecutor().client(this).execute(request);
    }

    /**
     * 执行sql语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleSqlResponse consoleSql(ConsoleSqlRequest request) throws JdcloudSdkException {
        return new ConsoleSqlExecutor().client(this).execute(request);
    }

    /**
     * 获取视图详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ViewInfoResponse viewInfo(ViewInfoRequest request) throws JdcloudSdkException {
        return new ViewInfoExecutor().client(this).execute(request);
    }

    /**
     * 执行编程对象sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExeProgramResponse exeProgram(ExeProgramRequest request) throws JdcloudSdkException {
        return new ExeProgramExecutor().client(this).execute(request);
    }

    /**
     * 执行sql语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenTableResponse openTable(OpenTableRequest request) throws JdcloudSdkException {
        return new OpenTableExecutor().client(this).execute(request);
    }

    /**
     * sql格式化
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FormatSqlResponse formatSql(FormatSqlRequest request) throws JdcloudSdkException {
        return new FormatSqlExecutor().client(this).execute(request);
    }

    /**
     * 生产创建视图SQL语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateViewResponse generalCreateView(GeneralCreateViewRequest request) throws JdcloudSdkException {
        return new GeneralCreateViewExecutor().client(this).execute(request);
    }

    /**
     * 获取表元数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TableInfoResponse tableInfo(TableInfoRequest request) throws JdcloudSdkException {
        return new TableInfoExecutor().client(this).execute(request);
    }

    /**
     * 创建导入文件任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateImportFileTaskResponse createImportFileTask(CreateImportFileTaskRequest request) throws JdcloudSdkException {
        return new CreateImportFileTaskExecutor().client(this).execute(request);
    }

    /**
     * 创建数据导出工单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateExportFlowResponse createExportFlow(CreateExportFlowRequest request) throws JdcloudSdkException {
        return new CreateExportFlowExecutor().client(this).execute(request);
    }

    /**
     * sql导入
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ImportDdlDmlResponse importDdlDml(ImportDdlDmlRequest request) throws JdcloudSdkException {
        return new ImportDdlDmlExecutor().client(this).execute(request);
    }

    /**
     * 打开实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenResponse open(OpenRequest request) throws JdcloudSdkException {
        return new OpenExecutor().client(this).execute(request);
    }

    /**
     * 批量建表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateTableBatchResponse createTableBatch(CreateTableBatchRequest request) throws JdcloudSdkException {
        return new CreateTableBatchExecutor().client(this).execute(request);
    }

    /**
     * 获取数据库中的表列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public TableListResponse tableList(TableListRequest request) throws JdcloudSdkException {
        return new TableListExecutor().client(this).execute(request);
    }

    /**
     * 退出登录
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public LogoutResponse logout(LogoutRequest request) throws JdcloudSdkException {
        return new LogoutExecutor().client(this).execute(request);
    }

    /**
     * 数据导出
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExportDataResponse exportData(ExportDataRequest request) throws JdcloudSdkException {
        return new ExportDataExecutor().client(this).execute(request);
    }

    /**
     * 生成删除视图sql语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralDropViewResponse generalDropView(GeneralDropViewRequest request) throws JdcloudSdkException {
        return new GeneralDropViewExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户查询sql历史
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public HistorySqlResponse historySql(HistorySqlRequest request) throws JdcloudSdkException {
        return new HistorySqlExecutor().client(this).execute(request);
    }

    /**
     * 获取数据导出Id
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetExportDataIdResponse getExportDataId(GetExportDataIdRequest request) throws JdcloudSdkException {
        return new GetExportDataIdExecutor().client(this).execute(request);
    }

    /**
     * 执行计划
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleExplainResponse consoleExplain(ConsoleExplainRequest request) throws JdcloudSdkException {
        return new ConsoleExplainExecutor().client(this).execute(request);
    }

    /**
     * 获取sql中建表语句，表中列信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SqlTableInfoResponse sqlTableInfo(SqlTableInfoRequest request) throws JdcloudSdkException {
        return new SqlTableInfoExecutor().client(this).execute(request);
    }

    /**
     * 创建数据变更工单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataFlowResponse createDataFlow(CreateDataFlowRequest request) throws JdcloudSdkException {
        return new CreateDataFlowExecutor().client(this).execute(request);
    }

    /**
     * 删除收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeletePersonalSqlResponse deletePersonalSql(DeletePersonalSqlRequest request) throws JdcloudSdkException {
        return new DeletePersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 获取数据库实例的库列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DatabaseListResponse databaseList(DatabaseListRequest request) throws JdcloudSdkException {
        return new DatabaseListExecutor().client(this).execute(request);
    }

    /**
     * rds，drds登录实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public LoginResponse login(LoginRequest request) throws JdcloudSdkException {
        return new LoginExecutor().client(this).execute(request);
    }

    /**
     * 表结构数据导出文件下载
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DownloadExportFileResponse downloadExportFile(DownloadExportFileRequest request) throws JdcloudSdkException {
        return new DownloadExportFileExecutor().client(this).execute(request);
    }

    /**
     * 上传文件
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UploadImportFileTaskResponse uploadImportFileTask(UploadImportFileTaskRequest request) throws JdcloudSdkException {
        return new UploadImportFileTaskExecutor().client(this).execute(request);
    }

    /**
     * 生成修改表结构语句sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterTableSqlResponse generalAlterTableSql(GeneralAlterTableSqlRequest request) throws JdcloudSdkException {
        return new GeneralAlterTableSqlExecutor().client(this).execute(request);
    }

    /**
     * 表结构导出
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExportStructResponse exportStruct(ExportStructRequest request) throws JdcloudSdkException {
        return new ExportStructExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户查询导入数据sql历史
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public HistoryImportDataResponse historyImportData(HistoryImportDataRequest request) throws JdcloudSdkException {
        return new HistoryImportDataExecutor().client(this).execute(request);
    }

    /**
     * 收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddPersonalSqlResponse addPersonalSql(AddPersonalSqlRequest request) throws JdcloudSdkException {
        return new AddPersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 更新收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdatePersonalSqlResponse updatePersonalSql(UpdatePersonalSqlRequest request) throws JdcloudSdkException {
        return new UpdatePersonalSqlExecutor().client(this).execute(request);
    }

    /**
     * 生成数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConsoleGeneralDataResponse consoleGeneralData(ConsoleGeneralDataRequest request) throws JdcloudSdkException {
        return new ConsoleGeneralDataExecutor().client(this).execute(request);
    }

    /**
     * 生成表结构数据导出下载Id
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetExportIdResponse getExportId(GetExportIdRequest request) throws JdcloudSdkException {
        return new GetExportIdExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例用户收藏sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPersonalSqlsResponse queryPersonalSqls(QueryPersonalSqlsRequest request) throws JdcloudSdkException {
        return new QueryPersonalSqlsExecutor().client(this).execute(request);
    }

    /**
     * 获取视图列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ProgramListResponse programList(ProgramListRequest request) throws JdcloudSdkException {
        return new ProgramListExecutor().client(this).execute(request);
    }

    /**
     * 获取批量建表sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetCreateTableBatchSqlResponse getCreateTableBatchSql(GetCreateTableBatchSqlRequest request) throws JdcloudSdkException {
        return new GetCreateTableBatchSqlExecutor().client(this).execute(request);
    }

    /**
     * 获取Dms域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDmsDomainResponse getDmsDomain(GetDmsDomainRequest request) throws JdcloudSdkException {
        return new GetDmsDomainExecutor().client(this).execute(request);
    }

    /**
     * 生成修改视图sql语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralAlterViewResponse generalAlterView(GeneralAlterViewRequest request) throws JdcloudSdkException {
        return new GeneralAlterViewExecutor().client(this).execute(request);
    }

    /**
     * 创建结构变更工单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateStructureFlowResponse createStructureFlow(CreateStructureFlowRequest request) throws JdcloudSdkException {
        return new CreateStructureFlowExecutor().client(this).execute(request);
    }

    /**
     * 生成建表语句sql
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GeneralCreateTableSqlResponse generalCreateTableSql(GeneralCreateTableSqlRequest request) throws JdcloudSdkException {
        return new GeneralCreateTableSqlExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public DmsClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private DmsClient dmsClient;

        public DefaultBuilder() {
            dmsClient = new DmsClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            dmsClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            dmsClient.httpRequestConfig = config;
            return this;
        }

        public DmsClient build() throws JdcloudSdkException {

            if (dmsClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                dmsClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (dmsClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("DmsClient build error: jdcloud credentials provider not set");
                }
            }
            if (dmsClient.httpRequestConfig == null) {
                dmsClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (dmsClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("DmsClient build error: http request config not set");
                }
            }
            return dmsClient;
        }

        public Builder environment(Environment environment) {
            dmsClient.environment = environment;
            return this;
        }
    }
}
