/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 性能统计
 * 性能统计相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * missingIndexResult
 */
public class MissingIndexResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据库名
     */
    private String db;

    /**
     * 表名
     */
    private String table;

    /**
     * 构成相等谓词的列的逗号分隔列表，谓词的形式如下：&lt;br&gt;table.column &#x3D;constant_value
     */
    private String equalityColumns;

    /**
     * 用于查询的涵盖列的逗号分隔列表,即创建索引的SQL语句中，Include后的字段
     */
    private String inequalityColumns;

    /**
     * 构成不等谓词的列的逗号分隔列表，例如以下形式的谓词：&lt;br&gt;table.column &gt; constant_value&lt;br&gt;“&#x3D;”之外的任何比较运算符都表示不相等。
     */
    private String includedColumns;

    /**
     * 实现此缺失索引后，用户查询可能获得的平均百分比收益。 该值表示如果实现此缺失索引，则查询成本将按此百分比平均下降。
     */
    private Float avgUserImpact;

    /**
     * 由可能使用了组中建议索引的用户查询所导致的扫描次数。
     */
    private Integer userScans;

    /**
     * 由可能使用了组中建议索引的用户查询所导致的搜索次数。
     */
    private Integer userSeeks;


    /**
     * get 数据库名
     *
     * @return
     */
    public String getDb() {
        return db;
    }

    /**
     * set 数据库名
     *
     * @param db
     */
    public void setDb(String db) {
        this.db = db;
    }

    /**
     * get 表名
     *
     * @return
     */
    public String getTable() {
        return table;
    }

    /**
     * set 表名
     *
     * @param table
     */
    public void setTable(String table) {
        this.table = table;
    }

    /**
     * get 构成相等谓词的列的逗号分隔列表，谓词的形式如下：&lt;br&gt;table.column &#x3D;constant_value
     *
     * @return
     */
    public String getEqualityColumns() {
        return equalityColumns;
    }

    /**
     * set 构成相等谓词的列的逗号分隔列表，谓词的形式如下：&lt;br&gt;table.column &#x3D;constant_value
     *
     * @param equalityColumns
     */
    public void setEqualityColumns(String equalityColumns) {
        this.equalityColumns = equalityColumns;
    }

    /**
     * get 用于查询的涵盖列的逗号分隔列表,即创建索引的SQL语句中，Include后的字段
     *
     * @return
     */
    public String getInequalityColumns() {
        return inequalityColumns;
    }

    /**
     * set 用于查询的涵盖列的逗号分隔列表,即创建索引的SQL语句中，Include后的字段
     *
     * @param inequalityColumns
     */
    public void setInequalityColumns(String inequalityColumns) {
        this.inequalityColumns = inequalityColumns;
    }

    /**
     * get 构成不等谓词的列的逗号分隔列表，例如以下形式的谓词：&lt;br&gt;table.column &gt; constant_value&lt;br&gt;“&#x3D;”之外的任何比较运算符都表示不相等。
     *
     * @return
     */
    public String getIncludedColumns() {
        return includedColumns;
    }

    /**
     * set 构成不等谓词的列的逗号分隔列表，例如以下形式的谓词：&lt;br&gt;table.column &gt; constant_value&lt;br&gt;“&#x3D;”之外的任何比较运算符都表示不相等。
     *
     * @param includedColumns
     */
    public void setIncludedColumns(String includedColumns) {
        this.includedColumns = includedColumns;
    }

    /**
     * get 实现此缺失索引后，用户查询可能获得的平均百分比收益。 该值表示如果实现此缺失索引，则查询成本将按此百分比平均下降。
     *
     * @return
     */
    public Float getAvgUserImpact() {
        return avgUserImpact;
    }

    /**
     * set 实现此缺失索引后，用户查询可能获得的平均百分比收益。 该值表示如果实现此缺失索引，则查询成本将按此百分比平均下降。
     *
     * @param avgUserImpact
     */
    public void setAvgUserImpact(Float avgUserImpact) {
        this.avgUserImpact = avgUserImpact;
    }

    /**
     * get 由可能使用了组中建议索引的用户查询所导致的扫描次数。
     *
     * @return
     */
    public Integer getUserScans() {
        return userScans;
    }

    /**
     * set 由可能使用了组中建议索引的用户查询所导致的扫描次数。
     *
     * @param userScans
     */
    public void setUserScans(Integer userScans) {
        this.userScans = userScans;
    }

    /**
     * get 由可能使用了组中建议索引的用户查询所导致的搜索次数。
     *
     * @return
     */
    public Integer getUserSeeks() {
        return userSeeks;
    }

    /**
     * set 由可能使用了组中建议索引的用户查询所导致的搜索次数。
     *
     * @param userSeeks
     */
    public void setUserSeeks(Integer userSeeks) {
        this.userSeeks = userSeeks;
    }


    /**
     * set 数据库名
     *
     * @param db
     */
    public MissingIndexResult db(String db) {
        this.db = db;
        return this;
    }

    /**
     * set 表名
     *
     * @param table
     */
    public MissingIndexResult table(String table) {
        this.table = table;
        return this;
    }

    /**
     * set 构成相等谓词的列的逗号分隔列表，谓词的形式如下：&lt;br&gt;table.column &#x3D;constant_value
     *
     * @param equalityColumns
     */
    public MissingIndexResult equalityColumns(String equalityColumns) {
        this.equalityColumns = equalityColumns;
        return this;
    }

    /**
     * set 用于查询的涵盖列的逗号分隔列表,即创建索引的SQL语句中，Include后的字段
     *
     * @param inequalityColumns
     */
    public MissingIndexResult inequalityColumns(String inequalityColumns) {
        this.inequalityColumns = inequalityColumns;
        return this;
    }

    /**
     * set 构成不等谓词的列的逗号分隔列表，例如以下形式的谓词：&lt;br&gt;table.column &gt; constant_value&lt;br&gt;“&#x3D;”之外的任何比较运算符都表示不相等。
     *
     * @param includedColumns
     */
    public MissingIndexResult includedColumns(String includedColumns) {
        this.includedColumns = includedColumns;
        return this;
    }

    /**
     * set 实现此缺失索引后，用户查询可能获得的平均百分比收益。 该值表示如果实现此缺失索引，则查询成本将按此百分比平均下降。
     *
     * @param avgUserImpact
     */
    public MissingIndexResult avgUserImpact(Float avgUserImpact) {
        this.avgUserImpact = avgUserImpact;
        return this;
    }

    /**
     * set 由可能使用了组中建议索引的用户查询所导致的扫描次数。
     *
     * @param userScans
     */
    public MissingIndexResult userScans(Integer userScans) {
        this.userScans = userScans;
        return this;
    }

    /**
     * set 由可能使用了组中建议索引的用户查询所导致的搜索次数。
     *
     * @param userSeeks
     */
    public MissingIndexResult userSeeks(Integer userSeeks) {
        this.userSeeks = userSeeks;
        return this;
    }


}