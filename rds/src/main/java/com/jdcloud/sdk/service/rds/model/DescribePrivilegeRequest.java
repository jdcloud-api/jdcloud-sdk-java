/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Common
 * 运维接口管理相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 查看云数据库 RDS 的权限信息 - 仅支持 MySQL，Percona，MariaDB
 */
public class DescribePrivilegeRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 设置可见的引擎类型，如 MySQL 等
     * Required:true
     */
    @Required
    private String engine;

    /**
     * RDS 实例ID，唯一标识一个RDS实例
     */
    private String instanceId;

    /**
     * true表示展示高权限，默认false
     */
    private Boolean allAdminPrivileges;

    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     * Required:true
     */
    @Required
    private String regionId;


    /**
     * get 设置可见的引擎类型，如 MySQL 等
     *
     * @return
     */
    public String getEngine() {
        return engine;
    }

    /**
     * set 设置可见的引擎类型，如 MySQL 等
     *
     * @param engine
     */
    public void setEngine(String engine) {
        this.engine = engine;
    }

    /**
     * get RDS 实例ID，唯一标识一个RDS实例
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }

    /**
     * get true表示展示高权限，默认false
     *
     * @return
     */
    public Boolean getAllAdminPrivileges() {
        return allAdminPrivileges;
    }

    /**
     * set true表示展示高权限，默认false
     *
     * @param allAdminPrivileges
     */
    public void setAllAdminPrivileges(Boolean allAdminPrivileges) {
        this.allAdminPrivileges = allAdminPrivileges;
    }

    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * set 设置可见的引擎类型，如 MySQL 等
     *
     * @param engine
     */
    public DescribePrivilegeRequest engine(String engine) {
        this.engine = engine;
        return this;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public DescribePrivilegeRequest instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }

    /**
     * set true表示展示高权限，默认false
     *
     * @param allAdminPrivileges
     */
    public DescribePrivilegeRequest allAdminPrivileges(Boolean allAdminPrivileges) {
        this.allAdminPrivileges = allAdminPrivileges;
        return this;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public DescribePrivilegeRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}