/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云数据库RDS
 * 目前RDS OpenAPI支持云数据库SQL Server，可以通过OpenAPI实现数据库管理，账号管理，备份管理，单库上云等功能，后续将支持云数据库MySQL
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.rds.model.GetAuditDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.GetAuditDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.GetAuditDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.FailoverInstanceRequest;
import com.jdcloud.sdk.service.rds.model.FailoverInstanceResponse;
import com.jdcloud.sdk.service.rds.client.FailoverInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.rds.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.rds.client.DeleteInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.GetUploadKeyRequest;
import com.jdcloud.sdk.service.rds.model.GetUploadKeyResponse;
import com.jdcloud.sdk.service.rds.client.GetUploadKeyExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteAuditRequest;
import com.jdcloud.sdk.service.rds.model.DeleteAuditResponse;
import com.jdcloud.sdk.service.rds.client.DeleteAuditExecutor;
import com.jdcloud.sdk.service.rds.model.CreateAuditRequest;
import com.jdcloud.sdk.service.rds.model.CreateAuditResponse;
import com.jdcloud.sdk.service.rds.client.CreateAuditExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteBackupRequest;
import com.jdcloud.sdk.service.rds.model.DeleteBackupResponse;
import com.jdcloud.sdk.service.rds.client.DeleteBackupExecutor;
import com.jdcloud.sdk.service.rds.model.SetInstanceNameRequest;
import com.jdcloud.sdk.service.rds.model.SetInstanceNameResponse;
import com.jdcloud.sdk.service.rds.client.SetInstanceNameExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInstancesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInstancesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInstancesExecutor;
import com.jdcloud.sdk.service.rds.model.CreateDatabaseRequest;
import com.jdcloud.sdk.service.rds.model.CreateDatabaseResponse;
import com.jdcloud.sdk.service.rds.client.CreateDatabaseExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeImportFilesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeImportFilesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeImportFilesExecutor;
import com.jdcloud.sdk.service.rds.model.CreateBackupRequest;
import com.jdcloud.sdk.service.rds.model.CreateBackupResponse;
import com.jdcloud.sdk.service.rds.client.CreateBackupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeQueryPerformanceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeQueryPerformanceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeQueryPerformanceExecutor;
import com.jdcloud.sdk.service.rds.model.GetAuditFilesRequest;
import com.jdcloud.sdk.service.rds.model.GetAuditFilesResponse;
import com.jdcloud.sdk.service.rds.client.GetAuditFilesExecutor;
import com.jdcloud.sdk.service.rds.model.ResetPasswordRequest;
import com.jdcloud.sdk.service.rds.model.ResetPasswordResponse;
import com.jdcloud.sdk.service.rds.client.ResetPasswordExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteDatabaseRequest;
import com.jdcloud.sdk.service.rds.model.DeleteDatabaseResponse;
import com.jdcloud.sdk.service.rds.client.DeleteDatabaseExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeErrorLogsExecutor;
import com.jdcloud.sdk.service.rds.model.GrantPrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.GrantPrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.GrantPrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeDatabasesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeDatabasesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeDatabasesExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAuditRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditExecutor;
import com.jdcloud.sdk.service.rds.model.GetAuditOptionsRequest;
import com.jdcloud.sdk.service.rds.model.GetAuditOptionsResponse;
import com.jdcloud.sdk.service.rds.client.GetAuditOptionsExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromFileRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromFileResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromFileExecutor;
import com.jdcloud.sdk.service.rds.model.SetImportFileSharedRequest;
import com.jdcloud.sdk.service.rds.model.SetImportFileSharedResponse;
import com.jdcloud.sdk.service.rds.client.SetImportFileSharedExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeIndexPerformanceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeIndexPerformanceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeIndexPerformanceExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteAccountRequest;
import com.jdcloud.sdk.service.rds.model.DeleteAccountResponse;
import com.jdcloud.sdk.service.rds.client.DeleteAccountExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromBackupRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromBackupResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromBackupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAccountsExecutor;
import com.jdcloud.sdk.service.rds.model.CreateAccountRequest;
import com.jdcloud.sdk.service.rds.model.CreateAccountResponse;
import com.jdcloud.sdk.service.rds.client.CreateAccountExecutor;
import com.jdcloud.sdk.service.rds.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.rds.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.rds.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupsExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyAuditRequest;
import com.jdcloud.sdk.service.rds.model.ModifyAuditResponse;
import com.jdcloud.sdk.service.rds.client.ModifyAuditExecutor;
import com.jdcloud.sdk.service.rds.model.RebootInstanceRequest;
import com.jdcloud.sdk.service.rds.model.RebootInstanceResponse;
import com.jdcloud.sdk.service.rds.client.RebootInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceAttributesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceAttributesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInstanceAttributesExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromOSSRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromOSSResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromOSSExecutor;

/**
 * rdsClient
 */
public class RdsClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.0.1";
    public final static String DefaultEndpoint = "rds.jdcloud-api.com";
    public final static String ServiceName = "rds";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private RdsClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 获取某个审计文件的下载链接&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAuditDownloadURLResponse getAuditDownloadURL(GetAuditDownloadURLRequest request) throws JdcloudSdkException {
        return new GetAuditDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * RDS实例主备切换&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FailoverInstanceResponse failoverInstance(FailoverInstanceRequest request) throws JdcloudSdkException {
        return new FailoverInstanceExecutor().client(this).execute(request);
    }

    /**
     * 删除数据库集群实例及Mysql只读实例&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：支持 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取上传导入文件的需要的Key&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetUploadKeyResponse getUploadKey(GetUploadKeyRequest request) throws JdcloudSdkException {
        return new GetUploadKeyExecutor().client(this).execute(request);
    }

    /**
     * 清除/关闭 数据库审计&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAuditResponse deleteAudit(DeleteAuditRequest request) throws JdcloudSdkException {
        return new DeleteAuditExecutor().client(this).execute(request);
    }

    /**
     * 开启数据库审计&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAuditResponse createAudit(CreateAuditRequest request) throws JdcloudSdkException {
        return new CreateAuditExecutor().client(this).execute(request);
    }

    /**
     * 删除备份&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBackupResponse deleteBackup(DeleteBackupRequest request) throws JdcloudSdkException {
        return new DeleteBackupExecutor().client(this).execute(request);
    }

    /**
     * 修改RDS实例名称&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstanceNameResponse setInstanceName(SetInstanceNameRequest request) throws JdcloudSdkException {
        return new SetInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 获取备份下载链接&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupDownloadURLResponse describeBackupDownloadURL(DescribeBackupDownloadURLRequest request) throws JdcloudSdkException {
        return new DescribeBackupDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * 查询RDS实例列表&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstancesResponse describeInstances(DescribeInstancesRequest request) throws JdcloudSdkException {
        return new DescribeInstancesExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDatabaseResponse createDatabase(CreateDatabaseRequest request) throws JdcloudSdkException {
        return new CreateDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 获取单库上云文件列表&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeImportFilesResponse describeImportFiles(DescribeImportFilesRequest request) throws JdcloudSdkException {
        return new DescribeImportFilesExecutor().client(this).execute(request);
    }

    /**
     * 创建备份&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBackupResponse createBackup(CreateBackupRequest request) throws JdcloudSdkException {
        return new CreateBackupExecutor().client(this).execute(request);
    }

    /**
     * 查询性能统计&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeQueryPerformanceResponse describeQueryPerformance(DescribeQueryPerformanceRequest request) throws JdcloudSdkException {
        return new DescribeQueryPerformanceExecutor().client(this).execute(request);
    }

    /**
     * 查看审计文件列表&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAuditFilesResponse getAuditFiles(GetAuditFilesRequest request) throws JdcloudSdkException {
        return new GetAuditFilesExecutor().client(this).execute(request);
    }

    /**
     * 数据库账号重置密码&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetPasswordResponse resetPassword(ResetPasswordRequest request) throws JdcloudSdkException {
        return new ResetPasswordExecutor().client(this).execute(request);
    }

    /**
     * 删除数据库 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDatabaseResponse deleteDatabase(DeleteDatabaseRequest request) throws JdcloudSdkException {
        return new DeleteDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 获取SQL Server 错误日志及下载信息&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeErrorLogsResponse describeErrorLogs(DescribeErrorLogsRequest request) throws JdcloudSdkException {
        return new DescribeErrorLogsExecutor().client(this).execute(request);
    }

    /**
     * 数据库账号授权&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GrantPrivilegeResponse grantPrivilege(GrantPrivilegeRequest request) throws JdcloudSdkException {
        return new GrantPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 查看数据库列表&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDatabasesResponse describeDatabases(DescribeDatabasesRequest request) throws JdcloudSdkException {
        return new DescribeDatabasesExecutor().client(this).execute(request);
    }

    /**
     * 查看开启的审计选项&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditResponse describeAudit(DescribeAuditRequest request) throws JdcloudSdkException {
        return new DescribeAuditExecutor().client(this).execute(request);
    }

    /**
     * 获取审计所有选项及推荐的选项&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAuditOptionsResponse getAuditOptions(GetAuditOptionsRequest request) throws JdcloudSdkException {
        return new GetAuditOptionsExecutor().client(this).execute(request);
    }

    /**
     * 从用户上传的备份文件中恢复SQL Server数据库&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromFileResponse restoreDatabaseFromFile(RestoreDatabaseFromFileRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromFileExecutor().client(this).execute(request);
    }

    /**
     * 设置上传文件是否共享给该用户的其他实例&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetImportFileSharedResponse setImportFileShared(SetImportFileSharedRequest request) throws JdcloudSdkException {
        return new SetImportFileSharedExecutor().client(this).execute(request);
    }

    /**
     * 索引性能统计&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIndexPerformanceResponse describeIndexPerformance(DescribeIndexPerformanceRequest request) throws JdcloudSdkException {
        return new DescribeIndexPerformanceExecutor().client(this).execute(request);
    }

    /**
     * 删除数据库账户&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAccountResponse deleteAccount(DeleteAccountRequest request) throws JdcloudSdkException {
        return new DeleteAccountExecutor().client(this).execute(request);
    }

    /**
     * 从云数据库SQL Server备份中恢复单个数据库&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromBackupResponse restoreDatabaseFromBackup(RestoreDatabaseFromBackupRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromBackupExecutor().client(this).execute(request);
    }

    /**
     * 查看实例下所有账号信息&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountsResponse describeAccounts(DescribeAccountsRequest request) throws JdcloudSdkException {
        return new DescribeAccountsExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库账户&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccountResponse createAccount(CreateAccountRequest request) throws JdcloudSdkException {
        return new CreateAccountExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库集群实例&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取备份信息&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupsResponse describeBackups(DescribeBackupsRequest request) throws JdcloudSdkException {
        return new DescribeBackupsExecutor().client(this).execute(request);
    }

    /**
     * 修改当前审计选项&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyAuditResponse modifyAudit(ModifyAuditRequest request) throws JdcloudSdkException {
        return new ModifyAuditExecutor().client(this).execute(request);
    }

    /**
     * 重启RDS实例&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RebootInstanceResponse rebootInstance(RebootInstanceRequest request) throws JdcloudSdkException {
        return new RebootInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询RDS实例详细信息&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceAttributesResponse describeInstanceAttributes(DescribeInstanceAttributesRequest request) throws JdcloudSdkException {
        return new DescribeInstanceAttributesExecutor().client(this).execute(request);
    }

    /**
     * 从OSS恢复SQL Server数据库&lt;/br&gt;- SQL Server：支持&lt;/br&gt;- MySQL：暂不支持
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromOSSResponse restoreDatabaseFromOSS(RestoreDatabaseFromOSSRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromOSSExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public RdsClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private RdsClient rdsClient;

        public DefaultBuilder() {
            rdsClient = new RdsClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            rdsClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            rdsClient.httpRequestConfig = config;
            return this;
        }

        public RdsClient build() throws JdcloudSdkException {

            if (rdsClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                rdsClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (rdsClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("RdsClient build error: jdcloud credentials provider not set");
                }
            }
            if (rdsClient.httpRequestConfig == null) {
                rdsClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (rdsClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("RdsClient build error: http request config not set");
                }
            }
            return rdsClient;
        }

        public Builder environment(Environment environment) {
            rdsClient.environment = environment;
            return this;
        }
    }
}
