/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云数据库RDS
 * 目前RDS OpenAPI支持云数据库 MySQL、Percona、MariaDB、SQL Server、PostgreSQL
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.rds.model.DescribeAuditDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyDatabaseCommentRequest;
import com.jdcloud.sdk.service.rds.model.ModifyDatabaseCommentResponse;
import com.jdcloud.sdk.service.rds.client.ModifyDatabaseCommentExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInterceptResultRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInterceptResultResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInterceptResultExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.CopyParameterGroupRequest;
import com.jdcloud.sdk.service.rds.model.CopyParameterGroupResponse;
import com.jdcloud.sdk.service.rds.client.CopyParameterGroupExecutor;
import com.jdcloud.sdk.service.rds.model.AlterTableWithOnlineDDLRequest;
import com.jdcloud.sdk.service.rds.model.AlterTableWithOnlineDDLResponse;
import com.jdcloud.sdk.service.rds.client.AlterTableWithOnlineDDLExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceAzRequest;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceAzResponse;
import com.jdcloud.sdk.service.rds.client.ModifyInstanceAzExecutor;
import com.jdcloud.sdk.service.rds.model.CreateInstanceByTimeRequest;
import com.jdcloud.sdk.service.rds.model.CreateInstanceByTimeResponse;
import com.jdcloud.sdk.service.rds.client.CreateInstanceByTimeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAuditFilesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditFilesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditFilesExecutor;
import com.jdcloud.sdk.service.rds.model.CreateAccountRequest;
import com.jdcloud.sdk.service.rds.model.CreateAccountResponse;
import com.jdcloud.sdk.service.rds.client.CreateAccountExecutor;
import com.jdcloud.sdk.service.rds.model.GrantPrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.GrantPrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.GrantPrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.DisableReadWriteProxyInternetAccessRequest;
import com.jdcloud.sdk.service.rds.model.DisableReadWriteProxyInternetAccessResponse;
import com.jdcloud.sdk.service.rds.client.DisableReadWriteProxyInternetAccessExecutor;
import com.jdcloud.sdk.service.rds.model.CreateWhiteListGroupRequest;
import com.jdcloud.sdk.service.rds.model.CreateWhiteListGroupResponse;
import com.jdcloud.sdk.service.rds.client.CreateWhiteListGroupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeReadWriteProxyAttributeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeReadWriteProxyAttributeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeReadWriteProxyAttributeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAzsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAzsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAzsExecutor;
import com.jdcloud.sdk.service.rds.model.GetUploadKeyRequest;
import com.jdcloud.sdk.service.rds.model.GetUploadKeyResponse;
import com.jdcloud.sdk.service.rds.client.GetUploadKeyExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromFileRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromFileResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromFileExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceAttributesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceAttributesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInstanceAttributesExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceSpecRequest;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceSpecResponse;
import com.jdcloud.sdk.service.rds.client.ModifyInstanceSpecExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceMaintainTimeRequest;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceMaintainTimeResponse;
import com.jdcloud.sdk.service.rds.client.ModifyInstanceMaintainTimeExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteBackupSynchronicityRequest;
import com.jdcloud.sdk.service.rds.model.DeleteBackupSynchronicityResponse;
import com.jdcloud.sdk.service.rds.client.DeleteBackupSynchronicityExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteImportFileRequest;
import com.jdcloud.sdk.service.rds.model.DeleteImportFileResponse;
import com.jdcloud.sdk.service.rds.client.DeleteImportFileExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogDownloadInternalURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogDownloadInternalURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBinlogDownloadInternalURLExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyAuditRequest;
import com.jdcloud.sdk.service.rds.model.ModifyAuditResponse;
import com.jdcloud.sdk.service.rds.client.ModifyAuditExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeLatestRestoreTimeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeLatestRestoreTimeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeLatestRestoreTimeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeErrorLogsExecutor;
import com.jdcloud.sdk.service.rds.model.EnableTdeRequest;
import com.jdcloud.sdk.service.rds.model.EnableTdeResponse;
import com.jdcloud.sdk.service.rds.client.EnableTdeExecutor;
import com.jdcloud.sdk.service.rds.model.CreateInstanceFromBackupRequest;
import com.jdcloud.sdk.service.rds.model.CreateInstanceFromBackupResponse;
import com.jdcloud.sdk.service.rds.client.CreateInstanceFromBackupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeParametersRequest;
import com.jdcloud.sdk.service.rds.model.DescribeParametersResponse;
import com.jdcloud.sdk.service.rds.client.DescribeParametersExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyParametersRequest;
import com.jdcloud.sdk.service.rds.model.ModifyParametersResponse;
import com.jdcloud.sdk.service.rds.client.ModifyParametersExecutor;
import com.jdcloud.sdk.service.rds.model.UpdateLogDownloadURLInternalRequest;
import com.jdcloud.sdk.service.rds.model.UpdateLogDownloadURLInternalResponse;
import com.jdcloud.sdk.service.rds.client.UpdateLogDownloadURLInternalExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeLogDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeLogDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeLogDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogRequest;
import com.jdcloud.sdk.service.rds.model.DescribeErrorLogResponse;
import com.jdcloud.sdk.service.rds.client.DescribeErrorLogExecutor;
import com.jdcloud.sdk.service.rds.model.ExchangeInstanceDnsRequest;
import com.jdcloud.sdk.service.rds.model.ExchangeInstanceDnsResponse;
import com.jdcloud.sdk.service.rds.client.ExchangeInstanceDnsExecutor;
import com.jdcloud.sdk.service.rds.model.DisableInterceptRequest;
import com.jdcloud.sdk.service.rds.model.DisableInterceptResponse;
import com.jdcloud.sdk.service.rds.client.DisableInterceptExecutor;
import com.jdcloud.sdk.service.rds.model.DisableAuditRequest;
import com.jdcloud.sdk.service.rds.model.DisableAuditResponse;
import com.jdcloud.sdk.service.rds.client.DisableAuditExecutor;
import com.jdcloud.sdk.service.rds.model.CreateDatabaseRequest;
import com.jdcloud.sdk.service.rds.model.CreateDatabaseResponse;
import com.jdcloud.sdk.service.rds.client.CreateDatabaseExecutor;
import com.jdcloud.sdk.service.rds.model.SwitchForModifyingInstanceSpecRequest;
import com.jdcloud.sdk.service.rds.model.SwitchForModifyingInstanceSpecResponse;
import com.jdcloud.sdk.service.rds.client.SwitchForModifyingInstanceSpecExecutor;
import com.jdcloud.sdk.service.rds.model.SetImportFileSharedRequest;
import com.jdcloud.sdk.service.rds.model.SetImportFileSharedResponse;
import com.jdcloud.sdk.service.rds.client.SetImportFileSharedExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeDatabasesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeDatabasesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeDatabasesExecutor;
import com.jdcloud.sdk.service.rds.model.EnableSSLRequest;
import com.jdcloud.sdk.service.rds.model.EnableSSLResponse;
import com.jdcloud.sdk.service.rds.client.EnableSSLExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeUpgradeVersionsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeUpgradeVersionsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeUpgradeVersionsExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeIndexPerformanceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeIndexPerformanceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeIndexPerformanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAccountPrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAccountPrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAccountPrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.CreateAuditRequest;
import com.jdcloud.sdk.service.rds.model.CreateAuditResponse;
import com.jdcloud.sdk.service.rds.client.CreateAuditExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceNameRequest;
import com.jdcloud.sdk.service.rds.model.ModifyInstanceNameResponse;
import com.jdcloud.sdk.service.rds.client.ModifyInstanceNameExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteReadWriteProxyRequest;
import com.jdcloud.sdk.service.rds.model.DeleteReadWriteProxyResponse;
import com.jdcloud.sdk.service.rds.client.DeleteReadWriteProxyExecutor;
import com.jdcloud.sdk.service.rds.model.EnableAuditRequest;
import com.jdcloud.sdk.service.rds.model.EnableAuditResponse;
import com.jdcloud.sdk.service.rds.client.EnableAuditExecutor;
import com.jdcloud.sdk.service.rds.model.EnableReadWriteProxyInternetAccessRequest;
import com.jdcloud.sdk.service.rds.model.EnableReadWriteProxyInternetAccessResponse;
import com.jdcloud.sdk.service.rds.client.EnableReadWriteProxyInternetAccessExecutor;
import com.jdcloud.sdk.service.rds.model.CreateBackupRequest;
import com.jdcloud.sdk.service.rds.model.CreateBackupResponse;
import com.jdcloud.sdk.service.rds.client.CreateBackupExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyBackupPolicyRequest;
import com.jdcloud.sdk.service.rds.model.ModifyBackupPolicyResponse;
import com.jdcloud.sdk.service.rds.client.ModifyBackupPolicyExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreInstanceRequest;
import com.jdcloud.sdk.service.rds.model.RestoreInstanceResponse;
import com.jdcloud.sdk.service.rds.client.RestoreInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeImportFilesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeImportFilesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeImportFilesExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeParameterGroupsExecutor;
import com.jdcloud.sdk.service.rds.model.GrantAccountPrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.GrantAccountPrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.GrantAccountPrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromBackupRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromBackupResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromBackupExecutor;
import com.jdcloud.sdk.service.rds.model.CreateReadWriteProxyRequest;
import com.jdcloud.sdk.service.rds.model.CreateReadWriteProxyResponse;
import com.jdcloud.sdk.service.rds.client.CreateReadWriteProxyExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeWhiteListRequest;
import com.jdcloud.sdk.service.rds.model.DescribeWhiteListResponse;
import com.jdcloud.sdk.service.rds.client.DescribeWhiteListExecutor;
import com.jdcloud.sdk.service.rds.model.FailoverInstanceRequest;
import com.jdcloud.sdk.service.rds.model.FailoverInstanceResponse;
import com.jdcloud.sdk.service.rds.client.FailoverInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.EnableEnhancedBackupRequest;
import com.jdcloud.sdk.service.rds.model.EnableEnhancedBackupResponse;
import com.jdcloud.sdk.service.rds.client.EnableEnhancedBackupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInterceptRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInterceptResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInterceptExecutor;
import com.jdcloud.sdk.service.rds.model.DescribePrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.DescribePrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.DescribePrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.ClearBinlogsRequest;
import com.jdcloud.sdk.service.rds.model.ClearBinlogsResponse;
import com.jdcloud.sdk.service.rds.client.ClearBinlogsExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupPolicyRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupPolicyResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupPolicyExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBinlogsExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.rds.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.rds.client.DeleteInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.CreateParameterGroupRequest;
import com.jdcloud.sdk.service.rds.model.CreateParameterGroupResponse;
import com.jdcloud.sdk.service.rds.client.CreateParameterGroupExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyAccountForOpsRequest;
import com.jdcloud.sdk.service.rds.model.ModifyAccountForOpsResponse;
import com.jdcloud.sdk.service.rds.client.ModifyAccountForOpsExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupsExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyConnectionModeRequest;
import com.jdcloud.sdk.service.rds.model.ModifyConnectionModeResponse;
import com.jdcloud.sdk.service.rds.client.ModifyConnectionModeExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteAuditRequest;
import com.jdcloud.sdk.service.rds.model.DeleteAuditResponse;
import com.jdcloud.sdk.service.rds.client.DeleteAuditExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAccountsExecutor;
import com.jdcloud.sdk.service.rds.model.EnableInternetAccessRequest;
import com.jdcloud.sdk.service.rds.model.EnableInternetAccessResponse;
import com.jdcloud.sdk.service.rds.client.EnableInternetAccessExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupRequest;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupResponse;
import com.jdcloud.sdk.service.rds.client.ModifyParameterGroupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeParameterModifyRecordsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeParameterModifyRecordsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeParameterModifyRecordsExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogDownloadURLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBinlogDownloadURLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBinlogDownloadURLExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeTablesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeTablesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeTablesExecutor;
import com.jdcloud.sdk.service.rds.model.RevokePrivilegeRequest;
import com.jdcloud.sdk.service.rds.model.RevokePrivilegeResponse;
import com.jdcloud.sdk.service.rds.client.RevokePrivilegeExecutor;
import com.jdcloud.sdk.service.rds.model.CreateAccountForOpsRequest;
import com.jdcloud.sdk.service.rds.model.CreateAccountForOpsResponse;
import com.jdcloud.sdk.service.rds.client.CreateAccountForOpsExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyActiveDirectoryRequest;
import com.jdcloud.sdk.service.rds.model.ModifyActiveDirectoryResponse;
import com.jdcloud.sdk.service.rds.client.ModifyActiveDirectoryExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAuditRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeQueryPerformanceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeQueryPerformanceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeQueryPerformanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupAttachedInstancesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupAttachedInstancesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeParameterGroupAttachedInstancesExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteWhiteListGroupRequest;
import com.jdcloud.sdk.service.rds.model.DeleteWhiteListGroupResponse;
import com.jdcloud.sdk.service.rds.client.DeleteWhiteListGroupExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeTdeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeTdeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeTdeExecutor;
import com.jdcloud.sdk.service.rds.model.CreateBackupSynchronicityRequest;
import com.jdcloud.sdk.service.rds.model.CreateBackupSynchronicityResponse;
import com.jdcloud.sdk.service.rds.client.CreateBackupSynchronicityExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeSlowLogAttributesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeSlowLogAttributesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeSlowLogAttributesExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupAttributeRequest;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupAttributeResponse;
import com.jdcloud.sdk.service.rds.client.ModifyParameterGroupAttributeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAuditResultRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditResultResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditResultExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeSlowLogsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeSlowLogsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeSlowLogsExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteDatabaseRequest;
import com.jdcloud.sdk.service.rds.model.DeleteDatabaseResponse;
import com.jdcloud.sdk.service.rds.client.DeleteDatabaseExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeActiveQueryPerformanceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeActiveQueryPerformanceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeActiveQueryPerformanceExecutor;
import com.jdcloud.sdk.service.rds.model.CreateSuperAccountRequest;
import com.jdcloud.sdk.service.rds.model.CreateSuperAccountResponse;
import com.jdcloud.sdk.service.rds.client.CreateSuperAccountExecutor;
import com.jdcloud.sdk.service.rds.model.ResetPasswordRequest;
import com.jdcloud.sdk.service.rds.model.ResetPasswordResponse;
import com.jdcloud.sdk.service.rds.client.ResetPasswordExecutor;
import com.jdcloud.sdk.service.rds.model.DisableSSLRequest;
import com.jdcloud.sdk.service.rds.model.DisableSSLResponse;
import com.jdcloud.sdk.service.rds.client.DisableSSLExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyWhiteListRequest;
import com.jdcloud.sdk.service.rds.model.ModifyWhiteListResponse;
import com.jdcloud.sdk.service.rds.client.ModifyWhiteListExecutor;
import com.jdcloud.sdk.service.rds.model.EnableInterceptRequest;
import com.jdcloud.sdk.service.rds.model.EnableInterceptResponse;
import com.jdcloud.sdk.service.rds.client.EnableInterceptExecutor;
import com.jdcloud.sdk.service.rds.model.RebootInstanceRequest;
import com.jdcloud.sdk.service.rds.model.RebootInstanceResponse;
import com.jdcloud.sdk.service.rds.client.RebootInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeSSLRequest;
import com.jdcloud.sdk.service.rds.model.DescribeSSLResponse;
import com.jdcloud.sdk.service.rds.client.DescribeSSLExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeReadWriteProxiesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeReadWriteProxiesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeReadWriteProxiesExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsForOpsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAccountsForOpsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAccountsForOpsExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupChargeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupChargeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupChargeExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceMaintainTimeRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInstanceMaintainTimeResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInstanceMaintainTimeExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteParameterGroupRequest;
import com.jdcloud.sdk.service.rds.model.DeleteParameterGroupResponse;
import com.jdcloud.sdk.service.rds.client.DeleteParameterGroupExecutor;
import com.jdcloud.sdk.service.rds.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.rds.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.rds.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeLogsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeLogsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeLogsExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromOSSRequest;
import com.jdcloud.sdk.service.rds.model.RestoreDatabaseFromOSSResponse;
import com.jdcloud.sdk.service.rds.client.RestoreDatabaseFromOSSExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteBackupRequest;
import com.jdcloud.sdk.service.rds.model.DeleteBackupResponse;
import com.jdcloud.sdk.service.rds.client.DeleteBackupExecutor;
import com.jdcloud.sdk.service.rds.model.UpgradeEngineVersionRequest;
import com.jdcloud.sdk.service.rds.model.UpgradeEngineVersionResponse;
import com.jdcloud.sdk.service.rds.client.UpgradeEngineVersionExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupSynchronicitiesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupSynchronicitiesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupSynchronicitiesExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupParametersRequest;
import com.jdcloud.sdk.service.rds.model.DescribeParameterGroupParametersResponse;
import com.jdcloud.sdk.service.rds.client.DescribeParameterGroupParametersExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeBackupSpaceRequest;
import com.jdcloud.sdk.service.rds.model.DescribeBackupSpaceResponse;
import com.jdcloud.sdk.service.rds.client.DescribeBackupSpaceExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyReadWriteProxyRequest;
import com.jdcloud.sdk.service.rds.model.ModifyReadWriteProxyResponse;
import com.jdcloud.sdk.service.rds.client.ModifyReadWriteProxyExecutor;
import com.jdcloud.sdk.service.rds.model.DisableInternetAccessRequest;
import com.jdcloud.sdk.service.rds.model.DisableInternetAccessResponse;
import com.jdcloud.sdk.service.rds.client.DisableInternetAccessExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeInstancesRequest;
import com.jdcloud.sdk.service.rds.model.DescribeInstancesResponse;
import com.jdcloud.sdk.service.rds.client.DescribeInstancesExecutor;
import com.jdcloud.sdk.service.rds.model.CreateROInstanceRequest;
import com.jdcloud.sdk.service.rds.model.CreateROInstanceResponse;
import com.jdcloud.sdk.service.rds.client.CreateROInstanceExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeAuditOptionsRequest;
import com.jdcloud.sdk.service.rds.model.DescribeAuditOptionsResponse;
import com.jdcloud.sdk.service.rds.client.DescribeAuditOptionsExecutor;
import com.jdcloud.sdk.service.rds.model.DeleteAccountRequest;
import com.jdcloud.sdk.service.rds.model.DeleteAccountResponse;
import com.jdcloud.sdk.service.rds.client.DeleteAccountExecutor;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupParametersRequest;
import com.jdcloud.sdk.service.rds.model.ModifyParameterGroupParametersResponse;
import com.jdcloud.sdk.service.rds.client.ModifyParameterGroupParametersExecutor;
import com.jdcloud.sdk.service.rds.model.CreateInstanceByTimeInCrossRegionRequest;
import com.jdcloud.sdk.service.rds.model.CreateInstanceByTimeInCrossRegionResponse;
import com.jdcloud.sdk.service.rds.client.CreateInstanceByTimeInCrossRegionExecutor;
import com.jdcloud.sdk.service.rds.model.DescribeUpgradePlanRequest;
import com.jdcloud.sdk.service.rds.model.DescribeUpgradePlanResponse;
import com.jdcloud.sdk.service.rds.client.DescribeUpgradePlanExecutor;
import com.jdcloud.sdk.service.rds.model.RestoreInstanceByTimeRequest;
import com.jdcloud.sdk.service.rds.model.RestoreInstanceByTimeResponse;
import com.jdcloud.sdk.service.rds.client.RestoreInstanceByTimeExecutor;

/**
 * rdsClient
 */
public class RdsClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.11";
    public final static String DefaultEndpoint = "rds.jdcloud-api.com";
    public final static String ServiceName = "rds";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private RdsClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 获取某个审计文件的下载链接，同时支持内链和外链，链接的有效时间为24小时&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditDownloadURLResponse describeAuditDownloadURL(DescribeAuditDownloadURLRequest request) throws JdcloudSdkException {
        return new DescribeAuditDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * 修改数据库备注，仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDatabaseCommentResponse modifyDatabaseComment(ModifyDatabaseCommentRequest request) throws JdcloudSdkException {
        return new ModifyDatabaseCommentExecutor().client(this).execute(request);
    }

    /**
     * 查看开启高安全模式后，当前实例的 SQL 拦截记录&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInterceptResultResponse describeInterceptResult(DescribeInterceptResultRequest request) throws JdcloudSdkException {
        return new DescribeInterceptResultExecutor().client(this).execute(request);
    }

    /**
     * 获取整个备份或备份中单个文件的下载链接。&lt;br&gt;- 当输入参数中有文件名时，获取该文件的下载链接。&lt;br&gt;- 输入参数中无文件名时，获取整个备份的下载链接。&lt;br&gt;由于备份机制的差异，使用该接口下载备份时，SQL Server必须输入文件名，每个文件逐一下载，不支持下载整个备份。SQL Server备份中的文件名（不包括后缀）即为备份的数据库名。例如文件名为my_test_db.bak，表示该文件是my_test_db数据库的备份。&lt;br&gt;MySQL可下载整个备份集，但不支持单个文件的下载。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupDownloadURLResponse describeBackupDownloadURL(DescribeBackupDownloadURLRequest request) throws JdcloudSdkException {
        return new DescribeBackupDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * 拷贝参数组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CopyParameterGroupResponse copyParameterGroup(CopyParameterGroupRequest request) throws JdcloudSdkException {
        return new CopyParameterGroupExecutor().client(this).execute(request);
    }

    /**
     * 通过 PT-OSC 服务来处理 DDL 命令, 避免锁表。此接口暂是对部分用户开放
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AlterTableWithOnlineDDLResponse alterTableWithOnlineDDL(AlterTableWithOnlineDDLRequest request) throws JdcloudSdkException {
        return new AlterTableWithOnlineDDLExecutor().client(this).execute(request);
    }

    /**
     * 修改实例的可用区，例如将实例的可用区从单可用区调整为多可用区
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceAzResponse modifyInstanceAz(ModifyInstanceAzRequest request) throws JdcloudSdkException {
        return new ModifyInstanceAzExecutor().client(this).execute(request);
    }

    /**
     * 根据源实例备份创建一个新实例，并通过追加日志的方式，将新实例的数据恢复到跟源实例指定时间点的数据状态一样。&lt;br&gt;例如根据实例A在“2018-06-18 23:00:00”时间点创建一个实例B，就是新建一个实例B，该实例B的数据跟实例A在“2018-06-18 23:00:00”这个时间点的数据完全一致。&lt;br&gt;对于SQL Server，主备切换后30分钟内，不支持按时间点恢复/创建，例如在10:05分用户进行了主备切换，那么10:05 ~ 10:35这个时间段不能进行按时间点恢复/创建。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceByTimeResponse createInstanceByTime(CreateInstanceByTimeRequest request) throws JdcloudSdkException {
        return new CreateInstanceByTimeExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例下的所有审计结果文件的列表&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditFilesResponse describeAuditFiles(DescribeAuditFilesRequest request) throws JdcloudSdkException {
        return new DescribeAuditFilesExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库账号，用户可以使用客户端，应用程序等通过该账号和密码登录RDS数据库实例。&lt;br&gt;为便于管理和恢复，RDS对账号进行了限制，数据库账号只能通过控制台或者OpenAPI进行创建、删除账号以及对账号授权等，用户不能通过SQL语句对账号进行相关操作。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccountResponse createAccount(CreateAccountRequest request) throws JdcloudSdkException {
        return new CreateAccountExecutor().client(this).execute(request);
    }

    /**
     * 授予账号的数据库访问权限，即该账号对数据库拥有什么权限。一个账号可以对多个数据库具有访问权限。&lt;br&gt;为便于管理，RDS对权限进行了归类，目前提供以下两种权限&lt;br&gt;- ro：只读权限，用户只能读取数据库中的数据，不能进行创建、插入、删除、更改等操作。&lt;br&gt;- rw：读写权限，用户可以对数据库进行增删改查等操作
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GrantPrivilegeResponse grantPrivilege(GrantPrivilegeRequest request) throws JdcloudSdkException {
        return new GrantPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 关闭读写分离代理服务的外网访问功能。关闭后，用户无法通过 Internet 连接读写分离代理服务，但可以在京东云内网通过内网域名连接&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableReadWriteProxyInternetAccessResponse disableReadWriteProxyInternetAccess(DisableReadWriteProxyInternetAccessRequest request) throws JdcloudSdkException {
        return new DisableReadWriteProxyInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 创建一个白名单分组并设置白名单允许访问的IP，仅MySQL、Percona、MariaDB支持。修改允许访问实例的IP白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateWhiteListGroupResponse createWhiteListGroup(CreateWhiteListGroupRequest request) throws JdcloudSdkException {
        return new CreateWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 查看指定RDS读写分离代理详情&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeReadWriteProxyAttributeResponse describeReadWriteProxyAttribute(DescribeReadWriteProxyAttributeRequest request) throws JdcloudSdkException {
        return new DescribeReadWriteProxyAttributeExecutor().client(this).execute(request);
    }

    /**
     * 查看指定地域下各种RDS数据库支持的可用区，不同类型的RDS支持的可用区不一样
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAzsResponse describeAzs(DescribeAzsRequest request) throws JdcloudSdkException {
        return new DescribeAzsExecutor().client(this).execute(request);
    }

    /**
     * 获取单库上云工具上传文件的需要的Key。单库上云工具需要正确的key值方能连接到京东云&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetUploadKeyResponse getUploadKey(GetUploadKeyRequest request) throws JdcloudSdkException {
        return new GetUploadKeyExecutor().client(this).execute(request);
    }

    /**
     * 从用户通过单库上云工具上传到云上的备份文件中恢复单个数据库&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromFileResponse restoreDatabaseFromFile(RestoreDatabaseFromFileRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromFileExecutor().client(this).execute(request);
    }

    /**
     * 查询RDS实例（MySQL、SQL Server等）的详细信息以及MySQL/PostgreSQL只读实例详细信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceAttributesResponse describeInstanceAttributes(DescribeInstanceAttributesRequest request) throws JdcloudSdkException {
        return new DescribeInstanceAttributesExecutor().client(this).execute(request);
    }

    /**
     * 实例扩容，支持升级实例的CPU，内存及磁盘。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceSpecResponse modifyInstanceSpec(ModifyInstanceSpecRequest request) throws JdcloudSdkException {
        return new ModifyInstanceSpecExecutor().client(this).execute(request);
    }

    /**
     * 修改实例的可维护时间。实例可维护时间段一般设置为业务的低峰时间段。京东云会在您设置的可维护时间段内进行实例维护，保证对业务的影响降到最低。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceMaintainTimeResponse modifyInstanceMaintainTime(ModifyInstanceMaintainTimeRequest request) throws JdcloudSdkException {
        return new ModifyInstanceMaintainTimeExecutor().client(this).execute(request);
    }

    /**
     * 删除一个跨地域备份同步服务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBackupSynchronicityResponse deleteBackupSynchronicity(DeleteBackupSynchronicityRequest request) throws JdcloudSdkException {
        return new DeleteBackupSynchronicityExecutor().client(this).execute(request);
    }

    /**
     * 删除用户通过单库上云工具上传的数据库备份文件&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteImportFileResponse deleteImportFile(DeleteImportFileRequest request) throws JdcloudSdkException {
        return new DeleteImportFileExecutor().client(this).execute(request);
    }

    /**
     * 获取MySQL实例的binlog的内网下载链接&lt;br&gt;- 仅支持 MySQL, Percona, MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBinlogDownloadInternalURLResponse describeBinlogDownloadInternalURL(DescribeBinlogDownloadInternalURLRequest request) throws JdcloudSdkException {
        return new DescribeBinlogDownloadInternalURLExecutor().client(this).execute(request);
    }

    /**
     * 修改当前的审计选项。当前已有审计选项可以通过describeAudit获得，支持的全部选项可以通过getAuditOptions获得。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyAuditResponse modifyAudit(ModifyAuditRequest request) throws JdcloudSdkException {
        return new ModifyAuditExecutor().client(this).execute(request);
    }

    /**
     * 获取SQL Server实例按时间点恢复/创建时，可恢复到的最后的一个时间点&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLatestRestoreTimeResponse describeLatestRestoreTime(DescribeLatestRestoreTimeRequest request) throws JdcloudSdkException {
        return new DescribeLatestRestoreTimeExecutor().client(this).execute(request);
    }

    /**
     * 获取SQL Server 错误日志及下载信息&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeErrorLogsResponse describeErrorLogs(DescribeErrorLogsRequest request) throws JdcloudSdkException {
        return new DescribeErrorLogsExecutor().client(this).execute(request);
    }

    /**
     * 开启数据库的TDE功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableTdeResponse enableTde(EnableTdeRequest request) throws JdcloudSdkException {
        return new EnableTdeExecutor().client(this).execute(request);
    }

    /**
     * 根据源实例全量备份创建一个新实例，新实例的数据跟源实例在创建备份时的数据状态一样。&lt;br&gt;例如根据源实例A的一个全量备份“mybak”新建一个实例B，该备份是在“‘2018-8-18 03:23:54”创建的。那么新建实例B的数据状态跟实例A‘2018-8-18 03:23:54’的状态一致
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceFromBackupResponse createInstanceFromBackup(CreateInstanceFromBackupRequest request) throws JdcloudSdkException {
        return new CreateInstanceFromBackupExecutor().client(this).execute(request);
    }

    /**
     * 查看SQL Server实例的配置参数&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParametersResponse describeParameters(DescribeParametersRequest request) throws JdcloudSdkException {
        return new DescribeParametersExecutor().client(this).execute(request);
    }

    /**
     * 修改SQL Server实例的配置参数，目前支持以下参数:max_worker_threads,max_degree_of_parallelism,max_server_memory_(MB)。 部分参数修改后，需要重启才能生效，具体可以参考微软的相关文档。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParametersResponse modifyParameters(ModifyParametersRequest request) throws JdcloudSdkException {
        return new ModifyParametersExecutor().client(this).execute(request);
    }

    /**
     * 设置日志文件的下载链接过期时间，重新生成 PostgreSQL 的日志文件下载地址
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateLogDownloadURLInternalResponse updateLogDownloadURLInternal(UpdateLogDownloadURLInternalRequest request) throws JdcloudSdkException {
        return new UpdateLogDownloadURLInternalExecutor().client(this).execute(request);
    }

    /**
     * 根据日志文件的下载链接过期时间，生成日志文件下载地址 仅支持 PostgreSQL, MySQL, Percona, MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLogDownloadURLResponse describeLogDownloadURL(DescribeLogDownloadURLRequest request) throws JdcloudSdkException {
        return new DescribeLogDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * 查询错误日志的概要信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeErrorLogResponse describeErrorLog(DescribeErrorLogRequest request) throws JdcloudSdkException {
        return new DescribeErrorLogExecutor().client(this).execute(request);
    }

    /**
     * 交换两个实例的域名，包括内网域名和外网域名。如果一个实例有外网域名，一个没有，则不允许交换。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExchangeInstanceDnsResponse exchangeInstanceDns(ExchangeInstanceDnsRequest request) throws JdcloudSdkException {
        return new ExchangeInstanceDnsExecutor().client(this).execute(request);
    }

    /**
     * 关闭数据库的高安全模式&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableInterceptResponse disableIntercept(DisableInterceptRequest request) throws JdcloudSdkException {
        return new DisableInterceptExecutor().client(this).execute(request);
    }

    /**
     * 仅支持MySQL实例关闭数据库审计&lt;br&gt;- 仅支持 MySQL 5.6, MySQL 5.7, Percona, MariaDB, PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableAuditResponse disableAudit(DisableAuditRequest request) throws JdcloudSdkException {
        return new DisableAuditExecutor().client(this).execute(request);
    }

    /**
     * 创建一个数据库。 为了实例的管理和数据恢复，RDS对用户权限进行了限制，用户仅能通过控制台或本接口创建数据库
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDatabaseResponse createDatabase(CreateDatabaseRequest request) throws JdcloudSdkException {
        return new CreateDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 实例状态为变配待切换中，可执行，执行后，状态变为变配中
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SwitchForModifyingInstanceSpecResponse switchForModifyingInstanceSpec(SwitchForModifyingInstanceSpecRequest request) throws JdcloudSdkException {
        return new SwitchForModifyingInstanceSpecExecutor().client(this).execute(request);
    }

    /**
     * 设置或取消上传文件是否共享给同一账号下的其他实例。缺省情况下，文件仅在上传的实例上可见并可导入，其他实例不可见不可导入。如果需要该文件在其他实例上也可导入，可将此文件设置为共享&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetImportFileSharedResponse setImportFileShared(SetImportFileSharedRequest request) throws JdcloudSdkException {
        return new SetImportFileSharedExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例的所有数据库详细信息的列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDatabasesResponse describeDatabases(DescribeDatabasesRequest request) throws JdcloudSdkException {
        return new DescribeDatabasesExecutor().client(this).execute(request);
    }

    /**
     * 开启数据库的加密连接, 同时会重启数据库实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableSSLResponse enableSSL(EnableSSLRequest request) throws JdcloudSdkException {
        return new EnableSSLExecutor().client(this).execute(request);
    }

    /**
     * 获取当前数据库可升级到的版本，仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeUpgradeVersionsResponse describeUpgradeVersions(DescribeUpgradeVersionsRequest request) throws JdcloudSdkException {
        return new DescribeUpgradeVersionsExecutor().client(this).execute(request);
    }

    /**
     * 根据用户定义的查询条件，获取索引性能的统计信息，并提供缺失索引及索引创建建议。用户可以根据这些信息查找与索引相关的性能瓶颈，并进行优化。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIndexPerformanceResponse describeIndexPerformance(DescribeIndexPerformanceRequest request) throws JdcloudSdkException {
        return new DescribeIndexPerformanceExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS实例的账号的权限信息 - 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountPrivilegeResponse describeAccountPrivilege(DescribeAccountPrivilegeRequest request) throws JdcloudSdkException {
        return new DescribeAccountPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 开启SQL Server的数据库审计功能，目前支持实例级的数据库审计。用户可以根据需要开启、关闭审计、自定义审计策略，并下载审计文件。审计文件为原生的SQL Server审计文件，缺省保存6个月。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAuditResponse createAudit(CreateAuditRequest request) throws JdcloudSdkException {
        return new CreateAuditExecutor().client(this).execute(request);
    }

    /**
     * 修改实例名称，可支持中文，实例名的具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceNameResponse modifyInstanceName(ModifyInstanceNameRequest request) throws JdcloudSdkException {
        return new ModifyInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 删除RDS 实例的读写分离代理&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteReadWriteProxyResponse deleteReadWriteProxy(DeleteReadWriteProxyRequest request) throws JdcloudSdkException {
        return new DeleteReadWriteProxyExecutor().client(this).execute(request);
    }

    /**
     * 仅支持MySQL实例开启数据库审计&lt;br&gt;- 仅支持 MySQL 5.6, MySQL 5.7, Percona, MariaDB, PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableAuditResponse enableAudit(EnableAuditRequest request) throws JdcloudSdkException {
        return new EnableAuditExecutor().client(this).execute(request);
    }

    /**
     * 开启读写分离代理服务的外网访问功能。开启后，用户可以通过 internet 连接读写分离代理服务&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableReadWriteProxyInternetAccessResponse enableReadWriteProxyInternetAccess(EnableReadWriteProxyInternetAccessRequest request) throws JdcloudSdkException {
        return new EnableReadWriteProxyInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 创建一个RDS实例全量备份，可以对整个实例或者部分数据库（仅SQL Server支持）进行全量备份。同一时间点，只能有一个正在运行的备份任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBackupResponse createBackup(CreateBackupRequest request) throws JdcloudSdkException {
        return new CreateBackupExecutor().client(this).execute(request);
    }

    /**
     * 修改RDS实例备份策略，目前仅支持用户修改“自动备份开始时间窗口”这个参数，其他参数暂不开放修改
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyBackupPolicyResponse modifyBackupPolicy(ModifyBackupPolicyRequest request) throws JdcloudSdkException {
        return new ModifyBackupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 使用实例的全量备份覆盖恢复当前实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreInstanceResponse restoreInstance(RestoreInstanceRequest request) throws JdcloudSdkException {
        return new RestoreInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取用户通过单库上云工具上传到该实例上的文件列表&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeImportFilesResponse describeImportFiles(DescribeImportFilesRequest request) throws JdcloudSdkException {
        return new DescribeImportFilesExecutor().client(this).execute(request);
    }

    /**
     * 获取当前账号下所有的参数组列表&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParameterGroupsResponse describeParameterGroups(DescribeParameterGroupsRequest request) throws JdcloudSdkException {
        return new DescribeParameterGroupsExecutor().client(this).execute(request);
    }

    /**
     * 授予账号的数据库细粒度的访问权限 - 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GrantAccountPrivilegeResponse grantAccountPrivilege(GrantAccountPrivilegeRequest request) throws JdcloudSdkException {
        return new GrantAccountPrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 从备份中恢复单个数据库，支持从其他实例（但必须是同一个账号下的实例）备份中恢复。例如可以从生产环境的数据库实例的备份恢复到测试环境的数据库中。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromBackupResponse restoreDatabaseFromBackup(RestoreDatabaseFromBackupRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromBackupExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库读写分离代理服务&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateReadWriteProxyResponse createReadWriteProxy(CreateReadWriteProxyRequest request) throws JdcloudSdkException {
        return new CreateReadWriteProxyExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS实例当前白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeWhiteListResponse describeWhiteList(DescribeWhiteListRequest request) throws JdcloudSdkException {
        return new DescribeWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 对RDS实例进行主备切换。&lt;br&gt;注意：如果实例正在进行备份，那么主备切换将会终止备份操作。可以查看备份策略中的备份开始时间确认是否有备份正在运行。如果确实需要在实例备份时进行主备切换，建议切换完成 后，手工进行一次实例的全备&lt;br&gt;对于SQL Server，主备切换后30分钟内，不支持按时间点恢复/创建，例如在10:05分用户进行了主备切换，那么10:05 ~ 10:35这个时间段不能进行按时间点恢复/创建。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public FailoverInstanceResponse failoverInstance(FailoverInstanceRequest request) throws JdcloudSdkException {
        return new FailoverInstanceExecutor().client(this).execute(request);
    }

    /**
     * 开启增强备份模式，开启后，备份保留天数可大于7天。 免费备份额度外的备份将按照备份占用的空间收费。开启后，不支持关闭。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableEnhancedBackupResponse enableEnhancedBackup(EnableEnhancedBackupRequest request) throws JdcloudSdkException {
        return new EnableEnhancedBackupExecutor().client(this).execute(request);
    }

    /**
     * 查看当前实例已开启的安全模式。如果开启数据库的高安全模式，会返回配置信息&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInterceptResponse describeIntercept(DescribeInterceptRequest request) throws JdcloudSdkException {
        return new DescribeInterceptExecutor().client(this).execute(request);
    }

    /**
     * 查看云数据库 RDS 的权限信息 - 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribePrivilegeResponse describePrivilege(DescribePrivilegeRequest request) throws JdcloudSdkException {
        return new DescribePrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 清理本地的binlog并释放空间。 系统只会清理已经备份到存储的binlog，不会影响MySQL实例的备份恢复&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ClearBinlogsResponse clearBinlogs(ClearBinlogsRequest request) throws JdcloudSdkException {
        return new ClearBinlogsExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS实例备份策略。根据数据库类型的不同，支持的备份策略也略有差异，具体请看返回参数中的详细说明
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupPolicyResponse describeBackupPolicy(DescribeBackupPolicyRequest request) throws JdcloudSdkException {
        return new DescribeBackupPolicyExecutor().client(this).execute(request);
    }

    /**
     * 获取MySQL实例中binlog的详细信息&lt;br&gt;- 仅支持 MySQL, Percona, MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBinlogsResponse describeBinlogs(DescribeBinlogsRequest request) throws JdcloudSdkException {
        return new DescribeBinlogsExecutor().client(this).execute(request);
    }

    /**
     * 删除一个RDS实例或者MySQL/PostgreSQL的只读实例。删除MySQL/PostgreSQL主实例时，会同时将对应的MySQL/PostgreSQL只读实例也删除 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }

    /**
     * 创建一个参数组&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateParameterGroupResponse createParameterGroup(CreateParameterGroupRequest request) throws JdcloudSdkException {
        return new CreateParameterGroupExecutor().client(this).execute(request);
    }

    /**
     * 修改数据库临时运维账号属性。&lt;br&gt;- 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyAccountForOpsResponse modifyAccountForOps(ModifyAccountForOpsRequest request) throws JdcloudSdkException {
        return new ModifyAccountForOpsExecutor().client(this).execute(request);
    }

    /**
     * 查看该RDS实例下所有备份的详细信息，返回的备份列表按照备份开始时间（backupStartTime）降序排列。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupsResponse describeBackups(DescribeBackupsRequest request) throws JdcloudSdkException {
        return new DescribeBackupsExecutor().client(this).execute(request);
    }

    /**
     * 修改MySQL实例的连接模式：标准模式(standard) 和高安全模式(security).&lt;br&gt;- **标准模式**：响应时间短，但没有 SQL 审计和拦截的能力。&lt;br&gt;- **高安全模式**：具备一定的 SQL注入拦截能力（通过分析表达式、关键系统函数等来实现防御 SQL 注入攻击），并可开启 SQL 审计，但会增加一定的响应时间。&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyConnectionModeResponse modifyConnectionMode(ModifyConnectionModeRequest request) throws JdcloudSdkException {
        return new ModifyConnectionModeExecutor().client(this).execute(request);
    }

    /**
     * 关闭数据库审计。关闭数据库审计后，以前生成的审计结果文件并不会被立即删除。审计结果文件会过期后由系统自动删除，过期时间缺省为6个月&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAuditResponse deleteAudit(DeleteAuditRequest request) throws JdcloudSdkException {
        return new DeleteAuditExecutor().client(this).execute(request);
    }

    /**
     * 查看某个RDS实例下所有账号信息，包括账号名称、对各个数据库的访问权限信息等
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountsResponse describeAccounts(DescribeAccountsRequest request) throws JdcloudSdkException {
        return new DescribeAccountsExecutor().client(this).execute(request);
    }

    /**
     * 开启RDS实例的外网访问功能。开启后，用户可以通过internet访问RDS实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableInternetAccessResponse enableInternetAccess(EnableInternetAccessRequest request) throws JdcloudSdkException {
        return new EnableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 修改RDS实例的参数组&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParameterGroupResponse modifyParameterGroup(ModifyParameterGroupRequest request) throws JdcloudSdkException {
        return new ModifyParameterGroupExecutor().client(this).execute(request);
    }

    /**
     * 查看参数的修改历史&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParameterModifyRecordsResponse describeParameterModifyRecords(DescribeParameterModifyRecordsRequest request) throws JdcloudSdkException {
        return new DescribeParameterModifyRecordsExecutor().client(this).execute(request);
    }

    /**
     * 获取MySQL实例的binlog的下载链接&lt;br&gt;- 仅支持 MySQL, Percona, MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBinlogDownloadURLResponse describeBinlogDownloadURL(DescribeBinlogDownloadURLRequest request) throws JdcloudSdkException {
        return new DescribeBinlogDownloadURLExecutor().client(this).execute(request);
    }

    /**
     * 获取当前实例的指定库的表列表信息 - 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeTablesResponse describeTables(DescribeTablesRequest request) throws JdcloudSdkException {
        return new DescribeTablesExecutor().client(this).execute(request);
    }

    /**
     * 取消该账号对某个数据库的所有权限。权限取消后，该账号将不能访问此数据库。取消账号对某个数据库的访问权限，不影响该账号对其他数据库的访问权限
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RevokePrivilegeResponse revokePrivilege(RevokePrivilegeRequest request) throws JdcloudSdkException {
        return new RevokePrivilegeExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库临时运维账号。&lt;br&gt;如果在使用数据库过程中需要京东云提供技术支持,并且需要对您的实例进行操作，您可以把临时运维账号提供给技术支持人员。&lt;br&gt;临时运维账号默认授予全局Select、Process权限，且账号只能通过控制台或者OpenAPI进行创建、删除账号以及对账号授权等，用户不能通过SQL语句对账号进行相关操作。&lt;br&gt;- 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAccountForOpsResponse createAccountForOps(CreateAccountForOpsRequest request) throws JdcloudSdkException {
        return new CreateAccountForOpsExecutor().client(this).execute(request);
    }

    /**
     * 修改SQL Server对接的Active Directory 服务。支持SQL Server 2012 及2012以上以上的版本。&lt;br&gt;注意：修改目录服务后，需重启SQL Server实例才能生效
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyActiveDirectoryResponse modifyActiveDirectory(ModifyActiveDirectoryRequest request) throws JdcloudSdkException {
        return new ModifyActiveDirectoryExecutor().client(this).execute(request);
    }

    /**
     * 查看当前实例已开启的审计选项。如当前实例未开启审计，则返回空&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditResponse describeAudit(DescribeAuditRequest request) throws JdcloudSdkException {
        return new DescribeAuditExecutor().client(this).execute(request);
    }

    /**
     * 根据用户定义的查询条件，获取SQL执行的性能统计信息，例如慢SQL等。用户可以根据这些信息查找与SQL执行相关的性能瓶颈，并进行优化。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeQueryPerformanceResponse describeQueryPerformance(DescribeQueryPerformanceRequest request) throws JdcloudSdkException {
        return new DescribeQueryPerformanceExecutor().client(this).execute(request);
    }

    /**
     * 查看参数组绑定的云数据库实例&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParameterGroupAttachedInstancesResponse describeParameterGroupAttachedInstances(DescribeParameterGroupAttachedInstancesRequest request) throws JdcloudSdkException {
        return new DescribeParameterGroupAttachedInstancesExecutor().client(this).execute(request);
    }

    /**
     * 当该白名单分组用户无需使用时，可进行删除。仅适用于MySQL、Percona、MariaDB。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteWhiteListGroupResponse deleteWhiteListGroup(DeleteWhiteListGroupRequest request) throws JdcloudSdkException {
        return new DeleteWhiteListGroupExecutor().client(this).execute(request);
    }

    /**
     * 查看当前实例是否开启TDE
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeTdeResponse describeTde(DescribeTdeRequest request) throws JdcloudSdkException {
        return new DescribeTdeExecutor().client(this).execute(request);
    }

    /**
     * 创建一个跨地域备份同步服务。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateBackupSynchronicityResponse createBackupSynchronicity(CreateBackupSynchronicityRequest request) throws JdcloudSdkException {
        return new CreateBackupSynchronicityExecutor().client(this).execute(request);
    }

    /**
     * 查询MySQL实例的慢日志的详细信息。&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSlowLogAttributesResponse describeSlowLogAttributes(DescribeSlowLogAttributesRequest request) throws JdcloudSdkException {
        return new DescribeSlowLogAttributesExecutor().client(this).execute(request);
    }

    /**
     * 修改参数组名称，描述&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParameterGroupAttributeResponse modifyParameterGroupAttribute(ModifyParameterGroupAttributeRequest request) throws JdcloudSdkException {
        return new ModifyParameterGroupAttributeExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS实例的审计内容&lt;br&gt;- 仅支持 MySQL 5.6, MySQL 5.7, Percona, MariaDB, PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditResultResponse describeAuditResult(DescribeAuditResultRequest request) throws JdcloudSdkException {
        return new DescribeAuditResultExecutor().client(this).execute(request);
    }

    /**
     * 查询MySQL实例的慢日志的概要信息。&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSlowLogsResponse describeSlowLogs(DescribeSlowLogsRequest request) throws JdcloudSdkException {
        return new DescribeSlowLogsExecutor().client(this).execute(request);
    }

    /**
     * 从RDS实例中删除数据库。为便于管理和数据恢复，RDS对用户权限进行了控制，用户仅能通过控制台或本接口删除数据库 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDatabaseResponse deleteDatabase(DeleteDatabaseRequest request) throws JdcloudSdkException {
        return new DeleteDatabaseExecutor().client(this).execute(request);
    }

    /**
     * 根据用户定义的查询条件，获取正在执行中的SQL执行的性能信息。用户可以根据这些信息查找与SQL执行相关的性能瓶颈，并进行优化。&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeActiveQueryPerformanceResponse describeActiveQueryPerformance(DescribeActiveQueryPerformanceRequest request) throws JdcloudSdkException {
        return new DescribeActiveQueryPerformanceExecutor().client(this).execute(request);
    }

    /**
     * 创建数据库账号，用户可以使用客户端，应用程序等通过该账号和密码登录RDS数据库实例。&lt;br&gt;为便于管理和恢复，RDS对账号进行了限制，数据库账号只能通过控制台或者OpenAPI进行创建、删除账号以及对账号授权等，用户不能通过SQL语句对账号进行相关操作。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSuperAccountResponse createSuperAccount(CreateSuperAccountRequest request) throws JdcloudSdkException {
        return new CreateSuperAccountExecutor().client(this).execute(request);
    }

    /**
     * 重置数据库账号密码。如果用户忘记账号的密码，可以使用该接口重置指定账号密码。密码重置后，以前的密码将无法使用，必须使用重置后的新密码登录或连接数据库实例。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetPasswordResponse resetPassword(ResetPasswordRequest request) throws JdcloudSdkException {
        return new ResetPasswordExecutor().client(this).execute(request);
    }

    /**
     * 关闭数据库的加密连接, 需要重启数据库实例才生效&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableSSLResponse disableSSL(DisableSSLRequest request) throws JdcloudSdkException {
        return new DisableSSLExecutor().client(this).execute(request);
    }

    /**
     * 修改允许访问实例的IP白名单。白名单是允许访问当前实例的IP/IP段列表，缺省情况下，白名单对本VPC开放。如果用户开启了外网访问的功能，还需要对外网的IP配置白名单。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyWhiteListResponse modifyWhiteList(ModifyWhiteListRequest request) throws JdcloudSdkException {
        return new ModifyWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 开启数据库的高安全模式&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableInterceptResponse enableIntercept(EnableInterceptRequest request) throws JdcloudSdkException {
        return new EnableInterceptExecutor().client(this).execute(request);
    }

    /**
     * 重启RDS实例，例如修改了一些配置参数后，需要重启实例才能生效。可以结合主备切换的功能，轮流重启备机，降低对业务的影响&lt;br&gt;**注意：如果实例正在进行备份，那么重启主实例将会终止备份操作。** 可以查看备份策略中的备份开始时间确认是否有备份正在运行。如果确实需要在实例备份时重启主实例，建议重启后，手工进行一次实例的全备。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RebootInstanceResponse rebootInstance(RebootInstanceRequest request) throws JdcloudSdkException {
        return new RebootInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查看当前实例已开启加密连接。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSSLResponse describeSSL(DescribeSSLRequest request) throws JdcloudSdkException {
        return new DescribeSSLExecutor().client(this).execute(request);
    }

    /**
     * 查看RDS读写分离代理列表&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeReadWriteProxiesResponse describeReadWriteProxies(DescribeReadWriteProxiesRequest request) throws JdcloudSdkException {
        return new DescribeReadWriteProxiesExecutor().client(this).execute(request);
    }

    /**
     * 查看某个RDS实例下的运维账号信息。&lt;br&gt;- 仅支持 MySQL，Percona，MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAccountsForOpsResponse describeAccountsForOps(DescribeAccountsForOpsRequest request) throws JdcloudSdkException {
        return new DescribeAccountsForOpsExecutor().client(this).execute(request);
    }

    /**
     * 查询该用户pin关联的备份的计费信息。仅当该用户开启了增强备份后有效。如用户未开启增强备份，返回null&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupChargeResponse describeBackupCharge(DescribeBackupChargeRequest request) throws JdcloudSdkException {
        return new DescribeBackupChargeExecutor().client(this).execute(request);
    }

    /**
     * 查询实例的可维护时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceMaintainTimeResponse describeInstanceMaintainTime(DescribeInstanceMaintainTimeRequest request) throws JdcloudSdkException {
        return new DescribeInstanceMaintainTimeExecutor().client(this).execute(request);
    }

    /**
     * 删除参数组&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteParameterGroupResponse deleteParameterGroup(DeleteParameterGroupRequest request) throws JdcloudSdkException {
        return new DeleteParameterGroupExecutor().client(this).execute(request);
    }

    /**
     * 创建一个RDS实例，用户可以使用相应的数据库客户端或者应用程序通过域名和端口链接到该RDS实例上，进行操作。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取日志文件列表&lt;br&gt;- 仅支持PostgreSQL, MySQL, Percona, MariaDB
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLogsResponse describeLogs(DescribeLogsRequest request) throws JdcloudSdkException {
        return new DescribeLogsExecutor().client(this).execute(request);
    }

    /**
     * 从上传到OSS的备份文件中恢复单个数据库&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreDatabaseFromOSSResponse restoreDatabaseFromOSS(RestoreDatabaseFromOSSRequest request) throws JdcloudSdkException {
        return new RestoreDatabaseFromOSSExecutor().client(this).execute(request);
    }

    /**
     * 删除RDS实例备份，仅允许删除用户生成的备份，系统自动备份不允许删除。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteBackupResponse deleteBackup(DeleteBackupRequest request) throws JdcloudSdkException {
        return new DeleteBackupExecutor().client(this).execute(request);
    }

    /**
     * 升级引擎版本，例如从5.7.21 升级到5.7.24，仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpgradeEngineVersionResponse upgradeEngineVersion(UpgradeEngineVersionRequest request) throws JdcloudSdkException {
        return new UpgradeEngineVersionExecutor().client(this).execute(request);
    }

    /**
     * 查询跨地域备份同步服务列表。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupSynchronicitiesResponse describeBackupSynchronicities(DescribeBackupSynchronicitiesRequest request) throws JdcloudSdkException {
        return new DescribeBackupSynchronicitiesExecutor().client(this).execute(request);
    }

    /**
     * 查看参数组的参数&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeParameterGroupParametersResponse describeParameterGroupParameters(DescribeParameterGroupParametersRequest request) throws JdcloudSdkException {
        return new DescribeParameterGroupParametersExecutor().client(this).execute(request);
    }

    /**
     * 当实例开启增强备份模式后，查询实例备份的空间使用情况&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBackupSpaceResponse describeBackupSpace(DescribeBackupSpaceRequest request) throws JdcloudSdkException {
        return new DescribeBackupSpaceExecutor().client(this).execute(request);
    }

    /**
     * 修改数据库读写分离代理服务配置&lt;br&gt;- 仅支持MySQL、PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyReadWriteProxyResponse modifyReadWriteProxy(ModifyReadWriteProxyRequest request) throws JdcloudSdkException {
        return new ModifyReadWriteProxyExecutor().client(this).execute(request);
    }

    /**
     * 关闭RDS实例的外网访问功能。关闭后，用户无法通过Internet访问RDS，但可以在京东云内网通过内网域名访问
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableInternetAccessResponse disableInternetAccess(DisableInternetAccessRequest request) throws JdcloudSdkException {
        return new DisableInternetAccessExecutor().client(this).execute(request);
    }

    /**
     * 获取当前账号下所有RDS实例及MySQL/PostgreSQL只读实例的概要信息，例如实例类型，版本，计费信息等
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstancesResponse describeInstances(DescribeInstancesRequest request) throws JdcloudSdkException {
        return new DescribeInstancesExecutor().client(this).execute(request);
    }

    /**
     * 创建MySQL的只读实例&lt;br&gt; - 仅支持MySQL&lt;br&gt; - 创建的只读实例跟主实例在同一个VPC同一个子网中&lt;br&gt; * 只读实例只支持按配置计费
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateROInstanceResponse createROInstance(CreateROInstanceRequest request) throws JdcloudSdkException {
        return new CreateROInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取当前系统所支持的各种数据库版本的审计选项及相应的推荐选项&lt;br&gt;- 仅支持SQL Server
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAuditOptionsResponse describeAuditOptions(DescribeAuditOptionsRequest request) throws JdcloudSdkException {
        return new DescribeAuditOptionsExecutor().client(this).execute(request);
    }

    /**
     * 删除数据库账号，账号删除后不可恢复，用户无法再使用该账号登录RDS实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAccountResponse deleteAccount(DeleteAccountRequest request) throws JdcloudSdkException {
        return new DeleteAccountExecutor().client(this).execute(request);
    }

    /**
     * 修改参数组的参数&lt;br&gt;- 仅支持MySQL，Percona，MariaDB，PostgreSQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyParameterGroupParametersResponse modifyParameterGroupParameters(ModifyParameterGroupParametersRequest request) throws JdcloudSdkException {
        return new ModifyParameterGroupParametersExecutor().client(this).execute(request);
    }

    /**
     * 根据跨地域备份同步服务时间点创建实例。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceByTimeInCrossRegionResponse createInstanceByTimeInCrossRegion(CreateInstanceByTimeInCrossRegionRequest request) throws JdcloudSdkException {
        return new CreateInstanceByTimeInCrossRegionExecutor().client(this).execute(request);
    }

    /**
     * 查询当前发起的数据库的升级计划，仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeUpgradePlanResponse describeUpgradePlan(DescribeUpgradePlanRequest request) throws JdcloudSdkException {
        return new DescribeUpgradePlanExecutor().client(this).execute(request);
    }

    /**
     * 根据时间点，选择单表恢复当前实例&lt;br&gt;- 仅支持MySQL
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestoreInstanceByTimeResponse restoreInstanceByTime(RestoreInstanceByTimeRequest request) throws JdcloudSdkException {
        return new RestoreInstanceByTimeExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public RdsClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private RdsClient rdsClient;

        public DefaultBuilder() {
            rdsClient = new RdsClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            rdsClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            rdsClient.httpRequestConfig = config;
            return this;
        }

        public RdsClient build() throws JdcloudSdkException {

            if (rdsClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                rdsClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (rdsClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("RdsClient build error: jdcloud credentials provider not set");
                }
            }
            if (rdsClient.httpRequestConfig == null) {
                rdsClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (rdsClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("RdsClient build error: http request config not set");
                }
            }
            return rdsClient;
        }

        public Builder environment(Environment environment) {
            rdsClient.environment = environment;
            return this;
        }
    }
}
