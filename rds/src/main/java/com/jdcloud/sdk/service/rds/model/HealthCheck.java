/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;


/**
 * healthCheck
 */
public class HealthCheck  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 健康检查时间间隔，范围为1～600，单位为秒；默认值为100
     */
    private Integer monitorInterval;

    /**
     * 后端实例连接超时时间，范围为1～60，单位为秒；默认值为3
     */
    private Integer backendConnectTimeout;

    /**
     * 后端实例连接重试次数，范围为1～10，单位为次；默认值为1
     */
    private Integer backendConnectAttempts;



    /**
     * get 健康检查时间间隔，范围为1～600，单位为秒；默认值为100
     *
     * @return
     */
    public Integer getMonitorInterval() {
        return monitorInterval;
    }

    /**
     * set 健康检查时间间隔，范围为1～600，单位为秒；默认值为100
     *
     * @param monitorInterval
     */
    public void setMonitorInterval(Integer monitorInterval) {
        this.monitorInterval = monitorInterval;
    }


    /**
     * get 后端实例连接超时时间，范围为1～60，单位为秒；默认值为3
     *
     * @return
     */
    public Integer getBackendConnectTimeout() {
        return backendConnectTimeout;
    }

    /**
     * set 后端实例连接超时时间，范围为1～60，单位为秒；默认值为3
     *
     * @param backendConnectTimeout
     */
    public void setBackendConnectTimeout(Integer backendConnectTimeout) {
        this.backendConnectTimeout = backendConnectTimeout;
    }


    /**
     * get 后端实例连接重试次数，范围为1～10，单位为次；默认值为1
     *
     * @return
     */
    public Integer getBackendConnectAttempts() {
        return backendConnectAttempts;
    }

    /**
     * set 后端实例连接重试次数，范围为1～10，单位为次；默认值为1
     *
     * @param backendConnectAttempts
     */
    public void setBackendConnectAttempts(Integer backendConnectAttempts) {
        this.backendConnectAttempts = backendConnectAttempts;
    }



    /**
     * set 健康检查时间间隔，范围为1～600，单位为秒；默认值为100
     *
     * @param monitorInterval
     */
    public HealthCheck monitorInterval(Integer monitorInterval) {
        this.monitorInterval = monitorInterval;
        return this;
    }


    /**
     * set 后端实例连接超时时间，范围为1～60，单位为秒；默认值为3
     *
     * @param backendConnectTimeout
     */
    public HealthCheck backendConnectTimeout(Integer backendConnectTimeout) {
        this.backendConnectTimeout = backendConnectTimeout;
        return this;
    }


    /**
     * set 后端实例连接重试次数，范围为1～10，单位为次；默认值为1
     *
     * @param backendConnectAttempts
     */
    public HealthCheck backendConnectAttempts(Integer backendConnectAttempts) {
        this.backendConnectAttempts = backendConnectAttempts;
        return this;
    }


}