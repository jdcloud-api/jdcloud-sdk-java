/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 账号管理
 * API related to Relational Database Service
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 授予账号的数据库细粒度的访问权限 - 仅支持 MySQL，Percona，MariaDB
 */
public class GrantAccountPrivilegeRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 设置数据库细粒度权限内容
     */
    
    private List<DatabasePrivilege> databasePrivileges;
    /**
     * 设置全局权限，权限的具体定义参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    
    private List<String> globalPrivileges;
    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * RDS 实例ID，唯一标识一个RDS实例
     * Required:true
     */
    @Required
    private String instanceId;

    /**
     * 账号名，在同一个实例中账号名不能重复
     * Required:true
     */
    @Required
    private String accountName;



    /**
    * get 设置数据库细粒度权限内容
    *
    * @return
    */
    public List<DatabasePrivilege> getDatabasePrivileges() {
        return databasePrivileges;
    }

    /**
    * set 设置数据库细粒度权限内容
    *
    * @param databasePrivileges
    */
    public void setDatabasePrivileges(List<DatabasePrivilege> databasePrivileges) {
        this.databasePrivileges = databasePrivileges;
    }


    /**
    * get 设置全局权限，权限的具体定义参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
    *
    * @return
    */
    public List<String> getGlobalPrivileges() {
        return globalPrivileges;
    }

    /**
    * set 设置全局权限，权限的具体定义参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
    *
    * @param globalPrivileges
    */
    public void setGlobalPrivileges(List<String> globalPrivileges) {
        this.globalPrivileges = globalPrivileges;
    }


    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get RDS 实例ID，唯一标识一个RDS实例
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 账号名，在同一个实例中账号名不能重复
     *
     * @return
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * set 账号名，在同一个实例中账号名不能重复
     *
     * @param accountName
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }



    /**
    * set 设置数据库细粒度权限内容
    *
    * @param databasePrivileges
    */
    public GrantAccountPrivilegeRequest databasePrivileges(List<DatabasePrivilege> databasePrivileges) {
        this.databasePrivileges = databasePrivileges;
        return this;
    }


    /**
    * set 设置全局权限，权限的具体定义参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
    *
    * @param globalPrivileges
    */
    public GrantAccountPrivilegeRequest globalPrivileges(List<String> globalPrivileges) {
        this.globalPrivileges = globalPrivileges;
        return this;
    }


    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public GrantAccountPrivilegeRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public GrantAccountPrivilegeRequest instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 账号名，在同一个实例中账号名不能重复
     *
     * @param accountName
     */
    public GrantAccountPrivilegeRequest accountName(String accountName) {
        this.accountName = accountName;
        return this;
    }



    /**
     * add item to 设置数据库细粒度权限内容
     *
     * @param databasePrivilege
     */
    public void addDatabasePrivilege(DatabasePrivilege databasePrivilege) {
        if (this.databasePrivileges == null) {
            this.databasePrivileges = new ArrayList<>();
        }
        this.databasePrivileges.add(databasePrivilege);
    }

    /**
     * add item to 设置全局权限，权限的具体定义参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param globalPrivilege
     */
    public void addGlobalPrivilege(String globalPrivilege) {
        if (this.globalPrivileges == null) {
            this.globalPrivileges = new ArrayList<>();
        }
        this.globalPrivileges.add(globalPrivilege);
    }
}