/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;


/**
 * digestData
 */
public class DigestData  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 表示执行结果中95% 数据小于或等于此数值
     */
    private Float pct95;

    /**
     * 执行结果的最大值
     */
    private Float max;

    /**
     * 执行结果的平均值
     */
    private Float avg;

    /**
     * 执行结果的最小值
     */
    private Float min;

    /**
     * 执行结果的合计值
     */
    private Double total;



    /**
     * get 表示执行结果中95% 数据小于或等于此数值
     *
     * @return
     */
    public Float getPct95() {
        return pct95;
    }

    /**
     * set 表示执行结果中95% 数据小于或等于此数值
     *
     * @param pct95
     */
    public void setPct95(Float pct95) {
        this.pct95 = pct95;
    }


    /**
     * get 执行结果的最大值
     *
     * @return
     */
    public Float getMax() {
        return max;
    }

    /**
     * set 执行结果的最大值
     *
     * @param max
     */
    public void setMax(Float max) {
        this.max = max;
    }


    /**
     * get 执行结果的平均值
     *
     * @return
     */
    public Float getAvg() {
        return avg;
    }

    /**
     * set 执行结果的平均值
     *
     * @param avg
     */
    public void setAvg(Float avg) {
        this.avg = avg;
    }


    /**
     * get 执行结果的最小值
     *
     * @return
     */
    public Float getMin() {
        return min;
    }

    /**
     * set 执行结果的最小值
     *
     * @param min
     */
    public void setMin(Float min) {
        this.min = min;
    }


    /**
     * get 执行结果的合计值
     *
     * @return
     */
    public Double getTotal() {
        return total;
    }

    /**
     * set 执行结果的合计值
     *
     * @param total
     */
    public void setTotal(Double total) {
        this.total = total;
    }



    /**
     * set 表示执行结果中95% 数据小于或等于此数值
     *
     * @param pct95
     */
    public DigestData pct95(Float pct95) {
        this.pct95 = pct95;
        return this;
    }


    /**
     * set 执行结果的最大值
     *
     * @param max
     */
    public DigestData max(Float max) {
        this.max = max;
        return this;
    }


    /**
     * set 执行结果的平均值
     *
     * @param avg
     */
    public DigestData avg(Float avg) {
        this.avg = avg;
        return this;
    }


    /**
     * set 执行结果的最小值
     *
     * @param min
     */
    public DigestData min(Float min) {
        this.min = min;
        return this;
    }


    /**
     * set 执行结果的合计值
     *
     * @param total
     */
    public DigestData total(Double total) {
        this.total = total;
        return this;
    }


}