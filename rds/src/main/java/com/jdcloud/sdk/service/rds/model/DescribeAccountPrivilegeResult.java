/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 账号管理
 * API related to Relational Database Service
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.rds.model.DatabasePrivilege;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查看RDS实例的账号的权限信息 - 仅支持 MySQL，Percona，MariaDB
 */
public class DescribeAccountPrivilegeResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据库细粒度权限内容
     */
    
    private List<DatabasePrivilege> databasePrivileges;
    /**
     * globalPrivileges
     */
    
    private List<String> globalPrivileges;


    /**
    * get 数据库细粒度权限内容
    *
    * @return
    */
    public List<DatabasePrivilege> getDatabasePrivileges() {
        return databasePrivileges;
    }

    /**
    * set 数据库细粒度权限内容
    *
    * @param databasePrivileges
    */
    public void setDatabasePrivileges(List<DatabasePrivilege> databasePrivileges) {
        this.databasePrivileges = databasePrivileges;
    }


    /**
    * get globalPrivileges
    *
    * @return
    */
    public List<String> getGlobalPrivileges() {
        return globalPrivileges;
    }

    /**
    * set globalPrivileges
    *
    * @param globalPrivileges
    */
    public void setGlobalPrivileges(List<String> globalPrivileges) {
        this.globalPrivileges = globalPrivileges;
    }



    /**
    * set 数据库细粒度权限内容
    *
    * @param databasePrivileges
    */
    public DescribeAccountPrivilegeResult databasePrivileges(List<DatabasePrivilege> databasePrivileges) {
        this.databasePrivileges = databasePrivileges;
        return this;
    }


    /**
    * set globalPrivileges
    *
    * @param globalPrivileges
    */
    public DescribeAccountPrivilegeResult globalPrivileges(List<String> globalPrivileges) {
        this.globalPrivileges = globalPrivileges;
        return this;
    }



    /**
     * add item to 数据库细粒度权限内容
     *
     * @param databasePrivilege
     */
    public void addDatabasePrivilege(DatabasePrivilege databasePrivilege) {
        if (this.databasePrivileges == null) {
            this.databasePrivileges = new ArrayList<>();
        }
        this.databasePrivileges.add(databasePrivilege);
    }

    /**
     * add item to globalPrivileges
     *
     * @param globalPrivilege
     */
    public void addGlobalPrivilege(String globalPrivilege) {
        if (this.globalPrivileges == null) {
            this.globalPrivileges = new ArrayList<>();
        }
        this.globalPrivileges.add(globalPrivilege);
    }
}