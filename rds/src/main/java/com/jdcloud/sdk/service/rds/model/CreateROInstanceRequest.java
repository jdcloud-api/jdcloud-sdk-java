/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 实例管理
 * 实例管理相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.rds.model.Tag;
import com.jdcloud.sdk.service.charge.model.ChargeSpec;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建MySQL的只读实例&lt;br&gt; - 仅支持MySQL&lt;br&gt; - 创建的只读实例跟主实例在同一个VPC同一个子网中&lt;br&gt; * 只读实例只支持按配置计费
 */
public class CreateROInstanceRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     * Required:true
     */
    @Required
    private String instanceName;

    /**
     * 只读实例规格FlavorId
     * Required:true
     */
    @Required
    private String instanceClass;

    /**
     * 存储类型，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)，缺省值为：LOCAL_SSD
     */
    private String instanceStorageType;

    /**
     * 磁盘空间
     * Required:true
     */
    @Required
    private Integer instanceStorageGB;

    /**
     * 可用区ID
     * Required:true
     */
    @Required
    private String azId;

    /**
     * VPC的ID，如果没有填写就保持和常规实例一样的VPC
     */
    private String vpcId;

    /**
     * 子网ID，如果没有填写就保持和常规实例一样的subnet
     */
    private String subnetId;

    /**
     * 参数组ID，缺省采用和常规实例一样的参数组
     */
    private String parameterGroup;

    /**
     * 实例数据加密(存储类型为云硬盘才支持数据加密)。false：不加密；true：加密。缺省为false。
     */
    private Boolean storageEncrypted;

    /**
     * 创建只读实例的数目,缺省为1
     */
    private Integer count;

    /**
     * 只读代理服务的ID，缺省值为 “NULL”，表示不绑定代理服务
     */
    private String roInstanceProxy;

    /**
     * 标签信息
     */
    
    private List<Tag> tagSpec;
    /**
     * 资源组id
     */
    private String resourceGroupId;

    /**
     * 计费规格，包括计费类型，计费周期等
     */
    private ChargeSpec chargeSpec;

    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * RDS 实例ID，唯一标识一个RDS实例
     * Required:true
     */
    @Required
    private String instanceId;



    /**
     * get 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 只读实例规格FlavorId
     *
     * @return
     */
    public String getInstanceClass() {
        return instanceClass;
    }

    /**
     * set 只读实例规格FlavorId
     *
     * @param instanceClass
     */
    public void setInstanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
    }


    /**
     * get 存储类型，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)，缺省值为：LOCAL_SSD
     *
     * @return
     */
    public String getInstanceStorageType() {
        return instanceStorageType;
    }

    /**
     * set 存储类型，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)，缺省值为：LOCAL_SSD
     *
     * @param instanceStorageType
     */
    public void setInstanceStorageType(String instanceStorageType) {
        this.instanceStorageType = instanceStorageType;
    }


    /**
     * get 磁盘空间
     *
     * @return
     */
    public Integer getInstanceStorageGB() {
        return instanceStorageGB;
    }

    /**
     * set 磁盘空间
     *
     * @param instanceStorageGB
     */
    public void setInstanceStorageGB(Integer instanceStorageGB) {
        this.instanceStorageGB = instanceStorageGB;
    }


    /**
     * get 可用区ID
     *
     * @return
     */
    public String getAzId() {
        return azId;
    }

    /**
     * set 可用区ID
     *
     * @param azId
     */
    public void setAzId(String azId) {
        this.azId = azId;
    }


    /**
     * get VPC的ID，如果没有填写就保持和常规实例一样的VPC
     *
     * @return
     */
    public String getVpcId() {
        return vpcId;
    }

    /**
     * set VPC的ID，如果没有填写就保持和常规实例一样的VPC
     *
     * @param vpcId
     */
    public void setVpcId(String vpcId) {
        this.vpcId = vpcId;
    }


    /**
     * get 子网ID，如果没有填写就保持和常规实例一样的subnet
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网ID，如果没有填写就保持和常规实例一样的subnet
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }


    /**
     * get 参数组ID，缺省采用和常规实例一样的参数组
     *
     * @return
     */
    public String getParameterGroup() {
        return parameterGroup;
    }

    /**
     * set 参数组ID，缺省采用和常规实例一样的参数组
     *
     * @param parameterGroup
     */
    public void setParameterGroup(String parameterGroup) {
        this.parameterGroup = parameterGroup;
    }


    /**
     * get 实例数据加密(存储类型为云硬盘才支持数据加密)。false：不加密；true：加密。缺省为false。
     *
     * @return
     */
    public Boolean getStorageEncrypted() {
        return storageEncrypted;
    }

    /**
     * set 实例数据加密(存储类型为云硬盘才支持数据加密)。false：不加密；true：加密。缺省为false。
     *
     * @param storageEncrypted
     */
    public void setStorageEncrypted(Boolean storageEncrypted) {
        this.storageEncrypted = storageEncrypted;
    }


    /**
     * get 创建只读实例的数目,缺省为1
     *
     * @return
     */
    public Integer getCount() {
        return count;
    }

    /**
     * set 创建只读实例的数目,缺省为1
     *
     * @param count
     */
    public void setCount(Integer count) {
        this.count = count;
    }


    /**
     * get 只读代理服务的ID，缺省值为 “NULL”，表示不绑定代理服务
     *
     * @return
     */
    public String getRoInstanceProxy() {
        return roInstanceProxy;
    }

    /**
     * set 只读代理服务的ID，缺省值为 “NULL”，表示不绑定代理服务
     *
     * @param roInstanceProxy
     */
    public void setRoInstanceProxy(String roInstanceProxy) {
        this.roInstanceProxy = roInstanceProxy;
    }


    /**
    * get 标签信息
    *
    * @return
    */
    public List<Tag> getTagSpec() {
        return tagSpec;
    }

    /**
    * set 标签信息
    *
    * @param tagSpec
    */
    public void setTagSpec(List<Tag> tagSpec) {
        this.tagSpec = tagSpec;
    }


    /**
     * get 资源组id
     *
     * @return
     */
    public String getResourceGroupId() {
        return resourceGroupId;
    }

    /**
     * set 资源组id
     *
     * @param resourceGroupId
     */
    public void setResourceGroupId(String resourceGroupId) {
        this.resourceGroupId = resourceGroupId;
    }


    /**
     * get 计费规格，包括计费类型，计费周期等
     *
     * @return
     */
    public ChargeSpec getChargeSpec() {
        return chargeSpec;
    }

    /**
     * set 计费规格，包括计费类型，计费周期等
     *
     * @param chargeSpec
     */
    public void setChargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
    }


    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get RDS 实例ID，唯一标识一个RDS实例
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }



    /**
     * set 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @param instanceName
     */
    public CreateROInstanceRequest instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 只读实例规格FlavorId
     *
     * @param instanceClass
     */
    public CreateROInstanceRequest instanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
        return this;
    }


    /**
     * set 存储类型，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)，缺省值为：LOCAL_SSD
     *
     * @param instanceStorageType
     */
    public CreateROInstanceRequest instanceStorageType(String instanceStorageType) {
        this.instanceStorageType = instanceStorageType;
        return this;
    }


    /**
     * set 磁盘空间
     *
     * @param instanceStorageGB
     */
    public CreateROInstanceRequest instanceStorageGB(Integer instanceStorageGB) {
        this.instanceStorageGB = instanceStorageGB;
        return this;
    }


    /**
     * set 可用区ID
     *
     * @param azId
     */
    public CreateROInstanceRequest azId(String azId) {
        this.azId = azId;
        return this;
    }


    /**
     * set VPC的ID，如果没有填写就保持和常规实例一样的VPC
     *
     * @param vpcId
     */
    public CreateROInstanceRequest vpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }


    /**
     * set 子网ID，如果没有填写就保持和常规实例一样的subnet
     *
     * @param subnetId
     */
    public CreateROInstanceRequest subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }


    /**
     * set 参数组ID，缺省采用和常规实例一样的参数组
     *
     * @param parameterGroup
     */
    public CreateROInstanceRequest parameterGroup(String parameterGroup) {
        this.parameterGroup = parameterGroup;
        return this;
    }


    /**
     * set 实例数据加密(存储类型为云硬盘才支持数据加密)。false：不加密；true：加密。缺省为false。
     *
     * @param storageEncrypted
     */
    public CreateROInstanceRequest storageEncrypted(Boolean storageEncrypted) {
        this.storageEncrypted = storageEncrypted;
        return this;
    }


    /**
     * set 创建只读实例的数目,缺省为1
     *
     * @param count
     */
    public CreateROInstanceRequest count(Integer count) {
        this.count = count;
        return this;
    }


    /**
     * set 只读代理服务的ID，缺省值为 “NULL”，表示不绑定代理服务
     *
     * @param roInstanceProxy
     */
    public CreateROInstanceRequest roInstanceProxy(String roInstanceProxy) {
        this.roInstanceProxy = roInstanceProxy;
        return this;
    }


    /**
    * set 标签信息
    *
    * @param tagSpec
    */
    public CreateROInstanceRequest tagSpec(List<Tag> tagSpec) {
        this.tagSpec = tagSpec;
        return this;
    }


    /**
     * set 资源组id
     *
     * @param resourceGroupId
     */
    public CreateROInstanceRequest resourceGroupId(String resourceGroupId) {
        this.resourceGroupId = resourceGroupId;
        return this;
    }


    /**
     * set 计费规格，包括计费类型，计费周期等
     *
     * @param chargeSpec
     */
    public CreateROInstanceRequest chargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
        return this;
    }


    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
     *
     * @param regionId
     */
    public CreateROInstanceRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set RDS 实例ID，唯一标识一个RDS实例
     *
     * @param instanceId
     */
    public CreateROInstanceRequest instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }



    /**
     * add item to 标签信息
     *
     * @param tagSpec
     */
    public void addTagSpec(Tag tagSpec) {
        if (this.tagSpec == null) {
            this.tagSpec = new ArrayList<>();
        }
        this.tagSpec.add(tagSpec);
    }
}