/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rds.model;


/**
 * dBInstanceInternal
 */
public class DBInstanceInternal  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例ID
     */
    private String instanceId;

    /**
     * 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     */
    private String instanceName;

    /**
     * 实例引擎类型，如MySQL或SQL Server等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    private String engine;

    /**
     * 实例类别，例如主实例，只读实例等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    private String instanceType;

    /**
     * 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     */
    private String instanceStatus;

    /**
     * 实例的网络状态；0表示实例的网络处于中断状态，1表示实例的网络处于正常状态
     */
    private Integer accessibleStatus;

    /**
     * 物理机IP
     */
    private String hostIp;

    /**
     * 实例ip
     */
    private String userIp;

    /**
     * 云主机ID
     */
    private String vmId;

    /**
     * 实例内网域名
     */
    private String internalDomainName;

    /**
     * 应用访问端口
     */
    private String instancePort;



    /**
     * get 实例ID
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 实例引擎类型，如MySQL或SQL Server等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @return
     */
    public String getEngine() {
        return engine;
    }

    /**
     * set 实例引擎类型，如MySQL或SQL Server等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param engine
     */
    public void setEngine(String engine) {
        this.engine = engine;
    }


    /**
     * get 实例类别，例如主实例，只读实例等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @return
     */
    public String getInstanceType() {
        return instanceType;
    }

    /**
     * set 实例类别，例如主实例，只读实例等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceType
     */
    public void setInstanceType(String instanceType) {
        this.instanceType = instanceType;
    }


    /**
     * get 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @return
     */
    public String getInstanceStatus() {
        return instanceStatus;
    }

    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public void setInstanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
    }


    /**
     * get 实例的网络状态；0表示实例的网络处于中断状态，1表示实例的网络处于正常状态
     *
     * @return
     */
    public Integer getAccessibleStatus() {
        return accessibleStatus;
    }

    /**
     * set 实例的网络状态；0表示实例的网络处于中断状态，1表示实例的网络处于正常状态
     *
     * @param accessibleStatus
     */
    public void setAccessibleStatus(Integer accessibleStatus) {
        this.accessibleStatus = accessibleStatus;
    }


    /**
     * get 物理机IP
     *
     * @return
     */
    public String getHostIp() {
        return hostIp;
    }

    /**
     * set 物理机IP
     *
     * @param hostIp
     */
    public void setHostIp(String hostIp) {
        this.hostIp = hostIp;
    }


    /**
     * get 实例ip
     *
     * @return
     */
    public String getUserIp() {
        return userIp;
    }

    /**
     * set 实例ip
     *
     * @param userIp
     */
    public void setUserIp(String userIp) {
        this.userIp = userIp;
    }


    /**
     * get 云主机ID
     *
     * @return
     */
    public String getVmId() {
        return vmId;
    }

    /**
     * set 云主机ID
     *
     * @param vmId
     */
    public void setVmId(String vmId) {
        this.vmId = vmId;
    }


    /**
     * get 实例内网域名
     *
     * @return
     */
    public String getInternalDomainName() {
        return internalDomainName;
    }

    /**
     * set 实例内网域名
     *
     * @param internalDomainName
     */
    public void setInternalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
    }


    /**
     * get 应用访问端口
     *
     * @return
     */
    public String getInstancePort() {
        return instancePort;
    }

    /**
     * set 应用访问端口
     *
     * @param instancePort
     */
    public void setInstancePort(String instancePort) {
        this.instancePort = instancePort;
    }



    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public DBInstanceInternal instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 实例名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
     *
     * @param instanceName
     */
    public DBInstanceInternal instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 实例引擎类型，如MySQL或SQL Server等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param engine
     */
    public DBInstanceInternal engine(String engine) {
        this.engine = engine;
        return this;
    }


    /**
     * set 实例类别，例如主实例，只读实例等，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceType
     */
    public DBInstanceInternal instanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }


    /**
     * set 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
     *
     * @param instanceStatus
     */
    public DBInstanceInternal instanceStatus(String instanceStatus) {
        this.instanceStatus = instanceStatus;
        return this;
    }


    /**
     * set 实例的网络状态；0表示实例的网络处于中断状态，1表示实例的网络处于正常状态
     *
     * @param accessibleStatus
     */
    public DBInstanceInternal accessibleStatus(Integer accessibleStatus) {
        this.accessibleStatus = accessibleStatus;
        return this;
    }


    /**
     * set 物理机IP
     *
     * @param hostIp
     */
    public DBInstanceInternal hostIp(String hostIp) {
        this.hostIp = hostIp;
        return this;
    }


    /**
     * set 实例ip
     *
     * @param userIp
     */
    public DBInstanceInternal userIp(String userIp) {
        this.userIp = userIp;
        return this;
    }


    /**
     * set 云主机ID
     *
     * @param vmId
     */
    public DBInstanceInternal vmId(String vmId) {
        this.vmId = vmId;
        return this;
    }


    /**
     * set 实例内网域名
     *
     * @param internalDomainName
     */
    public DBInstanceInternal internalDomainName(String internalDomainName) {
        this.internalDomainName = internalDomainName;
        return this;
    }


    /**
     * set 应用访问端口
     *
     * @param instancePort
     */
    public DBInstanceInternal instancePort(String instancePort) {
        this.instancePort = instancePort;
        return this;
    }


}