/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.clouddnsservice.model;


/**
 * monitor
 */
public class Monitor  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 连续几次触发报警
     */
    private Integer alarmLimit;

    /**
     * 现在是否可以恢复
     */
    private Boolean canRecover;

    /**
     * 现在是否可以切换
     */
    private Boolean canSwitch;

    /**
     * 机房探测点的集合
     */
    private String clusters;

    /**
     * 主域名
     */
    private String domainName;

    /**
     * 主机状态，0正常，1异常
     */
    private Integer hostStatus;

    /**
     * 监控对象
     */
    private String hostValue;

    /**
     * 监控项ID
     */
    private Integer id;

    /**
     * 备用地址1
     */
    private String ipBackup01;

    /**
     * 备用地址1的状态，0正常，1异常
     */
    private Integer ipBackup01Status;

    /**
     * 备用地址1的类型，1为ip 2为域名
     */
    private Integer ipBackup01Type;

    /**
     * 备用地址2
     */
    private String ipBackup02;

    /**
     * 备用地址2的状态，0正常，1异常
     */
    private Integer ipBackup02Status;

    /**
     * 备用地址1的类型，1为ip 2为域名
     */
    private Integer ipBackup02Type;

    /**
     * 手动切换的地址
     */
    private String manualBackup;

    /**
     * 手动切换的地址的状态，0正常，1异常
     */
    private Integer manualBackupStatus;

    /**
     * 手动切换的地址的类型，1为ip 2为域名
     */
    private Integer manualBackupType;

    /**
     * 监控状况 开启监控 2，暂停监控 4
     */
    private Integer monitorEnable;

    /**
     * 监控频率，单位s
     */
    private Integer monitorFreq;

    /**
     * 监控端口
     */
    private Integer monitorPort;

    /**
     * 不做任何修改0，强制暂停解析记录1，自动切换到备用地址2
     */
    private Integer monitorRule;

    /**
     * 监控路径
     */
    private String monitorUri;

    /**
     * 邮箱地址
     */
    private String notifyEmail;

    /**
     * 不发送邮件0， 发送邮件1
     */
    private Integer notifyEmailEnable;

    /**
     * 不发送通知栏 0， 发送通知栏 1
     */
    private Integer notifyMsgBarEnable;

    /**
     * 手机号码
     */
    private String notifySms;

    /**
     * 不发送短信 0， 发送短信 1
     */
    private Integer notifySmsEnable;

    /**
     * https 0，https 1
     */
    private Integer protocol;

    /**
     * 0自动恢复 1手动恢复
     */
    private Integer stopRecoverRule;

    /**
     * 子域名
     */
    private String subDomainName;

    /**
     * 0自动恢复至主host 1手动恢复至主host
     */
    private Integer switchRecoverRule;

    /**
     * 1为A记录，2为CNAME
     */
    private Integer type;

    /**
     * 使用记录，host_value 0，ip_backup_01 1，ip_backup_02 2，cname_backup 3
     */
    private Integer usedType;


    /**
     * get 连续几次触发报警
     *
     * @return
     */
    public Integer getAlarmLimit() {
        return alarmLimit;
    }

    /**
     * set 连续几次触发报警
     *
     * @param alarmLimit
     */
    public void setAlarmLimit(Integer alarmLimit) {
        this.alarmLimit = alarmLimit;
    }

    /**
     * get 现在是否可以恢复
     *
     * @return
     */
    public Boolean getCanRecover() {
        return canRecover;
    }

    /**
     * set 现在是否可以恢复
     *
     * @param canRecover
     */
    public void setCanRecover(Boolean canRecover) {
        this.canRecover = canRecover;
    }

    /**
     * get 现在是否可以切换
     *
     * @return
     */
    public Boolean getCanSwitch() {
        return canSwitch;
    }

    /**
     * set 现在是否可以切换
     *
     * @param canSwitch
     */
    public void setCanSwitch(Boolean canSwitch) {
        this.canSwitch = canSwitch;
    }

    /**
     * get 机房探测点的集合
     *
     * @return
     */
    public String getClusters() {
        return clusters;
    }

    /**
     * set 机房探测点的集合
     *
     * @param clusters
     */
    public void setClusters(String clusters) {
        this.clusters = clusters;
    }

    /**
     * get 主域名
     *
     * @return
     */
    public String getDomainName() {
        return domainName;
    }

    /**
     * set 主域名
     *
     * @param domainName
     */
    public void setDomainName(String domainName) {
        this.domainName = domainName;
    }

    /**
     * get 主机状态，0正常，1异常
     *
     * @return
     */
    public Integer getHostStatus() {
        return hostStatus;
    }

    /**
     * set 主机状态，0正常，1异常
     *
     * @param hostStatus
     */
    public void setHostStatus(Integer hostStatus) {
        this.hostStatus = hostStatus;
    }

    /**
     * get 监控对象
     *
     * @return
     */
    public String getHostValue() {
        return hostValue;
    }

    /**
     * set 监控对象
     *
     * @param hostValue
     */
    public void setHostValue(String hostValue) {
        this.hostValue = hostValue;
    }

    /**
     * get 监控项ID
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set 监控项ID
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * get 备用地址1
     *
     * @return
     */
    public String getIpBackup01() {
        return ipBackup01;
    }

    /**
     * set 备用地址1
     *
     * @param ipBackup01
     */
    public void setIpBackup01(String ipBackup01) {
        this.ipBackup01 = ipBackup01;
    }

    /**
     * get 备用地址1的状态，0正常，1异常
     *
     * @return
     */
    public Integer getIpBackup01Status() {
        return ipBackup01Status;
    }

    /**
     * set 备用地址1的状态，0正常，1异常
     *
     * @param ipBackup01Status
     */
    public void setIpBackup01Status(Integer ipBackup01Status) {
        this.ipBackup01Status = ipBackup01Status;
    }

    /**
     * get 备用地址1的类型，1为ip 2为域名
     *
     * @return
     */
    public Integer getIpBackup01Type() {
        return ipBackup01Type;
    }

    /**
     * set 备用地址1的类型，1为ip 2为域名
     *
     * @param ipBackup01Type
     */
    public void setIpBackup01Type(Integer ipBackup01Type) {
        this.ipBackup01Type = ipBackup01Type;
    }

    /**
     * get 备用地址2
     *
     * @return
     */
    public String getIpBackup02() {
        return ipBackup02;
    }

    /**
     * set 备用地址2
     *
     * @param ipBackup02
     */
    public void setIpBackup02(String ipBackup02) {
        this.ipBackup02 = ipBackup02;
    }

    /**
     * get 备用地址2的状态，0正常，1异常
     *
     * @return
     */
    public Integer getIpBackup02Status() {
        return ipBackup02Status;
    }

    /**
     * set 备用地址2的状态，0正常，1异常
     *
     * @param ipBackup02Status
     */
    public void setIpBackup02Status(Integer ipBackup02Status) {
        this.ipBackup02Status = ipBackup02Status;
    }

    /**
     * get 备用地址1的类型，1为ip 2为域名
     *
     * @return
     */
    public Integer getIpBackup02Type() {
        return ipBackup02Type;
    }

    /**
     * set 备用地址1的类型，1为ip 2为域名
     *
     * @param ipBackup02Type
     */
    public void setIpBackup02Type(Integer ipBackup02Type) {
        this.ipBackup02Type = ipBackup02Type;
    }

    /**
     * get 手动切换的地址
     *
     * @return
     */
    public String getManualBackup() {
        return manualBackup;
    }

    /**
     * set 手动切换的地址
     *
     * @param manualBackup
     */
    public void setManualBackup(String manualBackup) {
        this.manualBackup = manualBackup;
    }

    /**
     * get 手动切换的地址的状态，0正常，1异常
     *
     * @return
     */
    public Integer getManualBackupStatus() {
        return manualBackupStatus;
    }

    /**
     * set 手动切换的地址的状态，0正常，1异常
     *
     * @param manualBackupStatus
     */
    public void setManualBackupStatus(Integer manualBackupStatus) {
        this.manualBackupStatus = manualBackupStatus;
    }

    /**
     * get 手动切换的地址的类型，1为ip 2为域名
     *
     * @return
     */
    public Integer getManualBackupType() {
        return manualBackupType;
    }

    /**
     * set 手动切换的地址的类型，1为ip 2为域名
     *
     * @param manualBackupType
     */
    public void setManualBackupType(Integer manualBackupType) {
        this.manualBackupType = manualBackupType;
    }

    /**
     * get 监控状况 开启监控 2，暂停监控 4
     *
     * @return
     */
    public Integer getMonitorEnable() {
        return monitorEnable;
    }

    /**
     * set 监控状况 开启监控 2，暂停监控 4
     *
     * @param monitorEnable
     */
    public void setMonitorEnable(Integer monitorEnable) {
        this.monitorEnable = monitorEnable;
    }

    /**
     * get 监控频率，单位s
     *
     * @return
     */
    public Integer getMonitorFreq() {
        return monitorFreq;
    }

    /**
     * set 监控频率，单位s
     *
     * @param monitorFreq
     */
    public void setMonitorFreq(Integer monitorFreq) {
        this.monitorFreq = monitorFreq;
    }

    /**
     * get 监控端口
     *
     * @return
     */
    public Integer getMonitorPort() {
        return monitorPort;
    }

    /**
     * set 监控端口
     *
     * @param monitorPort
     */
    public void setMonitorPort(Integer monitorPort) {
        this.monitorPort = monitorPort;
    }

    /**
     * get 不做任何修改0，强制暂停解析记录1，自动切换到备用地址2
     *
     * @return
     */
    public Integer getMonitorRule() {
        return monitorRule;
    }

    /**
     * set 不做任何修改0，强制暂停解析记录1，自动切换到备用地址2
     *
     * @param monitorRule
     */
    public void setMonitorRule(Integer monitorRule) {
        this.monitorRule = monitorRule;
    }

    /**
     * get 监控路径
     *
     * @return
     */
    public String getMonitorUri() {
        return monitorUri;
    }

    /**
     * set 监控路径
     *
     * @param monitorUri
     */
    public void setMonitorUri(String monitorUri) {
        this.monitorUri = monitorUri;
    }

    /**
     * get 邮箱地址
     *
     * @return
     */
    public String getNotifyEmail() {
        return notifyEmail;
    }

    /**
     * set 邮箱地址
     *
     * @param notifyEmail
     */
    public void setNotifyEmail(String notifyEmail) {
        this.notifyEmail = notifyEmail;
    }

    /**
     * get 不发送邮件0， 发送邮件1
     *
     * @return
     */
    public Integer getNotifyEmailEnable() {
        return notifyEmailEnable;
    }

    /**
     * set 不发送邮件0， 发送邮件1
     *
     * @param notifyEmailEnable
     */
    public void setNotifyEmailEnable(Integer notifyEmailEnable) {
        this.notifyEmailEnable = notifyEmailEnable;
    }

    /**
     * get 不发送通知栏 0， 发送通知栏 1
     *
     * @return
     */
    public Integer getNotifyMsgBarEnable() {
        return notifyMsgBarEnable;
    }

    /**
     * set 不发送通知栏 0， 发送通知栏 1
     *
     * @param notifyMsgBarEnable
     */
    public void setNotifyMsgBarEnable(Integer notifyMsgBarEnable) {
        this.notifyMsgBarEnable = notifyMsgBarEnable;
    }

    /**
     * get 手机号码
     *
     * @return
     */
    public String getNotifySms() {
        return notifySms;
    }

    /**
     * set 手机号码
     *
     * @param notifySms
     */
    public void setNotifySms(String notifySms) {
        this.notifySms = notifySms;
    }

    /**
     * get 不发送短信 0， 发送短信 1
     *
     * @return
     */
    public Integer getNotifySmsEnable() {
        return notifySmsEnable;
    }

    /**
     * set 不发送短信 0， 发送短信 1
     *
     * @param notifySmsEnable
     */
    public void setNotifySmsEnable(Integer notifySmsEnable) {
        this.notifySmsEnable = notifySmsEnable;
    }

    /**
     * get https 0，https 1
     *
     * @return
     */
    public Integer getProtocol() {
        return protocol;
    }

    /**
     * set https 0，https 1
     *
     * @param protocol
     */
    public void setProtocol(Integer protocol) {
        this.protocol = protocol;
    }

    /**
     * get 0自动恢复 1手动恢复
     *
     * @return
     */
    public Integer getStopRecoverRule() {
        return stopRecoverRule;
    }

    /**
     * set 0自动恢复 1手动恢复
     *
     * @param stopRecoverRule
     */
    public void setStopRecoverRule(Integer stopRecoverRule) {
        this.stopRecoverRule = stopRecoverRule;
    }

    /**
     * get 子域名
     *
     * @return
     */
    public String getSubDomainName() {
        return subDomainName;
    }

    /**
     * set 子域名
     *
     * @param subDomainName
     */
    public void setSubDomainName(String subDomainName) {
        this.subDomainName = subDomainName;
    }

    /**
     * get 0自动恢复至主host 1手动恢复至主host
     *
     * @return
     */
    public Integer getSwitchRecoverRule() {
        return switchRecoverRule;
    }

    /**
     * set 0自动恢复至主host 1手动恢复至主host
     *
     * @param switchRecoverRule
     */
    public void setSwitchRecoverRule(Integer switchRecoverRule) {
        this.switchRecoverRule = switchRecoverRule;
    }

    /**
     * get 1为A记录，2为CNAME
     *
     * @return
     */
    public Integer getType() {
        return type;
    }

    /**
     * set 1为A记录，2为CNAME
     *
     * @param type
     */
    public void setType(Integer type) {
        this.type = type;
    }

    /**
     * get 使用记录，host_value 0，ip_backup_01 1，ip_backup_02 2，cname_backup 3
     *
     * @return
     */
    public Integer getUsedType() {
        return usedType;
    }

    /**
     * set 使用记录，host_value 0，ip_backup_01 1，ip_backup_02 2，cname_backup 3
     *
     * @param usedType
     */
    public void setUsedType(Integer usedType) {
        this.usedType = usedType;
    }


    /**
     * set 连续几次触发报警
     *
     * @param alarmLimit
     */
    public Monitor alarmLimit(Integer alarmLimit) {
        this.alarmLimit = alarmLimit;
        return this;
    }

    /**
     * set 现在是否可以恢复
     *
     * @param canRecover
     */
    public Monitor canRecover(Boolean canRecover) {
        this.canRecover = canRecover;
        return this;
    }

    /**
     * set 现在是否可以切换
     *
     * @param canSwitch
     */
    public Monitor canSwitch(Boolean canSwitch) {
        this.canSwitch = canSwitch;
        return this;
    }

    /**
     * set 机房探测点的集合
     *
     * @param clusters
     */
    public Monitor clusters(String clusters) {
        this.clusters = clusters;
        return this;
    }

    /**
     * set 主域名
     *
     * @param domainName
     */
    public Monitor domainName(String domainName) {
        this.domainName = domainName;
        return this;
    }

    /**
     * set 主机状态，0正常，1异常
     *
     * @param hostStatus
     */
    public Monitor hostStatus(Integer hostStatus) {
        this.hostStatus = hostStatus;
        return this;
    }

    /**
     * set 监控对象
     *
     * @param hostValue
     */
    public Monitor hostValue(String hostValue) {
        this.hostValue = hostValue;
        return this;
    }

    /**
     * set 监控项ID
     *
     * @param id
     */
    public Monitor id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * set 备用地址1
     *
     * @param ipBackup01
     */
    public Monitor ipBackup01(String ipBackup01) {
        this.ipBackup01 = ipBackup01;
        return this;
    }

    /**
     * set 备用地址1的状态，0正常，1异常
     *
     * @param ipBackup01Status
     */
    public Monitor ipBackup01Status(Integer ipBackup01Status) {
        this.ipBackup01Status = ipBackup01Status;
        return this;
    }

    /**
     * set 备用地址1的类型，1为ip 2为域名
     *
     * @param ipBackup01Type
     */
    public Monitor ipBackup01Type(Integer ipBackup01Type) {
        this.ipBackup01Type = ipBackup01Type;
        return this;
    }

    /**
     * set 备用地址2
     *
     * @param ipBackup02
     */
    public Monitor ipBackup02(String ipBackup02) {
        this.ipBackup02 = ipBackup02;
        return this;
    }

    /**
     * set 备用地址2的状态，0正常，1异常
     *
     * @param ipBackup02Status
     */
    public Monitor ipBackup02Status(Integer ipBackup02Status) {
        this.ipBackup02Status = ipBackup02Status;
        return this;
    }

    /**
     * set 备用地址1的类型，1为ip 2为域名
     *
     * @param ipBackup02Type
     */
    public Monitor ipBackup02Type(Integer ipBackup02Type) {
        this.ipBackup02Type = ipBackup02Type;
        return this;
    }

    /**
     * set 手动切换的地址
     *
     * @param manualBackup
     */
    public Monitor manualBackup(String manualBackup) {
        this.manualBackup = manualBackup;
        return this;
    }

    /**
     * set 手动切换的地址的状态，0正常，1异常
     *
     * @param manualBackupStatus
     */
    public Monitor manualBackupStatus(Integer manualBackupStatus) {
        this.manualBackupStatus = manualBackupStatus;
        return this;
    }

    /**
     * set 手动切换的地址的类型，1为ip 2为域名
     *
     * @param manualBackupType
     */
    public Monitor manualBackupType(Integer manualBackupType) {
        this.manualBackupType = manualBackupType;
        return this;
    }

    /**
     * set 监控状况 开启监控 2，暂停监控 4
     *
     * @param monitorEnable
     */
    public Monitor monitorEnable(Integer monitorEnable) {
        this.monitorEnable = monitorEnable;
        return this;
    }

    /**
     * set 监控频率，单位s
     *
     * @param monitorFreq
     */
    public Monitor monitorFreq(Integer monitorFreq) {
        this.monitorFreq = monitorFreq;
        return this;
    }

    /**
     * set 监控端口
     *
     * @param monitorPort
     */
    public Monitor monitorPort(Integer monitorPort) {
        this.monitorPort = monitorPort;
        return this;
    }

    /**
     * set 不做任何修改0，强制暂停解析记录1，自动切换到备用地址2
     *
     * @param monitorRule
     */
    public Monitor monitorRule(Integer monitorRule) {
        this.monitorRule = monitorRule;
        return this;
    }

    /**
     * set 监控路径
     *
     * @param monitorUri
     */
    public Monitor monitorUri(String monitorUri) {
        this.monitorUri = monitorUri;
        return this;
    }

    /**
     * set 邮箱地址
     *
     * @param notifyEmail
     */
    public Monitor notifyEmail(String notifyEmail) {
        this.notifyEmail = notifyEmail;
        return this;
    }

    /**
     * set 不发送邮件0， 发送邮件1
     *
     * @param notifyEmailEnable
     */
    public Monitor notifyEmailEnable(Integer notifyEmailEnable) {
        this.notifyEmailEnable = notifyEmailEnable;
        return this;
    }

    /**
     * set 不发送通知栏 0， 发送通知栏 1
     *
     * @param notifyMsgBarEnable
     */
    public Monitor notifyMsgBarEnable(Integer notifyMsgBarEnable) {
        this.notifyMsgBarEnable = notifyMsgBarEnable;
        return this;
    }

    /**
     * set 手机号码
     *
     * @param notifySms
     */
    public Monitor notifySms(String notifySms) {
        this.notifySms = notifySms;
        return this;
    }

    /**
     * set 不发送短信 0， 发送短信 1
     *
     * @param notifySmsEnable
     */
    public Monitor notifySmsEnable(Integer notifySmsEnable) {
        this.notifySmsEnable = notifySmsEnable;
        return this;
    }

    /**
     * set https 0，https 1
     *
     * @param protocol
     */
    public Monitor protocol(Integer protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * set 0自动恢复 1手动恢复
     *
     * @param stopRecoverRule
     */
    public Monitor stopRecoverRule(Integer stopRecoverRule) {
        this.stopRecoverRule = stopRecoverRule;
        return this;
    }

    /**
     * set 子域名
     *
     * @param subDomainName
     */
    public Monitor subDomainName(String subDomainName) {
        this.subDomainName = subDomainName;
        return this;
    }

    /**
     * set 0自动恢复至主host 1手动恢复至主host
     *
     * @param switchRecoverRule
     */
    public Monitor switchRecoverRule(Integer switchRecoverRule) {
        this.switchRecoverRule = switchRecoverRule;
        return this;
    }

    /**
     * set 1为A记录，2为CNAME
     *
     * @param type
     */
    public Monitor type(Integer type) {
        this.type = type;
        return this;
    }

    /**
     * set 使用记录，host_value 0，ip_backup_01 1，ip_backup_02 2，cname_backup 3
     *
     * @param usedType
     */
    public Monitor usedType(Integer usedType) {
        this.usedType = usedType;
        return this;
    }


}