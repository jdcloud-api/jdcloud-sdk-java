/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 弹性伸缩规则管理
 * 弹性伸缩规则管理
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ag.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.ag.model.CreateSimpleAsRuleSpec;
import com.jdcloud.sdk.service.ag.model.CreateTargetAsRuleSpec;
import com.jdcloud.sdk.service.ag.model.CreateStepAsRuleSpec;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建伸缩规则
- 所有参数取值为字符串类型的都严格区分大小写
- 伸缩功能关闭的情况下，不支持调用此接口
- 目标跟踪规则创建后会自动生成两个告警任务，分别用于扩容和缩容
- 步进规则必须绑定一个告警任务

 */
public class CreateAsRuleRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 高可用组ID
     * Required:true
     */
    @Required
    private String agId;

    /**
     * 伸缩规则名称，长度为1~32个字符，只允许中文、数字、大小写字母、英文下划线（_）、连字符（-）
     * Required:true
     */
    @Required
    private String name;

    /**
     * 伸缩规则描述，最大长度为256个字符
     */
    private String description;

    /**
     * 伸缩规则类型，取值范围：[&#x60;Simple&#x60;,&#x60;Target&#x60;,&#x60;Step&#x60;]
- &#x60;Simple&#x60;：简单规则，直接设置调整方式和调整值
- &#x60;Target&#x60;：目标跟踪规则，根据监控项和目标值计算需要扩缩容的实例数量，尽量将监控项的指标值维持在目标值和目标值的90%之间
- &#x60;Step&#x60;：步进规则，根据阈值和指标值提供分步扩展方式

     * Required:true
     */
    @Required
    private String asRuleType;

    /**
     * 简单规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Simple&#x60;时必填
     */
    private CreateSimpleAsRuleSpec simpleAsRuleSpec;

    /**
     * 目标跟踪规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Target&#x60;时必填
     */
    private CreateTargetAsRuleSpec targetAsRuleSpec;

    /**
     * 步进规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Step&#x60;时必填
     */
    private CreateStepAsRuleSpec stepAsRuleSpec;

    /**
     * 地域ID
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 高可用组ID
     *
     * @return
     */
    public String getAgId() {
        return agId;
    }

    /**
     * set 高可用组ID
     *
     * @param agId
     */
    public void setAgId(String agId) {
        this.agId = agId;
    }


    /**
     * get 伸缩规则名称，长度为1~32个字符，只允许中文、数字、大小写字母、英文下划线（_）、连字符（-）
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 伸缩规则名称，长度为1~32个字符，只允许中文、数字、大小写字母、英文下划线（_）、连字符（-）
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 伸缩规则描述，最大长度为256个字符
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 伸缩规则描述，最大长度为256个字符
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 伸缩规则类型，取值范围：[&#x60;Simple&#x60;,&#x60;Target&#x60;,&#x60;Step&#x60;]
- &#x60;Simple&#x60;：简单规则，直接设置调整方式和调整值
- &#x60;Target&#x60;：目标跟踪规则，根据监控项和目标值计算需要扩缩容的实例数量，尽量将监控项的指标值维持在目标值和目标值的90%之间
- &#x60;Step&#x60;：步进规则，根据阈值和指标值提供分步扩展方式

     *
     * @return
     */
    public String getAsRuleType() {
        return asRuleType;
    }

    /**
     * set 伸缩规则类型，取值范围：[&#x60;Simple&#x60;,&#x60;Target&#x60;,&#x60;Step&#x60;]
- &#x60;Simple&#x60;：简单规则，直接设置调整方式和调整值
- &#x60;Target&#x60;：目标跟踪规则，根据监控项和目标值计算需要扩缩容的实例数量，尽量将监控项的指标值维持在目标值和目标值的90%之间
- &#x60;Step&#x60;：步进规则，根据阈值和指标值提供分步扩展方式

     *
     * @param asRuleType
     */
    public void setAsRuleType(String asRuleType) {
        this.asRuleType = asRuleType;
    }


    /**
     * get 简单规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Simple&#x60;时必填
     *
     * @return
     */
    public CreateSimpleAsRuleSpec getSimpleAsRuleSpec() {
        return simpleAsRuleSpec;
    }

    /**
     * set 简单规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Simple&#x60;时必填
     *
     * @param simpleAsRuleSpec
     */
    public void setSimpleAsRuleSpec(CreateSimpleAsRuleSpec simpleAsRuleSpec) {
        this.simpleAsRuleSpec = simpleAsRuleSpec;
    }


    /**
     * get 目标跟踪规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Target&#x60;时必填
     *
     * @return
     */
    public CreateTargetAsRuleSpec getTargetAsRuleSpec() {
        return targetAsRuleSpec;
    }

    /**
     * set 目标跟踪规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Target&#x60;时必填
     *
     * @param targetAsRuleSpec
     */
    public void setTargetAsRuleSpec(CreateTargetAsRuleSpec targetAsRuleSpec) {
        this.targetAsRuleSpec = targetAsRuleSpec;
    }


    /**
     * get 步进规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Step&#x60;时必填
     *
     * @return
     */
    public CreateStepAsRuleSpec getStepAsRuleSpec() {
        return stepAsRuleSpec;
    }

    /**
     * set 步进规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Step&#x60;时必填
     *
     * @param stepAsRuleSpec
     */
    public void setStepAsRuleSpec(CreateStepAsRuleSpec stepAsRuleSpec) {
        this.stepAsRuleSpec = stepAsRuleSpec;
    }


    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 高可用组ID
     *
     * @param agId
     */
    public CreateAsRuleRequest agId(String agId) {
        this.agId = agId;
        return this;
    }


    /**
     * set 伸缩规则名称，长度为1~32个字符，只允许中文、数字、大小写字母、英文下划线（_）、连字符（-）
     *
     * @param name
     */
    public CreateAsRuleRequest name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 伸缩规则描述，最大长度为256个字符
     *
     * @param description
     */
    public CreateAsRuleRequest description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 伸缩规则类型，取值范围：[&#x60;Simple&#x60;,&#x60;Target&#x60;,&#x60;Step&#x60;]
- &#x60;Simple&#x60;：简单规则，直接设置调整方式和调整值
- &#x60;Target&#x60;：目标跟踪规则，根据监控项和目标值计算需要扩缩容的实例数量，尽量将监控项的指标值维持在目标值和目标值的90%之间
- &#x60;Step&#x60;：步进规则，根据阈值和指标值提供分步扩展方式

     *
     * @param asRuleType
     */
    public CreateAsRuleRequest asRuleType(String asRuleType) {
        this.asRuleType = asRuleType;
        return this;
    }


    /**
     * set 简单规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Simple&#x60;时必填
     *
     * @param simpleAsRuleSpec
     */
    public CreateAsRuleRequest simpleAsRuleSpec(CreateSimpleAsRuleSpec simpleAsRuleSpec) {
        this.simpleAsRuleSpec = simpleAsRuleSpec;
        return this;
    }


    /**
     * set 目标跟踪规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Target&#x60;时必填
     *
     * @param targetAsRuleSpec
     */
    public CreateAsRuleRequest targetAsRuleSpec(CreateTargetAsRuleSpec targetAsRuleSpec) {
        this.targetAsRuleSpec = targetAsRuleSpec;
        return this;
    }


    /**
     * set 步进规则相关参数，当&#x60;asRuleType&#x60;为&#x60;Step&#x60;时必填
     *
     * @param stepAsRuleSpec
     */
    public CreateAsRuleRequest stepAsRuleSpec(CreateStepAsRuleSpec stepAsRuleSpec) {
        this.stepAsRuleSpec = stepAsRuleSpec;
        return this;
    }


    /**
     * set 地域ID
     *
     * @param regionId
     */
    public CreateAsRuleRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}