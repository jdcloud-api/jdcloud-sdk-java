/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 弹性伸缩规则管理
 * 弹性伸缩规则管理
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ag.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.ag.model.AsRuleInfo;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查看伸缩规则
- 所有参数取值为字符串类型的都严格区分大小写
- 伸缩功能开启或者关闭的情况下，都支持调用此接口

 */
public class DescribeAsRulesResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 本次查询可匹配到的总记录数，使用者需要结合 &#x60;pageNumber&#x60; 和 &#x60;pageSize&#x60; 计算是否可以继续分页。
     */
    private Integer totalCount;

    /**
     * asRules
     */
    
    private List<AsRuleInfo> asRules;


    /**
     * get 本次查询可匹配到的总记录数，使用者需要结合 &#x60;pageNumber&#x60; 和 &#x60;pageSize&#x60; 计算是否可以继续分页。
     *
     * @return
     */
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * set 本次查询可匹配到的总记录数，使用者需要结合 &#x60;pageNumber&#x60; 和 &#x60;pageSize&#x60; 计算是否可以继续分页。
     *
     * @param totalCount
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }


    /**
    * get asRules
    *
    * @return
    */
    public List<AsRuleInfo> getAsRules() {
        return asRules;
    }

    /**
    * set asRules
    *
    * @param asRules
    */
    public void setAsRules(List<AsRuleInfo> asRules) {
        this.asRules = asRules;
    }



    /**
     * set 本次查询可匹配到的总记录数，使用者需要结合 &#x60;pageNumber&#x60; 和 &#x60;pageSize&#x60; 计算是否可以继续分页。
     *
     * @param totalCount
     */
    public DescribeAsRulesResult totalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
    * set asRules
    *
    * @param asRules
    */
    public DescribeAsRulesResult asRules(List<AsRuleInfo> asRules) {
        this.asRules = asRules;
        return this;
    }



    /**
     * add item to asRules
     *
     * @param asRule
     */
    public void addAsRule(AsRuleInfo asRule) {
        if (this.asRules == null) {
            this.asRules = new ArrayList<>();
        }
        this.asRules.add(asRule);
    }
}