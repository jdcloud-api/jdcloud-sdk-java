/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 高可用组
 * 高可用组相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ag.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.ag.model.UpdateAgRequest;
import com.jdcloud.sdk.service.ag.model.UpdateAgResponse;
import com.jdcloud.sdk.service.ag.client.UpdateAgExecutor;
import com.jdcloud.sdk.service.ag.model.DeleteAgRequest;
import com.jdcloud.sdk.service.ag.model.DeleteAgResponse;
import com.jdcloud.sdk.service.ag.client.DeleteAgExecutor;
import com.jdcloud.sdk.service.ag.model.SetInstanceTemplateRequest;
import com.jdcloud.sdk.service.ag.model.SetInstanceTemplateResponse;
import com.jdcloud.sdk.service.ag.client.SetInstanceTemplateExecutor;
import com.jdcloud.sdk.service.ag.model.DescribeQuotasRequest;
import com.jdcloud.sdk.service.ag.model.DescribeQuotasResponse;
import com.jdcloud.sdk.service.ag.client.DescribeQuotasExecutor;
import com.jdcloud.sdk.service.ag.model.AbandonInstancesRequest;
import com.jdcloud.sdk.service.ag.model.AbandonInstancesResponse;
import com.jdcloud.sdk.service.ag.client.AbandonInstancesExecutor;
import com.jdcloud.sdk.service.ag.model.CreateAgRequest;
import com.jdcloud.sdk.service.ag.model.CreateAgResponse;
import com.jdcloud.sdk.service.ag.client.CreateAgExecutor;
import com.jdcloud.sdk.service.ag.model.DescribeAgRequest;
import com.jdcloud.sdk.service.ag.model.DescribeAgResponse;
import com.jdcloud.sdk.service.ag.client.DescribeAgExecutor;
import com.jdcloud.sdk.service.ag.model.DescribeAgsRequest;
import com.jdcloud.sdk.service.ag.model.DescribeAgsResponse;
import com.jdcloud.sdk.service.ag.client.DescribeAgsExecutor;

/**
 * agClient
 */
public class AgClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.9";
    public final static String DefaultEndpoint = "ag.jdcloud-api.com";
    public final static String ServiceName = "ag";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private AgClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 修改一个高可用组的信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateAgResponse updateAg(UpdateAgRequest request) throws JdcloudSdkException {
        return new UpdateAgExecutor().client(this).execute(request);
    }

    /**
     * 根据 ID 删除高可用组，需确保 AG 中云主机实例已全部删除
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAgResponse deleteAg(DeleteAgRequest request) throws JdcloudSdkException {
        return new DeleteAgExecutor().client(this).execute(request);
    }

    /**
     * 修改高可用组的实例模板&lt;br&gt;- 对于更换实例模板来说，如果已经关联负载均衡，则VPC不可以更改。&lt;br&gt;- 自定义配置型不可更改实例模板。
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstanceTemplateResponse setInstanceTemplate(SetInstanceTemplateRequest request) throws JdcloudSdkException {
        return new SetInstanceTemplateExecutor().client(this).execute(request);
    }

    /**
     * 查询(ag)配额
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeQuotasResponse describeQuotas(DescribeQuotasRequest request) throws JdcloudSdkException {
        return new DescribeQuotasExecutor().client(this).execute(request);
    }

    /**
     * 从高可用组中剔除实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AbandonInstancesResponse abandonInstances(AbandonInstancesRequest request) throws JdcloudSdkException {
        return new AbandonInstancesExecutor().client(this).execute(request);
    }

    /**
     * 创建一个高可用组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAgResponse createAg(CreateAgRequest request) throws JdcloudSdkException {
        return new CreateAgExecutor().client(this).execute(request);
    }

    /**
     * 根据 ID 查询高可用组详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAgResponse describeAg(DescribeAgRequest request) throws JdcloudSdkException {
        return new DescribeAgExecutor().client(this).execute(request);
    }

    /**
     * 使用过滤条件查询一个或多个高可用组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAgsResponse describeAgs(DescribeAgsRequest request) throws JdcloudSdkException {
        return new DescribeAgsExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public AgClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private AgClient agClient;

        public DefaultBuilder() {
            agClient = new AgClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            agClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            agClient.httpRequestConfig = config;
            return this;
        }

        public AgClient build() throws JdcloudSdkException {

            if (agClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                agClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (agClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("AgClient build error: jdcloud credentials provider not set");
                }
            }
            if (agClient.httpRequestConfig == null) {
                agClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (agClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("AgClient build error: http request config not set");
                }
            }
            return agClient;
        }

        public Builder environment(Environment environment) {
            agClient.environment = environment;
            return this;
        }
    }
}
