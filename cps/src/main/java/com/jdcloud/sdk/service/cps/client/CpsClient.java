/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云物理服务器
 * 云物理服务器相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cps.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.cps.model.DescribeServersRequest;
import com.jdcloud.sdk.service.cps.model.DescribeServersResponse;
import com.jdcloud.sdk.service.cps.client.DescribeServersExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeSubnetRequest;
import com.jdcloud.sdk.service.cps.model.DescribeSubnetResponse;
import com.jdcloud.sdk.service.cps.client.DescribeSubnetExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyListenerRequest;
import com.jdcloud.sdk.service.cps.model.ModifyListenerResponse;
import com.jdcloud.sdk.service.cps.client.ModifyListenerExecutor;
import com.jdcloud.sdk.service.cps.model.AssociateElasticIpLBRequest;
import com.jdcloud.sdk.service.cps.model.AssociateElasticIpLBResponse;
import com.jdcloud.sdk.service.cps.client.AssociateElasticIpLBExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteVpcRequest;
import com.jdcloud.sdk.service.cps.model.DeleteVpcResponse;
import com.jdcloud.sdk.service.cps.client.DeleteVpcExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceStatusRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceStatusResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstanceStatusExecutor;
import com.jdcloud.sdk.service.cps.model.AddServersRequest;
import com.jdcloud.sdk.service.cps.model.AddServersResponse;
import com.jdcloud.sdk.service.cps.client.AddServersExecutor;
import com.jdcloud.sdk.service.cps.model.ReinstallInstanceRequest;
import com.jdcloud.sdk.service.cps.model.ReinstallInstanceResponse;
import com.jdcloud.sdk.service.cps.client.ReinstallInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteServerGroupRequest;
import com.jdcloud.sdk.service.cps.model.DeleteServerGroupResponse;
import com.jdcloud.sdk.service.cps.client.DeleteServerGroupExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeKeypairRequest;
import com.jdcloud.sdk.service.cps.model.DescribeKeypairResponse;
import com.jdcloud.sdk.service.cps.client.DescribeKeypairExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeDeviceRaidsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeDeviceRaidsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeDeviceRaidsExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyIpv6GatewayRequest;
import com.jdcloud.sdk.service.cps.model.ModifyIpv6GatewayResponse;
import com.jdcloud.sdk.service.cps.client.ModifyIpv6GatewayExecutor;
import com.jdcloud.sdk.service.cps.model.DisassociateElasticIpLBRequest;
import com.jdcloud.sdk.service.cps.model.DisassociateElasticIpLBResponse;
import com.jdcloud.sdk.service.cps.client.DisassociateElasticIpLBExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeServerGroupsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeServerGroupsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeServerGroupsExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyVpcRequest;
import com.jdcloud.sdk.service.cps.model.ModifyVpcResponse;
import com.jdcloud.sdk.service.cps.client.ModifyVpcExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyIpv6AddressBandwidthRequest;
import com.jdcloud.sdk.service.cps.model.ModifyIpv6AddressBandwidthResponse;
import com.jdcloud.sdk.service.cps.client.ModifyIpv6AddressBandwidthExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteAliasIpRequest;
import com.jdcloud.sdk.service.cps.model.DeleteAliasIpResponse;
import com.jdcloud.sdk.service.cps.client.DeleteAliasIpExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeCertRequest;
import com.jdcloud.sdk.service.cps.model.DescribeCertResponse;
import com.jdcloud.sdk.service.cps.client.DescribeCertExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceNameRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceNameResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstanceNameExecutor;
import com.jdcloud.sdk.service.cps.model.ModifySubnetRequest;
import com.jdcloud.sdk.service.cps.model.ModifySubnetResponse;
import com.jdcloud.sdk.service.cps.client.ModifySubnetExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeVpcsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeVpcsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeVpcsExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6GatewaysRequest;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6GatewaysResponse;
import com.jdcloud.sdk.service.cps.client.DescribeIpv6GatewaysExecutor;
import com.jdcloud.sdk.service.cps.model.StopInstancesRequest;
import com.jdcloud.sdk.service.cps.model.StopInstancesResponse;
import com.jdcloud.sdk.service.cps.client.StopInstancesExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceRaidRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceRaidResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstanceRaidExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6AddressRequest;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6AddressResponse;
import com.jdcloud.sdk.service.cps.client.DescribeIpv6AddressExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeListenersRequest;
import com.jdcloud.sdk.service.cps.model.DescribeListenersResponse;
import com.jdcloud.sdk.service.cps.client.DescribeListenersExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeRegionesRequest;
import com.jdcloud.sdk.service.cps.model.DescribeRegionesResponse;
import com.jdcloud.sdk.service.cps.client.DescribeRegionesExecutor;
import com.jdcloud.sdk.service.cps.model.CreateCertRequest;
import com.jdcloud.sdk.service.cps.model.CreateCertResponse;
import com.jdcloud.sdk.service.cps.client.CreateCertExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyServerGroupRequest;
import com.jdcloud.sdk.service.cps.model.ModifyServerGroupResponse;
import com.jdcloud.sdk.service.cps.client.ModifyServerGroupExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyInstanceRequest;
import com.jdcloud.sdk.service.cps.model.ModifyInstanceResponse;
import com.jdcloud.sdk.service.cps.client.ModifyInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeKeypairsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeKeypairsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeKeypairsExecutor;
import com.jdcloud.sdk.service.cps.model.AssignIpv6GatewayRequest;
import com.jdcloud.sdk.service.cps.model.AssignIpv6GatewayResponse;
import com.jdcloud.sdk.service.cps.client.AssignIpv6GatewayExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeDeviceTypesRequest;
import com.jdcloud.sdk.service.cps.model.DescribeDeviceTypesResponse;
import com.jdcloud.sdk.service.cps.client.DescribeDeviceTypesExecutor;
import com.jdcloud.sdk.service.cps.model.DisassociateElasticIpRequest;
import com.jdcloud.sdk.service.cps.model.DisassociateElasticIpResponse;
import com.jdcloud.sdk.service.cps.client.DisassociateElasticIpExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpRequest;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpResponse;
import com.jdcloud.sdk.service.cps.client.DescribeElasticIpExecutor;
import com.jdcloud.sdk.service.cps.model.RestartInstancesRequest;
import com.jdcloud.sdk.service.cps.model.RestartInstancesResponse;
import com.jdcloud.sdk.service.cps.client.RestartInstancesExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteSecondaryCidrRequest;
import com.jdcloud.sdk.service.cps.model.DeleteSecondaryCidrResponse;
import com.jdcloud.sdk.service.cps.client.DeleteSecondaryCidrExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeSecondaryCidrsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeSecondaryCidrsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeSecondaryCidrsExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeSlbsNameRequest;
import com.jdcloud.sdk.service.cps.model.DescribeSlbsNameResponse;
import com.jdcloud.sdk.service.cps.client.DescribeSlbsNameExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyLoadBalancerRequest;
import com.jdcloud.sdk.service.cps.model.ModifyLoadBalancerResponse;
import com.jdcloud.sdk.service.cps.client.ModifyLoadBalancerExecutor;
import com.jdcloud.sdk.service.cps.model.StartLoadBalancerRequest;
import com.jdcloud.sdk.service.cps.model.StartLoadBalancerResponse;
import com.jdcloud.sdk.service.cps.client.StartLoadBalancerExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeRouteTablesRequest;
import com.jdcloud.sdk.service.cps.model.DescribeRouteTablesResponse;
import com.jdcloud.sdk.service.cps.client.DescribeRouteTablesExecutor;
import com.jdcloud.sdk.service.cps.model.StopLoadBalancerRequest;
import com.jdcloud.sdk.service.cps.model.StopLoadBalancerResponse;
import com.jdcloud.sdk.service.cps.client.StopLoadBalancerExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyBandwidthRequest;
import com.jdcloud.sdk.service.cps.model.ModifyBandwidthResponse;
import com.jdcloud.sdk.service.cps.client.ModifyBandwidthExecutor;
import com.jdcloud.sdk.service.cps.model.AssignIpv6AddressRequest;
import com.jdcloud.sdk.service.cps.model.AssignIpv6AddressResponse;
import com.jdcloud.sdk.service.cps.client.AssignIpv6AddressExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceMonitorInfoRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstanceMonitorInfoResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstanceMonitorInfoExecutor;
import com.jdcloud.sdk.service.cps.model.CreateInstancesRequest;
import com.jdcloud.sdk.service.cps.model.CreateInstancesResponse;
import com.jdcloud.sdk.service.cps.client.CreateInstancesExecutor;
import com.jdcloud.sdk.service.cps.model.ResetPasswordRequest;
import com.jdcloud.sdk.service.cps.model.ResetPasswordResponse;
import com.jdcloud.sdk.service.cps.client.ResetPasswordExecutor;
import com.jdcloud.sdk.service.cps.model.AssociateElasticIpRequest;
import com.jdcloud.sdk.service.cps.model.AssociateElasticIpResponse;
import com.jdcloud.sdk.service.cps.client.AssociateElasticIpExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeListenerRequest;
import com.jdcloud.sdk.service.cps.model.DescribeListenerResponse;
import com.jdcloud.sdk.service.cps.client.DescribeListenerExecutor;
import com.jdcloud.sdk.service.cps.model.StopInstanceRequest;
import com.jdcloud.sdk.service.cps.model.StopInstanceResponse;
import com.jdcloud.sdk.service.cps.client.StopInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeVpcRequest;
import com.jdcloud.sdk.service.cps.model.DescribeVpcResponse;
import com.jdcloud.sdk.service.cps.client.DescribeVpcExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeSubnetsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeSubnetsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeSubnetsExecutor;
import com.jdcloud.sdk.service.cps.model.StartInstancesRequest;
import com.jdcloud.sdk.service.cps.model.StartInstancesResponse;
import com.jdcloud.sdk.service.cps.client.StartInstancesExecutor;
import com.jdcloud.sdk.service.cps.model.ApplyElasticIpsRequest;
import com.jdcloud.sdk.service.cps.model.ApplyElasticIpsResponse;
import com.jdcloud.sdk.service.cps.client.ApplyElasticIpsExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteListenerRequest;
import com.jdcloud.sdk.service.cps.model.DeleteListenerResponse;
import com.jdcloud.sdk.service.cps.client.DeleteListenerExecutor;
import com.jdcloud.sdk.service.cps.model.CreateKeypairsRequest;
import com.jdcloud.sdk.service.cps.model.CreateKeypairsResponse;
import com.jdcloud.sdk.service.cps.client.CreateKeypairsExecutor;
import com.jdcloud.sdk.service.cps.model.AssignIpv6AddressesBandwidthRequest;
import com.jdcloud.sdk.service.cps.model.AssignIpv6AddressesBandwidthResponse;
import com.jdcloud.sdk.service.cps.client.AssignIpv6AddressesBandwidthExecutor;
import com.jdcloud.sdk.service.cps.model.RemoveServerRequest;
import com.jdcloud.sdk.service.cps.model.RemoveServerResponse;
import com.jdcloud.sdk.service.cps.client.RemoveServerExecutor;
import com.jdcloud.sdk.service.cps.model.ImportKeypairsRequest;
import com.jdcloud.sdk.service.cps.model.ImportKeypairsResponse;
import com.jdcloud.sdk.service.cps.client.ImportKeypairsExecutor;
import com.jdcloud.sdk.service.cps.model.CreateServerGroupRequest;
import com.jdcloud.sdk.service.cps.model.CreateServerGroupResponse;
import com.jdcloud.sdk.service.cps.client.CreateServerGroupExecutor;
import com.jdcloud.sdk.service.cps.model.StartListenerRequest;
import com.jdcloud.sdk.service.cps.model.StartListenerResponse;
import com.jdcloud.sdk.service.cps.client.StartListenerExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeLoadBalancersRequest;
import com.jdcloud.sdk.service.cps.model.DescribeLoadBalancersResponse;
import com.jdcloud.sdk.service.cps.client.DescribeLoadBalancersExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpNameRequest;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpNameResponse;
import com.jdcloud.sdk.service.cps.client.DescribeElasticIpNameExecutor;
import com.jdcloud.sdk.service.cps.model.StartInstanceRequest;
import com.jdcloud.sdk.service.cps.model.StartInstanceResponse;
import com.jdcloud.sdk.service.cps.client.StartInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6GatewayRequest;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6GatewayResponse;
import com.jdcloud.sdk.service.cps.client.DescribeIpv6GatewayExecutor;
import com.jdcloud.sdk.service.cps.model.AssignIpv6CidrRequest;
import com.jdcloud.sdk.service.cps.model.AssignIpv6CidrResponse;
import com.jdcloud.sdk.service.cps.client.AssignIpv6CidrExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeCPSLBRegionsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeCPSLBRegionsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeCPSLBRegionsExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeRouteTableRequest;
import com.jdcloud.sdk.service.cps.model.DescribeRouteTableResponse;
import com.jdcloud.sdk.service.cps.client.DescribeRouteTableExecutor;
import com.jdcloud.sdk.service.cps.model.RemoveCertRequest;
import com.jdcloud.sdk.service.cps.model.RemoveCertResponse;
import com.jdcloud.sdk.service.cps.client.RemoveCertExecutor;
import com.jdcloud.sdk.service.cps.model.CreateAliasIpRequest;
import com.jdcloud.sdk.service.cps.model.CreateAliasIpResponse;
import com.jdcloud.sdk.service.cps.client.CreateAliasIpExecutor;
import com.jdcloud.sdk.service.cps.model.CreateSubnetRequest;
import com.jdcloud.sdk.service.cps.model.CreateSubnetResponse;
import com.jdcloud.sdk.service.cps.client.CreateSubnetExecutor;
import com.jdcloud.sdk.service.cps.model.RestartInstanceRequest;
import com.jdcloud.sdk.service.cps.model.RestartInstanceResponse;
import com.jdcloud.sdk.service.cps.client.RestartInstanceExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeLoadBalancerRequest;
import com.jdcloud.sdk.service.cps.model.DescribeLoadBalancerResponse;
import com.jdcloud.sdk.service.cps.client.DescribeLoadBalancerExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeElasticIpsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeElasticIpsExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6AddressesRequest;
import com.jdcloud.sdk.service.cps.model.DescribeIpv6AddressesResponse;
import com.jdcloud.sdk.service.cps.client.DescribeIpv6AddressesExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeOSRequest;
import com.jdcloud.sdk.service.cps.model.DescribeOSResponse;
import com.jdcloud.sdk.service.cps.client.DescribeOSExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeEventLogsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeEventLogsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeEventLogsExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyCertRequest;
import com.jdcloud.sdk.service.cps.model.ModifyCertResponse;
import com.jdcloud.sdk.service.cps.client.ModifyCertExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeServerGroupRequest;
import com.jdcloud.sdk.service.cps.model.DescribeServerGroupResponse;
import com.jdcloud.sdk.service.cps.client.DescribeServerGroupExecutor;
import com.jdcloud.sdk.service.cps.model.CreateListenerRequest;
import com.jdcloud.sdk.service.cps.model.CreateListenerResponse;
import com.jdcloud.sdk.service.cps.client.CreateListenerExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyElasticIpBandwidthRequest;
import com.jdcloud.sdk.service.cps.model.ModifyElasticIpBandwidthResponse;
import com.jdcloud.sdk.service.cps.client.ModifyElasticIpBandwidthExecutor;
import com.jdcloud.sdk.service.cps.model.CreateSecondaryCidrRequest;
import com.jdcloud.sdk.service.cps.model.CreateSecondaryCidrResponse;
import com.jdcloud.sdk.service.cps.client.CreateSecondaryCidrExecutor;
import com.jdcloud.sdk.service.cps.model.ModifyServerRequest;
import com.jdcloud.sdk.service.cps.model.ModifyServerResponse;
import com.jdcloud.sdk.service.cps.client.ModifyServerExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeInstancesRequest;
import com.jdcloud.sdk.service.cps.model.DescribeInstancesResponse;
import com.jdcloud.sdk.service.cps.client.DescribeInstancesExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeAvailablePrivateIpRequest;
import com.jdcloud.sdk.service.cps.model.DescribeAvailablePrivateIpResponse;
import com.jdcloud.sdk.service.cps.client.DescribeAvailablePrivateIpExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeCertsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeCertsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeCertsExecutor;
import com.jdcloud.sdk.service.cps.model.CreateLoadBalancerRequest;
import com.jdcloud.sdk.service.cps.model.CreateLoadBalancerResponse;
import com.jdcloud.sdk.service.cps.client.CreateLoadBalancerExecutor;
import com.jdcloud.sdk.service.cps.model.CreateVpcRequest;
import com.jdcloud.sdk.service.cps.model.CreateVpcResponse;
import com.jdcloud.sdk.service.cps.client.CreateVpcExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeAliasIpsRequest;
import com.jdcloud.sdk.service.cps.model.DescribeAliasIpsResponse;
import com.jdcloud.sdk.service.cps.client.DescribeAliasIpsExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteKeypairsRequest;
import com.jdcloud.sdk.service.cps.model.DeleteKeypairsResponse;
import com.jdcloud.sdk.service.cps.client.DeleteKeypairsExecutor;
import com.jdcloud.sdk.service.cps.model.StopListenerRequest;
import com.jdcloud.sdk.service.cps.model.StopListenerResponse;
import com.jdcloud.sdk.service.cps.client.StopListenerExecutor;
import com.jdcloud.sdk.service.cps.model.DeleteSubnetRequest;
import com.jdcloud.sdk.service.cps.model.DeleteSubnetResponse;
import com.jdcloud.sdk.service.cps.client.DeleteSubnetExecutor;
import com.jdcloud.sdk.service.cps.model.DescribeBasicSubnetRequest;
import com.jdcloud.sdk.service.cps.model.DescribeBasicSubnetResponse;
import com.jdcloud.sdk.service.cps.client.DescribeBasicSubnetExecutor;

/**
 * cpsClient
 */
public class CpsClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "cps.jdcloud-api.com";
    public final static String ServiceName = "cps";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private CpsClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询后端服务器列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeServersResponse describeServers(DescribeServersRequest request) throws JdcloudSdkException {
        return new DescribeServersExecutor().client(this).execute(request);
    }

    /**
     * 查询子网详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetResponse describeSubnet(DescribeSubnetRequest request) throws JdcloudSdkException {
        return new DescribeSubnetExecutor().client(this).execute(request);
    }

    /**
     * 修改监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyListenerResponse modifyListener(ModifyListenerRequest request) throws JdcloudSdkException {
        return new ModifyListenerExecutor().client(this).execute(request);
    }

    /**
     * 绑定弹性公网IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateElasticIpLBResponse associateElasticIpLB(AssociateElasticIpLBRequest request) throws JdcloudSdkException {
        return new AssociateElasticIpLBExecutor().client(this).execute(request);
    }

    /**
     * 删除私有网络

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteVpcResponse deleteVpc(DeleteVpcRequest request) throws JdcloudSdkException {
        return new DeleteVpcExecutor().client(this).execute(request);
    }

    /**
     * 查询单个云物理服务器硬件监控信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceStatusResponse describeInstanceStatus(DescribeInstanceStatusRequest request) throws JdcloudSdkException {
        return new DescribeInstanceStatusExecutor().client(this).execute(request);
    }

    /**
     * 添加后端服务器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddServersResponse addServers(AddServersRequest request) throws JdcloudSdkException {
        return new AddServersExecutor().client(this).execute(request);
    }

    /**
     * 重装云物理服务器，只能重装stopped状态的服务器&lt;br/&gt;
- 可调用接口（describeOS）获取云物理服务器支持的操作系统列表
 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ReinstallInstanceResponse reinstallInstance(ReinstallInstanceRequest request) throws JdcloudSdkException {
        return new ReinstallInstanceExecutor().client(this).execute(request);
    }

    /**
     * 删除虚拟服务器组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteServerGroupResponse deleteServerGroup(DeleteServerGroupRequest request) throws JdcloudSdkException {
        return new DeleteServerGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询密钥对详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeKeypairResponse describeKeypair(DescribeKeypairRequest request) throws JdcloudSdkException {
        return new DescribeKeypairExecutor().client(this).execute(request);
    }

    /**
     * 查询某种实例类型的云物理服务器支持的RAID类型，可查询系统盘RAID类型和数据盘RAID类型
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDeviceRaidsResponse describeDeviceRaids(DescribeDeviceRaidsRequest request) throws JdcloudSdkException {
        return new DescribeDeviceRaidsExecutor().client(this).execute(request);
    }

    /**
     * 修改IPv6网关实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyIpv6GatewayResponse modifyIpv6Gateway(ModifyIpv6GatewayRequest request) throws JdcloudSdkException {
        return new ModifyIpv6GatewayExecutor().client(this).execute(request);
    }

    /**
     * 解绑弹性公网IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateElasticIpLBResponse disassociateElasticIpLB(DisassociateElasticIpLBRequest request) throws JdcloudSdkException {
        return new DisassociateElasticIpLBExecutor().client(this).execute(request);
    }

    /**
     * 查询虚拟服务器组列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeServerGroupsResponse describeServerGroups(DescribeServerGroupsRequest request) throws JdcloudSdkException {
        return new DescribeServerGroupsExecutor().client(this).execute(request);
    }

    /**
     * 修改私有网络

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyVpcResponse modifyVpc(ModifyVpcRequest request) throws JdcloudSdkException {
        return new ModifyVpcExecutor().client(this).execute(request);
    }

    /**
     * 修改IPv6公网带宽

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyIpv6AddressBandwidthResponse modifyIpv6AddressBandwidth(ModifyIpv6AddressBandwidthRequest request) throws JdcloudSdkException {
        return new ModifyIpv6AddressBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 删除别名IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteAliasIpResponse deleteAliasIp(DeleteAliasIpRequest request) throws JdcloudSdkException {
        return new DeleteAliasIpExecutor().client(this).execute(request);
    }

    /**
     * 查询证书详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCertResponse describeCert(DescribeCertRequest request) throws JdcloudSdkException {
        return new DescribeCertExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceNameResponse describeInstanceName(DescribeInstanceNameRequest request) throws JdcloudSdkException {
        return new DescribeInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 修改子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifySubnetResponse modifySubnet(ModifySubnetRequest request) throws JdcloudSdkException {
        return new ModifySubnetExecutor().client(this).execute(request);
    }

    /**
     * 查询私有网络列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcsResponse describeVpcs(DescribeVpcsRequest request) throws JdcloudSdkException {
        return new DescribeVpcsExecutor().client(this).execute(request);
    }

    /**
     * 查询IPv6网关实例列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIpv6GatewaysResponse describeIpv6Gateways(DescribeIpv6GatewaysRequest request) throws JdcloudSdkException {
        return new DescribeIpv6GatewaysExecutor().client(this).execute(request);
    }

    /**
     * 批量关闭云物理服务器，只能停止running状态的服务器 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopInstancesResponse stopInstances(StopInstancesRequest request) throws JdcloudSdkException {
        return new StopInstancesExecutor().client(this).execute(request);
    }

    /**
     * 查询单个云物理服务器已安装的RAID信息，包括系统盘RAID信息和数据盘RAID信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceRaidResponse describeInstanceRaid(DescribeInstanceRaidRequest request) throws JdcloudSdkException {
        return new DescribeInstanceRaidExecutor().client(this).execute(request);
    }

    /**
     * 查询IPv6地址例详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIpv6AddressResponse describeIpv6Address(DescribeIpv6AddressRequest request) throws JdcloudSdkException {
        return new DescribeIpv6AddressExecutor().client(this).execute(request);
    }

    /**
     * 查询监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeListenersResponse describeListeners(DescribeListenersRequest request) throws JdcloudSdkException {
        return new DescribeListenersExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器地域列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRegionesResponse describeRegiones(DescribeRegionesRequest request) throws JdcloudSdkException {
        return new DescribeRegionesExecutor().client(this).execute(request);
    }

    /**
     * 创建证书

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateCertResponse createCert(CreateCertRequest request) throws JdcloudSdkException {
        return new CreateCertExecutor().client(this).execute(request);
    }

    /**
     * 修改虚拟服务器组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyServerGroupResponse modifyServerGroup(ModifyServerGroupRequest request) throws JdcloudSdkException {
        return new ModifyServerGroupExecutor().client(this).execute(request);
    }

    /**
     * 修改云物理服务器部分信息，包括名称、描述
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceResponse modifyInstance(ModifyInstanceRequest request) throws JdcloudSdkException {
        return new ModifyInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询密钥对列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeKeypairsResponse describeKeypairs(DescribeKeypairsRequest request) throws JdcloudSdkException {
        return new DescribeKeypairsExecutor().client(this).execute(request);
    }

    /**
     * 申请开通IPv6网关

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignIpv6GatewayResponse assignIpv6Gateway(AssignIpv6GatewayRequest request) throws JdcloudSdkException {
        return new AssignIpv6GatewayExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器实例类型
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDeviceTypesResponse describeDeviceTypes(DescribeDeviceTypesRequest request) throws JdcloudSdkException {
        return new DescribeDeviceTypesExecutor().client(this).execute(request);
    }

    /**
     * 解绑弹性公网IP

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisassociateElasticIpResponse disassociateElasticIp(DisassociateElasticIpRequest request) throws JdcloudSdkException {
        return new DisassociateElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性公网IP详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeElasticIpResponse describeElasticIp(DescribeElasticIpRequest request) throws JdcloudSdkException {
        return new DescribeElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 批量重启云物理服务器，只能重启running状态的服务器 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestartInstancesResponse restartInstances(RestartInstancesRequest request) throws JdcloudSdkException {
        return new RestartInstancesExecutor().client(this).execute(request);
    }

    /**
     * 删除次要CIDR
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteSecondaryCidrResponse deleteSecondaryCidr(DeleteSecondaryCidrRequest request) throws JdcloudSdkException {
        return new DeleteSecondaryCidrExecutor().client(this).execute(request);
    }

    /**
     * 查询次要CIDR列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSecondaryCidrsResponse describeSecondaryCidrs(DescribeSecondaryCidrsRequest request) throws JdcloudSdkException {
        return new DescribeSecondaryCidrsExecutor().client(this).execute(request);
    }

    /**
     * 查询SLB名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSlbsNameResponse describeSlbsName(DescribeSlbsNameRequest request) throws JdcloudSdkException {
        return new DescribeSlbsNameExecutor().client(this).execute(request);
    }

    /**
     * 修改负载均衡实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyLoadBalancerResponse modifyLoadBalancer(ModifyLoadBalancerRequest request) throws JdcloudSdkException {
        return new ModifyLoadBalancerExecutor().client(this).execute(request);
    }

    /**
     * 开启负载均衡实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartLoadBalancerResponse startLoadBalancer(StartLoadBalancerRequest request) throws JdcloudSdkException {
        return new StartLoadBalancerExecutor().client(this).execute(request);
    }

    /**
     * 查询路由表列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRouteTablesResponse describeRouteTables(DescribeRouteTablesRequest request) throws JdcloudSdkException {
        return new DescribeRouteTablesExecutor().client(this).execute(request);
    }

    /**
     * 关闭负载均衡实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopLoadBalancerResponse stopLoadBalancer(StopLoadBalancerRequest request) throws JdcloudSdkException {
        return new StopLoadBalancerExecutor().client(this).execute(request);
    }

    /**
     * 查询单台云物理服务器详细信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceResponse describeInstance(DescribeInstanceRequest request) throws JdcloudSdkException {
        return new DescribeInstanceExecutor().client(this).execute(request);
    }

    /**
     * 升级云物理服务器外网带宽，只能操作running或者stopped状态的服务器&lt;br/&gt;
- 不支持未启用外网的服务器升级带宽
- 外网带宽不支持降级

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyBandwidthResponse modifyBandwidth(ModifyBandwidthRequest request) throws JdcloudSdkException {
        return new ModifyBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 申请IPv6地址
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignIpv6AddressResponse assignIpv6Address(AssignIpv6AddressRequest request) throws JdcloudSdkException {
        return new AssignIpv6AddressExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器监控信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceMonitorInfoResponse describeInstanceMonitorInfo(DescribeInstanceMonitorInfoRequest request) throws JdcloudSdkException {
        return new DescribeInstanceMonitorInfoExecutor().client(this).execute(request);
    }

    /**
     * 创建一台或多台指定配置的云物理服务器&lt;br/&gt;
- 地域与可用区&lt;br/&gt;
  - 调用接口（describeRegiones）获取云物理服务器支持的地域与可用区&lt;br/&gt;
- 实例类型&lt;br/&gt;
  - 调用接口（describeDeviceTypes）获取物理实例类型列表&lt;br/&gt;
  - 不能使用已下线、或已售馨的实例类型&lt;br/&gt;
- 操作系统&lt;br/&gt;
  - 可调用接口（describeOS）获取云物理服务器支持的操作系统列表&lt;br/&gt;
- 存储&lt;br/&gt;
  - 数据盘多种RAID可选，可调用接口（describeDeviceRaids）获取服务器支持的RAID列表&lt;br/&gt;
- 网络&lt;br/&gt;
  - 网络类型目前支持basic、vpc&lt;br/&gt;
  - 线路目前只支持bgp&lt;br/&gt;
  - 支持不启用外网，如果启用外网，带宽范围[1,200] 单位Mbps&lt;br/&gt;
- 其他&lt;br/&gt;
  - 购买时长，可按年或月购买：月取值范围[1,9], 年取值范围[1,3]&lt;br/&gt;
  - 密码设置参考公共参数规范&lt;br/&gt;

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstancesResponse createInstances(CreateInstancesRequest request) throws JdcloudSdkException {
        return new CreateInstancesExecutor().client(this).execute(request);
    }

    /**
     * 重置云物理服务器密码

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResetPasswordResponse resetPassword(ResetPasswordRequest request) throws JdcloudSdkException {
        return new ResetPasswordExecutor().client(this).execute(request);
    }

    /**
     * 绑定弹性公网IP

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssociateElasticIpResponse associateElasticIp(AssociateElasticIpRequest request) throws JdcloudSdkException {
        return new AssociateElasticIpExecutor().client(this).execute(request);
    }

    /**
     * 查询监听器详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeListenerResponse describeListener(DescribeListenerRequest request) throws JdcloudSdkException {
        return new DescribeListenerExecutor().client(this).execute(request);
    }

    /**
     * 对单台云物理服务器执行关机操作，只能停止running状态的服务器 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopInstanceResponse stopInstance(StopInstanceRequest request) throws JdcloudSdkException {
        return new StopInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询私有网络详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeVpcResponse describeVpc(DescribeVpcRequest request) throws JdcloudSdkException {
        return new DescribeVpcExecutor().client(this).execute(request);
    }

    /**
     * 查询子网列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSubnetsResponse describeSubnets(DescribeSubnetsRequest request) throws JdcloudSdkException {
        return new DescribeSubnetsExecutor().client(this).execute(request);
    }

    /**
     * 批量开启云物理服务器，只能启动stopped状态的服务器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartInstancesResponse startInstances(StartInstancesRequest request) throws JdcloudSdkException {
        return new StartInstancesExecutor().client(this).execute(request);
    }

    /**
     * 申请弹性公网IP

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ApplyElasticIpsResponse applyElasticIps(ApplyElasticIpsRequest request) throws JdcloudSdkException {
        return new ApplyElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 删除监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteListenerResponse deleteListener(DeleteListenerRequest request) throws JdcloudSdkException {
        return new DeleteListenerExecutor().client(this).execute(request);
    }

    /**
     * 创建密钥对
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateKeypairsResponse createKeypairs(CreateKeypairsRequest request) throws JdcloudSdkException {
        return new CreateKeypairsExecutor().client(this).execute(request);
    }

    /**
     * 申请IPv6地址带宽

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignIpv6AddressesBandwidthResponse assignIpv6AddressesBandwidth(AssignIpv6AddressesBandwidthRequest request) throws JdcloudSdkException {
        return new AssignIpv6AddressesBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 移除后端服务器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveServerResponse removeServer(RemoveServerRequest request) throws JdcloudSdkException {
        return new RemoveServerExecutor().client(this).execute(request);
    }

    /**
     * 导入密钥对
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ImportKeypairsResponse importKeypairs(ImportKeypairsRequest request) throws JdcloudSdkException {
        return new ImportKeypairsExecutor().client(this).execute(request);
    }

    /**
     * 创建虚拟服务器组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateServerGroupResponse createServerGroup(CreateServerGroupRequest request) throws JdcloudSdkException {
        return new CreateServerGroupExecutor().client(this).execute(request);
    }

    /**
     * 开启监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartListenerResponse startListener(StartListenerRequest request) throws JdcloudSdkException {
        return new StartListenerExecutor().client(this).execute(request);
    }

    /**
     * 查询负载均衡实例列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLoadBalancersResponse describeLoadBalancers(DescribeLoadBalancersRequest request) throws JdcloudSdkException {
        return new DescribeLoadBalancersExecutor().client(this).execute(request);
    }

    /**
     * 查询EIP名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeElasticIpNameResponse describeElasticIpName(DescribeElasticIpNameRequest request) throws JdcloudSdkException {
        return new DescribeElasticIpNameExecutor().client(this).execute(request);
    }

    /**
     * 对单台云物理服务器执行开机操作，只能启动stopped状态的服务器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartInstanceResponse startInstance(StartInstanceRequest request) throws JdcloudSdkException {
        return new StartInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询IPv6网关实例详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIpv6GatewayResponse describeIpv6Gateway(DescribeIpv6GatewayRequest request) throws JdcloudSdkException {
        return new DescribeIpv6GatewayExecutor().client(this).execute(request);
    }

    /**
     * 申请IPv6网段

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AssignIpv6CidrResponse assignIpv6Cidr(AssignIpv6CidrRequest request) throws JdcloudSdkException {
        return new AssignIpv6CidrExecutor().client(this).execute(request);
    }

    /**
     * 查询负载均衡地域列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCPSLBRegionsResponse describeCPSLBRegions(DescribeCPSLBRegionsRequest request) throws JdcloudSdkException {
        return new DescribeCPSLBRegionsExecutor().client(this).execute(request);
    }

    /**
     * 查询路由表详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRouteTableResponse describeRouteTable(DescribeRouteTableRequest request) throws JdcloudSdkException {
        return new DescribeRouteTableExecutor().client(this).execute(request);
    }

    /**
     * 删除证书
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RemoveCertResponse removeCert(RemoveCertRequest request) throws JdcloudSdkException {
        return new RemoveCertExecutor().client(this).execute(request);
    }

    /**
     * 添加别名IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateAliasIpResponse createAliasIp(CreateAliasIpRequest request) throws JdcloudSdkException {
        return new CreateAliasIpExecutor().client(this).execute(request);
    }

    /**
     * 创建子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSubnetResponse createSubnet(CreateSubnetRequest request) throws JdcloudSdkException {
        return new CreateSubnetExecutor().client(this).execute(request);
    }

    /**
     * 重启单台云物理服务器，只能重启running状态的服务器 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public RestartInstanceResponse restartInstance(RestartInstanceRequest request) throws JdcloudSdkException {
        return new RestartInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询负载均衡实例详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLoadBalancerResponse describeLoadBalancer(DescribeLoadBalancerRequest request) throws JdcloudSdkException {
        return new DescribeLoadBalancerExecutor().client(this).execute(request);
    }

    /**
     * 查询弹性公网IP列表&lt;br/&gt;
支持分页查询，默认每页20条&lt;br/&gt;

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeElasticIpsResponse describeElasticIps(DescribeElasticIpsRequest request) throws JdcloudSdkException {
        return new DescribeElasticIpsExecutor().client(this).execute(request);
    }

    /**
     * 查询IPv6地址列表&lt;br/&gt;
支持分页查询，默认每页20条&lt;br/&gt;

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIpv6AddressesResponse describeIpv6Addresses(DescribeIpv6AddressesRequest request) throws JdcloudSdkException {
        return new DescribeIpv6AddressesExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器支持的操作系统
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeOSResponse describeOS(DescribeOSRequest request) throws JdcloudSdkException {
        return new DescribeOSExecutor().client(this).execute(request);
    }

    /**
     * 查询云物理服务器监控报警日志信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeEventLogsResponse describeEventLogs(DescribeEventLogsRequest request) throws JdcloudSdkException {
        return new DescribeEventLogsExecutor().client(this).execute(request);
    }

    /**
     * 修改证书名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyCertResponse modifyCert(ModifyCertRequest request) throws JdcloudSdkException {
        return new ModifyCertExecutor().client(this).execute(request);
    }

    /**
     * 查询虚拟服务器组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeServerGroupResponse describeServerGroup(DescribeServerGroupRequest request) throws JdcloudSdkException {
        return new DescribeServerGroupExecutor().client(this).execute(request);
    }

    /**
     * 创建监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateListenerResponse createListener(CreateListenerRequest request) throws JdcloudSdkException {
        return new CreateListenerExecutor().client(this).execute(request);
    }

    /**
     * 修改弹性公网IP带宽

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyElasticIpBandwidthResponse modifyElasticIpBandwidth(ModifyElasticIpBandwidthRequest request) throws JdcloudSdkException {
        return new ModifyElasticIpBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 添加次要CIDR
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateSecondaryCidrResponse createSecondaryCidr(CreateSecondaryCidrRequest request) throws JdcloudSdkException {
        return new CreateSecondaryCidrExecutor().client(this).execute(request);
    }

    /**
     * 修改后端服务器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyServerResponse modifyServer(ModifyServerRequest request) throws JdcloudSdkException {
        return new ModifyServerExecutor().client(this).execute(request);
    }

    /**
     * 批量查询云物理服务器详细信息&lt;br/&gt;
支持分页查询，默认每页20条&lt;br/&gt;

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstancesResponse describeInstances(DescribeInstancesRequest request) throws JdcloudSdkException {
        return new DescribeInstancesExecutor().client(this).execute(request);
    }

    /**
     * 查询可用的私有IP列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAvailablePrivateIpResponse describeAvailablePrivateIp(DescribeAvailablePrivateIpRequest request) throws JdcloudSdkException {
        return new DescribeAvailablePrivateIpExecutor().client(this).execute(request);
    }

    /**
     * 查询证书列表&lt;br/&gt;
支持分页查询，默认每页20条&lt;br/&gt;

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCertsResponse describeCerts(DescribeCertsRequest request) throws JdcloudSdkException {
        return new DescribeCertsExecutor().client(this).execute(request);
    }

    /**
     * 创建负载均衡实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateLoadBalancerResponse createLoadBalancer(CreateLoadBalancerRequest request) throws JdcloudSdkException {
        return new CreateLoadBalancerExecutor().client(this).execute(request);
    }

    /**
     * 创建私有网络
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateVpcResponse createVpc(CreateVpcRequest request) throws JdcloudSdkException {
        return new CreateVpcExecutor().client(this).execute(request);
    }

    /**
     * 查询别名IP列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAliasIpsResponse describeAliasIps(DescribeAliasIpsRequest request) throws JdcloudSdkException {
        return new DescribeAliasIpsExecutor().client(this).execute(request);
    }

    /**
     * 删除密钥对
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteKeypairsResponse deleteKeypairs(DeleteKeypairsRequest request) throws JdcloudSdkException {
        return new DeleteKeypairsExecutor().client(this).execute(request);
    }

    /**
     * 关闭监听器
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopListenerResponse stopListener(StopListenerRequest request) throws JdcloudSdkException {
        return new StopListenerExecutor().client(this).execute(request);
    }

    /**
     * 删除子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteSubnetResponse deleteSubnet(DeleteSubnetRequest request) throws JdcloudSdkException {
        return new DeleteSubnetExecutor().client(this).execute(request);
    }

    /**
     * 查询基础网络子网
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBasicSubnetResponse describeBasicSubnet(DescribeBasicSubnetRequest request) throws JdcloudSdkException {
        return new DescribeBasicSubnetExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public CpsClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private CpsClient cpsClient;

        public DefaultBuilder() {
            cpsClient = new CpsClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            cpsClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            cpsClient.httpRequestConfig = config;
            return this;
        }

        public CpsClient build() throws JdcloudSdkException {

            if (cpsClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                cpsClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (cpsClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("CpsClient build error: jdcloud credentials provider not set");
                }
            }
            if (cpsClient.httpRequestConfig == null) {
                cpsClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (cpsClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("CpsClient build error: http request config not set");
                }
            }
            return cpsClient;
        }

        public Builder environment(Environment environment) {
            cpsClient.environment = environment;
            return this;
        }
    }
}
