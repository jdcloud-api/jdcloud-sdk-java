/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cps.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.charge.model.ChargeSpec;
import com.jdcloud.sdk.service.resourcetag.model.Tag;

/**
 * instanceSpec
 */
public class InstanceSpec  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 可用区, 如 cn-north-1
     * Required:true
     */
    @Required
    private String az;

    /**
     * 实例类型, 如 cps.c.normal
     * Required:true
     */
    @Required
    private String deviceType;

    /**
     * 主机名
     */
    private String hostname;

    /**
     * 镜像类型, 取值范围：standard
     * Required:true
     */
    @Required
    private String imageType;

    /**
     * 操作系统类型ID
     * Required:true
     */
    @Required
    private String osTypeId;

    /**
     * 系统盘RAID类型ID
     * Required:true
     */
    @Required
    private String sysRaidTypeId;

    /**
     * 数据盘RAID类型ID
     */
    private String dataRaidTypeId;

    /**
     * 子网编号
     */
    private String subnetId;

    /**
     * 是否启用外网，取值范围：yes、no
     */
    private String enableInternet;

    /**
     * 启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     */
    private String internetChargeMode;

    /**
     * 是否启用IPv6，取值范围：yes、no
     */
    private String enableIpv6;

    /**
     * IPv6地址
     */
    private String ipv6Address;

    /**
     * 网络类型，取值范围：basic（基础网络）、vpc（私有网络）、retail（零售中台网络）
     * Required:true
     */
    @Required
    private String networkType;

    /**
     * 网络CIDR
     */
    private String cidr;

    /**
     * 内网IP
     */
    private String privateIp;

    /**
     * 内网添加的别名IP范围
     */
    private List<AliasIpInfo> aliasIps;

    /**
     * 外网链路类型, 目前只支持bgp
     */
    private String lineType;

    /**
     * 外网带宽, 范围[1,200] 单位Mbps
     */
    private Integer bandwidth;

    /**
     * 云物理服务器名称
     * Required:true
     */
    @Required
    private String name;

    /**
     * 云物理服务器描述
     */
    private String description;

    /**
     * 密码，不传值会随机生成密码
     */
    private String password;

    /**
     * 购买数量
     * Required:true
     */
    @Required
    private Integer count;

    /**
     * 可执行脚本Base64编码后的内容，支持shell和python脚本
     */
    private String userData;

    /**
     * 密钥对id
     */
    private String keypairId;

    /**
     * 计费配置
     * Required:true
     */
    @Required
    private ChargeSpec charge;

    /**
     * 网络接口模式，取值：bond（网口bond）、dual（双网口）
     */
    private String interfaceMode;

    /**
     * 辅网口是否启用IPv6，取值范围：yes、no
     */
    private String extensionEnableIpv6;

    /**
     * 辅网口IPv6地址
     */
    private String extensionIpv6Address;

    /**
     * 辅网口子网ID
     */
    private String extensionSubnetId;

    /**
     * 辅网口手动分配的内网ip
     */
    private String extensionPrivateIp;

    /**
     * 辅网口内网添加的别名IP范围
     */
    private List<AliasIpInfo> extensionAliasIps;

    /**
     * 辅网口是否启用外网，取值范围：yes、no
     */
    private String extensionEnableInternet;

    /**
     * 辅网口链路类型, 目前支持BGP
     */
    private String extensionLineType;

    /**
     * 辅网口外网带宽，范围[1,200] 单位Mbps
     */
    private Integer extensionBandwidth;

    /**
     * 辅网口启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     */
    private String extensionInternetChargeMode;

    /**
     * 标签
     */
    private List<Tag> resourceTags;


    /**
     * get 可用区, 如 cn-north-1
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 可用区, 如 cn-north-1
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }

    /**
     * get 实例类型, 如 cps.c.normal
     *
     * @return
     */
    public String getDeviceType() {
        return deviceType;
    }

    /**
     * set 实例类型, 如 cps.c.normal
     *
     * @param deviceType
     */
    public void setDeviceType(String deviceType) {
        this.deviceType = deviceType;
    }

    /**
     * get 主机名
     *
     * @return
     */
    public String getHostname() {
        return hostname;
    }

    /**
     * set 主机名
     *
     * @param hostname
     */
    public void setHostname(String hostname) {
        this.hostname = hostname;
    }

    /**
     * get 镜像类型, 取值范围：standard
     *
     * @return
     */
    public String getImageType() {
        return imageType;
    }

    /**
     * set 镜像类型, 取值范围：standard
     *
     * @param imageType
     */
    public void setImageType(String imageType) {
        this.imageType = imageType;
    }

    /**
     * get 操作系统类型ID
     *
     * @return
     */
    public String getOsTypeId() {
        return osTypeId;
    }

    /**
     * set 操作系统类型ID
     *
     * @param osTypeId
     */
    public void setOsTypeId(String osTypeId) {
        this.osTypeId = osTypeId;
    }

    /**
     * get 系统盘RAID类型ID
     *
     * @return
     */
    public String getSysRaidTypeId() {
        return sysRaidTypeId;
    }

    /**
     * set 系统盘RAID类型ID
     *
     * @param sysRaidTypeId
     */
    public void setSysRaidTypeId(String sysRaidTypeId) {
        this.sysRaidTypeId = sysRaidTypeId;
    }

    /**
     * get 数据盘RAID类型ID
     *
     * @return
     */
    public String getDataRaidTypeId() {
        return dataRaidTypeId;
    }

    /**
     * set 数据盘RAID类型ID
     *
     * @param dataRaidTypeId
     */
    public void setDataRaidTypeId(String dataRaidTypeId) {
        this.dataRaidTypeId = dataRaidTypeId;
    }

    /**
     * get 子网编号
     *
     * @return
     */
    public String getSubnetId() {
        return subnetId;
    }

    /**
     * set 子网编号
     *
     * @param subnetId
     */
    public void setSubnetId(String subnetId) {
        this.subnetId = subnetId;
    }

    /**
     * get 是否启用外网，取值范围：yes、no
     *
     * @return
     */
    public String getEnableInternet() {
        return enableInternet;
    }

    /**
     * set 是否启用外网，取值范围：yes、no
     *
     * @param enableInternet
     */
    public void setEnableInternet(String enableInternet) {
        this.enableInternet = enableInternet;
    }

    /**
     * get 启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @return
     */
    public String getInternetChargeMode() {
        return internetChargeMode;
    }

    /**
     * set 启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @param internetChargeMode
     */
    public void setInternetChargeMode(String internetChargeMode) {
        this.internetChargeMode = internetChargeMode;
    }

    /**
     * get 是否启用IPv6，取值范围：yes、no
     *
     * @return
     */
    public String getEnableIpv6() {
        return enableIpv6;
    }

    /**
     * set 是否启用IPv6，取值范围：yes、no
     *
     * @param enableIpv6
     */
    public void setEnableIpv6(String enableIpv6) {
        this.enableIpv6 = enableIpv6;
    }

    /**
     * get IPv6地址
     *
     * @return
     */
    public String getIpv6Address() {
        return ipv6Address;
    }

    /**
     * set IPv6地址
     *
     * @param ipv6Address
     */
    public void setIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
    }

    /**
     * get 网络类型，取值范围：basic（基础网络）、vpc（私有网络）、retail（零售中台网络）
     *
     * @return
     */
    public String getNetworkType() {
        return networkType;
    }

    /**
     * set 网络类型，取值范围：basic（基础网络）、vpc（私有网络）、retail（零售中台网络）
     *
     * @param networkType
     */
    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    /**
     * get 网络CIDR
     *
     * @return
     */
    public String getCidr() {
        return cidr;
    }

    /**
     * set 网络CIDR
     *
     * @param cidr
     */
    public void setCidr(String cidr) {
        this.cidr = cidr;
    }

    /**
     * get 内网IP
     *
     * @return
     */
    public String getPrivateIp() {
        return privateIp;
    }

    /**
     * set 内网IP
     *
     * @param privateIp
     */
    public void setPrivateIp(String privateIp) {
        this.privateIp = privateIp;
    }

    /**
     * get 内网添加的别名IP范围
     *
     * @return
     */
    public List<AliasIpInfo> getAliasIps() {
        return aliasIps;
    }

    /**
     * set 内网添加的别名IP范围
     *
     * @param aliasIps
     */
    public void setAliasIps(List<AliasIpInfo> aliasIps) {
        this.aliasIps = aliasIps;
    }

    /**
     * get 外网链路类型, 目前只支持bgp
     *
     * @return
     */
    public String getLineType() {
        return lineType;
    }

    /**
     * set 外网链路类型, 目前只支持bgp
     *
     * @param lineType
     */
    public void setLineType(String lineType) {
        this.lineType = lineType;
    }

    /**
     * get 外网带宽, 范围[1,200] 单位Mbps
     *
     * @return
     */
    public Integer getBandwidth() {
        return bandwidth;
    }

    /**
     * set 外网带宽, 范围[1,200] 单位Mbps
     *
     * @param bandwidth
     */
    public void setBandwidth(Integer bandwidth) {
        this.bandwidth = bandwidth;
    }

    /**
     * get 云物理服务器名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 云物理服务器名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * get 云物理服务器描述
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 云物理服务器描述
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * get 密码，不传值会随机生成密码
     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 密码，不传值会随机生成密码
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * get 购买数量
     *
     * @return
     */
    public Integer getCount() {
        return count;
    }

    /**
     * set 购买数量
     *
     * @param count
     */
    public void setCount(Integer count) {
        this.count = count;
    }

    /**
     * get 可执行脚本Base64编码后的内容，支持shell和python脚本
     *
     * @return
     */
    public String getUserData() {
        return userData;
    }

    /**
     * set 可执行脚本Base64编码后的内容，支持shell和python脚本
     *
     * @param userData
     */
    public void setUserData(String userData) {
        this.userData = userData;
    }

    /**
     * get 密钥对id
     *
     * @return
     */
    public String getKeypairId() {
        return keypairId;
    }

    /**
     * set 密钥对id
     *
     * @param keypairId
     */
    public void setKeypairId(String keypairId) {
        this.keypairId = keypairId;
    }

    /**
     * get 计费配置
     *
     * @return
     */
    public ChargeSpec getCharge() {
        return charge;
    }

    /**
     * set 计费配置
     *
     * @param charge
     */
    public void setCharge(ChargeSpec charge) {
        this.charge = charge;
    }

    /**
     * get 网络接口模式，取值：bond（网口bond）、dual（双网口）
     *
     * @return
     */
    public String getInterfaceMode() {
        return interfaceMode;
    }

    /**
     * set 网络接口模式，取值：bond（网口bond）、dual（双网口）
     *
     * @param interfaceMode
     */
    public void setInterfaceMode(String interfaceMode) {
        this.interfaceMode = interfaceMode;
    }

    /**
     * get 辅网口是否启用IPv6，取值范围：yes、no
     *
     * @return
     */
    public String getExtensionEnableIpv6() {
        return extensionEnableIpv6;
    }

    /**
     * set 辅网口是否启用IPv6，取值范围：yes、no
     *
     * @param extensionEnableIpv6
     */
    public void setExtensionEnableIpv6(String extensionEnableIpv6) {
        this.extensionEnableIpv6 = extensionEnableIpv6;
    }

    /**
     * get 辅网口IPv6地址
     *
     * @return
     */
    public String getExtensionIpv6Address() {
        return extensionIpv6Address;
    }

    /**
     * set 辅网口IPv6地址
     *
     * @param extensionIpv6Address
     */
    public void setExtensionIpv6Address(String extensionIpv6Address) {
        this.extensionIpv6Address = extensionIpv6Address;
    }

    /**
     * get 辅网口子网ID
     *
     * @return
     */
    public String getExtensionSubnetId() {
        return extensionSubnetId;
    }

    /**
     * set 辅网口子网ID
     *
     * @param extensionSubnetId
     */
    public void setExtensionSubnetId(String extensionSubnetId) {
        this.extensionSubnetId = extensionSubnetId;
    }

    /**
     * get 辅网口手动分配的内网ip
     *
     * @return
     */
    public String getExtensionPrivateIp() {
        return extensionPrivateIp;
    }

    /**
     * set 辅网口手动分配的内网ip
     *
     * @param extensionPrivateIp
     */
    public void setExtensionPrivateIp(String extensionPrivateIp) {
        this.extensionPrivateIp = extensionPrivateIp;
    }

    /**
     * get 辅网口内网添加的别名IP范围
     *
     * @return
     */
    public List<AliasIpInfo> getExtensionAliasIps() {
        return extensionAliasIps;
    }

    /**
     * set 辅网口内网添加的别名IP范围
     *
     * @param extensionAliasIps
     */
    public void setExtensionAliasIps(List<AliasIpInfo> extensionAliasIps) {
        this.extensionAliasIps = extensionAliasIps;
    }

    /**
     * get 辅网口是否启用外网，取值范围：yes、no
     *
     * @return
     */
    public String getExtensionEnableInternet() {
        return extensionEnableInternet;
    }

    /**
     * set 辅网口是否启用外网，取值范围：yes、no
     *
     * @param extensionEnableInternet
     */
    public void setExtensionEnableInternet(String extensionEnableInternet) {
        this.extensionEnableInternet = extensionEnableInternet;
    }

    /**
     * get 辅网口链路类型, 目前支持BGP
     *
     * @return
     */
    public String getExtensionLineType() {
        return extensionLineType;
    }

    /**
     * set 辅网口链路类型, 目前支持BGP
     *
     * @param extensionLineType
     */
    public void setExtensionLineType(String extensionLineType) {
        this.extensionLineType = extensionLineType;
    }

    /**
     * get 辅网口外网带宽，范围[1,200] 单位Mbps
     *
     * @return
     */
    public Integer getExtensionBandwidth() {
        return extensionBandwidth;
    }

    /**
     * set 辅网口外网带宽，范围[1,200] 单位Mbps
     *
     * @param extensionBandwidth
     */
    public void setExtensionBandwidth(Integer extensionBandwidth) {
        this.extensionBandwidth = extensionBandwidth;
    }

    /**
     * get 辅网口启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @return
     */
    public String getExtensionInternetChargeMode() {
        return extensionInternetChargeMode;
    }

    /**
     * set 辅网口启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @param extensionInternetChargeMode
     */
    public void setExtensionInternetChargeMode(String extensionInternetChargeMode) {
        this.extensionInternetChargeMode = extensionInternetChargeMode;
    }

    /**
     * get 标签
     *
     * @return
     */
    public List<Tag> getResourceTags() {
        return resourceTags;
    }

    /**
     * set 标签
     *
     * @param resourceTags
     */
    public void setResourceTags(List<Tag> resourceTags) {
        this.resourceTags = resourceTags;
    }


    /**
     * set 可用区, 如 cn-north-1
     *
     * @param az
     */
    public InstanceSpec az(String az) {
        this.az = az;
        return this;
    }

    /**
     * set 实例类型, 如 cps.c.normal
     *
     * @param deviceType
     */
    public InstanceSpec deviceType(String deviceType) {
        this.deviceType = deviceType;
        return this;
    }

    /**
     * set 主机名
     *
     * @param hostname
     */
    public InstanceSpec hostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * set 镜像类型, 取值范围：standard
     *
     * @param imageType
     */
    public InstanceSpec imageType(String imageType) {
        this.imageType = imageType;
        return this;
    }

    /**
     * set 操作系统类型ID
     *
     * @param osTypeId
     */
    public InstanceSpec osTypeId(String osTypeId) {
        this.osTypeId = osTypeId;
        return this;
    }

    /**
     * set 系统盘RAID类型ID
     *
     * @param sysRaidTypeId
     */
    public InstanceSpec sysRaidTypeId(String sysRaidTypeId) {
        this.sysRaidTypeId = sysRaidTypeId;
        return this;
    }

    /**
     * set 数据盘RAID类型ID
     *
     * @param dataRaidTypeId
     */
    public InstanceSpec dataRaidTypeId(String dataRaidTypeId) {
        this.dataRaidTypeId = dataRaidTypeId;
        return this;
    }

    /**
     * set 子网编号
     *
     * @param subnetId
     */
    public InstanceSpec subnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * set 是否启用外网，取值范围：yes、no
     *
     * @param enableInternet
     */
    public InstanceSpec enableInternet(String enableInternet) {
        this.enableInternet = enableInternet;
        return this;
    }

    /**
     * set 启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @param internetChargeMode
     */
    public InstanceSpec internetChargeMode(String internetChargeMode) {
        this.internetChargeMode = internetChargeMode;
        return this;
    }

    /**
     * set 是否启用IPv6，取值范围：yes、no
     *
     * @param enableIpv6
     */
    public InstanceSpec enableIpv6(String enableIpv6) {
        this.enableIpv6 = enableIpv6;
        return this;
    }

    /**
     * set IPv6地址
     *
     * @param ipv6Address
     */
    public InstanceSpec ipv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
        return this;
    }

    /**
     * set 网络类型，取值范围：basic（基础网络）、vpc（私有网络）、retail（零售中台网络）
     *
     * @param networkType
     */
    public InstanceSpec networkType(String networkType) {
        this.networkType = networkType;
        return this;
    }

    /**
     * set 网络CIDR
     *
     * @param cidr
     */
    public InstanceSpec cidr(String cidr) {
        this.cidr = cidr;
        return this;
    }

    /**
     * set 内网IP
     *
     * @param privateIp
     */
    public InstanceSpec privateIp(String privateIp) {
        this.privateIp = privateIp;
        return this;
    }

    /**
     * set 内网添加的别名IP范围
     *
     * @param aliasIps
     */
    public InstanceSpec aliasIps(List<AliasIpInfo> aliasIps) {
        this.aliasIps = aliasIps;
        return this;
    }

    /**
     * set 外网链路类型, 目前只支持bgp
     *
     * @param lineType
     */
    public InstanceSpec lineType(String lineType) {
        this.lineType = lineType;
        return this;
    }

    /**
     * set 外网带宽, 范围[1,200] 单位Mbps
     *
     * @param bandwidth
     */
    public InstanceSpec bandwidth(Integer bandwidth) {
        this.bandwidth = bandwidth;
        return this;
    }

    /**
     * set 云物理服务器名称
     *
     * @param name
     */
    public InstanceSpec name(String name) {
        this.name = name;
        return this;
    }

    /**
     * set 云物理服务器描述
     *
     * @param description
     */
    public InstanceSpec description(String description) {
        this.description = description;
        return this;
    }

    /**
     * set 密码，不传值会随机生成密码
     *
     * @param password
     */
    public InstanceSpec password(String password) {
        this.password = password;
        return this;
    }

    /**
     * set 购买数量
     *
     * @param count
     */
    public InstanceSpec count(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * set 可执行脚本Base64编码后的内容，支持shell和python脚本
     *
     * @param userData
     */
    public InstanceSpec userData(String userData) {
        this.userData = userData;
        return this;
    }

    /**
     * set 密钥对id
     *
     * @param keypairId
     */
    public InstanceSpec keypairId(String keypairId) {
        this.keypairId = keypairId;
        return this;
    }

    /**
     * set 计费配置
     *
     * @param charge
     */
    public InstanceSpec charge(ChargeSpec charge) {
        this.charge = charge;
        return this;
    }

    /**
     * set 网络接口模式，取值：bond（网口bond）、dual（双网口）
     *
     * @param interfaceMode
     */
    public InstanceSpec interfaceMode(String interfaceMode) {
        this.interfaceMode = interfaceMode;
        return this;
    }

    /**
     * set 辅网口是否启用IPv6，取值范围：yes、no
     *
     * @param extensionEnableIpv6
     */
    public InstanceSpec extensionEnableIpv6(String extensionEnableIpv6) {
        this.extensionEnableIpv6 = extensionEnableIpv6;
        return this;
    }

    /**
     * set 辅网口IPv6地址
     *
     * @param extensionIpv6Address
     */
    public InstanceSpec extensionIpv6Address(String extensionIpv6Address) {
        this.extensionIpv6Address = extensionIpv6Address;
        return this;
    }

    /**
     * set 辅网口子网ID
     *
     * @param extensionSubnetId
     */
    public InstanceSpec extensionSubnetId(String extensionSubnetId) {
        this.extensionSubnetId = extensionSubnetId;
        return this;
    }

    /**
     * set 辅网口手动分配的内网ip
     *
     * @param extensionPrivateIp
     */
    public InstanceSpec extensionPrivateIp(String extensionPrivateIp) {
        this.extensionPrivateIp = extensionPrivateIp;
        return this;
    }

    /**
     * set 辅网口内网添加的别名IP范围
     *
     * @param extensionAliasIps
     */
    public InstanceSpec extensionAliasIps(List<AliasIpInfo> extensionAliasIps) {
        this.extensionAliasIps = extensionAliasIps;
        return this;
    }

    /**
     * set 辅网口是否启用外网，取值范围：yes、no
     *
     * @param extensionEnableInternet
     */
    public InstanceSpec extensionEnableInternet(String extensionEnableInternet) {
        this.extensionEnableInternet = extensionEnableInternet;
        return this;
    }

    /**
     * set 辅网口链路类型, 目前支持BGP
     *
     * @param extensionLineType
     */
    public InstanceSpec extensionLineType(String extensionLineType) {
        this.extensionLineType = extensionLineType;
        return this;
    }

    /**
     * set 辅网口外网带宽，范围[1,200] 单位Mbps
     *
     * @param extensionBandwidth
     */
    public InstanceSpec extensionBandwidth(Integer extensionBandwidth) {
        this.extensionBandwidth = extensionBandwidth;
        return this;
    }

    /**
     * set 辅网口启用外网时弹性公网IP的计费模式，取值范围：prepaid_by_duration、postpaid_by_duration
     *
     * @param extensionInternetChargeMode
     */
    public InstanceSpec extensionInternetChargeMode(String extensionInternetChargeMode) {
        this.extensionInternetChargeMode = extensionInternetChargeMode;
        return this;
    }

    /**
     * set 标签
     *
     * @param resourceTags
     */
    public InstanceSpec resourceTags(List<Tag> resourceTags) {
        this.resourceTags = resourceTags;
        return this;
    }


    /**
     * add item to 内网添加的别名IP范围
     *
     * @param aliasIp
     */
    public void addAliasIp(AliasIpInfo aliasIp) {
        if (this.aliasIps == null) {
            this.aliasIps = new ArrayList<>();
        }
        this.aliasIps.add(aliasIp);
    }

    /**
     * add item to 辅网口内网添加的别名IP范围
     *
     * @param extensionAliasIp
     */
    public void addExtensionAliasIp(AliasIpInfo extensionAliasIp) {
        if (this.extensionAliasIps == null) {
            this.extensionAliasIps = new ArrayList<>();
        }
        this.extensionAliasIps.add(extensionAliasIp);
    }

    /**
     * add item to 标签
     *
     * @param resourceTag
     */
    public void addResourceTag(Tag resourceTag) {
        if (this.resourceTags == null) {
            this.resourceTags = new ArrayList<>();
        }
        this.resourceTags.add(resourceTag);
    }

}