/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.redis.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * 缓存Redis实例的一个缓存分析任务
 */
public class ClusterCacheAnalysis  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 缓存分析的开始时间,rfc3339格式
     * Required:true
     */
    @Required
    private String analysisTime;

    /**
     * 缓存分析的任务ID
     * Required:true
     */
    @Required
    private String taskId;

    /**
     * 缓存分析的分析时长
     * Required:true
     */
    @Required
    private String analysisDuration;

    /**
     * 缓存分析的结果下载地址
     * Required:true
     */
    @Required
    private String downloadUrl;

    /**
     * 缓存分析任务状态, running, success, error, 只有sucess状态，才能根据taskId查询到结果
     * Required:true
     */
    @Required
    private String status;


    /**
     * get 缓存分析的开始时间,rfc3339格式
     *
     * @return
     */
    public String getAnalysisTime() {
        return analysisTime;
    }

    /**
     * set 缓存分析的开始时间,rfc3339格式
     *
     * @param analysisTime
     */
    public void setAnalysisTime(String analysisTime) {
        this.analysisTime = analysisTime;
    }

    /**
     * get 缓存分析的任务ID
     *
     * @return
     */
    public String getTaskId() {
        return taskId;
    }

    /**
     * set 缓存分析的任务ID
     *
     * @param taskId
     */
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    /**
     * get 缓存分析的分析时长
     *
     * @return
     */
    public String getAnalysisDuration() {
        return analysisDuration;
    }

    /**
     * set 缓存分析的分析时长
     *
     * @param analysisDuration
     */
    public void setAnalysisDuration(String analysisDuration) {
        this.analysisDuration = analysisDuration;
    }

    /**
     * get 缓存分析的结果下载地址
     *
     * @return
     */
    public String getDownloadUrl() {
        return downloadUrl;
    }

    /**
     * set 缓存分析的结果下载地址
     *
     * @param downloadUrl
     */
    public void setDownloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
    }

    /**
     * get 缓存分析任务状态, running, success, error, 只有sucess状态，才能根据taskId查询到结果
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 缓存分析任务状态, running, success, error, 只有sucess状态，才能根据taskId查询到结果
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * set 缓存分析的开始时间,rfc3339格式
     *
     * @param analysisTime
     */
    public ClusterCacheAnalysis analysisTime(String analysisTime) {
        this.analysisTime = analysisTime;
        return this;
    }

    /**
     * set 缓存分析的任务ID
     *
     * @param taskId
     */
    public ClusterCacheAnalysis taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * set 缓存分析的分析时长
     *
     * @param analysisDuration
     */
    public ClusterCacheAnalysis analysisDuration(String analysisDuration) {
        this.analysisDuration = analysisDuration;
        return this;
    }

    /**
     * set 缓存分析的结果下载地址
     *
     * @param downloadUrl
     */
    public ClusterCacheAnalysis downloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
        return this;
    }

    /**
     * set 缓存分析任务状态, running, success, error, 只有sucess状态，才能根据taskId查询到结果
     *
     * @param status
     */
    public ClusterCacheAnalysis status(String status) {
        this.status = status;
        return this;
    }


}