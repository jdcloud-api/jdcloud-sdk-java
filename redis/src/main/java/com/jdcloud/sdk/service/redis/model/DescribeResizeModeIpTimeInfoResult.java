/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Redis Instance API
 * 缓存Redis实例的创建、删除、修改基本信息、设置密码、变配、实例列表、备份、配置参数等接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.redis.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询缓存Red4.0实例是否支持新变配功能，是否支持并行变配, 变配需要的IP数量及变配预估时间

 */
public class DescribeResizeModeIpTimeInfoResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 是否支持新变配
     */
    private Boolean supportPScale;

    /**
     * 是否支持并行变配
     */
    private Boolean supportParallel;

    /**
     * 串行变配需要的IP数量
     */
    private Integer serialIpCount;

    /**
     * 串行变配预估时间
     */
    private Integer serialTimeCost;

    /**
     * 并行变配需要的IP数量
     */
    private Integer parallelIpCount;

    /**
     * 并行变配预估时间
     */
    private Integer parallelTimeCost;



    /**
     * get 是否支持新变配
     *
     * @return
     */
    public Boolean getSupportPScale() {
        return supportPScale;
    }

    /**
     * set 是否支持新变配
     *
     * @param supportPScale
     */
    public void setSupportPScale(Boolean supportPScale) {
        this.supportPScale = supportPScale;
    }


    /**
     * get 是否支持并行变配
     *
     * @return
     */
    public Boolean getSupportParallel() {
        return supportParallel;
    }

    /**
     * set 是否支持并行变配
     *
     * @param supportParallel
     */
    public void setSupportParallel(Boolean supportParallel) {
        this.supportParallel = supportParallel;
    }


    /**
     * get 串行变配需要的IP数量
     *
     * @return
     */
    public Integer getSerialIpCount() {
        return serialIpCount;
    }

    /**
     * set 串行变配需要的IP数量
     *
     * @param serialIpCount
     */
    public void setSerialIpCount(Integer serialIpCount) {
        this.serialIpCount = serialIpCount;
    }


    /**
     * get 串行变配预估时间
     *
     * @return
     */
    public Integer getSerialTimeCost() {
        return serialTimeCost;
    }

    /**
     * set 串行变配预估时间
     *
     * @param serialTimeCost
     */
    public void setSerialTimeCost(Integer serialTimeCost) {
        this.serialTimeCost = serialTimeCost;
    }


    /**
     * get 并行变配需要的IP数量
     *
     * @return
     */
    public Integer getParallelIpCount() {
        return parallelIpCount;
    }

    /**
     * set 并行变配需要的IP数量
     *
     * @param parallelIpCount
     */
    public void setParallelIpCount(Integer parallelIpCount) {
        this.parallelIpCount = parallelIpCount;
    }


    /**
     * get 并行变配预估时间
     *
     * @return
     */
    public Integer getParallelTimeCost() {
        return parallelTimeCost;
    }

    /**
     * set 并行变配预估时间
     *
     * @param parallelTimeCost
     */
    public void setParallelTimeCost(Integer parallelTimeCost) {
        this.parallelTimeCost = parallelTimeCost;
    }



    /**
     * set 是否支持新变配
     *
     * @param supportPScale
     */
    public DescribeResizeModeIpTimeInfoResult supportPScale(Boolean supportPScale) {
        this.supportPScale = supportPScale;
        return this;
    }


    /**
     * set 是否支持并行变配
     *
     * @param supportParallel
     */
    public DescribeResizeModeIpTimeInfoResult supportParallel(Boolean supportParallel) {
        this.supportParallel = supportParallel;
        return this;
    }


    /**
     * set 串行变配需要的IP数量
     *
     * @param serialIpCount
     */
    public DescribeResizeModeIpTimeInfoResult serialIpCount(Integer serialIpCount) {
        this.serialIpCount = serialIpCount;
        return this;
    }


    /**
     * set 串行变配预估时间
     *
     * @param serialTimeCost
     */
    public DescribeResizeModeIpTimeInfoResult serialTimeCost(Integer serialTimeCost) {
        this.serialTimeCost = serialTimeCost;
        return this;
    }


    /**
     * set 并行变配需要的IP数量
     *
     * @param parallelIpCount
     */
    public DescribeResizeModeIpTimeInfoResult parallelIpCount(Integer parallelIpCount) {
        this.parallelIpCount = parallelIpCount;
        return this;
    }


    /**
     * set 并行变配预估时间
     *
     * @param parallelTimeCost
     */
    public DescribeResizeModeIpTimeInfoResult parallelTimeCost(Integer parallelTimeCost) {
        this.parallelTimeCost = parallelTimeCost;
        return this;
    }


}