/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.redis.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 集群信息
 */
public class InstanceVpcIp  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 代理列表
     */
    private List<Node> proxies;

    /**
     * 分片列表
     */
    private List<RedisShard> shards;


    /**
     * get 代理列表
     *
     * @return
     */
    public List<Node> getProxies() {
        return proxies;
    }

    /**
     * set 代理列表
     *
     * @param proxies
     */
    public void setProxies(List<Node> proxies) {
        this.proxies = proxies;
    }

    /**
     * get 分片列表
     *
     * @return
     */
    public List<RedisShard> getShards() {
        return shards;
    }

    /**
     * set 分片列表
     *
     * @param shards
     */
    public void setShards(List<RedisShard> shards) {
        this.shards = shards;
    }


    /**
     * set 代理列表
     *
     * @param proxies
     */
    public InstanceVpcIp proxies(List<Node> proxies) {
        this.proxies = proxies;
        return this;
    }

    /**
     * set 分片列表
     *
     * @param shards
     */
    public InstanceVpcIp shards(List<RedisShard> shards) {
        this.shards = shards;
        return this;
    }


    /**
     * add item to 代理列表
     *
     * @param proxie
     */
    public void addProxie(Node proxie) {
        if (this.proxies == null) {
            this.proxies = new ArrayList<>();
        }
        this.proxies.add(proxie);
    }

    /**
     * add item to 分片列表
     *
     * @param shard
     */
    public void addShard(RedisShard shard) {
        if (this.shards == null) {
            this.shards = new ArrayList<>();
        }
        this.shards.add(shard);
    }

}