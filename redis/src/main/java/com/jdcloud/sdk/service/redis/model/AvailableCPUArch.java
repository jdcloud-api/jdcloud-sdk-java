/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.redis.model;

import java.util.List;
import java.util.ArrayList;

/**
 * CPU架构信息
 */
public class AvailableCPUArch  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * CPU架构详情
     */
    private CpuArchInfo cpuArchInfo;

    /**
     * 是否售罄
     */
    private Boolean soldOut;

    /**
     * 售卖内存规格列表
     */
    private List<AvailableMemorySpec> availableMemorySpecs;

    /**
     * 支持最小分片数
     */
    private Integer shardNumberMin;

    /**
     * 支持最大分片数
     */
    private Integer shardNumberMax;

    /**
     * 支持的最大内存规格
     */
    private Integer maxMemoryMB;


    /**
     * get CPU架构详情
     *
     * @return
     */
    public CpuArchInfo getCpuArchInfo() {
        return cpuArchInfo;
    }

    /**
     * set CPU架构详情
     *
     * @param cpuArchInfo
     */
    public void setCpuArchInfo(CpuArchInfo cpuArchInfo) {
        this.cpuArchInfo = cpuArchInfo;
    }

    /**
     * get 是否售罄
     *
     * @return
     */
    public Boolean getSoldOut() {
        return soldOut;
    }

    /**
     * set 是否售罄
     *
     * @param soldOut
     */
    public void setSoldOut(Boolean soldOut) {
        this.soldOut = soldOut;
    }

    /**
     * get 售卖内存规格列表
     *
     * @return
     */
    public List<AvailableMemorySpec> getAvailableMemorySpecs() {
        return availableMemorySpecs;
    }

    /**
     * set 售卖内存规格列表
     *
     * @param availableMemorySpecs
     */
    public void setAvailableMemorySpecs(List<AvailableMemorySpec> availableMemorySpecs) {
        this.availableMemorySpecs = availableMemorySpecs;
    }

    /**
     * get 支持最小分片数
     *
     * @return
     */
    public Integer getShardNumberMin() {
        return shardNumberMin;
    }

    /**
     * set 支持最小分片数
     *
     * @param shardNumberMin
     */
    public void setShardNumberMin(Integer shardNumberMin) {
        this.shardNumberMin = shardNumberMin;
    }

    /**
     * get 支持最大分片数
     *
     * @return
     */
    public Integer getShardNumberMax() {
        return shardNumberMax;
    }

    /**
     * set 支持最大分片数
     *
     * @param shardNumberMax
     */
    public void setShardNumberMax(Integer shardNumberMax) {
        this.shardNumberMax = shardNumberMax;
    }

    /**
     * get 支持的最大内存规格
     *
     * @return
     */
    public Integer getMaxMemoryMB() {
        return maxMemoryMB;
    }

    /**
     * set 支持的最大内存规格
     *
     * @param maxMemoryMB
     */
    public void setMaxMemoryMB(Integer maxMemoryMB) {
        this.maxMemoryMB = maxMemoryMB;
    }


    /**
     * set CPU架构详情
     *
     * @param cpuArchInfo
     */
    public AvailableCPUArch cpuArchInfo(CpuArchInfo cpuArchInfo) {
        this.cpuArchInfo = cpuArchInfo;
        return this;
    }

    /**
     * set 是否售罄
     *
     * @param soldOut
     */
    public AvailableCPUArch soldOut(Boolean soldOut) {
        this.soldOut = soldOut;
        return this;
    }

    /**
     * set 售卖内存规格列表
     *
     * @param availableMemorySpecs
     */
    public AvailableCPUArch availableMemorySpecs(List<AvailableMemorySpec> availableMemorySpecs) {
        this.availableMemorySpecs = availableMemorySpecs;
        return this;
    }

    /**
     * set 支持最小分片数
     *
     * @param shardNumberMin
     */
    public AvailableCPUArch shardNumberMin(Integer shardNumberMin) {
        this.shardNumberMin = shardNumberMin;
        return this;
    }

    /**
     * set 支持最大分片数
     *
     * @param shardNumberMax
     */
    public AvailableCPUArch shardNumberMax(Integer shardNumberMax) {
        this.shardNumberMax = shardNumberMax;
        return this;
    }

    /**
     * set 支持的最大内存规格
     *
     * @param maxMemoryMB
     */
    public AvailableCPUArch maxMemoryMB(Integer maxMemoryMB) {
        this.maxMemoryMB = maxMemoryMB;
        return this;
    }


    /**
     * add item to 售卖内存规格列表
     *
     * @param availableMemorySpec
     */
    public void addAvailableMemorySpec(AvailableMemorySpec availableMemorySpec) {
        if (this.availableMemorySpecs == null) {
            this.availableMemorySpecs = new ArrayList<>();
        }
        this.availableMemorySpecs.add(availableMemorySpec);
    }

}