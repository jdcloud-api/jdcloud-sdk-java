/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDN刷新预热类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询用户刷新预热封禁限额
 */
public class QueryCdnUserQuotaResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 总的目录刷新上限
     */
    private Integer dirAllCount;

    /**
     * 已使用的目录刷新个数
     */
    private Integer dirUsedCount;

    /**
     * 剩余可用的目录刷新个数
     */
    private Integer dirRemainedCount;

    /**
     * 剩余可封禁的URL个数
     */
    private Integer forbiddenUrlRemainedCount;

    /**
     * 已封禁的URL个数
     */
    private Integer forbiddenUrlUsedCount;

    /**
     * 总的封禁URL上限
     */
    private Integer forbiddenUrlAllCount;

    /**
     * 已封禁的域名个数，即用户账号下对违法内容封禁的域名
     */
    private Integer hasForbiddenDomainCount;

    /**
     * 剩余可用的预热URL个数
     */
    private Integer prefetchRemainedCount;

    /**
     * 总的预热URL上限
     */
    private Integer prefetchAllCount;

    /**
     * 已使用的预热URL个数
     */
    private Integer prefetchUsedCount;

    /**
     * 总的刷新URL上限
     */
    private Integer refreshAllCount;

    /**
     * 剩余可用的刷新URL个数
     */
    private Integer refreshRemainedCount;

    /**
     * 已使用的刷新URL个数
     */
    private Integer refreshUsedCount;

    /**
     * 总的用户域名数上限; 即针对账号下可添加域名的总个数
     */
    private Integer totalUserDomainQuota;

    /**
     * 已使用的用户域名个数；即账号下已经添加的域名个数，包括停用域名、封禁域名等
     */
    private Integer usedUserDomainQuota;

    /**
     * 剩余可配置的用户域名个数
     */
    private Integer remainUserDomainQuota;



    /**
     * get 总的目录刷新上限
     *
     * @return
     */
    public Integer getDirAllCount() {
        return dirAllCount;
    }

    /**
     * set 总的目录刷新上限
     *
     * @param dirAllCount
     */
    public void setDirAllCount(Integer dirAllCount) {
        this.dirAllCount = dirAllCount;
    }


    /**
     * get 已使用的目录刷新个数
     *
     * @return
     */
    public Integer getDirUsedCount() {
        return dirUsedCount;
    }

    /**
     * set 已使用的目录刷新个数
     *
     * @param dirUsedCount
     */
    public void setDirUsedCount(Integer dirUsedCount) {
        this.dirUsedCount = dirUsedCount;
    }


    /**
     * get 剩余可用的目录刷新个数
     *
     * @return
     */
    public Integer getDirRemainedCount() {
        return dirRemainedCount;
    }

    /**
     * set 剩余可用的目录刷新个数
     *
     * @param dirRemainedCount
     */
    public void setDirRemainedCount(Integer dirRemainedCount) {
        this.dirRemainedCount = dirRemainedCount;
    }


    /**
     * get 剩余可封禁的URL个数
     *
     * @return
     */
    public Integer getForbiddenUrlRemainedCount() {
        return forbiddenUrlRemainedCount;
    }

    /**
     * set 剩余可封禁的URL个数
     *
     * @param forbiddenUrlRemainedCount
     */
    public void setForbiddenUrlRemainedCount(Integer forbiddenUrlRemainedCount) {
        this.forbiddenUrlRemainedCount = forbiddenUrlRemainedCount;
    }


    /**
     * get 已封禁的URL个数
     *
     * @return
     */
    public Integer getForbiddenUrlUsedCount() {
        return forbiddenUrlUsedCount;
    }

    /**
     * set 已封禁的URL个数
     *
     * @param forbiddenUrlUsedCount
     */
    public void setForbiddenUrlUsedCount(Integer forbiddenUrlUsedCount) {
        this.forbiddenUrlUsedCount = forbiddenUrlUsedCount;
    }


    /**
     * get 总的封禁URL上限
     *
     * @return
     */
    public Integer getForbiddenUrlAllCount() {
        return forbiddenUrlAllCount;
    }

    /**
     * set 总的封禁URL上限
     *
     * @param forbiddenUrlAllCount
     */
    public void setForbiddenUrlAllCount(Integer forbiddenUrlAllCount) {
        this.forbiddenUrlAllCount = forbiddenUrlAllCount;
    }


    /**
     * get 已封禁的域名个数，即用户账号下对违法内容封禁的域名
     *
     * @return
     */
    public Integer getHasForbiddenDomainCount() {
        return hasForbiddenDomainCount;
    }

    /**
     * set 已封禁的域名个数，即用户账号下对违法内容封禁的域名
     *
     * @param hasForbiddenDomainCount
     */
    public void setHasForbiddenDomainCount(Integer hasForbiddenDomainCount) {
        this.hasForbiddenDomainCount = hasForbiddenDomainCount;
    }


    /**
     * get 剩余可用的预热URL个数
     *
     * @return
     */
    public Integer getPrefetchRemainedCount() {
        return prefetchRemainedCount;
    }

    /**
     * set 剩余可用的预热URL个数
     *
     * @param prefetchRemainedCount
     */
    public void setPrefetchRemainedCount(Integer prefetchRemainedCount) {
        this.prefetchRemainedCount = prefetchRemainedCount;
    }


    /**
     * get 总的预热URL上限
     *
     * @return
     */
    public Integer getPrefetchAllCount() {
        return prefetchAllCount;
    }

    /**
     * set 总的预热URL上限
     *
     * @param prefetchAllCount
     */
    public void setPrefetchAllCount(Integer prefetchAllCount) {
        this.prefetchAllCount = prefetchAllCount;
    }


    /**
     * get 已使用的预热URL个数
     *
     * @return
     */
    public Integer getPrefetchUsedCount() {
        return prefetchUsedCount;
    }

    /**
     * set 已使用的预热URL个数
     *
     * @param prefetchUsedCount
     */
    public void setPrefetchUsedCount(Integer prefetchUsedCount) {
        this.prefetchUsedCount = prefetchUsedCount;
    }


    /**
     * get 总的刷新URL上限
     *
     * @return
     */
    public Integer getRefreshAllCount() {
        return refreshAllCount;
    }

    /**
     * set 总的刷新URL上限
     *
     * @param refreshAllCount
     */
    public void setRefreshAllCount(Integer refreshAllCount) {
        this.refreshAllCount = refreshAllCount;
    }


    /**
     * get 剩余可用的刷新URL个数
     *
     * @return
     */
    public Integer getRefreshRemainedCount() {
        return refreshRemainedCount;
    }

    /**
     * set 剩余可用的刷新URL个数
     *
     * @param refreshRemainedCount
     */
    public void setRefreshRemainedCount(Integer refreshRemainedCount) {
        this.refreshRemainedCount = refreshRemainedCount;
    }


    /**
     * get 已使用的刷新URL个数
     *
     * @return
     */
    public Integer getRefreshUsedCount() {
        return refreshUsedCount;
    }

    /**
     * set 已使用的刷新URL个数
     *
     * @param refreshUsedCount
     */
    public void setRefreshUsedCount(Integer refreshUsedCount) {
        this.refreshUsedCount = refreshUsedCount;
    }


    /**
     * get 总的用户域名数上限; 即针对账号下可添加域名的总个数
     *
     * @return
     */
    public Integer getTotalUserDomainQuota() {
        return totalUserDomainQuota;
    }

    /**
     * set 总的用户域名数上限; 即针对账号下可添加域名的总个数
     *
     * @param totalUserDomainQuota
     */
    public void setTotalUserDomainQuota(Integer totalUserDomainQuota) {
        this.totalUserDomainQuota = totalUserDomainQuota;
    }


    /**
     * get 已使用的用户域名个数；即账号下已经添加的域名个数，包括停用域名、封禁域名等
     *
     * @return
     */
    public Integer getUsedUserDomainQuota() {
        return usedUserDomainQuota;
    }

    /**
     * set 已使用的用户域名个数；即账号下已经添加的域名个数，包括停用域名、封禁域名等
     *
     * @param usedUserDomainQuota
     */
    public void setUsedUserDomainQuota(Integer usedUserDomainQuota) {
        this.usedUserDomainQuota = usedUserDomainQuota;
    }


    /**
     * get 剩余可配置的用户域名个数
     *
     * @return
     */
    public Integer getRemainUserDomainQuota() {
        return remainUserDomainQuota;
    }

    /**
     * set 剩余可配置的用户域名个数
     *
     * @param remainUserDomainQuota
     */
    public void setRemainUserDomainQuota(Integer remainUserDomainQuota) {
        this.remainUserDomainQuota = remainUserDomainQuota;
    }



    /**
     * set 总的目录刷新上限
     *
     * @param dirAllCount
     */
    public QueryCdnUserQuotaResult dirAllCount(Integer dirAllCount) {
        this.dirAllCount = dirAllCount;
        return this;
    }


    /**
     * set 已使用的目录刷新个数
     *
     * @param dirUsedCount
     */
    public QueryCdnUserQuotaResult dirUsedCount(Integer dirUsedCount) {
        this.dirUsedCount = dirUsedCount;
        return this;
    }


    /**
     * set 剩余可用的目录刷新个数
     *
     * @param dirRemainedCount
     */
    public QueryCdnUserQuotaResult dirRemainedCount(Integer dirRemainedCount) {
        this.dirRemainedCount = dirRemainedCount;
        return this;
    }


    /**
     * set 剩余可封禁的URL个数
     *
     * @param forbiddenUrlRemainedCount
     */
    public QueryCdnUserQuotaResult forbiddenUrlRemainedCount(Integer forbiddenUrlRemainedCount) {
        this.forbiddenUrlRemainedCount = forbiddenUrlRemainedCount;
        return this;
    }


    /**
     * set 已封禁的URL个数
     *
     * @param forbiddenUrlUsedCount
     */
    public QueryCdnUserQuotaResult forbiddenUrlUsedCount(Integer forbiddenUrlUsedCount) {
        this.forbiddenUrlUsedCount = forbiddenUrlUsedCount;
        return this;
    }


    /**
     * set 总的封禁URL上限
     *
     * @param forbiddenUrlAllCount
     */
    public QueryCdnUserQuotaResult forbiddenUrlAllCount(Integer forbiddenUrlAllCount) {
        this.forbiddenUrlAllCount = forbiddenUrlAllCount;
        return this;
    }


    /**
     * set 已封禁的域名个数，即用户账号下对违法内容封禁的域名
     *
     * @param hasForbiddenDomainCount
     */
    public QueryCdnUserQuotaResult hasForbiddenDomainCount(Integer hasForbiddenDomainCount) {
        this.hasForbiddenDomainCount = hasForbiddenDomainCount;
        return this;
    }


    /**
     * set 剩余可用的预热URL个数
     *
     * @param prefetchRemainedCount
     */
    public QueryCdnUserQuotaResult prefetchRemainedCount(Integer prefetchRemainedCount) {
        this.prefetchRemainedCount = prefetchRemainedCount;
        return this;
    }


    /**
     * set 总的预热URL上限
     *
     * @param prefetchAllCount
     */
    public QueryCdnUserQuotaResult prefetchAllCount(Integer prefetchAllCount) {
        this.prefetchAllCount = prefetchAllCount;
        return this;
    }


    /**
     * set 已使用的预热URL个数
     *
     * @param prefetchUsedCount
     */
    public QueryCdnUserQuotaResult prefetchUsedCount(Integer prefetchUsedCount) {
        this.prefetchUsedCount = prefetchUsedCount;
        return this;
    }


    /**
     * set 总的刷新URL上限
     *
     * @param refreshAllCount
     */
    public QueryCdnUserQuotaResult refreshAllCount(Integer refreshAllCount) {
        this.refreshAllCount = refreshAllCount;
        return this;
    }


    /**
     * set 剩余可用的刷新URL个数
     *
     * @param refreshRemainedCount
     */
    public QueryCdnUserQuotaResult refreshRemainedCount(Integer refreshRemainedCount) {
        this.refreshRemainedCount = refreshRemainedCount;
        return this;
    }


    /**
     * set 已使用的刷新URL个数
     *
     * @param refreshUsedCount
     */
    public QueryCdnUserQuotaResult refreshUsedCount(Integer refreshUsedCount) {
        this.refreshUsedCount = refreshUsedCount;
        return this;
    }


    /**
     * set 总的用户域名数上限; 即针对账号下可添加域名的总个数
     *
     * @param totalUserDomainQuota
     */
    public QueryCdnUserQuotaResult totalUserDomainQuota(Integer totalUserDomainQuota) {
        this.totalUserDomainQuota = totalUserDomainQuota;
        return this;
    }


    /**
     * set 已使用的用户域名个数；即账号下已经添加的域名个数，包括停用域名、封禁域名等
     *
     * @param usedUserDomainQuota
     */
    public QueryCdnUserQuotaResult usedUserDomainQuota(Integer usedUserDomainQuota) {
        this.usedUserDomainQuota = usedUserDomainQuota;
        return this;
    }


    /**
     * set 剩余可配置的用户域名个数
     *
     * @param remainUserDomainQuota
     */
    public QueryCdnUserQuotaResult remainUserDomainQuota(Integer remainUserDomainQuota) {
        this.remainUserDomainQuota = remainUserDomainQuota;
        return this;
    }


}