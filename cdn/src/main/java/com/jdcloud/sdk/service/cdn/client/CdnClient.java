/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * JDCLOUD CDN Operation And Query API
 * API related to CDN instances
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.cdn.model.SetOnlineBillingTypeRequest;
import com.jdcloud.sdk.service.cdn.model.SetOnlineBillingTypeResponse;
import com.jdcloud.sdk.service.cdn.client.SetOnlineBillingTypeExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryServiceNoticeRequest;
import com.jdcloud.sdk.service.cdn.model.QueryServiceNoticeResponse;
import com.jdcloud.sdk.service.cdn.client.QueryServiceNoticeExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDeviceStatusForPCdnRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDeviceStatusForPCdnResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDeviceStatusForPCdnExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDirStatsDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDirStatsDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDirStatsDataExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainGroupDetailRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainGroupDetailResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainGroupDetailExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempProKeysRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempProKeysResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainTempProKeysExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryWafBlackRuleSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWafBlackRuleSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWafBlackRuleSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteHttpHeaderRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteHttpHeaderResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteHttpHeaderExecutor;
import com.jdcloud.sdk.service.cdn.model.SetCustomErrorPageRequest;
import com.jdcloud.sdk.service.cdn.model.SetCustomErrorPageResponse;
import com.jdcloud.sdk.service.cdn.client.SetCustomErrorPageExecutor;
import com.jdcloud.sdk.service.cdn.model.DisableWafBlackRulesRequest;
import com.jdcloud.sdk.service.cdn.model.DisableWafBlackRulesResponse;
import com.jdcloud.sdk.service.cdn.client.DisableWafBlackRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryWebProtectSettingsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWebProtectSettingsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWebProtectSettingsExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryGeoAreasRequest;
import com.jdcloud.sdk.service.cdn.model.QueryGeoAreasResponse;
import com.jdcloud.sdk.service.cdn.client.QueryGeoAreasExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsTopUrlRequest;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsTopUrlResponse;
import com.jdcloud.sdk.service.cdn.client.QueryStatisticsTopUrlExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainConfigStatusRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainConfigStatusResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainConfigStatusExecutor;
import com.jdcloud.sdk.service.cdn.model.GetAllUpperNodeIpListRequest;
import com.jdcloud.sdk.service.cdn.model.GetAllUpperNodeIpListResponse;
import com.jdcloud.sdk.service.cdn.client.GetAllUpperNodeIpListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveStatisticsAreaDataGroupByRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveStatisticsAreaDataGroupByResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveStatisticsAreaDataGroupByExecutor;
import com.jdcloud.sdk.service.cdn.model.SetIpBlackListRequest;
import com.jdcloud.sdk.service.cdn.model.SetIpBlackListResponse;
import com.jdcloud.sdk.service.cdn.client.SetIpBlackListExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateWafWhiteRuleRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateWafWhiteRuleResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateWafWhiteRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.SetDomainConfigRequest;
import com.jdcloud.sdk.service.cdn.model.SetDomainConfigResponse;
import com.jdcloud.sdk.service.cdn.client.SetDomainConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryCustomizedDirBandWidthRequest;
import com.jdcloud.sdk.service.cdn.model.QueryCustomizedDirBandWidthResponse;
import com.jdcloud.sdk.service.cdn.client.QueryCustomizedDirBandWidthExecutor;
import com.jdcloud.sdk.service.cdn.model.SetRefreshLimitRequest;
import com.jdcloud.sdk.service.cdn.model.SetRefreshLimitResponse;
import com.jdcloud.sdk.service.cdn.client.SetRefreshLimitExecutor;
import com.jdcloud.sdk.service.cdn.model.SetFollowRedirectRequest;
import com.jdcloud.sdk.service.cdn.model.SetFollowRedirectResponse;
import com.jdcloud.sdk.service.cdn.client.SetFollowRedirectExecutor;
import com.jdcloud.sdk.service.cdn.model.StartDomainRequest;
import com.jdcloud.sdk.service.cdn.model.StartDomainResponse;
import com.jdcloud.sdk.service.cdn.client.StartDomainExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryBandWithAreaRequest;
import com.jdcloud.sdk.service.cdn.model.QueryBandWithAreaResponse;
import com.jdcloud.sdk.service.cdn.client.QueryBandWithAreaExecutor;
import com.jdcloud.sdk.service.cdn.model.SetAccesskeyConfigRequest;
import com.jdcloud.sdk.service.cdn.model.SetAccesskeyConfigResponse;
import com.jdcloud.sdk.service.cdn.client.SetAccesskeyConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.SetRangeRequest;
import com.jdcloud.sdk.service.cdn.model.SetRangeResponse;
import com.jdcloud.sdk.service.cdn.client.SetRangeExecutor;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainIpBlackListRequest;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainIpBlackListResponse;
import com.jdcloud.sdk.service.cdn.client.SetLiveDomainIpBlackListExecutor;
import com.jdcloud.sdk.service.cdn.model.SetCCProtectSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetCCProtectSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetCCProtectSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.SetExtraCacheTimeRequest;
import com.jdcloud.sdk.service.cdn.model.SetExtraCacheTimeResponse;
import com.jdcloud.sdk.service.cdn.client.SetExtraCacheTimeExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryMonitorRequest;
import com.jdcloud.sdk.service.cdn.model.QueryMonitorResponse;
import com.jdcloud.sdk.service.cdn.client.QueryMonitorExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryCdnUserQuotaRequest;
import com.jdcloud.sdk.service.cdn.model.QueryCdnUserQuotaResponse;
import com.jdcloud.sdk.service.cdn.client.QueryCdnUserQuotaExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainAppsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainAppsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveDomainAppsExecutor;
import com.jdcloud.sdk.service.cdn.model.DisableWafWhiteRulesRequest;
import com.jdcloud.sdk.service.cdn.model.DisableWafWhiteRulesResponse;
import com.jdcloud.sdk.service.cdn.client.DisableWafWhiteRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateWafBlackRuleRequest;
import com.jdcloud.sdk.service.cdn.model.CreateWafBlackRuleResponse;
import com.jdcloud.sdk.service.cdn.client.CreateWafBlackRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateDomainGroupRequest;
import com.jdcloud.sdk.service.cdn.model.CreateDomainGroupResponse;
import com.jdcloud.sdk.service.cdn.client.CreateDomainGroupExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryWebProtectSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWebProtectSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWebProtectSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.WafQueryPvForAreaAndIpRequest;
import com.jdcloud.sdk.service.cdn.model.WafQueryPvForAreaAndIpResponse;
import com.jdcloud.sdk.service.cdn.client.WafQueryPvForAreaAndIpExecutor;
import com.jdcloud.sdk.service.cdn.model.OperateIpBlackListRequest;
import com.jdcloud.sdk.service.cdn.model.OperateIpBlackListResponse;
import com.jdcloud.sdk.service.cdn.client.OperateIpBlackListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryMixStatisticsDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryMixStatisticsDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryMixStatisticsDataExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskRequest;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskResponse;
import com.jdcloud.sdk.service.cdn.client.QueryRefreshTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryHttp2Request;
import com.jdcloud.sdk.service.cdn.model.QueryHttp2Response;
import com.jdcloud.sdk.service.cdn.client.QueryHttp2Executor;
import com.jdcloud.sdk.service.cdn.model.GetDomainDetailRequest;
import com.jdcloud.sdk.service.cdn.model.GetDomainDetailResponse;
import com.jdcloud.sdk.service.cdn.client.GetDomainDetailExecutor;
import com.jdcloud.sdk.service.cdn.model.SetNetProtectionRulesSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetNetProtectionRulesSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetNetProtectionRulesSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.ConfigHttp2Request;
import com.jdcloud.sdk.service.cdn.model.ConfigHttp2Response;
import com.jdcloud.sdk.service.cdn.client.ConfigHttp2Executor;
import com.jdcloud.sdk.service.cdn.model.SearchAttackLogRequest;
import com.jdcloud.sdk.service.cdn.model.SearchAttackLogResponse;
import com.jdcloud.sdk.service.cdn.client.SearchAttackLogExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataGroupByAreaRequest;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataGroupByAreaResponse;
import com.jdcloud.sdk.service.cdn.client.QueryStatisticsDataGroupByAreaExecutor;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainAccessKeyRequest;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainAccessKeyResponse;
import com.jdcloud.sdk.service.cdn.client.SetLiveDomainAccessKeyExecutor;
import com.jdcloud.sdk.service.cdn.model.QuerywafBlackRulesRequest;
import com.jdcloud.sdk.service.cdn.model.QuerywafBlackRulesResponse;
import com.jdcloud.sdk.service.cdn.client.QuerywafBlackRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteForbiddenStreamRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteForbiddenStreamResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteForbiddenStreamExecutor;
import com.jdcloud.sdk.service.cdn.model.SetWafWhiteRuleSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetWafWhiteRuleSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetWafWhiteRuleSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskByIdsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskByIdsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryRefreshTaskByIdsExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataGroupSumRequest;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataGroupSumResponse;
import com.jdcloud.sdk.service.cdn.client.QueryStatisticsDataGroupSumExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainAllConfigClassifyRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainAllConfigClassifyResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainAllConfigClassifyExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryBandRequest;
import com.jdcloud.sdk.service.cdn.model.QueryBandResponse;
import com.jdcloud.sdk.service.cdn.client.QueryBandExecutor;
import com.jdcloud.sdk.service.cdn.model.SetHttpHeaderRequest;
import com.jdcloud.sdk.service.cdn.model.SetHttpHeaderResponse;
import com.jdcloud.sdk.service.cdn.client.SetHttpHeaderExecutor;
import com.jdcloud.sdk.service.cdn.model.CheckWhetherIpBelongToJCloudRequest;
import com.jdcloud.sdk.service.cdn.model.CheckWhetherIpBelongToJCloudResponse;
import com.jdcloud.sdk.service.cdn.client.CheckWhetherIpBelongToJCloudExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryPurgeTaskRequest;
import com.jdcloud.sdk.service.cdn.model.QueryPurgeTaskResponse;
import com.jdcloud.sdk.service.cdn.client.QueryPurgeTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.SetGzipRequest;
import com.jdcloud.sdk.service.cdn.model.SetGzipResponse;
import com.jdcloud.sdk.service.cdn.client.SetGzipExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveStatisticsDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveStatisticsDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveStatisticsDataExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainsLogRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainsLogResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainsLogExecutor;
import com.jdcloud.sdk.service.cdn.model.EnableCCProtectRuleRequest;
import com.jdcloud.sdk.service.cdn.model.EnableCCProtectRuleResponse;
import com.jdcloud.sdk.service.cdn.client.EnableCCProtectRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.SetReferRequest;
import com.jdcloud.sdk.service.cdn.model.SetReferResponse;
import com.jdcloud.sdk.service.cdn.client.SetReferExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainDetailRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainDetailResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveDomainDetailExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryIpBlackSettingStatusRequest;
import com.jdcloud.sdk.service.cdn.model.QueryIpBlackSettingStatusResponse;
import com.jdcloud.sdk.service.cdn.client.QueryIpBlackSettingStatusExecutor;
import com.jdcloud.sdk.service.cdn.model.ModifyDomainTempInstRequest;
import com.jdcloud.sdk.service.cdn.model.ModifyDomainTempInstResponse;
import com.jdcloud.sdk.service.cdn.client.ModifyDomainTempInstExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateLiveDomainPrefecthTaskRequest;
import com.jdcloud.sdk.service.cdn.model.CreateLiveDomainPrefecthTaskResponse;
import com.jdcloud.sdk.service.cdn.client.CreateLiveDomainPrefecthTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsTopIpRequest;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsTopIpResponse;
import com.jdcloud.sdk.service.cdn.client.QueryStatisticsTopIpExecutor;
import com.jdcloud.sdk.service.cdn.model.WafQueryAttackDetailsRequest;
import com.jdcloud.sdk.service.cdn.model.WafQueryAttackDetailsResponse;
import com.jdcloud.sdk.service.cdn.client.WafQueryAttackDetailsExecutor;
import com.jdcloud.sdk.service.cdn.model.StopMonitorRequest;
import com.jdcloud.sdk.service.cdn.model.StopMonitorResponse;
import com.jdcloud.sdk.service.cdn.client.StopMonitorExecutor;
import com.jdcloud.sdk.service.cdn.model.DelDomainTempInstanceRequest;
import com.jdcloud.sdk.service.cdn.model.DelDomainTempInstanceResponse;
import com.jdcloud.sdk.service.cdn.client.DelDomainTempInstanceExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryHttpHeaderRequest;
import com.jdcloud.sdk.service.cdn.model.QueryHttpHeaderResponse;
import com.jdcloud.sdk.service.cdn.client.QueryHttpHeaderExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryWafRegionsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWafRegionsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWafRegionsExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskForCallbackV2Request;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskForCallbackV2Response;
import com.jdcloud.sdk.service.cdn.client.CreateRefreshTaskForCallbackV2Executor;
import com.jdcloud.sdk.service.cdn.model.QueryWafWhiteRuleSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWafWhiteRuleSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWafWhiteRuleSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateCCProtectRuleRequest;
import com.jdcloud.sdk.service.cdn.model.CreateCCProtectRuleResponse;
import com.jdcloud.sdk.service.cdn.client.CreateCCProtectRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLivePrefetchTaskRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLivePrefetchTaskResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLivePrefetchTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateWafWhiteRuleRequest;
import com.jdcloud.sdk.service.cdn.model.CreateWafWhiteRuleResponse;
import com.jdcloud.sdk.service.cdn.client.CreateWafWhiteRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryAreaIspListV2Request;
import com.jdcloud.sdk.service.cdn.model.QueryAreaIspListV2Response;
import com.jdcloud.sdk.service.cdn.client.QueryAreaIspListV2Executor;
import com.jdcloud.sdk.service.cdn.model.QueryAvgBandwidthForPCdnRequest;
import com.jdcloud.sdk.service.cdn.model.QueryAvgBandwidthForPCdnResponse;
import com.jdcloud.sdk.service.cdn.client.QueryAvgBandwidthForPCdnExecutor;
import com.jdcloud.sdk.service.cdn.model.QuerywafWhiteRulesRequest;
import com.jdcloud.sdk.service.cdn.model.QuerywafWhiteRulesResponse;
import com.jdcloud.sdk.service.cdn.client.QuerywafWhiteRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryCustomErrorPageRequest;
import com.jdcloud.sdk.service.cdn.model.QueryCustomErrorPageResponse;
import com.jdcloud.sdk.service.cdn.client.QueryCustomErrorPageExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainLogRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainLogResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainLogExecutor;
import com.jdcloud.sdk.service.cdn.model.SetHttpTypeRequest;
import com.jdcloud.sdk.service.cdn.model.SetHttpTypeResponse;
import com.jdcloud.sdk.service.cdn.client.SetHttpTypeExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainIpBlackWhiteListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveDomainIpBlackWhiteListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveDomainIpBlackWhiteListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryExtraCacheTimeRequest;
import com.jdcloud.sdk.service.cdn.model.QueryExtraCacheTimeResponse;
import com.jdcloud.sdk.service.cdn.client.QueryExtraCacheTimeExecutor;
import com.jdcloud.sdk.service.cdn.model.StopPrefetchTaskRequest;
import com.jdcloud.sdk.service.cdn.model.StopPrefetchTaskResponse;
import com.jdcloud.sdk.service.cdn.client.StopPrefetchTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryMixTrafficGroupSumRequest;
import com.jdcloud.sdk.service.cdn.model.QueryMixTrafficGroupSumResponse;
import com.jdcloud.sdk.service.cdn.client.QueryMixTrafficGroupSumExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryOssBucketsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryOssBucketsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryOssBucketsExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryAttackTypeCountRequest;
import com.jdcloud.sdk.service.cdn.model.QueryAttackTypeCountResponse;
import com.jdcloud.sdk.service.cdn.client.QueryAttackTypeCountExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryUnForbiddenStatusRequest;
import com.jdcloud.sdk.service.cdn.model.QueryUnForbiddenStatusResponse;
import com.jdcloud.sdk.service.cdn.client.QueryUnForbiddenStatusExecutor;
import com.jdcloud.sdk.service.cdn.model.SetAuthConfigRequest;
import com.jdcloud.sdk.service.cdn.model.SetAuthConfigResponse;
import com.jdcloud.sdk.service.cdn.client.SetAuthConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryIpBlackListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryIpBlackListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryIpBlackListExecutor;
import com.jdcloud.sdk.service.cdn.model.ConfigBackSourceRuleRequest;
import com.jdcloud.sdk.service.cdn.model.ConfigBackSourceRuleResponse;
import com.jdcloud.sdk.service.cdn.client.ConfigBackSourceRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainBackSourceHostRequest;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainBackSourceHostResponse;
import com.jdcloud.sdk.service.cdn.client.SetLiveDomainBackSourceHostExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteExtraCacheTimeRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteExtraCacheTimeResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteExtraCacheTimeExecutor;
import com.jdcloud.sdk.service.cdn.model.SetProtocolConvertRequest;
import com.jdcloud.sdk.service.cdn.model.SetProtocolConvertResponse;
import com.jdcloud.sdk.service.cdn.client.SetProtocolConvertExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryCCProtectRulesRequest;
import com.jdcloud.sdk.service.cdn.model.QueryCCProtectRulesResponse;
import com.jdcloud.sdk.service.cdn.client.QueryCCProtectRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.SetAccelerateRegionRequest;
import com.jdcloud.sdk.service.cdn.model.SetAccelerateRegionResponse;
import com.jdcloud.sdk.service.cdn.client.SetAccelerateRegionExecutor;
import com.jdcloud.sdk.service.cdn.model.GetDomainListRequest;
import com.jdcloud.sdk.service.cdn.model.GetDomainListResponse;
import com.jdcloud.sdk.service.cdn.client.GetDomainListExecutor;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainReferRequest;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainReferResponse;
import com.jdcloud.sdk.service.cdn.client.SetLiveDomainReferExecutor;
import com.jdcloud.sdk.service.cdn.model.SetIgnoreQueryStringRequest;
import com.jdcloud.sdk.service.cdn.model.SetIgnoreQueryStringResponse;
import com.jdcloud.sdk.service.cdn.client.SetIgnoreQueryStringExecutor;
import com.jdcloud.sdk.service.cdn.model.BatchDeleteDomainGroupRequest;
import com.jdcloud.sdk.service.cdn.model.BatchDeleteDomainGroupResponse;
import com.jdcloud.sdk.service.cdn.client.BatchDeleteDomainGroupExecutor;
import com.jdcloud.sdk.service.cdn.model.SetUserAgentConfigRequest;
import com.jdcloud.sdk.service.cdn.model.SetUserAgentConfigResponse;
import com.jdcloud.sdk.service.cdn.client.SetUserAgentConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdatePrefetchTaskRequest;
import com.jdcloud.sdk.service.cdn.model.UpdatePrefetchTaskResponse;
import com.jdcloud.sdk.service.cdn.client.UpdatePrefetchTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.SetNetProtectionRulesRequest;
import com.jdcloud.sdk.service.cdn.model.SetNetProtectionRulesResponse;
import com.jdcloud.sdk.service.cdn.client.SetNetProtectionRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainBackSourceRequest;
import com.jdcloud.sdk.service.cdn.model.SetLiveDomainBackSourceResponse;
import com.jdcloud.sdk.service.cdn.client.SetLiveDomainBackSourceExecutor;
import com.jdcloud.sdk.service.cdn.model.SetFollowSourceProtocolRequest;
import com.jdcloud.sdk.service.cdn.model.SetFollowSourceProtocolResponse;
import com.jdcloud.sdk.service.cdn.client.SetFollowSourceProtocolExecutor;
import com.jdcloud.sdk.service.cdn.model.GetSslCertListRequest;
import com.jdcloud.sdk.service.cdn.model.GetSslCertListResponse;
import com.jdcloud.sdk.service.cdn.client.GetSslCertListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryUrlRuleRequest;
import com.jdcloud.sdk.service.cdn.model.QueryUrlRuleResponse;
import com.jdcloud.sdk.service.cdn.client.QueryUrlRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateDomainRequest;
import com.jdcloud.sdk.service.cdn.model.CreateDomainResponse;
import com.jdcloud.sdk.service.cdn.client.CreateDomainExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempInstRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempInstResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainTempInstExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryServiceIpRequest;
import com.jdcloud.sdk.service.cdn.model.QueryServiceIpResponse;
import com.jdcloud.sdk.service.cdn.client.QueryServiceIpExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainConfigRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainConfigResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDirBandwidthRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDirBandwidthResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDirBandwidthExecutor;
import com.jdcloud.sdk.service.cdn.model.SetVideoDraftRequest;
import com.jdcloud.sdk.service.cdn.model.SetVideoDraftResponse;
import com.jdcloud.sdk.service.cdn.client.SetVideoDraftExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryCCProtectSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryCCProtectSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryCCProtectSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.ConfigBackSourcePathRequest;
import com.jdcloud.sdk.service.cdn.model.ConfigBackSourcePathResponse;
import com.jdcloud.sdk.service.cdn.client.ConfigBackSourcePathExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateWebProtectSettingsRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateWebProtectSettingsResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateWebProtectSettingsExecutor;
import com.jdcloud.sdk.service.cdn.model.OperateShareCacheRequest;
import com.jdcloud.sdk.service.cdn.model.OperateShareCacheResponse;
import com.jdcloud.sdk.service.cdn.client.OperateShareCacheExecutor;
import com.jdcloud.sdk.service.cdn.model.EnableWafWhiteRulesRequest;
import com.jdcloud.sdk.service.cdn.model.EnableWafWhiteRulesResponse;
import com.jdcloud.sdk.service.cdn.client.EnableWafWhiteRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshLimitRequest;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshLimitResponse;
import com.jdcloud.sdk.service.cdn.client.QueryRefreshLimitExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryMixStatisticsWithAreaDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryMixStatisticsWithAreaDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryMixStatisticsWithAreaDataExecutor;
import com.jdcloud.sdk.service.cdn.model.SetWebProtectSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetWebProtectSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetWebProtectSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.OperateLiveDomainIpBlackListRequest;
import com.jdcloud.sdk.service.cdn.model.OperateLiveDomainIpBlackListResponse;
import com.jdcloud.sdk.service.cdn.client.OperateLiveDomainIpBlackListExecutor;
import com.jdcloud.sdk.service.cdn.model.ConfigUrlRuleRequest;
import com.jdcloud.sdk.service.cdn.model.ConfigUrlRuleResponse;
import com.jdcloud.sdk.service.cdn.client.ConfigUrlRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryStatisticsDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryStatisticsDataExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryAreaIspListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryAreaIspListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryAreaIspListExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteCCProtectRuleRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteCCProtectRuleResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteCCProtectRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.SetWafBlackRuleSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetWafBlackRuleSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetWafBlackRuleSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDefaultHttpHeaderKeyRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDefaultHttpHeaderKeyResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDefaultHttpHeaderKeyExecutor;
import com.jdcloud.sdk.service.cdn.model.SetMonitorRequest;
import com.jdcloud.sdk.service.cdn.model.SetMonitorResponse;
import com.jdcloud.sdk.service.cdn.client.SetMonitorExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteDomainRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteDomainResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteDomainExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryBackSourcePathRequest;
import com.jdcloud.sdk.service.cdn.model.QueryBackSourcePathResponse;
import com.jdcloud.sdk.service.cdn.client.QueryBackSourcePathExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryJBoxAvgBandwidthRequest;
import com.jdcloud.sdk.service.cdn.model.QueryJBoxAvgBandwidthResponse;
import com.jdcloud.sdk.service.cdn.client.QueryJBoxAvgBandwidthExecutor;
import com.jdcloud.sdk.service.cdn.model.SetSourceAuthConfigRequest;
import com.jdcloud.sdk.service.cdn.model.SetSourceAuthConfigResponse;
import com.jdcloud.sdk.service.cdn.client.SetSourceAuthConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryUserAgentRequest;
import com.jdcloud.sdk.service.cdn.model.QueryUserAgentResponse;
import com.jdcloud.sdk.service.cdn.client.QueryUserAgentExecutor;
import com.jdcloud.sdk.service.cdn.model.GetDomainListByFilterRequest;
import com.jdcloud.sdk.service.cdn.model.GetDomainListByFilterResponse;
import com.jdcloud.sdk.service.cdn.client.GetDomainListByFilterExecutor;
import com.jdcloud.sdk.service.cdn.model.WafQueryPvRequest;
import com.jdcloud.sdk.service.cdn.model.WafQueryPvResponse;
import com.jdcloud.sdk.service.cdn.client.WafQueryPvExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryFollowRedirectRequest;
import com.jdcloud.sdk.service.cdn.model.QueryFollowRedirectResponse;
import com.jdcloud.sdk.service.cdn.client.QueryFollowRedirectExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryPushDomainORAppOrStreamRequest;
import com.jdcloud.sdk.service.cdn.model.QueryPushDomainORAppOrStreamResponse;
import com.jdcloud.sdk.service.cdn.client.QueryPushDomainORAppOrStreamExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteCacheRuleRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteCacheRuleResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteCacheRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryNetProtectionRulesSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryNetProtectionRulesSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryNetProtectionRulesSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainGroupListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainGroupListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainGroupListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainsNotInGroupRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainsNotInGroupResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainsNotInGroupExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryPrefetchTaskRequest;
import com.jdcloud.sdk.service.cdn.model.QueryPrefetchTaskResponse;
import com.jdcloud.sdk.service.cdn.client.QueryPrefetchTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryJDBoxStatisticsDataRequest;
import com.jdcloud.sdk.service.cdn.model.QueryJDBoxStatisticsDataResponse;
import com.jdcloud.sdk.service.cdn.client.QueryJDBoxStatisticsDataExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryForbiddenInfoListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryForbiddenInfoListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryForbiddenInfoListExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryFollowSourceProtocolRequest;
import com.jdcloud.sdk.service.cdn.model.QueryFollowSourceProtocolResponse;
import com.jdcloud.sdk.service.cdn.client.QueryFollowSourceProtocolExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempInstListRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDomainTempInstListResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDomainTempInstListExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateDomainGroupRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateDomainGroupResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateDomainGroupExecutor;
import com.jdcloud.sdk.service.cdn.model.BatCreatePrefetchTaskRequest;
import com.jdcloud.sdk.service.cdn.model.BatCreatePrefetchTaskResponse;
import com.jdcloud.sdk.service.cdn.client.BatCreatePrefetchTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.GetSslCertDetailRequest;
import com.jdcloud.sdk.service.cdn.model.GetSslCertDetailResponse;
import com.jdcloud.sdk.service.cdn.client.GetSslCertDetailExecutor;
import com.jdcloud.sdk.service.cdn.model.StopDomainRequest;
import com.jdcloud.sdk.service.cdn.model.StopDomainResponse;
import com.jdcloud.sdk.service.cdn.client.StopDomainExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryWafSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.QueryWafSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.QueryWafSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteForbiddenInfoRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteForbiddenInfoResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteForbiddenInfoExecutor;
import com.jdcloud.sdk.service.cdn.model.ConfigServiceNoticeRequest;
import com.jdcloud.sdk.service.cdn.model.ConfigServiceNoticeResponse;
import com.jdcloud.sdk.service.cdn.client.ConfigServiceNoticeExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskRequest;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskResponse;
import com.jdcloud.sdk.service.cdn.client.CreateRefreshTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryNetProtectionRulesRequest;
import com.jdcloud.sdk.service.cdn.model.QueryNetProtectionRulesResponse;
import com.jdcloud.sdk.service.cdn.client.QueryNetProtectionRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.PreviewCertificateRequest;
import com.jdcloud.sdk.service.cdn.model.PreviewCertificateResponse;
import com.jdcloud.sdk.service.cdn.client.PreviewCertificateExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryBackSourceRuleRequest;
import com.jdcloud.sdk.service.cdn.model.QueryBackSourceRuleResponse;
import com.jdcloud.sdk.service.cdn.client.QueryBackSourceRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryDdosGraphRequest;
import com.jdcloud.sdk.service.cdn.model.QueryDdosGraphResponse;
import com.jdcloud.sdk.service.cdn.client.QueryDdosGraphExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteWafBlackRulesRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteWafBlackRulesResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteWafBlackRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateWafBlackRuleRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateWafBlackRuleResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateWafBlackRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.EnableWafBlackRulesRequest;
import com.jdcloud.sdk.service.cdn.model.EnableWafBlackRulesResponse;
import com.jdcloud.sdk.service.cdn.client.EnableWafBlackRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryAccesskeyConfigRequest;
import com.jdcloud.sdk.service.cdn.model.QueryAccesskeyConfigResponse;
import com.jdcloud.sdk.service.cdn.client.QueryAccesskeyConfigExecutor;
import com.jdcloud.sdk.service.cdn.model.DisableCCProtectRuleRequest;
import com.jdcloud.sdk.service.cdn.model.DisableCCProtectRuleResponse;
import com.jdcloud.sdk.service.cdn.client.DisableCCProtectRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskForCallbackRequest;
import com.jdcloud.sdk.service.cdn.model.CreateRefreshTaskForCallbackResponse;
import com.jdcloud.sdk.service.cdn.client.CreateRefreshTaskForCallbackExecutor;
import com.jdcloud.sdk.service.cdn.model.ExecuteDomainCopyRequest;
import com.jdcloud.sdk.service.cdn.model.ExecuteDomainCopyResponse;
import com.jdcloud.sdk.service.cdn.client.ExecuteDomainCopyExecutor;
import com.jdcloud.sdk.service.cdn.model.OperatePurgeTaskRequest;
import com.jdcloud.sdk.service.cdn.model.OperatePurgeTaskResponse;
import com.jdcloud.sdk.service.cdn.client.OperatePurgeTaskExecutor;
import com.jdcloud.sdk.service.cdn.model.BatchCreateRequest;
import com.jdcloud.sdk.service.cdn.model.BatchCreateResponse;
import com.jdcloud.sdk.service.cdn.client.BatchCreateExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryLiveTrafficGroupSumRequest;
import com.jdcloud.sdk.service.cdn.model.QueryLiveTrafficGroupSumResponse;
import com.jdcloud.sdk.service.cdn.client.QueryLiveTrafficGroupSumExecutor;
import com.jdcloud.sdk.service.cdn.model.DeleteWafWhiteRulesRequest;
import com.jdcloud.sdk.service.cdn.model.DeleteWafWhiteRulesResponse;
import com.jdcloud.sdk.service.cdn.client.DeleteWafWhiteRulesExecutor;
import com.jdcloud.sdk.service.cdn.model.SetFilterArgsRequest;
import com.jdcloud.sdk.service.cdn.model.SetFilterArgsResponse;
import com.jdcloud.sdk.service.cdn.client.SetFilterArgsExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateCCProtectRuleRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateCCProtectRuleResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateCCProtectRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateForbiddenInfoRequest;
import com.jdcloud.sdk.service.cdn.model.CreateForbiddenInfoResponse;
import com.jdcloud.sdk.service.cdn.client.CreateForbiddenInfoExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryOnlineBillingTypeRequest;
import com.jdcloud.sdk.service.cdn.model.QueryOnlineBillingTypeResponse;
import com.jdcloud.sdk.service.cdn.client.QueryOnlineBillingTypeExecutor;
import com.jdcloud.sdk.service.cdn.model.BatchSetExtraCacheTimeRequest;
import com.jdcloud.sdk.service.cdn.model.BatchSetExtraCacheTimeResponse;
import com.jdcloud.sdk.service.cdn.client.BatchSetExtraCacheTimeExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskByIdRequest;
import com.jdcloud.sdk.service.cdn.model.QueryRefreshTaskByIdResponse;
import com.jdcloud.sdk.service.cdn.client.QueryRefreshTaskByIdExecutor;
import com.jdcloud.sdk.service.cdn.model.UpdateCacheRuleRequest;
import com.jdcloud.sdk.service.cdn.model.UpdateCacheRuleResponse;
import com.jdcloud.sdk.service.cdn.client.UpdateCacheRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.SetWafSwitchRequest;
import com.jdcloud.sdk.service.cdn.model.SetWafSwitchResponse;
import com.jdcloud.sdk.service.cdn.client.SetWafSwitchExecutor;
import com.jdcloud.sdk.service.cdn.model.QueryFilterArgsRequest;
import com.jdcloud.sdk.service.cdn.model.QueryFilterArgsResponse;
import com.jdcloud.sdk.service.cdn.client.QueryFilterArgsExecutor;
import com.jdcloud.sdk.service.cdn.model.UploadCertRequest;
import com.jdcloud.sdk.service.cdn.model.UploadCertResponse;
import com.jdcloud.sdk.service.cdn.client.UploadCertExecutor;
import com.jdcloud.sdk.service.cdn.model.CreateCacheRuleRequest;
import com.jdcloud.sdk.service.cdn.model.CreateCacheRuleResponse;
import com.jdcloud.sdk.service.cdn.client.CreateCacheRuleExecutor;
import com.jdcloud.sdk.service.cdn.model.BatchCreateLiveDomainRequest;
import com.jdcloud.sdk.service.cdn.model.BatchCreateLiveDomainResponse;
import com.jdcloud.sdk.service.cdn.client.BatchCreateLiveDomainExecutor;
import com.jdcloud.sdk.service.cdn.model.SetSourceRequest;
import com.jdcloud.sdk.service.cdn.model.SetSourceResponse;
import com.jdcloud.sdk.service.cdn.client.SetSourceExecutor;

/**
 * cdnClient
 */
public class CdnClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "cdn.jdcloud-api.com";
    public final static String ServiceName = "cdn";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private CdnClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 设置线上计费方式
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetOnlineBillingTypeResponse setOnlineBillingType(SetOnlineBillingTypeRequest request) throws JdcloudSdkException {
        return new SetOnlineBillingTypeExecutor().client(this).execute(request);
    }

    /**
     * 查询用户服务通知接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryServiceNoticeResponse queryServiceNotice(QueryServiceNoticeRequest request) throws JdcloudSdkException {
        return new QueryServiceNoticeExecutor().client(this).execute(request);
    }

    /**
     * 查询设备状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDeviceStatusForPCdnResponse queryDeviceStatusForPCdn(QueryDeviceStatusForPCdnRequest request) throws JdcloudSdkException {
        return new QueryDeviceStatusForPCdnExecutor().client(this).execute(request);
    }

    /**
     * 查询目录基础统计数据，仅有部分用户支持该功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDirStatsDataResponse queryDirStatsData(QueryDirStatsDataRequest request) throws JdcloudSdkException {
        return new QueryDirStatsDataExecutor().client(this).execute(request);
    }

    /**
     * 查询域名组详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainGroupDetailResponse queryDomainGroupDetail(QueryDomainGroupDetailRequest request) throws JdcloudSdkException {
        return new QueryDomainGroupDetailExecutor().client(this).execute(request);
    }

    /**
     * 查询模板详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainTempProKeysResponse queryDomainTempProKeys(QueryDomainTempProKeysRequest request) throws JdcloudSdkException {
        return new QueryDomainTempProKeysExecutor().client(this).execute(request);
    }

    /**
     * 查询WAF黑名单开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWafBlackRuleSwitchResponse queryWafBlackRuleSwitch(QueryWafBlackRuleSwitchRequest request) throws JdcloudSdkException {
        return new QueryWafBlackRuleSwitchExecutor().client(this).execute(request);
    }

    /**
     * 删除httpHeader
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteHttpHeaderResponse deleteHttpHeader(DeleteHttpHeaderRequest request) throws JdcloudSdkException {
        return new DeleteHttpHeaderExecutor().client(this).execute(request);
    }

    /**
     * 设置自定义错误页面信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetCustomErrorPageResponse setCustomErrorPage(SetCustomErrorPageRequest request) throws JdcloudSdkException {
        return new SetCustomErrorPageExecutor().client(this).execute(request);
    }

    /**
     * 禁用WAF黑名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableWafBlackRulesResponse disableWafBlackRules(DisableWafBlackRulesRequest request) throws JdcloudSdkException {
        return new DisableWafBlackRulesExecutor().client(this).execute(request);
    }

    /**
     * 查询web防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWebProtectSettingsResponse queryWebProtectSettings(QueryWebProtectSettingsRequest request) throws JdcloudSdkException {
        return new QueryWebProtectSettingsExecutor().client(this).execute(request);
    }

    /**
     * 查询geo地域
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryGeoAreasResponse queryGeoAreas(QueryGeoAreasRequest request) throws JdcloudSdkException {
        return new QueryGeoAreasExecutor().client(this).execute(request);
    }

    /**
     * 查询TOP Url
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryStatisticsTopUrlResponse queryStatisticsTopUrl(QueryStatisticsTopUrlRequest request) throws JdcloudSdkException {
        return new QueryStatisticsTopUrlExecutor().client(this).execute(request);
    }

    /**
     * 查询域名配置状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainConfigStatusResponse queryDomainConfigStatus(QueryDomainConfigStatusRequest request) throws JdcloudSdkException {
        return new QueryDomainConfigStatusExecutor().client(this).execute(request);
    }

    /**
     * 获取所有上层节点的ip
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetAllUpperNodeIpListResponse getAllUpperNodeIpList(GetAllUpperNodeIpListRequest request) throws JdcloudSdkException {
        return new GetAllUpperNodeIpListExecutor().client(this).execute(request);
    }

    /**
     * 分地区及运营商查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveStatisticsAreaDataGroupByResponse queryLiveStatisticsAreaDataGroupBy(QueryLiveStatisticsAreaDataGroupByRequest request) throws JdcloudSdkException {
        return new QueryLiveStatisticsAreaDataGroupByExecutor().client(this).execute(request);
    }

    /**
     * 设置ip黑名白单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetIpBlackListResponse setIpBlackList(SetIpBlackListRequest request) throws JdcloudSdkException {
        return new SetIpBlackListExecutor().client(this).execute(request);
    }

    /**
     * 修改指定的白名单规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateWafWhiteRuleResponse updateWafWhiteRule(UpdateWafWhiteRuleRequest request) throws JdcloudSdkException {
        return new UpdateWafWhiteRuleExecutor().client(this).execute(request);
    }

    /**
     * 更新域名配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetDomainConfigResponse setDomainConfig(SetDomainConfigRequest request) throws JdcloudSdkException {
        return new SetDomainConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询定制的目录带宽，仅有部分用户支持该功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCustomizedDirBandWidthResponse queryCustomizedDirBandWidth(QueryCustomizedDirBandWidthRequest request) throws JdcloudSdkException {
        return new QueryCustomizedDirBandWidthExecutor().client(this).execute(request);
    }

    /**
     * 设置用户刷新预热限额
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetRefreshLimitResponse setRefreshLimit(SetRefreshLimitRequest request) throws JdcloudSdkException {
        return new SetRefreshLimitExecutor().client(this).execute(request);
    }

    /**
     * 设置回源302跳转
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetFollowRedirectResponse setFollowRedirect(SetFollowRedirectRequest request) throws JdcloudSdkException {
        return new SetFollowRedirectExecutor().client(this).execute(request);
    }

    /**
     * 启动加速域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartDomainResponse startDomain(StartDomainRequest request) throws JdcloudSdkException {
        return new StartDomainExecutor().client(this).execute(request);
    }

    /**
     * 分地域运营商带宽查询接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBandWithAreaResponse queryBandWithArea(QueryBandWithAreaRequest request) throws JdcloudSdkException {
        return new QueryBandWithAreaExecutor().client(this).execute(request);
    }

    /**
     * 设置url鉴权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetAccesskeyConfigResponse setAccesskeyConfig(SetAccesskeyConfigRequest request) throws JdcloudSdkException {
        return new SetAccesskeyConfigExecutor().client(this).execute(request);
    }

    /**
     * 设置range参数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetRangeResponse setRange(SetRangeRequest request) throws JdcloudSdkException {
        return new SetRangeExecutor().client(this).execute(request);
    }

    /**
     * 设置直播域名ip黑白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainIpBlackListResponse setLiveDomainIpBlackList(SetLiveDomainIpBlackListRequest request) throws JdcloudSdkException {
        return new SetLiveDomainIpBlackListExecutor().client(this).execute(request);
    }

    /**
     * 设置CC 防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetCCProtectSwitchResponse setCCProtectSwitch(SetCCProtectSwitchRequest request) throws JdcloudSdkException {
        return new SetCCProtectSwitchExecutor().client(this).execute(request);
    }

    /**
     * 设置异常码缓存时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetExtraCacheTimeResponse setExtraCacheTime(SetExtraCacheTimeRequest request) throws JdcloudSdkException {
        return new SetExtraCacheTimeExecutor().client(this).execute(request);
    }

    /**
     * 查询源站监控信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryMonitorResponse queryMonitor(QueryMonitorRequest request) throws JdcloudSdkException {
        return new QueryMonitorExecutor().client(this).execute(request);
    }

    /**
     * 查询用户刷新预热封禁限额
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCdnUserQuotaResponse queryCdnUserQuota(QueryCdnUserQuotaRequest request) throws JdcloudSdkException {
        return new QueryCdnUserQuotaExecutor().client(this).execute(request);
    }

    /**
     * 查询直播域名app列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveDomainAppsResponse queryLiveDomainApps(QueryLiveDomainAppsRequest request) throws JdcloudSdkException {
        return new QueryLiveDomainAppsExecutor().client(this).execute(request);
    }

    /**
     * 禁用WAF白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableWafWhiteRulesResponse disableWafWhiteRules(DisableWafWhiteRulesRequest request) throws JdcloudSdkException {
        return new DisableWafWhiteRulesExecutor().client(this).execute(request);
    }

    /**
     * 新增一条黑名单规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateWafBlackRuleResponse createWafBlackRule(CreateWafBlackRuleRequest request) throws JdcloudSdkException {
        return new CreateWafBlackRuleExecutor().client(this).execute(request);
    }

    /**
     * 创建域名组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDomainGroupResponse createDomainGroup(CreateDomainGroupRequest request) throws JdcloudSdkException {
        return new CreateDomainGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询web防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWebProtectSwitchResponse queryWebProtectSwitch(QueryWebProtectSwitchRequest request) throws JdcloudSdkException {
        return new QueryWebProtectSwitchExecutor().client(this).execute(request);
    }

    /**
     * 查询攻击来源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public WafQueryPvForAreaAndIpResponse wafQueryPvForAreaAndIp(WafQueryPvForAreaAndIpRequest request) throws JdcloudSdkException {
        return new WafQueryPvForAreaAndIpExecutor().client(this).execute(request);
    }

    /**
     * 设置ip黑名单状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OperateIpBlackListResponse operateIpBlackList(OperateIpBlackListRequest request) throws JdcloudSdkException {
        return new OperateIpBlackListExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryMixStatisticsDataResponse queryMixStatisticsData(QueryMixStatisticsDataRequest request) throws JdcloudSdkException {
        return new QueryMixStatisticsDataExecutor().client(this).execute(request);
    }

    /**
     * 查询刷新预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRefreshTaskResponse queryRefreshTask(QueryRefreshTaskRequest request) throws JdcloudSdkException {
        return new QueryRefreshTaskExecutor().client(this).execute(request);
    }

    /**
     * 查询http2配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryHttp2Response queryHttp2(QueryHttp2Request request) throws JdcloudSdkException {
        return new QueryHttp2Executor().client(this).execute(request);
    }

    /**
     * 查询加速域名详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDomainDetailResponse getDomainDetail(GetDomainDetailRequest request) throws JdcloudSdkException {
        return new GetDomainDetailExecutor().client(this).execute(request);
    }

    /**
     * 设置网络防护层规则总开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetNetProtectionRulesSwitchResponse setNetProtectionRulesSwitch(SetNetProtectionRulesSwitchRequest request) throws JdcloudSdkException {
        return new SetNetProtectionRulesSwitchExecutor().client(this).execute(request);
    }

    /**
     * http2配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConfigHttp2Response configHttp2(ConfigHttp2Request request) throws JdcloudSdkException {
        return new ConfigHttp2Executor().client(this).execute(request);
    }

    /**
     * 攻击记录查询
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SearchAttackLogResponse searchAttackLog(SearchAttackLogRequest request) throws JdcloudSdkException {
        return new SearchAttackLogExecutor().client(this).execute(request);
    }

    /**
     * 分地区及运营商查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryStatisticsDataGroupByAreaResponse queryStatisticsDataGroupByArea(QueryStatisticsDataGroupByAreaRequest request) throws JdcloudSdkException {
        return new QueryStatisticsDataGroupByAreaExecutor().client(this).execute(request);
    }

    /**
     * 设置URL鉴权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainAccessKeyResponse setLiveDomainAccessKey(SetLiveDomainAccessKeyRequest request) throws JdcloudSdkException {
        return new SetLiveDomainAccessKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询WAF黑名单规则列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QuerywafBlackRulesResponse querywafBlackRules(QuerywafBlackRulesRequest request) throws JdcloudSdkException {
        return new QuerywafBlackRulesExecutor().client(this).execute(request);
    }

    /**
     * 删除禁播流
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteForbiddenStreamResponse deleteForbiddenStream(DeleteForbiddenStreamRequest request) throws JdcloudSdkException {
        return new DeleteForbiddenStreamExecutor().client(this).execute(request);
    }

    /**
     * 设置WAF白名单开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetWafWhiteRuleSwitchResponse setWafWhiteRuleSwitch(SetWafWhiteRuleSwitchRequest request) throws JdcloudSdkException {
        return new SetWafWhiteRuleSwitchExecutor().client(this).execute(request);
    }

    /**
     * 根据taskIds查询刷新预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRefreshTaskByIdsResponse queryRefreshTaskByIds(QueryRefreshTaskByIdsRequest request) throws JdcloudSdkException {
        return new QueryRefreshTaskByIdsExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据并进行汇总加和
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryStatisticsDataGroupSumResponse queryStatisticsDataGroupSum(QueryStatisticsDataGroupSumRequest request) throws JdcloudSdkException {
        return new QueryStatisticsDataGroupSumExecutor().client(this).execute(request);
    }

    /**
     * 查询域名的全部分类配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainAllConfigClassifyResponse queryDomainAllConfigClassify(QueryDomainAllConfigClassifyRequest request) throws JdcloudSdkException {
        return new QueryDomainAllConfigClassifyExecutor().client(this).execute(request);
    }

    /**
     * 带宽查询接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBandResponse queryBand(QueryBandRequest request) throws JdcloudSdkException {
        return new QueryBandExecutor().client(this).execute(request);
    }

    /**
     * 添加httpHeader
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetHttpHeaderResponse setHttpHeader(SetHttpHeaderRequest request) throws JdcloudSdkException {
        return new SetHttpHeaderExecutor().client(this).execute(request);
    }

    /**
     * 获取所有上层节点的ip
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CheckWhetherIpBelongToJCloudResponse checkWhetherIpBelongToJCloud(CheckWhetherIpBelongToJCloudRequest request) throws JdcloudSdkException {
        return new CheckWhetherIpBelongToJCloudExecutor().client(this).execute(request);
    }

    /**
     * 查询刷新任务接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPurgeTaskResponse queryPurgeTask(QueryPurgeTaskRequest request) throws JdcloudSdkException {
        return new QueryPurgeTaskExecutor().client(this).execute(request);
    }

    /**
     * 设置gzip
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetGzipResponse setGzip(SetGzipRequest request) throws JdcloudSdkException {
        return new SetGzipExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveStatisticsDataResponse queryLiveStatisticsData(QueryLiveStatisticsDataRequest request) throws JdcloudSdkException {
        return new QueryLiveStatisticsDataExecutor().client(this).execute(request);
    }

    /**
     * 批量域名查询日志
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainsLogResponse queryDomainsLog(QueryDomainsLogRequest request) throws JdcloudSdkException {
        return new QueryDomainsLogExecutor().client(this).execute(request);
    }

    /**
     * 启用CC防护规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableCCProtectRuleResponse enableCCProtectRule(EnableCCProtectRuleRequest request) throws JdcloudSdkException {
        return new EnableCCProtectRuleExecutor().client(this).execute(request);
    }

    /**
     * 设置域名refer
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetReferResponse setRefer(SetReferRequest request) throws JdcloudSdkException {
        return new SetReferExecutor().client(this).execute(request);
    }

    /**
     * 查询直播域名详情v1
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveDomainDetailResponse queryLiveDomainDetail(QueryLiveDomainDetailRequest request) throws JdcloudSdkException {
        return new QueryLiveDomainDetailExecutor().client(this).execute(request);
    }

    /**
     * 查询waf ip黑名单配置状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryIpBlackSettingStatusResponse queryIpBlackSettingStatus(QueryIpBlackSettingStatusRequest request) throws JdcloudSdkException {
        return new QueryIpBlackSettingStatusExecutor().client(this).execute(request);
    }

    /**
     * 创建修改模板实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDomainTempInstResponse modifyDomainTempInst(ModifyDomainTempInstRequest request) throws JdcloudSdkException {
        return new ModifyDomainTempInstExecutor().client(this).execute(request);
    }

    /**
     * 创建直播预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateLiveDomainPrefecthTaskResponse createLiveDomainPrefecthTask(CreateLiveDomainPrefecthTaskRequest request) throws JdcloudSdkException {
        return new CreateLiveDomainPrefecthTaskExecutor().client(this).execute(request);
    }

    /**
     * 查询TOP IP
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryStatisticsTopIpResponse queryStatisticsTopIp(QueryStatisticsTopIpRequest request) throws JdcloudSdkException {
        return new QueryStatisticsTopIpExecutor().client(this).execute(request);
    }

    /**
     * 查询攻击记录详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public WafQueryAttackDetailsResponse wafQueryAttackDetails(WafQueryAttackDetailsRequest request) throws JdcloudSdkException {
        return new WafQueryAttackDetailsExecutor().client(this).execute(request);
    }

    /**
     * 停止源站监控
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopMonitorResponse stopMonitor(StopMonitorRequest request) throws JdcloudSdkException {
        return new StopMonitorExecutor().client(this).execute(request);
    }

    /**
     * 删除修改模板实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DelDomainTempInstanceResponse delDomainTempInstance(DelDomainTempInstanceRequest request) throws JdcloudSdkException {
        return new DelDomainTempInstanceExecutor().client(this).execute(request);
    }

    /**
     * 查询http header头
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryHttpHeaderResponse queryHttpHeader(QueryHttpHeaderRequest request) throws JdcloudSdkException {
        return new QueryHttpHeaderExecutor().client(this).execute(request);
    }

    /**
     * 查询waf地域信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWafRegionsResponse queryWafRegions(QueryWafRegionsRequest request) throws JdcloudSdkException {
        return new QueryWafRegionsExecutor().client(this).execute(request);
    }

    /**
     * 创建刷新预热回调任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRefreshTaskForCallbackV2Response createRefreshTaskForCallbackV2(CreateRefreshTaskForCallbackV2Request request) throws JdcloudSdkException {
        return new CreateRefreshTaskForCallbackV2Executor().client(this).execute(request);
    }

    /**
     * 查询WAF总开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWafWhiteRuleSwitchResponse queryWafWhiteRuleSwitch(QueryWafWhiteRuleSwitchRequest request) throws JdcloudSdkException {
        return new QueryWafWhiteRuleSwitchExecutor().client(this).execute(request);
    }

    /**
     * 新增一条CC防护规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateCCProtectRuleResponse createCCProtectRule(CreateCCProtectRuleRequest request) throws JdcloudSdkException {
        return new CreateCCProtectRuleExecutor().client(this).execute(request);
    }

    /**
     * 查询直播预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLivePrefetchTaskResponse queryLivePrefetchTask(QueryLivePrefetchTaskRequest request) throws JdcloudSdkException {
        return new QueryLivePrefetchTaskExecutor().client(this).execute(request);
    }

    /**
     * 新增一条白名单规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateWafWhiteRuleResponse createWafWhiteRule(CreateWafWhiteRuleRequest request) throws JdcloudSdkException {
        return new CreateWafWhiteRuleExecutor().client(this).execute(request);
    }

    /**
     * 查找地域运营商列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAreaIspListV2Response queryAreaIspListV2(QueryAreaIspListV2Request request) throws JdcloudSdkException {
        return new QueryAreaIspListV2Executor().client(this).execute(request);
    }

    /**
     * 查询平均带宽
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAvgBandwidthForPCdnResponse queryAvgBandwidthForPCdn(QueryAvgBandwidthForPCdnRequest request) throws JdcloudSdkException {
        return new QueryAvgBandwidthForPCdnExecutor().client(this).execute(request);
    }

    /**
     * 查询WAF白名单规则列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QuerywafWhiteRulesResponse querywafWhiteRules(QuerywafWhiteRulesRequest request) throws JdcloudSdkException {
        return new QuerywafWhiteRulesExecutor().client(this).execute(request);
    }

    /**
     * 查询自定义错误页面信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCustomErrorPageResponse queryCustomErrorPage(QueryCustomErrorPageRequest request) throws JdcloudSdkException {
        return new QueryCustomErrorPageExecutor().client(this).execute(request);
    }

    /**
     * 查询日志
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainLogResponse queryDomainLog(QueryDomainLogRequest request) throws JdcloudSdkException {
        return new QueryDomainLogExecutor().client(this).execute(request);
    }

    /**
     * 设置http协议
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetHttpTypeResponse setHttpType(SetHttpTypeRequest request) throws JdcloudSdkException {
        return new SetHttpTypeExecutor().client(this).execute(request);
    }

    /**
     * 查询ip黑白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveDomainIpBlackWhiteListResponse queryLiveDomainIpBlackWhiteList(QueryLiveDomainIpBlackWhiteListRequest request) throws JdcloudSdkException {
        return new QueryLiveDomainIpBlackWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 查询异常码缓存时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryExtraCacheTimeResponse queryExtraCacheTime(QueryExtraCacheTimeRequest request) throws JdcloudSdkException {
        return new QueryExtraCacheTimeExecutor().client(this).execute(request);
    }

    /**
     * 停止预热任务接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopPrefetchTaskResponse stopPrefetchTask(StopPrefetchTaskRequest request) throws JdcloudSdkException {
        return new StopPrefetchTaskExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据并进行汇总加和
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryMixTrafficGroupSumResponse queryMixTrafficGroupSum(QueryMixTrafficGroupSumRequest request) throws JdcloudSdkException {
        return new QueryMixTrafficGroupSumExecutor().client(this).execute(request);
    }

    /**
     * 查询oss存储域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryOssBucketsResponse queryOssBuckets(QueryOssBucketsRequest request) throws JdcloudSdkException {
        return new QueryOssBucketsExecutor().client(this).execute(request);
    }

    /**
     * 攻击类型统计接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAttackTypeCountResponse queryAttackTypeCount(QueryAttackTypeCountRequest request) throws JdcloudSdkException {
        return new QueryAttackTypeCountExecutor().client(this).execute(request);
    }

    /**
     * 查询解封状态
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUnForbiddenStatusResponse queryUnForbiddenStatus(QueryUnForbiddenStatusRequest request) throws JdcloudSdkException {
        return new QueryUnForbiddenStatusExecutor().client(this).execute(request);
    }

    /**
     * dash鉴权设置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetAuthConfigResponse setAuthConfig(SetAuthConfigRequest request) throws JdcloudSdkException {
        return new SetAuthConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询ip黑白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryIpBlackListResponse queryIpBlackList(QueryIpBlackListRequest request) throws JdcloudSdkException {
        return new QueryIpBlackListExecutor().client(this).execute(request);
    }

    /**
     * 回源改写配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConfigBackSourceRuleResponse configBackSourceRule(ConfigBackSourceRuleRequest request) throws JdcloudSdkException {
        return new ConfigBackSourceRuleExecutor().client(this).execute(request);
    }

    /**
     * 设置直播域名回源host
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainBackSourceHostResponse setLiveDomainBackSourceHost(SetLiveDomainBackSourceHostRequest request) throws JdcloudSdkException {
        return new SetLiveDomainBackSourceHostExecutor().client(this).execute(request);
    }

    /**
     * 删除异常码缓存时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteExtraCacheTimeResponse deleteExtraCacheTime(DeleteExtraCacheTimeRequest request) throws JdcloudSdkException {
        return new DeleteExtraCacheTimeExecutor().client(this).execute(request);
    }

    /**
     * 设置转协议
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetProtocolConvertResponse setProtocolConvert(SetProtocolConvertRequest request) throws JdcloudSdkException {
        return new SetProtocolConvertExecutor().client(this).execute(request);
    }

    /**
     * 查询CC防护规则列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCCProtectRulesResponse queryCCProtectRules(QueryCCProtectRulesRequest request) throws JdcloudSdkException {
        return new QueryCCProtectRulesExecutor().client(this).execute(request);
    }

    /**
     * 设置加速区域
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetAccelerateRegionResponse setAccelerateRegion(SetAccelerateRegionRequest request) throws JdcloudSdkException {
        return new SetAccelerateRegionExecutor().client(this).execute(request);
    }

    /**
     * 查询加速域名接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDomainListResponse getDomainList(GetDomainListRequest request) throws JdcloudSdkException {
        return new GetDomainListExecutor().client(this).execute(request);
    }

    /**
     * 设置域名refer防盗链
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainReferResponse setLiveDomainRefer(SetLiveDomainReferRequest request) throws JdcloudSdkException {
        return new SetLiveDomainReferExecutor().client(this).execute(request);
    }

    /**
     * 设置忽略参数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetIgnoreQueryStringResponse setIgnoreQueryString(SetIgnoreQueryStringRequest request) throws JdcloudSdkException {
        return new SetIgnoreQueryStringExecutor().client(this).execute(request);
    }

    /**
     * 批量删除域名组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatchDeleteDomainGroupResponse batchDeleteDomainGroup(BatchDeleteDomainGroupRequest request) throws JdcloudSdkException {
        return new BatchDeleteDomainGroupExecutor().client(this).execute(request);
    }

    /**
     * 设置userAgent信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetUserAgentConfigResponse setUserAgentConfig(SetUserAgentConfigRequest request) throws JdcloudSdkException {
        return new SetUserAgentConfigExecutor().client(this).execute(request);
    }

    /**
     * 更新预热任务接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdatePrefetchTaskResponse updatePrefetchTask(UpdatePrefetchTaskRequest request) throws JdcloudSdkException {
        return new UpdatePrefetchTaskExecutor().client(this).execute(request);
    }

    /**
     * 设置网络防护层规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetNetProtectionRulesResponse setNetProtectionRules(SetNetProtectionRulesRequest request) throws JdcloudSdkException {
        return new SetNetProtectionRulesExecutor().client(this).execute(request);
    }

    /**
     * 设置直播域名回源信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainBackSourceResponse setLiveDomainBackSource(SetLiveDomainBackSourceRequest request) throws JdcloudSdkException {
        return new SetLiveDomainBackSourceExecutor().client(this).execute(request);
    }

    /**
     * 设置协议跟随回源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetFollowSourceProtocolResponse setFollowSourceProtocol(SetFollowSourceProtocolRequest request) throws JdcloudSdkException {
        return new SetFollowSourceProtocolExecutor().client(this).execute(request);
    }

    /**
     * 查看证书列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetSslCertListResponse getSslCertList(GetSslCertListRequest request) throws JdcloudSdkException {
        return new GetSslCertListExecutor().client(this).execute(request);
    }

    /**
     * 查询Url改写配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUrlRuleResponse queryUrlRule(QueryUrlRuleRequest request) throws JdcloudSdkException {
        return new QueryUrlRuleExecutor().client(this).execute(request);
    }

    /**
     * 创建点播加速域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDomainResponse createDomain(CreateDomainRequest request) throws JdcloudSdkException {
        return new CreateDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询模板实例详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainTempInstResponse queryDomainTempInst(QueryDomainTempInstRequest request) throws JdcloudSdkException {
        return new QueryDomainTempInstExecutor().client(this).execute(request);
    }

    /**
     * 查询一个域名的全部调度ip
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryServiceIpResponse queryServiceIp(QueryServiceIpRequest request) throws JdcloudSdkException {
        return new QueryServiceIpExecutor().client(this).execute(request);
    }

    /**
     * 查询域名配置信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainConfigResponse queryDomainConfig(QueryDomainConfigRequest request) throws JdcloudSdkException {
        return new QueryDomainConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询目录带宽，仅有部分用户支持该功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDirBandwidthResponse queryDirBandwidth(QueryDirBandwidthRequest request) throws JdcloudSdkException {
        return new QueryDirBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 设置视频拖拽
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetVideoDraftResponse setVideoDraft(SetVideoDraftRequest request) throws JdcloudSdkException {
        return new SetVideoDraftExecutor().client(this).execute(request);
    }

    /**
     * 查询CC 防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryCCProtectSwitchResponse queryCCProtectSwitch(QueryCCProtectSwitchRequest request) throws JdcloudSdkException {
        return new QueryCCProtectSwitchExecutor().client(this).execute(request);
    }

    /**
     * 多path回源配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConfigBackSourcePathResponse configBackSourcePath(ConfigBackSourcePathRequest request) throws JdcloudSdkException {
        return new ConfigBackSourcePathExecutor().client(this).execute(request);
    }

    /**
     * 设置web防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateWebProtectSettingsResponse updateWebProtectSettings(UpdateWebProtectSettingsRequest request) throws JdcloudSdkException {
        return new UpdateWebProtectSettingsExecutor().client(this).execute(request);
    }

    /**
     * 泛域名共享缓存
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OperateShareCacheResponse operateShareCache(OperateShareCacheRequest request) throws JdcloudSdkException {
        return new OperateShareCacheExecutor().client(this).execute(request);
    }

    /**
     * 启用WAF白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableWafWhiteRulesResponse enableWafWhiteRules(EnableWafWhiteRulesRequest request) throws JdcloudSdkException {
        return new EnableWafWhiteRulesExecutor().client(this).execute(request);
    }

    /**
     * 查询用户刷新预热限额
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRefreshLimitResponse queryRefreshLimit(QueryRefreshLimitRequest request) throws JdcloudSdkException {
        return new QueryRefreshLimitExecutor().client(this).execute(request);
    }

    /**
     * 分地区及运营商查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryMixStatisticsWithAreaDataResponse queryMixStatisticsWithAreaData(QueryMixStatisticsWithAreaDataRequest request) throws JdcloudSdkException {
        return new QueryMixStatisticsWithAreaDataExecutor().client(this).execute(request);
    }

    /**
     * 设置web防护开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetWebProtectSwitchResponse setWebProtectSwitch(SetWebProtectSwitchRequest request) throws JdcloudSdkException {
        return new SetWebProtectSwitchExecutor().client(this).execute(request);
    }

    /**
     * 开启或关闭ip黑名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OperateLiveDomainIpBlackListResponse operateLiveDomainIpBlackList(OperateLiveDomainIpBlackListRequest request) throws JdcloudSdkException {
        return new OperateLiveDomainIpBlackListExecutor().client(this).execute(request);
    }

    /**
     * URL改写配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConfigUrlRuleResponse configUrlRule(ConfigUrlRuleRequest request) throws JdcloudSdkException {
        return new ConfigUrlRuleExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryStatisticsDataResponse queryStatisticsData(QueryStatisticsDataRequest request) throws JdcloudSdkException {
        return new QueryStatisticsDataExecutor().client(this).execute(request);
    }

    /**
     * 查找地域运营商列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAreaIspListResponse queryAreaIspList(QueryAreaIspListRequest request) throws JdcloudSdkException {
        return new QueryAreaIspListExecutor().client(this).execute(request);
    }

    /**
     * 删除ccProtectRule
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCCProtectRuleResponse deleteCCProtectRule(DeleteCCProtectRuleRequest request) throws JdcloudSdkException {
        return new DeleteCCProtectRuleExecutor().client(this).execute(request);
    }

    /**
     * 设置WAF黑名单开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetWafBlackRuleSwitchResponse setWafBlackRuleSwitch(SetWafBlackRuleSwitchRequest request) throws JdcloudSdkException {
        return new SetWafBlackRuleSwitchExecutor().client(this).execute(request);
    }

    /**
     * 查询默认http header头部参数列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDefaultHttpHeaderKeyResponse queryDefaultHttpHeaderKey(QueryDefaultHttpHeaderKeyRequest request) throws JdcloudSdkException {
        return new QueryDefaultHttpHeaderKeyExecutor().client(this).execute(request);
    }

    /**
     * 设置源站监控信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetMonitorResponse setMonitor(SetMonitorRequest request) throws JdcloudSdkException {
        return new SetMonitorExecutor().client(this).execute(request);
    }

    /**
     * 删除加速域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDomainResponse deleteDomain(DeleteDomainRequest request) throws JdcloudSdkException {
        return new DeleteDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询回源path
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBackSourcePathResponse queryBackSourcePath(QueryBackSourcePathRequest request) throws JdcloudSdkException {
        return new QueryBackSourcePathExecutor().client(this).execute(request);
    }

    /**
     * 查询平均带宽
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryJBoxAvgBandwidthResponse queryJBoxAvgBandwidth(QueryJBoxAvgBandwidthRequest request) throws JdcloudSdkException {
        return new QueryJBoxAvgBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 回源鉴权设置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetSourceAuthConfigResponse setSourceAuthConfig(SetSourceAuthConfigRequest request) throws JdcloudSdkException {
        return new SetSourceAuthConfigExecutor().client(this).execute(request);
    }

    /**
     * 设置userAgent信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryUserAgentResponse queryUserAgent(QueryUserAgentRequest request) throws JdcloudSdkException {
        return new QueryUserAgentExecutor().client(this).execute(request);
    }

    /**
     * 通过标签查询加速域名接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetDomainListByFilterResponse getDomainListByFilter(GetDomainListByFilterRequest request) throws JdcloudSdkException {
        return new GetDomainListByFilterExecutor().client(this).execute(request);
    }

    /**
     * 查询总请求量与攻击请求量
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public WafQueryPvResponse wafQueryPv(WafQueryPvRequest request) throws JdcloudSdkException {
        return new WafQueryPvExecutor().client(this).execute(request);
    }

    /**
     * 查询回源302跳转信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryFollowRedirectResponse queryFollowRedirect(QueryFollowRedirectRequest request) throws JdcloudSdkException {
        return new QueryFollowRedirectExecutor().client(this).execute(request);
    }

    /**
     * 查询用户推流域名app名/流名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPushDomainORAppOrStreamResponse queryPushDomainORAppOrStream(QueryPushDomainORAppOrStreamRequest request) throws JdcloudSdkException {
        return new QueryPushDomainORAppOrStreamExecutor().client(this).execute(request);
    }

    /**
     * 删除缓存规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCacheRuleResponse deleteCacheRule(DeleteCacheRuleRequest request) throws JdcloudSdkException {
        return new DeleteCacheRuleExecutor().client(this).execute(request);
    }

    /**
     * 查询网络防护层规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryNetProtectionRulesSwitchResponse queryNetProtectionRulesSwitch(QueryNetProtectionRulesSwitchRequest request) throws JdcloudSdkException {
        return new QueryNetProtectionRulesSwitchExecutor().client(this).execute(request);
    }

    /**
     * 查询域名组接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainGroupListResponse queryDomainGroupList(QueryDomainGroupListRequest request) throws JdcloudSdkException {
        return new QueryDomainGroupListExecutor().client(this).execute(request);
    }

    /**
     * 查询未分组域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainsNotInGroupResponse queryDomainsNotInGroup(QueryDomainsNotInGroupRequest request) throws JdcloudSdkException {
        return new QueryDomainsNotInGroupExecutor().client(this).execute(request);
    }

    /**
     * 查询预热任务接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryPrefetchTaskResponse queryPrefetchTask(QueryPrefetchTaskRequest request) throws JdcloudSdkException {
        return new QueryPrefetchTaskExecutor().client(this).execute(request);
    }

    /**
     * 无线宝按条件查询的统计接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryJDBoxStatisticsDataResponse queryJDBoxStatisticsData(QueryJDBoxStatisticsDataRequest request) throws JdcloudSdkException {
        return new QueryJDBoxStatisticsDataExecutor().client(this).execute(request);
    }

    /**
     * 查询封禁信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryForbiddenInfoListResponse queryForbiddenInfoList(QueryForbiddenInfoListRequest request) throws JdcloudSdkException {
        return new QueryForbiddenInfoListExecutor().client(this).execute(request);
    }

    /**
     * 查询协议跟随回源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryFollowSourceProtocolResponse queryFollowSourceProtocol(QueryFollowSourceProtocolRequest request) throws JdcloudSdkException {
        return new QueryFollowSourceProtocolExecutor().client(this).execute(request);
    }

    /**
     * 查询模板实例列表接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDomainTempInstListResponse queryDomainTempInstList(QueryDomainTempInstListRequest request) throws JdcloudSdkException {
        return new QueryDomainTempInstListExecutor().client(this).execute(request);
    }

    /**
     * 更新域名组
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateDomainGroupResponse updateDomainGroup(UpdateDomainGroupRequest request) throws JdcloudSdkException {
        return new UpdateDomainGroupExecutor().client(this).execute(request);
    }

    /**
     * 创建预热任务接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatCreatePrefetchTaskResponse batCreatePrefetchTask(BatCreatePrefetchTaskRequest request) throws JdcloudSdkException {
        return new BatCreatePrefetchTaskExecutor().client(this).execute(request);
    }

    /**
     * 查看证书详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetSslCertDetailResponse getSslCertDetail(GetSslCertDetailRequest request) throws JdcloudSdkException {
        return new GetSslCertDetailExecutor().client(this).execute(request);
    }

    /**
     * 停止加速域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopDomainResponse stopDomain(StopDomainRequest request) throws JdcloudSdkException {
        return new StopDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询WAF总开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryWafSwitchResponse queryWafSwitch(QueryWafSwitchRequest request) throws JdcloudSdkException {
        return new QueryWafSwitchExecutor().client(this).execute(request);
    }

    /**
     * 删除封禁信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteForbiddenInfoResponse deleteForbiddenInfo(DeleteForbiddenInfoRequest request) throws JdcloudSdkException {
        return new DeleteForbiddenInfoExecutor().client(this).execute(request);
    }

    /**
     * 配置服务通知接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ConfigServiceNoticeResponse configServiceNotice(ConfigServiceNoticeRequest request) throws JdcloudSdkException {
        return new ConfigServiceNoticeExecutor().client(this).execute(request);
    }

    /**
     * 创建刷新预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRefreshTaskResponse createRefreshTask(CreateRefreshTaskRequest request) throws JdcloudSdkException {
        return new CreateRefreshTaskExecutor().client(this).execute(request);
    }

    /**
     * 查询网络防护层规则接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryNetProtectionRulesResponse queryNetProtectionRules(QueryNetProtectionRulesRequest request) throws JdcloudSdkException {
        return new QueryNetProtectionRulesExecutor().client(this).execute(request);
    }

    /**
     * 预览证书
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public PreviewCertificateResponse previewCertificate(PreviewCertificateRequest request) throws JdcloudSdkException {
        return new PreviewCertificateExecutor().client(this).execute(request);
    }

    /**
     * 查询回源改写配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryBackSourceRuleResponse queryBackSourceRule(QueryBackSourceRuleRequest request) throws JdcloudSdkException {
        return new QueryBackSourceRuleExecutor().client(this).execute(request);
    }

    /**
     * DDOS攻击报表接口
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryDdosGraphResponse queryDdosGraph(QueryDdosGraphRequest request) throws JdcloudSdkException {
        return new QueryDdosGraphExecutor().client(this).execute(request);
    }

    /**
     * 删除WAF黑名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteWafBlackRulesResponse deleteWafBlackRules(DeleteWafBlackRulesRequest request) throws JdcloudSdkException {
        return new DeleteWafBlackRulesExecutor().client(this).execute(request);
    }

    /**
     * 修改指定的黑名单规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateWafBlackRuleResponse updateWafBlackRule(UpdateWafBlackRuleRequest request) throws JdcloudSdkException {
        return new UpdateWafBlackRuleExecutor().client(this).execute(request);
    }

    /**
     * 启用WAF黑名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public EnableWafBlackRulesResponse enableWafBlackRules(EnableWafBlackRulesRequest request) throws JdcloudSdkException {
        return new EnableWafBlackRulesExecutor().client(this).execute(request);
    }

    /**
     * 查询url鉴权
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryAccesskeyConfigResponse queryAccesskeyConfig(QueryAccesskeyConfigRequest request) throws JdcloudSdkException {
        return new QueryAccesskeyConfigExecutor().client(this).execute(request);
    }

    /**
     * 禁用CC防护规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DisableCCProtectRuleResponse disableCCProtectRule(DisableCCProtectRuleRequest request) throws JdcloudSdkException {
        return new DisableCCProtectRuleExecutor().client(this).execute(request);
    }

    /**
     * 创建刷新预热回调任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateRefreshTaskForCallbackResponse createRefreshTaskForCallback(CreateRefreshTaskForCallbackRequest request) throws JdcloudSdkException {
        return new CreateRefreshTaskForCallbackExecutor().client(this).execute(request);
    }

    /**
     * 域名一键复制配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExecuteDomainCopyResponse executeDomainCopy(ExecuteDomainCopyRequest request) throws JdcloudSdkException {
        return new ExecuteDomainCopyExecutor().client(this).execute(request);
    }

    /**
     * 操作刷新任务接口(包含创建、停止刷新任务)
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OperatePurgeTaskResponse operatePurgeTask(OperatePurgeTaskRequest request) throws JdcloudSdkException {
        return new OperatePurgeTaskExecutor().client(this).execute(request);
    }

    /**
     * 创建点播加速域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatchCreateResponse batchCreate(BatchCreateRequest request) throws JdcloudSdkException {
        return new BatchCreateExecutor().client(this).execute(request);
    }

    /**
     * 查询统计数据并进行汇总加和
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryLiveTrafficGroupSumResponse queryLiveTrafficGroupSum(QueryLiveTrafficGroupSumRequest request) throws JdcloudSdkException {
        return new QueryLiveTrafficGroupSumExecutor().client(this).execute(request);
    }

    /**
     * 删除WAF白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteWafWhiteRulesResponse deleteWafWhiteRules(DeleteWafWhiteRulesRequest request) throws JdcloudSdkException {
        return new DeleteWafWhiteRulesExecutor().client(this).execute(request);
    }

    /**
     * 设置过滤参数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetFilterArgsResponse setFilterArgs(SetFilterArgsRequest request) throws JdcloudSdkException {
        return new SetFilterArgsExecutor().client(this).execute(request);
    }

    /**
     * 修改CC防护规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateCCProtectRuleResponse updateCCProtectRule(UpdateCCProtectRuleRequest request) throws JdcloudSdkException {
        return new UpdateCCProtectRuleExecutor().client(this).execute(request);
    }

    /**
     * 设置封禁
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateForbiddenInfoResponse createForbiddenInfo(CreateForbiddenInfoRequest request) throws JdcloudSdkException {
        return new CreateForbiddenInfoExecutor().client(this).execute(request);
    }

    /**
     * 设置线上计费方式
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryOnlineBillingTypeResponse queryOnlineBillingType(QueryOnlineBillingTypeRequest request) throws JdcloudSdkException {
        return new QueryOnlineBillingTypeExecutor().client(this).execute(request);
    }

    /**
     * 批量设置异常码缓存时间
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatchSetExtraCacheTimeResponse batchSetExtraCacheTime(BatchSetExtraCacheTimeRequest request) throws JdcloudSdkException {
        return new BatchSetExtraCacheTimeExecutor().client(this).execute(request);
    }

    /**
     * 根据taskId查询刷新预热任务
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryRefreshTaskByIdResponse queryRefreshTaskById(QueryRefreshTaskByIdRequest request) throws JdcloudSdkException {
        return new QueryRefreshTaskByIdExecutor().client(this).execute(request);
    }

    /**
     * 修改缓存规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateCacheRuleResponse updateCacheRule(UpdateCacheRuleRequest request) throws JdcloudSdkException {
        return new UpdateCacheRuleExecutor().client(this).execute(request);
    }

    /**
     * 设置WAF总开关
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetWafSwitchResponse setWafSwitch(SetWafSwitchRequest request) throws JdcloudSdkException {
        return new SetWafSwitchExecutor().client(this).execute(request);
    }

    /**
     * 查询保留参数信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryFilterArgsResponse queryFilterArgs(QueryFilterArgsRequest request) throws JdcloudSdkException {
        return new QueryFilterArgsExecutor().client(this).execute(request);
    }

    /**
     * 上传证书
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UploadCertResponse uploadCert(UploadCertRequest request) throws JdcloudSdkException {
        return new UploadCertExecutor().client(this).execute(request);
    }

    /**
     * 添加缓存规则
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateCacheRuleResponse createCacheRule(CreateCacheRuleRequest request) throws JdcloudSdkException {
        return new CreateCacheRuleExecutor().client(this).execute(request);
    }

    /**
     * 创建直播域名
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public BatchCreateLiveDomainResponse batchCreateLiveDomain(BatchCreateLiveDomainRequest request) throws JdcloudSdkException {
        return new BatchCreateLiveDomainExecutor().client(this).execute(request);
    }

    /**
     * 设置源站信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetSourceResponse setSource(SetSourceRequest request) throws JdcloudSdkException {
        return new SetSourceExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public CdnClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private CdnClient cdnClient;

        public DefaultBuilder() {
            cdnClient = new CdnClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            cdnClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            cdnClient.httpRequestConfig = config;
            return this;
        }

        public CdnClient build() throws JdcloudSdkException {

            if (cdnClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                cdnClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (cdnClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("CdnClient build error: jdcloud credentials provider not set");
                }
            }
            if (cdnClient.httpRequestConfig == null) {
                cdnClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (cdnClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("CdnClient build error: http request config not set");
                }
            }
            return cdnClient;
        }

        public Builder environment(Environment environment) {
            cdnClient.environment = environment;
            return this;
        }
    }
}
