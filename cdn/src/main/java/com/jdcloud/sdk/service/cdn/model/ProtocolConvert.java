/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;


/**
 * protocolConvert
 */
public class ProtocolConvert  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 源协议,目前只能为rtmp
     */
    private String sourceProtocol;

    /**
     * 目标协议
     */
    private String targetProtocol;



    /**
     * get 源协议,目前只能为rtmp
     *
     * @return
     */
    public String getSourceProtocol() {
        return sourceProtocol;
    }

    /**
     * set 源协议,目前只能为rtmp
     *
     * @param sourceProtocol
     */
    public void setSourceProtocol(String sourceProtocol) {
        this.sourceProtocol = sourceProtocol;
    }


    /**
     * get 目标协议
     *
     * @return
     */
    public String getTargetProtocol() {
        return targetProtocol;
    }

    /**
     * set 目标协议
     *
     * @param targetProtocol
     */
    public void setTargetProtocol(String targetProtocol) {
        this.targetProtocol = targetProtocol;
    }



    /**
     * set 源协议,目前只能为rtmp
     *
     * @param sourceProtocol
     */
    public ProtocolConvert sourceProtocol(String sourceProtocol) {
        this.sourceProtocol = sourceProtocol;
        return this;
    }


    /**
     * set 目标协议
     *
     * @param targetProtocol
     */
    public ProtocolConvert targetProtocol(String targetProtocol) {
        this.targetProtocol = targetProtocol;
        return this;
    }


}