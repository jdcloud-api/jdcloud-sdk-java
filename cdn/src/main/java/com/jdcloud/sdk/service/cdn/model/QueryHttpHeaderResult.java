/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 域名操作类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.cdn.model.QueryHttpHeaderResp;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询http header头
 */
public class QueryHttpHeaderResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * domain
     */
    private String domain;

    /**
     * headers
     */
    
    private List<QueryHttpHeaderResp> headers;


    /**
     * get domain
     *
     * @return
     */
    public String getDomain() {
        return domain;
    }

    /**
     * set domain
     *
     * @param domain
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }


    /**
    * get headers
    *
    * @return
    */
    public List<QueryHttpHeaderResp> getHeaders() {
        return headers;
    }

    /**
    * set headers
    *
    * @param headers
    */
    public void setHeaders(List<QueryHttpHeaderResp> headers) {
        this.headers = headers;
    }



    /**
     * set domain
     *
     * @param domain
     */
    public QueryHttpHeaderResult domain(String domain) {
        this.domain = domain;
        return this;
    }


    /**
    * set headers
    *
    * @param headers
    */
    public QueryHttpHeaderResult headers(List<QueryHttpHeaderResp> headers) {
        this.headers = headers;
        return this;
    }



    /**
     * add item to headers
     *
     * @param header
     */
    public void addHeader(QueryHttpHeaderResp header) {
        if (this.headers == null) {
            this.headers = new ArrayList<>();
        }
        this.headers.add(header);
    }
}