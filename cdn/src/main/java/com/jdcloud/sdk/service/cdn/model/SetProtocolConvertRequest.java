/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 直播域名配置类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 设置转协议
 */
public class SetProtocolConvertRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * https证书,转https格式时必传
     */
    private String certificate;

    /**
     * https私钥，转https格式时必传
     */
    private String rsaKey;

    /**
     * 证书来源有两种类型：default,ssl
     */
    private String certFrom;

    /**
     * ssl证书id
     */
    private String sslCertId;

    /**
     * 是否同步到ssl,boolean值，取值true或者false
     */
    private Boolean syncToSsl;

    /**
     * syncToSsl是true时，certName是必填项
     */
    private String certName;

    /**
     * protocolConverts
     */
    
    private List<ProtocolConvert> protocolConverts;
    /**
     * 用户域名
     * Required:true
     */
    @Required
    private String domain;



    /**
     * get https证书,转https格式时必传
     *
     * @return
     */
    public String getCertificate() {
        return certificate;
    }

    /**
     * set https证书,转https格式时必传
     *
     * @param certificate
     */
    public void setCertificate(String certificate) {
        this.certificate = certificate;
    }


    /**
     * get https私钥，转https格式时必传
     *
     * @return
     */
    public String getRsaKey() {
        return rsaKey;
    }

    /**
     * set https私钥，转https格式时必传
     *
     * @param rsaKey
     */
    public void setRsaKey(String rsaKey) {
        this.rsaKey = rsaKey;
    }


    /**
     * get 证书来源有两种类型：default,ssl
     *
     * @return
     */
    public String getCertFrom() {
        return certFrom;
    }

    /**
     * set 证书来源有两种类型：default,ssl
     *
     * @param certFrom
     */
    public void setCertFrom(String certFrom) {
        this.certFrom = certFrom;
    }


    /**
     * get ssl证书id
     *
     * @return
     */
    public String getSslCertId() {
        return sslCertId;
    }

    /**
     * set ssl证书id
     *
     * @param sslCertId
     */
    public void setSslCertId(String sslCertId) {
        this.sslCertId = sslCertId;
    }


    /**
     * get 是否同步到ssl,boolean值，取值true或者false
     *
     * @return
     */
    public Boolean getSyncToSsl() {
        return syncToSsl;
    }

    /**
     * set 是否同步到ssl,boolean值，取值true或者false
     *
     * @param syncToSsl
     */
    public void setSyncToSsl(Boolean syncToSsl) {
        this.syncToSsl = syncToSsl;
    }


    /**
     * get syncToSsl是true时，certName是必填项
     *
     * @return
     */
    public String getCertName() {
        return certName;
    }

    /**
     * set syncToSsl是true时，certName是必填项
     *
     * @param certName
     */
    public void setCertName(String certName) {
        this.certName = certName;
    }


    /**
    * get protocolConverts
    *
    * @return
    */
    public List<ProtocolConvert> getProtocolConverts() {
        return protocolConverts;
    }

    /**
    * set protocolConverts
    *
    * @param protocolConverts
    */
    public void setProtocolConverts(List<ProtocolConvert> protocolConverts) {
        this.protocolConverts = protocolConverts;
    }


    /**
     * get 用户域名
     *
     * @return
     */
    public String getDomain() {
        return domain;
    }

    /**
     * set 用户域名
     *
     * @param domain
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }



    /**
     * set https证书,转https格式时必传
     *
     * @param certificate
     */
    public SetProtocolConvertRequest certificate(String certificate) {
        this.certificate = certificate;
        return this;
    }


    /**
     * set https私钥，转https格式时必传
     *
     * @param rsaKey
     */
    public SetProtocolConvertRequest rsaKey(String rsaKey) {
        this.rsaKey = rsaKey;
        return this;
    }


    /**
     * set 证书来源有两种类型：default,ssl
     *
     * @param certFrom
     */
    public SetProtocolConvertRequest certFrom(String certFrom) {
        this.certFrom = certFrom;
        return this;
    }


    /**
     * set ssl证书id
     *
     * @param sslCertId
     */
    public SetProtocolConvertRequest sslCertId(String sslCertId) {
        this.sslCertId = sslCertId;
        return this;
    }


    /**
     * set 是否同步到ssl,boolean值，取值true或者false
     *
     * @param syncToSsl
     */
    public SetProtocolConvertRequest syncToSsl(Boolean syncToSsl) {
        this.syncToSsl = syncToSsl;
        return this;
    }


    /**
     * set syncToSsl是true时，certName是必填项
     *
     * @param certName
     */
    public SetProtocolConvertRequest certName(String certName) {
        this.certName = certName;
        return this;
    }


    /**
    * set protocolConverts
    *
    * @param protocolConverts
    */
    public SetProtocolConvertRequest protocolConverts(List<ProtocolConvert> protocolConverts) {
        this.protocolConverts = protocolConverts;
        return this;
    }


    /**
     * set 用户域名
     *
     * @param domain
     */
    public SetProtocolConvertRequest domain(String domain) {
        this.domain = domain;
        return this;
    }



    /**
     * add item to protocolConverts
     *
     * @param protocolConvert
     */
    public void addProtocolConvert(ProtocolConvert protocolConvert) {
        if (this.protocolConverts == null) {
            this.protocolConverts = new ArrayList<>();
        }
        this.protocolConverts.add(protocolConvert);
    }
}