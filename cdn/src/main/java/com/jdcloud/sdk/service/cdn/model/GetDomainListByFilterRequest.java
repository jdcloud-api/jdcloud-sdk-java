/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 域名操作类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.cdn.model.TagFilter;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 通过标签查询加速域名接口
 */
public class GetDomainListByFilterRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 根据关键字进行模糊匹配，域名或者回源信息
     */
    private String keyWord;

    /**
     * pageNumber,默认值为1
     */
    private Integer pageNumber;

    /**
     * pageSize,默认值为20,最大值为50
     */
    private Integer pageSize;

    /**
     * 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject]
     */
    private String status;

    /**
     * 域名类型，(web:静态小文件，download:大文件加速，vod:视频加速，live:直播加速),不传查所有
     */
    private String type;

    /**
     * 加速区域，(mainLand:中国大陆，nonMainLand:海外加港澳台，all:全球),不传为全球
     */
    private String accelerateRegion;

    /**
     * 筛选依据（0：根据域名筛选，1：根据回源信息筛选），默认按照域名进行筛选
     */
    private Integer filterBy;

    /**
     * 标签过滤条件
     */
    
    private List<TagFilter> tagFilters;


    /**
     * get 根据关键字进行模糊匹配，域名或者回源信息
     *
     * @return
     */
    public String getKeyWord() {
        return keyWord;
    }

    /**
     * set 根据关键字进行模糊匹配，域名或者回源信息
     *
     * @param keyWord
     */
    public void setKeyWord(String keyWord) {
        this.keyWord = keyWord;
    }


    /**
     * get pageNumber,默认值为1
     *
     * @return
     */
    public Integer getPageNumber() {
        return pageNumber;
    }

    /**
     * set pageNumber,默认值为1
     *
     * @param pageNumber
     */
    public void setPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
    }


    /**
     * get pageSize,默认值为20,最大值为50
     *
     * @return
     */
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * set pageSize,默认值为20,最大值为50
     *
     * @param pageSize
     */
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }


    /**
     * get 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject]
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject]
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * get 域名类型，(web:静态小文件，download:大文件加速，vod:视频加速，live:直播加速),不传查所有
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set 域名类型，(web:静态小文件，download:大文件加速，vod:视频加速，live:直播加速),不传查所有
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }


    /**
     * get 加速区域，(mainLand:中国大陆，nonMainLand:海外加港澳台，all:全球),不传为全球
     *
     * @return
     */
    public String getAccelerateRegion() {
        return accelerateRegion;
    }

    /**
     * set 加速区域，(mainLand:中国大陆，nonMainLand:海外加港澳台，all:全球),不传为全球
     *
     * @param accelerateRegion
     */
    public void setAccelerateRegion(String accelerateRegion) {
        this.accelerateRegion = accelerateRegion;
    }


    /**
     * get 筛选依据（0：根据域名筛选，1：根据回源信息筛选），默认按照域名进行筛选
     *
     * @return
     */
    public Integer getFilterBy() {
        return filterBy;
    }

    /**
     * set 筛选依据（0：根据域名筛选，1：根据回源信息筛选），默认按照域名进行筛选
     *
     * @param filterBy
     */
    public void setFilterBy(Integer filterBy) {
        this.filterBy = filterBy;
    }


    /**
    * get 标签过滤条件
    *
    * @return
    */
    public List<TagFilter> getTagFilters() {
        return tagFilters;
    }

    /**
    * set 标签过滤条件
    *
    * @param tagFilters
    */
    public void setTagFilters(List<TagFilter> tagFilters) {
        this.tagFilters = tagFilters;
    }



    /**
     * set 根据关键字进行模糊匹配，域名或者回源信息
     *
     * @param keyWord
     */
    public GetDomainListByFilterRequest keyWord(String keyWord) {
        this.keyWord = keyWord;
        return this;
    }


    /**
     * set pageNumber,默认值为1
     *
     * @param pageNumber
     */
    public GetDomainListByFilterRequest pageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }


    /**
     * set pageSize,默认值为20,最大值为50
     *
     * @param pageSize
     */
    public GetDomainListByFilterRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }


    /**
     * set 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject]
     *
     * @param status
     */
    public GetDomainListByFilterRequest status(String status) {
        this.status = status;
        return this;
    }


    /**
     * set 域名类型，(web:静态小文件，download:大文件加速，vod:视频加速，live:直播加速),不传查所有
     *
     * @param type
     */
    public GetDomainListByFilterRequest type(String type) {
        this.type = type;
        return this;
    }


    /**
     * set 加速区域，(mainLand:中国大陆，nonMainLand:海外加港澳台，all:全球),不传为全球
     *
     * @param accelerateRegion
     */
    public GetDomainListByFilterRequest accelerateRegion(String accelerateRegion) {
        this.accelerateRegion = accelerateRegion;
        return this;
    }


    /**
     * set 筛选依据（0：根据域名筛选，1：根据回源信息筛选），默认按照域名进行筛选
     *
     * @param filterBy
     */
    public GetDomainListByFilterRequest filterBy(Integer filterBy) {
        this.filterBy = filterBy;
        return this;
    }


    /**
    * set 标签过滤条件
    *
    * @param tagFilters
    */
    public GetDomainListByFilterRequest tagFilters(List<TagFilter> tagFilters) {
        this.tagFilters = tagFilters;
        return this;
    }



    /**
     * add item to 标签过滤条件
     *
     * @param tagFilter
     */
    public void addTagFilter(TagFilter tagFilter) {
        if (this.tagFilters == null) {
            this.tagFilters = new ArrayList<>();
        }
        this.tagFilters.add(tagFilter);
    }
}