/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 域名操作类接口
 * Openapi For JCLOUD cdn
 *
 * OpenAPI spec version: v1
 * Contact: pid-cdn@jd.com
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.cdn.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.cdn.model.BackSourceInfo;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询加速域名详情
 */
public class GetDomainDetailResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * null
     */
    private String allStatus;

    /**
     * 是否允许空refer访问
     */
    private String allowNoReferHeader;

    /**
     * null
     */
    private String allowNullReferHeader;

    /**
     * 日带宽（单位Mbps）
     */
    private Integer dailyBandWidth;

    /**
     * 封禁类型，取值：domain,url
     */
    private String forbiddenType;

    /**
     * 最大单个文件大小（单位MB）
     */
    private Long maxFileSize;

    /**
     * 最小单个文件大小（单位MB）
     */
    private Long minFileSize;

    /**
     * 总文件大小（单位MB）
     */
    private Long sumFileSize;

    /**
     * 平均文件大小（单位MB）
     */
    private Long avgFileSize;

    /**
     * referList
     */
    private List<String> referList;

    /**
     * refer类型，取值：block（黑名单），allow（白名单）
     */
    private String referType;

    /**
     * 域名
     */
    private String domain;

    /**
     * 为加速域名生成的一个CNAME域名，需要在域名解析服务商处将加速域名CNAME解析到该域名
     */
    private String cname;

    /**
     * 域名备案号
     */
    private String archiveNo;

    /**
     * 域名加速类型，web表示图片及小文件加速
     */
    private String type;

    /**
     * 创建时间
     */
    private String created;

    /**
     * 最后修改时间
     */
    private String modified;

    /**
     * 加速域名运行状态 ，online 表示启用；offline表示停用；configuring表示配置中；configure_failed表示配置失败
     */
    private String status;

    /**
     * 域名审核状态，取值：0（未审核），1（审核通过），2（审核不通过）
     */
    private String auditStatus;

    /**
     * null
     */
    private BackSourceInfo source;

    /**
     * 回源类型：取值 ips（IP列表），domain（域名）,oss（oss回源）
     */
    private String sourceType;

    /**
     * 默认的回源host
     */
    private String defaultSourceHost;

    /**
     * 回源类型，只能为http（80端口回源）或者https（443端口回源），默认为http
     */
    private String backSourceType;

    /**
     * http类型，只能为http或者https，默认为http。当设为https时，需要调用“设置通讯协议”接口上传证书和私钥
     */
    private String httpType;

    /**
     * 用户证书，当Type为https时必须设置
     */
    private String certificate;

    /**
     * 证书私钥
     */
    private String rsaKey;

    /**
     * 跳转类型，有三种类型：default、http、https
     */
    private String jumpType;

    /**
     * 证书来源，取值：ssl,defalut
     */
    private String certFrom;

    /**
     * 证书id
     */
    private String sslCertId;

    /**
     * 证书名称
     */
    private String certName;

    /**
     * 证书类型
     */
    private String certType;

    /**
     * 证书开始时间
     */
    private String sslCertStartTime;

    /**
     * 证书结束时间
     */
    private String sslCertEndTime;

    /**
     * 加速区域
     */
    private String accelerateRegion;

    /**
     * txt记录
     */
    private String txt;


    /**
     * get null
     *
     * @return
     */
    public String getAllStatus() {
        return allStatus;
    }

    /**
     * set null
     *
     * @param allStatus
     */
    public void setAllStatus(String allStatus) {
        this.allStatus = allStatus;
    }

    /**
     * get 是否允许空refer访问
     *
     * @return
     */
    public String getAllowNoReferHeader() {
        return allowNoReferHeader;
    }

    /**
     * set 是否允许空refer访问
     *
     * @param allowNoReferHeader
     */
    public void setAllowNoReferHeader(String allowNoReferHeader) {
        this.allowNoReferHeader = allowNoReferHeader;
    }

    /**
     * get null
     *
     * @return
     */
    public String getAllowNullReferHeader() {
        return allowNullReferHeader;
    }

    /**
     * set null
     *
     * @param allowNullReferHeader
     */
    public void setAllowNullReferHeader(String allowNullReferHeader) {
        this.allowNullReferHeader = allowNullReferHeader;
    }

    /**
     * get 日带宽（单位Mbps）
     *
     * @return
     */
    public Integer getDailyBandWidth() {
        return dailyBandWidth;
    }

    /**
     * set 日带宽（单位Mbps）
     *
     * @param dailyBandWidth
     */
    public void setDailyBandWidth(Integer dailyBandWidth) {
        this.dailyBandWidth = dailyBandWidth;
    }

    /**
     * get 封禁类型，取值：domain,url
     *
     * @return
     */
    public String getForbiddenType() {
        return forbiddenType;
    }

    /**
     * set 封禁类型，取值：domain,url
     *
     * @param forbiddenType
     */
    public void setForbiddenType(String forbiddenType) {
        this.forbiddenType = forbiddenType;
    }

    /**
     * get 最大单个文件大小（单位MB）
     *
     * @return
     */
    public Long getMaxFileSize() {
        return maxFileSize;
    }

    /**
     * set 最大单个文件大小（单位MB）
     *
     * @param maxFileSize
     */
    public void setMaxFileSize(Long maxFileSize) {
        this.maxFileSize = maxFileSize;
    }

    /**
     * get 最小单个文件大小（单位MB）
     *
     * @return
     */
    public Long getMinFileSize() {
        return minFileSize;
    }

    /**
     * set 最小单个文件大小（单位MB）
     *
     * @param minFileSize
     */
    public void setMinFileSize(Long minFileSize) {
        this.minFileSize = minFileSize;
    }

    /**
     * get 总文件大小（单位MB）
     *
     * @return
     */
    public Long getSumFileSize() {
        return sumFileSize;
    }

    /**
     * set 总文件大小（单位MB）
     *
     * @param sumFileSize
     */
    public void setSumFileSize(Long sumFileSize) {
        this.sumFileSize = sumFileSize;
    }

    /**
     * get 平均文件大小（单位MB）
     *
     * @return
     */
    public Long getAvgFileSize() {
        return avgFileSize;
    }

    /**
     * set 平均文件大小（单位MB）
     *
     * @param avgFileSize
     */
    public void setAvgFileSize(Long avgFileSize) {
        this.avgFileSize = avgFileSize;
    }

    /**
     * get referList
     *
     * @return
     */
    public List<String> getReferList() {
        return referList;
    }

    /**
     * set referList
     *
     * @param referList
     */
    public void setReferList(List<String> referList) {
        this.referList = referList;
    }

    /**
     * get refer类型，取值：block（黑名单），allow（白名单）
     *
     * @return
     */
    public String getReferType() {
        return referType;
    }

    /**
     * set refer类型，取值：block（黑名单），allow（白名单）
     *
     * @param referType
     */
    public void setReferType(String referType) {
        this.referType = referType;
    }

    /**
     * get 域名
     *
     * @return
     */
    public String getDomain() {
        return domain;
    }

    /**
     * set 域名
     *
     * @param domain
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }

    /**
     * get 为加速域名生成的一个CNAME域名，需要在域名解析服务商处将加速域名CNAME解析到该域名
     *
     * @return
     */
    public String getCname() {
        return cname;
    }

    /**
     * set 为加速域名生成的一个CNAME域名，需要在域名解析服务商处将加速域名CNAME解析到该域名
     *
     * @param cname
     */
    public void setCname(String cname) {
        this.cname = cname;
    }

    /**
     * get 域名备案号
     *
     * @return
     */
    public String getArchiveNo() {
        return archiveNo;
    }

    /**
     * set 域名备案号
     *
     * @param archiveNo
     */
    public void setArchiveNo(String archiveNo) {
        this.archiveNo = archiveNo;
    }

    /**
     * get 域名加速类型，web表示图片及小文件加速
     *
     * @return
     */
    public String getType() {
        return type;
    }

    /**
     * set 域名加速类型，web表示图片及小文件加速
     *
     * @param type
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreated() {
        return created;
    }

    /**
     * set 创建时间
     *
     * @param created
     */
    public void setCreated(String created) {
        this.created = created;
    }

    /**
     * get 最后修改时间
     *
     * @return
     */
    public String getModified() {
        return modified;
    }

    /**
     * set 最后修改时间
     *
     * @param modified
     */
    public void setModified(String modified) {
        this.modified = modified;
    }

    /**
     * get 加速域名运行状态 ，online 表示启用；offline表示停用；configuring表示配置中；configure_failed表示配置失败
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 加速域名运行状态 ，online 表示启用；offline表示停用；configuring表示配置中；configure_failed表示配置失败
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * get 域名审核状态，取值：0（未审核），1（审核通过），2（审核不通过）
     *
     * @return
     */
    public String getAuditStatus() {
        return auditStatus;
    }

    /**
     * set 域名审核状态，取值：0（未审核），1（审核通过），2（审核不通过）
     *
     * @param auditStatus
     */
    public void setAuditStatus(String auditStatus) {
        this.auditStatus = auditStatus;
    }

    /**
     * get null
     *
     * @return
     */
    public BackSourceInfo getSource() {
        return source;
    }

    /**
     * set null
     *
     * @param source
     */
    public void setSource(BackSourceInfo source) {
        this.source = source;
    }

    /**
     * get 回源类型：取值 ips（IP列表），domain（域名）,oss（oss回源）
     *
     * @return
     */
    public String getSourceType() {
        return sourceType;
    }

    /**
     * set 回源类型：取值 ips（IP列表），domain（域名）,oss（oss回源）
     *
     * @param sourceType
     */
    public void setSourceType(String sourceType) {
        this.sourceType = sourceType;
    }

    /**
     * get 默认的回源host
     *
     * @return
     */
    public String getDefaultSourceHost() {
        return defaultSourceHost;
    }

    /**
     * set 默认的回源host
     *
     * @param defaultSourceHost
     */
    public void setDefaultSourceHost(String defaultSourceHost) {
        this.defaultSourceHost = defaultSourceHost;
    }

    /**
     * get 回源类型，只能为http（80端口回源）或者https（443端口回源），默认为http
     *
     * @return
     */
    public String getBackSourceType() {
        return backSourceType;
    }

    /**
     * set 回源类型，只能为http（80端口回源）或者https（443端口回源），默认为http
     *
     * @param backSourceType
     */
    public void setBackSourceType(String backSourceType) {
        this.backSourceType = backSourceType;
    }

    /**
     * get http类型，只能为http或者https，默认为http。当设为https时，需要调用“设置通讯协议”接口上传证书和私钥
     *
     * @return
     */
    public String getHttpType() {
        return httpType;
    }

    /**
     * set http类型，只能为http或者https，默认为http。当设为https时，需要调用“设置通讯协议”接口上传证书和私钥
     *
     * @param httpType
     */
    public void setHttpType(String httpType) {
        this.httpType = httpType;
    }

    /**
     * get 用户证书，当Type为https时必须设置
     *
     * @return
     */
    public String getCertificate() {
        return certificate;
    }

    /**
     * set 用户证书，当Type为https时必须设置
     *
     * @param certificate
     */
    public void setCertificate(String certificate) {
        this.certificate = certificate;
    }

    /**
     * get 证书私钥
     *
     * @return
     */
    public String getRsaKey() {
        return rsaKey;
    }

    /**
     * set 证书私钥
     *
     * @param rsaKey
     */
    public void setRsaKey(String rsaKey) {
        this.rsaKey = rsaKey;
    }

    /**
     * get 跳转类型，有三种类型：default、http、https
     *
     * @return
     */
    public String getJumpType() {
        return jumpType;
    }

    /**
     * set 跳转类型，有三种类型：default、http、https
     *
     * @param jumpType
     */
    public void setJumpType(String jumpType) {
        this.jumpType = jumpType;
    }

    /**
     * get 证书来源，取值：ssl,defalut
     *
     * @return
     */
    public String getCertFrom() {
        return certFrom;
    }

    /**
     * set 证书来源，取值：ssl,defalut
     *
     * @param certFrom
     */
    public void setCertFrom(String certFrom) {
        this.certFrom = certFrom;
    }

    /**
     * get 证书id
     *
     * @return
     */
    public String getSslCertId() {
        return sslCertId;
    }

    /**
     * set 证书id
     *
     * @param sslCertId
     */
    public void setSslCertId(String sslCertId) {
        this.sslCertId = sslCertId;
    }

    /**
     * get 证书名称
     *
     * @return
     */
    public String getCertName() {
        return certName;
    }

    /**
     * set 证书名称
     *
     * @param certName
     */
    public void setCertName(String certName) {
        this.certName = certName;
    }

    /**
     * get 证书类型
     *
     * @return
     */
    public String getCertType() {
        return certType;
    }

    /**
     * set 证书类型
     *
     * @param certType
     */
    public void setCertType(String certType) {
        this.certType = certType;
    }

    /**
     * get 证书开始时间
     *
     * @return
     */
    public String getSslCertStartTime() {
        return sslCertStartTime;
    }

    /**
     * set 证书开始时间
     *
     * @param sslCertStartTime
     */
    public void setSslCertStartTime(String sslCertStartTime) {
        this.sslCertStartTime = sslCertStartTime;
    }

    /**
     * get 证书结束时间
     *
     * @return
     */
    public String getSslCertEndTime() {
        return sslCertEndTime;
    }

    /**
     * set 证书结束时间
     *
     * @param sslCertEndTime
     */
    public void setSslCertEndTime(String sslCertEndTime) {
        this.sslCertEndTime = sslCertEndTime;
    }

    /**
     * get 加速区域
     *
     * @return
     */
    public String getAccelerateRegion() {
        return accelerateRegion;
    }

    /**
     * set 加速区域
     *
     * @param accelerateRegion
     */
    public void setAccelerateRegion(String accelerateRegion) {
        this.accelerateRegion = accelerateRegion;
    }

    /**
     * get txt记录
     *
     * @return
     */
    public String getTxt() {
        return txt;
    }

    /**
     * set txt记录
     *
     * @param txt
     */
    public void setTxt(String txt) {
        this.txt = txt;
    }


    /**
     * set null
     *
     * @param allStatus
     */
    public GetDomainDetailResult allStatus(String allStatus) {
        this.allStatus = allStatus;
        return this;
    }

    /**
     * set 是否允许空refer访问
     *
     * @param allowNoReferHeader
     */
    public GetDomainDetailResult allowNoReferHeader(String allowNoReferHeader) {
        this.allowNoReferHeader = allowNoReferHeader;
        return this;
    }

    /**
     * set null
     *
     * @param allowNullReferHeader
     */
    public GetDomainDetailResult allowNullReferHeader(String allowNullReferHeader) {
        this.allowNullReferHeader = allowNullReferHeader;
        return this;
    }

    /**
     * set 日带宽（单位Mbps）
     *
     * @param dailyBandWidth
     */
    public GetDomainDetailResult dailyBandWidth(Integer dailyBandWidth) {
        this.dailyBandWidth = dailyBandWidth;
        return this;
    }

    /**
     * set 封禁类型，取值：domain,url
     *
     * @param forbiddenType
     */
    public GetDomainDetailResult forbiddenType(String forbiddenType) {
        this.forbiddenType = forbiddenType;
        return this;
    }

    /**
     * set 最大单个文件大小（单位MB）
     *
     * @param maxFileSize
     */
    public GetDomainDetailResult maxFileSize(Long maxFileSize) {
        this.maxFileSize = maxFileSize;
        return this;
    }

    /**
     * set 最小单个文件大小（单位MB）
     *
     * @param minFileSize
     */
    public GetDomainDetailResult minFileSize(Long minFileSize) {
        this.minFileSize = minFileSize;
        return this;
    }

    /**
     * set 总文件大小（单位MB）
     *
     * @param sumFileSize
     */
    public GetDomainDetailResult sumFileSize(Long sumFileSize) {
        this.sumFileSize = sumFileSize;
        return this;
    }

    /**
     * set 平均文件大小（单位MB）
     *
     * @param avgFileSize
     */
    public GetDomainDetailResult avgFileSize(Long avgFileSize) {
        this.avgFileSize = avgFileSize;
        return this;
    }

    /**
     * set referList
     *
     * @param referList
     */
    public GetDomainDetailResult referList(List<String> referList) {
        this.referList = referList;
        return this;
    }

    /**
     * set refer类型，取值：block（黑名单），allow（白名单）
     *
     * @param referType
     */
    public GetDomainDetailResult referType(String referType) {
        this.referType = referType;
        return this;
    }

    /**
     * set 域名
     *
     * @param domain
     */
    public GetDomainDetailResult domain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * set 为加速域名生成的一个CNAME域名，需要在域名解析服务商处将加速域名CNAME解析到该域名
     *
     * @param cname
     */
    public GetDomainDetailResult cname(String cname) {
        this.cname = cname;
        return this;
    }

    /**
     * set 域名备案号
     *
     * @param archiveNo
     */
    public GetDomainDetailResult archiveNo(String archiveNo) {
        this.archiveNo = archiveNo;
        return this;
    }

    /**
     * set 域名加速类型，web表示图片及小文件加速
     *
     * @param type
     */
    public GetDomainDetailResult type(String type) {
        this.type = type;
        return this;
    }

    /**
     * set 创建时间
     *
     * @param created
     */
    public GetDomainDetailResult created(String created) {
        this.created = created;
        return this;
    }

    /**
     * set 最后修改时间
     *
     * @param modified
     */
    public GetDomainDetailResult modified(String modified) {
        this.modified = modified;
        return this;
    }

    /**
     * set 加速域名运行状态 ，online 表示启用；offline表示停用；configuring表示配置中；configure_failed表示配置失败
     *
     * @param status
     */
    public GetDomainDetailResult status(String status) {
        this.status = status;
        return this;
    }

    /**
     * set 域名审核状态，取值：0（未审核），1（审核通过），2（审核不通过）
     *
     * @param auditStatus
     */
    public GetDomainDetailResult auditStatus(String auditStatus) {
        this.auditStatus = auditStatus;
        return this;
    }

    /**
     * set null
     *
     * @param source
     */
    public GetDomainDetailResult source(BackSourceInfo source) {
        this.source = source;
        return this;
    }

    /**
     * set 回源类型：取值 ips（IP列表），domain（域名）,oss（oss回源）
     *
     * @param sourceType
     */
    public GetDomainDetailResult sourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * set 默认的回源host
     *
     * @param defaultSourceHost
     */
    public GetDomainDetailResult defaultSourceHost(String defaultSourceHost) {
        this.defaultSourceHost = defaultSourceHost;
        return this;
    }

    /**
     * set 回源类型，只能为http（80端口回源）或者https（443端口回源），默认为http
     *
     * @param backSourceType
     */
    public GetDomainDetailResult backSourceType(String backSourceType) {
        this.backSourceType = backSourceType;
        return this;
    }

    /**
     * set http类型，只能为http或者https，默认为http。当设为https时，需要调用“设置通讯协议”接口上传证书和私钥
     *
     * @param httpType
     */
    public GetDomainDetailResult httpType(String httpType) {
        this.httpType = httpType;
        return this;
    }

    /**
     * set 用户证书，当Type为https时必须设置
     *
     * @param certificate
     */
    public GetDomainDetailResult certificate(String certificate) {
        this.certificate = certificate;
        return this;
    }

    /**
     * set 证书私钥
     *
     * @param rsaKey
     */
    public GetDomainDetailResult rsaKey(String rsaKey) {
        this.rsaKey = rsaKey;
        return this;
    }

    /**
     * set 跳转类型，有三种类型：default、http、https
     *
     * @param jumpType
     */
    public GetDomainDetailResult jumpType(String jumpType) {
        this.jumpType = jumpType;
        return this;
    }

    /**
     * set 证书来源，取值：ssl,defalut
     *
     * @param certFrom
     */
    public GetDomainDetailResult certFrom(String certFrom) {
        this.certFrom = certFrom;
        return this;
    }

    /**
     * set 证书id
     *
     * @param sslCertId
     */
    public GetDomainDetailResult sslCertId(String sslCertId) {
        this.sslCertId = sslCertId;
        return this;
    }

    /**
     * set 证书名称
     *
     * @param certName
     */
    public GetDomainDetailResult certName(String certName) {
        this.certName = certName;
        return this;
    }

    /**
     * set 证书类型
     *
     * @param certType
     */
    public GetDomainDetailResult certType(String certType) {
        this.certType = certType;
        return this;
    }

    /**
     * set 证书开始时间
     *
     * @param sslCertStartTime
     */
    public GetDomainDetailResult sslCertStartTime(String sslCertStartTime) {
        this.sslCertStartTime = sslCertStartTime;
        return this;
    }

    /**
     * set 证书结束时间
     *
     * @param sslCertEndTime
     */
    public GetDomainDetailResult sslCertEndTime(String sslCertEndTime) {
        this.sslCertEndTime = sslCertEndTime;
        return this;
    }

    /**
     * set 加速区域
     *
     * @param accelerateRegion
     */
    public GetDomainDetailResult accelerateRegion(String accelerateRegion) {
        this.accelerateRegion = accelerateRegion;
        return this;
    }

    /**
     * set txt记录
     *
     * @param txt
     */
    public GetDomainDetailResult txt(String txt) {
        this.txt = txt;
        return this;
    }


    /**
     * add item to referList
     *
     * @param referList
     */
    public void addReferList(String referList) {
        if (this.referList == null) {
            this.referList = new ArrayList<>();
        }
        this.referList.add(referList);
    }

}