/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * tableObject
 */
public class TableObject  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 目标 Schema 名称
     */
    private String name;

    /**
     * 目标分布式表名称（Clickhouse）
     */
    private String distributedName;

    /**
     * 目标 TypeName（Elasticsearch）
     */
    private String typeName;

    /**
     * 是否传输该 Scheam 下所有 Table
     */
    private Boolean all;

    /**
     * 传输的 DML 操作列表
     */
    
    private List<String> dmlOp;
    /**
     * 传输的 DDL 操作列表
     */
    
    private List<String> ddlOp;
    /**
     * 传输的 DDL 操作列表
     */
    private String filter;

    /**
     * columns
     */
    private Object columns;

    /**
     * reserve
     */
    private Object reserve;



    /**
     * get 目标 Schema 名称
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 目标 Schema 名称
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 目标分布式表名称（Clickhouse）
     *
     * @return
     */
    public String getDistributedName() {
        return distributedName;
    }

    /**
     * set 目标分布式表名称（Clickhouse）
     *
     * @param distributedName
     */
    public void setDistributedName(String distributedName) {
        this.distributedName = distributedName;
    }


    /**
     * get 目标 TypeName（Elasticsearch）
     *
     * @return
     */
    public String getTypeName() {
        return typeName;
    }

    /**
     * set 目标 TypeName（Elasticsearch）
     *
     * @param typeName
     */
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }


    /**
     * get 是否传输该 Scheam 下所有 Table
     *
     * @return
     */
    public Boolean getAll() {
        return all;
    }

    /**
     * set 是否传输该 Scheam 下所有 Table
     *
     * @param all
     */
    public void setAll(Boolean all) {
        this.all = all;
    }


    /**
    * get 传输的 DML 操作列表
    *
    * @return
    */
    public List<String> getDmlOp() {
        return dmlOp;
    }

    /**
    * set 传输的 DML 操作列表
    *
    * @param dmlOp
    */
    public void setDmlOp(List<String> dmlOp) {
        this.dmlOp = dmlOp;
    }


    /**
    * get 传输的 DDL 操作列表
    *
    * @return
    */
    public List<String> getDdlOp() {
        return ddlOp;
    }

    /**
    * set 传输的 DDL 操作列表
    *
    * @param ddlOp
    */
    public void setDdlOp(List<String> ddlOp) {
        this.ddlOp = ddlOp;
    }


    /**
     * get 传输的 DDL 操作列表
     *
     * @return
     */
    public String getFilter() {
        return filter;
    }

    /**
     * set 传输的 DDL 操作列表
     *
     * @param filter
     */
    public void setFilter(String filter) {
        this.filter = filter;
    }


    /**
     * get columns
     *
     * @return
     */
    public Object getColumns() {
        return columns;
    }

    /**
     * set columns
     *
     * @param columns
     */
    public void setColumns(Object columns) {
        this.columns = columns;
    }


    /**
     * get reserve
     *
     * @return
     */
    public Object getReserve() {
        return reserve;
    }

    /**
     * set reserve
     *
     * @param reserve
     */
    public void setReserve(Object reserve) {
        this.reserve = reserve;
    }



    /**
     * set 目标 Schema 名称
     *
     * @param name
     */
    public TableObject name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 目标分布式表名称（Clickhouse）
     *
     * @param distributedName
     */
    public TableObject distributedName(String distributedName) {
        this.distributedName = distributedName;
        return this;
    }


    /**
     * set 目标 TypeName（Elasticsearch）
     *
     * @param typeName
     */
    public TableObject typeName(String typeName) {
        this.typeName = typeName;
        return this;
    }


    /**
     * set 是否传输该 Scheam 下所有 Table
     *
     * @param all
     */
    public TableObject all(Boolean all) {
        this.all = all;
        return this;
    }


    /**
    * set 传输的 DML 操作列表
    *
    * @param dmlOp
    */
    public TableObject dmlOp(List<String> dmlOp) {
        this.dmlOp = dmlOp;
        return this;
    }


    /**
    * set 传输的 DDL 操作列表
    *
    * @param ddlOp
    */
    public TableObject ddlOp(List<String> ddlOp) {
        this.ddlOp = ddlOp;
        return this;
    }


    /**
     * set 传输的 DDL 操作列表
     *
     * @param filter
     */
    public TableObject filter(String filter) {
        this.filter = filter;
        return this;
    }


    /**
     * set columns
     *
     * @param columns
     */
    public TableObject columns(Object columns) {
        this.columns = columns;
        return this;
    }


    /**
     * set reserve
     *
     * @param reserve
     */
    public TableObject reserve(Object reserve) {
        this.reserve = reserve;
        return this;
    }



    /**
     * add item to 传输的 DML 操作列表
     *
     * @param dmlOp
     */
    public void addDmlOp(String dmlOp) {
        if (this.dmlOp == null) {
            this.dmlOp = new ArrayList<>();
        }
        this.dmlOp.add(dmlOp);
    }

    /**
     * add item to 传输的 DDL 操作列表
     *
     * @param ddlOp
     */
    public void addDdlOp(String ddlOp) {
        if (this.ddlOp == null) {
            this.ddlOp = new ArrayList<>();
        }
        this.ddlOp.add(ddlOp);
    }
}