/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * columnOption
 */
public class ColumnOption  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 类型名称
     */
    private String typeName;

    /**
     * 默认映射类型
     */
    private String mappingTypeDefault;

    /**
     * 支持的映射类型
     */
    
    private List<String> mappingTypeOptional;


    /**
     * get 类型名称
     *
     * @return
     */
    public String getTypeName() {
        return typeName;
    }

    /**
     * set 类型名称
     *
     * @param typeName
     */
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }


    /**
     * get 默认映射类型
     *
     * @return
     */
    public String getMappingTypeDefault() {
        return mappingTypeDefault;
    }

    /**
     * set 默认映射类型
     *
     * @param mappingTypeDefault
     */
    public void setMappingTypeDefault(String mappingTypeDefault) {
        this.mappingTypeDefault = mappingTypeDefault;
    }


    /**
    * get 支持的映射类型
    *
    * @return
    */
    public List<String> getMappingTypeOptional() {
        return mappingTypeOptional;
    }

    /**
    * set 支持的映射类型
    *
    * @param mappingTypeOptional
    */
    public void setMappingTypeOptional(List<String> mappingTypeOptional) {
        this.mappingTypeOptional = mappingTypeOptional;
    }



    /**
     * set 类型名称
     *
     * @param typeName
     */
    public ColumnOption typeName(String typeName) {
        this.typeName = typeName;
        return this;
    }


    /**
     * set 默认映射类型
     *
     * @param mappingTypeDefault
     */
    public ColumnOption mappingTypeDefault(String mappingTypeDefault) {
        this.mappingTypeDefault = mappingTypeDefault;
        return this;
    }


    /**
    * set 支持的映射类型
    *
    * @param mappingTypeOptional
    */
    public ColumnOption mappingTypeOptional(List<String> mappingTypeOptional) {
        this.mappingTypeOptional = mappingTypeOptional;
        return this;
    }



    /**
     * add item to 支持的映射类型
     *
     * @param mappingTypeOptional
     */
    public void addMappingTypeOptional(String mappingTypeOptional) {
        if (this.mappingTypeOptional == null) {
            this.mappingTypeOptional = new ArrayList<>();
        }
        this.mappingTypeOptional.add(mappingTypeOptional);
    }
}