/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * topology
 */
public class Topology  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 源数据库引擎名称
     */
    private String sourceEngine;

    /**
     * 源实例类型：CloudInstance：RDS MySQL(MariaDB,Percona)、RDS SQL Server、RDS PostgreSQL、MongoDB、Kafka、Elasticsearch；ECS：云主机自建数据库；OTHER：有公网IP的自建数据库；EXPRESS：通过专线接入的数据库
     */
    private String sourceInstanceType;

    /**
     * 目标数据源引擎名称、目标数据源实例类型
     */
    
    private List<DestinationEndpointRule> destination;


    /**
     * get 源数据库引擎名称
     *
     * @return
     */
    public String getSourceEngine() {
        return sourceEngine;
    }

    /**
     * set 源数据库引擎名称
     *
     * @param sourceEngine
     */
    public void setSourceEngine(String sourceEngine) {
        this.sourceEngine = sourceEngine;
    }


    /**
     * get 源实例类型：CloudInstance：RDS MySQL(MariaDB,Percona)、RDS SQL Server、RDS PostgreSQL、MongoDB、Kafka、Elasticsearch；ECS：云主机自建数据库；OTHER：有公网IP的自建数据库；EXPRESS：通过专线接入的数据库
     *
     * @return
     */
    public String getSourceInstanceType() {
        return sourceInstanceType;
    }

    /**
     * set 源实例类型：CloudInstance：RDS MySQL(MariaDB,Percona)、RDS SQL Server、RDS PostgreSQL、MongoDB、Kafka、Elasticsearch；ECS：云主机自建数据库；OTHER：有公网IP的自建数据库；EXPRESS：通过专线接入的数据库
     *
     * @param sourceInstanceType
     */
    public void setSourceInstanceType(String sourceInstanceType) {
        this.sourceInstanceType = sourceInstanceType;
    }


    /**
    * get 目标数据源引擎名称、目标数据源实例类型
    *
    * @return
    */
    public List<DestinationEndpointRule> getDestination() {
        return destination;
    }

    /**
    * set 目标数据源引擎名称、目标数据源实例类型
    *
    * @param destination
    */
    public void setDestination(List<DestinationEndpointRule> destination) {
        this.destination = destination;
    }



    /**
     * set 源数据库引擎名称
     *
     * @param sourceEngine
     */
    public Topology sourceEngine(String sourceEngine) {
        this.sourceEngine = sourceEngine;
        return this;
    }


    /**
     * set 源实例类型：CloudInstance：RDS MySQL(MariaDB,Percona)、RDS SQL Server、RDS PostgreSQL、MongoDB、Kafka、Elasticsearch；ECS：云主机自建数据库；OTHER：有公网IP的自建数据库；EXPRESS：通过专线接入的数据库
     *
     * @param sourceInstanceType
     */
    public Topology sourceInstanceType(String sourceInstanceType) {
        this.sourceInstanceType = sourceInstanceType;
        return this;
    }


    /**
    * set 目标数据源引擎名称、目标数据源实例类型
    *
    * @param destination
    */
    public Topology destination(List<DestinationEndpointRule> destination) {
        this.destination = destination;
        return this;
    }



    /**
     * add item to 目标数据源引擎名称、目标数据源实例类型
     *
     * @param destination
     */
    public void addDestination(DestinationEndpointRule destination) {
        if (this.destination == null) {
            this.destination = new ArrayList<>();
        }
        this.destination.add(destination);
    }
}