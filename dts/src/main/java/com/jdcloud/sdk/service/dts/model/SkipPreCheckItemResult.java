/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 数据传输服务
 * 数据传输服务相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.dts.model.PreCheckItem;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 跳过预检查项目
 */
public class SkipPreCheckItemResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据传输任务状态
     */
    private String status;

    /**
     * items
     */
    
    private List<PreCheckItem> items;


    /**
     * get 数据传输任务状态
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 数据传输任务状态
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
    * get items
    *
    * @return
    */
    public List<PreCheckItem> getItems() {
        return items;
    }

    /**
    * set items
    *
    * @param items
    */
    public void setItems(List<PreCheckItem> items) {
        this.items = items;
    }



    /**
     * set 数据传输任务状态
     *
     * @param status
     */
    public SkipPreCheckItemResult status(String status) {
        this.status = status;
        return this;
    }


    /**
    * set items
    *
    * @param items
    */
    public SkipPreCheckItemResult items(List<PreCheckItem> items) {
        this.items = items;
        return this;
    }



    /**
     * add item to items
     *
     * @param item
     */
    public void addItem(PreCheckItem item) {
        if (this.items == null) {
            this.items = new ArrayList<>();
        }
        this.items.add(item);
    }
}