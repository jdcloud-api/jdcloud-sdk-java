/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * filterConfig
 */
public class FilterConfig  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * rules
     */
    
    private List<String> rules;
    /**
     * ignoreTxnStartTs
     */
    
    private List<Integer> ignoreTxnStartTs;


    /**
    * get rules
    *
    * @return
    */
    public List<String> getRules() {
        return rules;
    }

    /**
    * set rules
    *
    * @param rules
    */
    public void setRules(List<String> rules) {
        this.rules = rules;
    }


    /**
    * get ignoreTxnStartTs
    *
    * @return
    */
    public List<Integer> getIgnoreTxnStartTs() {
        return ignoreTxnStartTs;
    }

    /**
    * set ignoreTxnStartTs
    *
    * @param ignoreTxnStartTs
    */
    public void setIgnoreTxnStartTs(List<Integer> ignoreTxnStartTs) {
        this.ignoreTxnStartTs = ignoreTxnStartTs;
    }



    /**
    * set rules
    *
    * @param rules
    */
    public FilterConfig rules(List<String> rules) {
        this.rules = rules;
        return this;
    }


    /**
    * set ignoreTxnStartTs
    *
    * @param ignoreTxnStartTs
    */
    public FilterConfig ignoreTxnStartTs(List<Integer> ignoreTxnStartTs) {
        this.ignoreTxnStartTs = ignoreTxnStartTs;
        return this;
    }



    /**
     * add item to rules
     *
     * @param rule
     */
    public void addRule(String rule) {
        if (this.rules == null) {
            this.rules = new ArrayList<>();
        }
        this.rules.add(rule);
    }

    /**
     * add item to ignoreTxnStartTs
     *
     * @param ignoreTxnStartT
     */
    public void addIgnoreTxnStartT(Integer ignoreTxnStartT) {
        if (this.ignoreTxnStartTs == null) {
            this.ignoreTxnStartTs = new ArrayList<>();
        }
        this.ignoreTxnStartTs.add(ignoreTxnStartT);
    }
}