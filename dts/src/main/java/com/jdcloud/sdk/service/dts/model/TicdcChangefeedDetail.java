/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * ticdcChangefeedDetail
 */
public class TicdcChangefeedDetail  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 同步任务 ID
     */
    private String id;

    /**
     * 上游 ID
     */
    private Integer upstreamId;

    /**
     * 命名空间
     */
    private String namespace;

    /**
     * 任务状态
     */
    private String feedState;

    /**
     * 任务Checkpoint TSO
     */
    private String checkpointTso;

    /**
     * 任务Checkpoint Time
     */
    private String checkpointTime;

    /**
     * error
     */
    private TicdcError error;

    /**
     * 目标端连接配置
     */
    private String sinkUri;

    /**
     * config
     */
    private ChangefeedReplicaConfig config;

    /**
     * 任务创建时间
     */
    private String createTime;

    /**
     * 任务启动位点
     */
    private String startTs;

    /**
     * 任务分析位点
     */
    private String resolvedTs;

    /**
     * 任务目标位点
     */
    private String targetTs;

    /**
     * engine
     */
    private String engine;

    /**
     * errorHistory
     */
    
    private List<Integer> errorHistory;
    /**
     * creatorVersion
     */
    private String creatorVersion;

    /**
     * taskStatus
     */
    private CaptureTaskStatus taskStatus;



    /**
     * get 同步任务 ID
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 同步任务 ID
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }


    /**
     * get 上游 ID
     *
     * @return
     */
    public Integer getUpstreamId() {
        return upstreamId;
    }

    /**
     * set 上游 ID
     *
     * @param upstreamId
     */
    public void setUpstreamId(Integer upstreamId) {
        this.upstreamId = upstreamId;
    }


    /**
     * get 命名空间
     *
     * @return
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * set 命名空间
     *
     * @param namespace
     */
    public void setNamespace(String namespace) {
        this.namespace = namespace;
    }


    /**
     * get 任务状态
     *
     * @return
     */
    public String getFeedState() {
        return feedState;
    }

    /**
     * set 任务状态
     *
     * @param feedState
     */
    public void setFeedState(String feedState) {
        this.feedState = feedState;
    }


    /**
     * get 任务Checkpoint TSO
     *
     * @return
     */
    public String getCheckpointTso() {
        return checkpointTso;
    }

    /**
     * set 任务Checkpoint TSO
     *
     * @param checkpointTso
     */
    public void setCheckpointTso(String checkpointTso) {
        this.checkpointTso = checkpointTso;
    }


    /**
     * get 任务Checkpoint Time
     *
     * @return
     */
    public String getCheckpointTime() {
        return checkpointTime;
    }

    /**
     * set 任务Checkpoint Time
     *
     * @param checkpointTime
     */
    public void setCheckpointTime(String checkpointTime) {
        this.checkpointTime = checkpointTime;
    }


    /**
     * get error
     *
     * @return
     */
    public TicdcError getError() {
        return error;
    }

    /**
     * set error
     *
     * @param error
     */
    public void setError(TicdcError error) {
        this.error = error;
    }


    /**
     * get 目标端连接配置
     *
     * @return
     */
    public String getSinkUri() {
        return sinkUri;
    }

    /**
     * set 目标端连接配置
     *
     * @param sinkUri
     */
    public void setSinkUri(String sinkUri) {
        this.sinkUri = sinkUri;
    }


    /**
     * get config
     *
     * @return
     */
    public ChangefeedReplicaConfig getConfig() {
        return config;
    }

    /**
     * set config
     *
     * @param config
     */
    public void setConfig(ChangefeedReplicaConfig config) {
        this.config = config;
    }


    /**
     * get 任务创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 任务创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get 任务启动位点
     *
     * @return
     */
    public String getStartTs() {
        return startTs;
    }

    /**
     * set 任务启动位点
     *
     * @param startTs
     */
    public void setStartTs(String startTs) {
        this.startTs = startTs;
    }


    /**
     * get 任务分析位点
     *
     * @return
     */
    public String getResolvedTs() {
        return resolvedTs;
    }

    /**
     * set 任务分析位点
     *
     * @param resolvedTs
     */
    public void setResolvedTs(String resolvedTs) {
        this.resolvedTs = resolvedTs;
    }


    /**
     * get 任务目标位点
     *
     * @return
     */
    public String getTargetTs() {
        return targetTs;
    }

    /**
     * set 任务目标位点
     *
     * @param targetTs
     */
    public void setTargetTs(String targetTs) {
        this.targetTs = targetTs;
    }


    /**
     * get engine
     *
     * @return
     */
    public String getEngine() {
        return engine;
    }

    /**
     * set engine
     *
     * @param engine
     */
    public void setEngine(String engine) {
        this.engine = engine;
    }


    /**
    * get errorHistory
    *
    * @return
    */
    public List<Integer> getErrorHistory() {
        return errorHistory;
    }

    /**
    * set errorHistory
    *
    * @param errorHistory
    */
    public void setErrorHistory(List<Integer> errorHistory) {
        this.errorHistory = errorHistory;
    }


    /**
     * get creatorVersion
     *
     * @return
     */
    public String getCreatorVersion() {
        return creatorVersion;
    }

    /**
     * set creatorVersion
     *
     * @param creatorVersion
     */
    public void setCreatorVersion(String creatorVersion) {
        this.creatorVersion = creatorVersion;
    }


    /**
     * get taskStatus
     *
     * @return
     */
    public CaptureTaskStatus getTaskStatus() {
        return taskStatus;
    }

    /**
     * set taskStatus
     *
     * @param taskStatus
     */
    public void setTaskStatus(CaptureTaskStatus taskStatus) {
        this.taskStatus = taskStatus;
    }



    /**
     * set 同步任务 ID
     *
     * @param id
     */
    public TicdcChangefeedDetail id(String id) {
        this.id = id;
        return this;
    }


    /**
     * set 上游 ID
     *
     * @param upstreamId
     */
    public TicdcChangefeedDetail upstreamId(Integer upstreamId) {
        this.upstreamId = upstreamId;
        return this;
    }


    /**
     * set 命名空间
     *
     * @param namespace
     */
    public TicdcChangefeedDetail namespace(String namespace) {
        this.namespace = namespace;
        return this;
    }


    /**
     * set 任务状态
     *
     * @param feedState
     */
    public TicdcChangefeedDetail feedState(String feedState) {
        this.feedState = feedState;
        return this;
    }


    /**
     * set 任务Checkpoint TSO
     *
     * @param checkpointTso
     */
    public TicdcChangefeedDetail checkpointTso(String checkpointTso) {
        this.checkpointTso = checkpointTso;
        return this;
    }


    /**
     * set 任务Checkpoint Time
     *
     * @param checkpointTime
     */
    public TicdcChangefeedDetail checkpointTime(String checkpointTime) {
        this.checkpointTime = checkpointTime;
        return this;
    }


    /**
     * set error
     *
     * @param error
     */
    public TicdcChangefeedDetail error(TicdcError error) {
        this.error = error;
        return this;
    }


    /**
     * set 目标端连接配置
     *
     * @param sinkUri
     */
    public TicdcChangefeedDetail sinkUri(String sinkUri) {
        this.sinkUri = sinkUri;
        return this;
    }


    /**
     * set config
     *
     * @param config
     */
    public TicdcChangefeedDetail config(ChangefeedReplicaConfig config) {
        this.config = config;
        return this;
    }


    /**
     * set 任务创建时间
     *
     * @param createTime
     */
    public TicdcChangefeedDetail createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set 任务启动位点
     *
     * @param startTs
     */
    public TicdcChangefeedDetail startTs(String startTs) {
        this.startTs = startTs;
        return this;
    }


    /**
     * set 任务分析位点
     *
     * @param resolvedTs
     */
    public TicdcChangefeedDetail resolvedTs(String resolvedTs) {
        this.resolvedTs = resolvedTs;
        return this;
    }


    /**
     * set 任务目标位点
     *
     * @param targetTs
     */
    public TicdcChangefeedDetail targetTs(String targetTs) {
        this.targetTs = targetTs;
        return this;
    }


    /**
     * set engine
     *
     * @param engine
     */
    public TicdcChangefeedDetail engine(String engine) {
        this.engine = engine;
        return this;
    }


    /**
    * set errorHistory
    *
    * @param errorHistory
    */
    public TicdcChangefeedDetail errorHistory(List<Integer> errorHistory) {
        this.errorHistory = errorHistory;
        return this;
    }


    /**
     * set creatorVersion
     *
     * @param creatorVersion
     */
    public TicdcChangefeedDetail creatorVersion(String creatorVersion) {
        this.creatorVersion = creatorVersion;
        return this;
    }


    /**
     * set taskStatus
     *
     * @param taskStatus
     */
    public TicdcChangefeedDetail taskStatus(CaptureTaskStatus taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }



    /**
     * add item to errorHistory
     *
     * @param errorHistory
     */
    public void addErrorHistory(Integer errorHistory) {
        if (this.errorHistory == null) {
            this.errorHistory = new ArrayList<>();
        }
        this.errorHistory.add(errorHistory);
    }
}