/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import java.util.List;
import java.util.ArrayList;

/**
 * visibility
 */
public class Visibility  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 可见性策略：Always：总是可见、Property：当 propertyName 对应的参数值为 propertyValue 中的值时，该选项生效、Tag：当用户拥有 tagName 字段对应的标签时，该选项生效
     */
    private String strategy;

    /**
     * tag 名称，当 strategy 为 Tag 时，该参数生效
     */
    private String tagName;

    /**
     * 参数名称，当 strategy 为 Property 时，该参数生效
     */
    private String propertyName;

    /**
     * 参数值，当 strategy 为 Property 时，该参数生效
     */
    
    private List<String> propertyValue;


    /**
     * get 可见性策略：Always：总是可见、Property：当 propertyName 对应的参数值为 propertyValue 中的值时，该选项生效、Tag：当用户拥有 tagName 字段对应的标签时，该选项生效
     *
     * @return
     */
    public String getStrategy() {
        return strategy;
    }

    /**
     * set 可见性策略：Always：总是可见、Property：当 propertyName 对应的参数值为 propertyValue 中的值时，该选项生效、Tag：当用户拥有 tagName 字段对应的标签时，该选项生效
     *
     * @param strategy
     */
    public void setStrategy(String strategy) {
        this.strategy = strategy;
    }


    /**
     * get tag 名称，当 strategy 为 Tag 时，该参数生效
     *
     * @return
     */
    public String getTagName() {
        return tagName;
    }

    /**
     * set tag 名称，当 strategy 为 Tag 时，该参数生效
     *
     * @param tagName
     */
    public void setTagName(String tagName) {
        this.tagName = tagName;
    }


    /**
     * get 参数名称，当 strategy 为 Property 时，该参数生效
     *
     * @return
     */
    public String getPropertyName() {
        return propertyName;
    }

    /**
     * set 参数名称，当 strategy 为 Property 时，该参数生效
     *
     * @param propertyName
     */
    public void setPropertyName(String propertyName) {
        this.propertyName = propertyName;
    }


    /**
    * get 参数值，当 strategy 为 Property 时，该参数生效
    *
    * @return
    */
    public List<String> getPropertyValue() {
        return propertyValue;
    }

    /**
    * set 参数值，当 strategy 为 Property 时，该参数生效
    *
    * @param propertyValue
    */
    public void setPropertyValue(List<String> propertyValue) {
        this.propertyValue = propertyValue;
    }



    /**
     * set 可见性策略：Always：总是可见、Property：当 propertyName 对应的参数值为 propertyValue 中的值时，该选项生效、Tag：当用户拥有 tagName 字段对应的标签时，该选项生效
     *
     * @param strategy
     */
    public Visibility strategy(String strategy) {
        this.strategy = strategy;
        return this;
    }


    /**
     * set tag 名称，当 strategy 为 Tag 时，该参数生效
     *
     * @param tagName
     */
    public Visibility tagName(String tagName) {
        this.tagName = tagName;
        return this;
    }


    /**
     * set 参数名称，当 strategy 为 Property 时，该参数生效
     *
     * @param propertyName
     */
    public Visibility propertyName(String propertyName) {
        this.propertyName = propertyName;
        return this;
    }


    /**
    * set 参数值，当 strategy 为 Property 时，该参数生效
    *
    * @param propertyValue
    */
    public Visibility propertyValue(List<String> propertyValue) {
        this.propertyValue = propertyValue;
        return this;
    }



    /**
     * add item to 参数值，当 strategy 为 Property 时，该参数生效
     *
     * @param propertyValue
     */
    public void addPropertyValue(String propertyValue) {
        if (this.propertyValue == null) {
            this.propertyValue = new ArrayList<>();
        }
        this.propertyValue.add(propertyValue);
    }
}