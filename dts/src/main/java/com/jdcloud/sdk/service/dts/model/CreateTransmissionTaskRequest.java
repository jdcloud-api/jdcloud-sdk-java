/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 数据传输服务
 * 数据传输服务相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dts.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.charge.model.ChargeSpec;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建数据传输任务
 */
public class CreateTransmissionTaskRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例类型，取值为：Sync：同步、Subscribe：订阅、Migration：迁移、DisasterRecovery 灾备，默认取值为：Sync
     */
    private String transmissionMethod;

    /**
     * 数据传输拓扑，支持：oneway - 单向数据传输、bidirectional - 双向数据传输，默认取值为：oneway
     */
    private String topology;

    /**
     * 数据传输实例所属VPC。
     * Required:true
     */
    @Required
    private String vpc;

    /**
     * 数据传输实例所属子网。
     * Required:true
     */
    @Required
    private String subnet;

    /**
     * 数据传输实例所属可用区，可选
     */
    private String availableZone;

    /**
     * 数据传输实例规格，支持：dts.m1.medium、dts.m1.large、dts.m1.xlarge
     * Required:true
     */
    @Required
    private String instanceClass;

    /**
     * 计费方式，数据传输支持包年包月、按配置计费。
     * Required:true
     */
    @Required
    private ChargeSpec chargeSpec;

    /**
     * 地域代码，取值范围参见[《各地域及可用区对照表》]
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 实例类型，取值为：Sync：同步、Subscribe：订阅、Migration：迁移、DisasterRecovery 灾备，默认取值为：Sync
     *
     * @return
     */
    public String getTransmissionMethod() {
        return transmissionMethod;
    }

    /**
     * set 实例类型，取值为：Sync：同步、Subscribe：订阅、Migration：迁移、DisasterRecovery 灾备，默认取值为：Sync
     *
     * @param transmissionMethod
     */
    public void setTransmissionMethod(String transmissionMethod) {
        this.transmissionMethod = transmissionMethod;
    }


    /**
     * get 数据传输拓扑，支持：oneway - 单向数据传输、bidirectional - 双向数据传输，默认取值为：oneway
     *
     * @return
     */
    public String getTopology() {
        return topology;
    }

    /**
     * set 数据传输拓扑，支持：oneway - 单向数据传输、bidirectional - 双向数据传输，默认取值为：oneway
     *
     * @param topology
     */
    public void setTopology(String topology) {
        this.topology = topology;
    }


    /**
     * get 数据传输实例所属VPC。
     *
     * @return
     */
    public String getVpc() {
        return vpc;
    }

    /**
     * set 数据传输实例所属VPC。
     *
     * @param vpc
     */
    public void setVpc(String vpc) {
        this.vpc = vpc;
    }


    /**
     * get 数据传输实例所属子网。
     *
     * @return
     */
    public String getSubnet() {
        return subnet;
    }

    /**
     * set 数据传输实例所属子网。
     *
     * @param subnet
     */
    public void setSubnet(String subnet) {
        this.subnet = subnet;
    }


    /**
     * get 数据传输实例所属可用区，可选
     *
     * @return
     */
    public String getAvailableZone() {
        return availableZone;
    }

    /**
     * set 数据传输实例所属可用区，可选
     *
     * @param availableZone
     */
    public void setAvailableZone(String availableZone) {
        this.availableZone = availableZone;
    }


    /**
     * get 数据传输实例规格，支持：dts.m1.medium、dts.m1.large、dts.m1.xlarge
     *
     * @return
     */
    public String getInstanceClass() {
        return instanceClass;
    }

    /**
     * set 数据传输实例规格，支持：dts.m1.medium、dts.m1.large、dts.m1.xlarge
     *
     * @param instanceClass
     */
    public void setInstanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
    }


    /**
     * get 计费方式，数据传输支持包年包月、按配置计费。
     *
     * @return
     */
    public ChargeSpec getChargeSpec() {
        return chargeSpec;
    }

    /**
     * set 计费方式，数据传输支持包年包月、按配置计费。
     *
     * @param chargeSpec
     */
    public void setChargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
    }


    /**
     * get 地域代码，取值范围参见[《各地域及可用区对照表》]
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》]
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 实例类型，取值为：Sync：同步、Subscribe：订阅、Migration：迁移、DisasterRecovery 灾备，默认取值为：Sync
     *
     * @param transmissionMethod
     */
    public CreateTransmissionTaskRequest transmissionMethod(String transmissionMethod) {
        this.transmissionMethod = transmissionMethod;
        return this;
    }


    /**
     * set 数据传输拓扑，支持：oneway - 单向数据传输、bidirectional - 双向数据传输，默认取值为：oneway
     *
     * @param topology
     */
    public CreateTransmissionTaskRequest topology(String topology) {
        this.topology = topology;
        return this;
    }


    /**
     * set 数据传输实例所属VPC。
     *
     * @param vpc
     */
    public CreateTransmissionTaskRequest vpc(String vpc) {
        this.vpc = vpc;
        return this;
    }


    /**
     * set 数据传输实例所属子网。
     *
     * @param subnet
     */
    public CreateTransmissionTaskRequest subnet(String subnet) {
        this.subnet = subnet;
        return this;
    }


    /**
     * set 数据传输实例所属可用区，可选
     *
     * @param availableZone
     */
    public CreateTransmissionTaskRequest availableZone(String availableZone) {
        this.availableZone = availableZone;
        return this;
    }


    /**
     * set 数据传输实例规格，支持：dts.m1.medium、dts.m1.large、dts.m1.xlarge
     *
     * @param instanceClass
     */
    public CreateTransmissionTaskRequest instanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
        return this;
    }


    /**
     * set 计费方式，数据传输支持包年包月、按配置计费。
     *
     * @param chargeSpec
     */
    public CreateTransmissionTaskRequest chargeSpec(ChargeSpec chargeSpec) {
        this.chargeSpec = chargeSpec;
        return this;
    }


    /**
     * set 地域代码，取值范围参见[《各地域及可用区对照表》]
     *
     * @param regionId
     */
    public CreateTransmissionTaskRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}