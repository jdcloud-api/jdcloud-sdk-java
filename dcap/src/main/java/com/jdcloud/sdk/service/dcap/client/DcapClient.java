/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Data-Centric Audit and Protection API
 * Data-Centric Audit and Protection API
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dcap.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.dcap.model.DescribeCategoryListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeCategoryListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeCategoryListExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyDataTypeRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyDataTypeResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyDataTypeExecutor;
import com.jdcloud.sdk.service.dcap.model.AddIpWhiteItemRequest;
import com.jdcloud.sdk.service.dcap.model.AddIpWhiteItemResponse;
import com.jdcloud.sdk.service.dcap.client.AddIpWhiteItemExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeAppListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeAppListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeAppListExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteIpWhiteItemRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteIpWhiteItemResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteIpWhiteItemExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyDataSourceTableFieldTagRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyDataSourceTableFieldTagResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyDataSourceTableFieldTagExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyInstanceNameRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyInstanceNameResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyInstanceNameExecutor;
import com.jdcloud.sdk.service.dcap.model.SetInstanceByPassModeRequest;
import com.jdcloud.sdk.service.dcap.model.SetInstanceByPassModeResponse;
import com.jdcloud.sdk.service.dcap.client.SetInstanceByPassModeExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeInstanceExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataSourceExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeLevelListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeLevelListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeLevelListExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceTableRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceTableResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteDataSourceTableExecutor;
import com.jdcloud.sdk.service.dcap.model.CreateDataTypeRequest;
import com.jdcloud.sdk.service.dcap.model.CreateDataTypeResponse;
import com.jdcloud.sdk.service.dcap.client.CreateDataTypeExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteDataTypeRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteDataTypeResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteDataTypeExecutor;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceTableRequest;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceTableResponse;
import com.jdcloud.sdk.service.dcap.client.CreateDataSourceTableExecutor;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceTableFieldRequest;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceTableFieldResponse;
import com.jdcloud.sdk.service.dcap.client.CreateDataSourceTableFieldExecutor;
import com.jdcloud.sdk.service.dcap.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.dcap.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.dcap.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataSourceListExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableFieldListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableFieldListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataSourceTableFieldListExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableFieldRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableFieldResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataSourceTableFieldExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteDataSourceExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataSourceTableListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataSourceTableListExecutor;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceRequest;
import com.jdcloud.sdk.service.dcap.model.CreateDataSourceResponse;
import com.jdcloud.sdk.service.dcap.client.CreateDataSourceExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyCategoryRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyCategoryResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyCategoryExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeDataTypeListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeDataTypeListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeDataTypeListExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeIpWhiteListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeIpWhiteListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeIpWhiteListExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyLevelRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyLevelResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyLevelExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteInstanceExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceTableFieldRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteDataSourceTableFieldResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteDataSourceTableFieldExecutor;
import com.jdcloud.sdk.service.dcap.model.DeleteCategoryRequest;
import com.jdcloud.sdk.service.dcap.model.DeleteCategoryResponse;
import com.jdcloud.sdk.service.dcap.client.DeleteCategoryExecutor;
import com.jdcloud.sdk.service.dcap.model.AddCategoryRequest;
import com.jdcloud.sdk.service.dcap.model.AddCategoryResponse;
import com.jdcloud.sdk.service.dcap.client.AddCategoryExecutor;
import com.jdcloud.sdk.service.dcap.model.UpdateDataSourceNameRequest;
import com.jdcloud.sdk.service.dcap.model.UpdateDataSourceNameResponse;
import com.jdcloud.sdk.service.dcap.client.UpdateDataSourceNameExecutor;
import com.jdcloud.sdk.service.dcap.model.SetDataSourceKmsRequest;
import com.jdcloud.sdk.service.dcap.model.SetDataSourceKmsResponse;
import com.jdcloud.sdk.service.dcap.client.SetDataSourceKmsExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceConfigRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceConfigResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeInstanceConfigExecutor;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceListRequest;
import com.jdcloud.sdk.service.dcap.model.DescribeInstanceListResponse;
import com.jdcloud.sdk.service.dcap.client.DescribeInstanceListExecutor;
import com.jdcloud.sdk.service.dcap.model.GenerateDataSourceDDLRequest;
import com.jdcloud.sdk.service.dcap.model.GenerateDataSourceDDLResponse;
import com.jdcloud.sdk.service.dcap.client.GenerateDataSourceDDLExecutor;
import com.jdcloud.sdk.service.dcap.model.ModifyDataSourceTableFieldRequest;
import com.jdcloud.sdk.service.dcap.model.ModifyDataSourceTableFieldResponse;
import com.jdcloud.sdk.service.dcap.client.ModifyDataSourceTableFieldExecutor;
import com.jdcloud.sdk.service.dcap.model.SetInstanceAccessKeyRequest;
import com.jdcloud.sdk.service.dcap.model.SetInstanceAccessKeyResponse;
import com.jdcloud.sdk.service.dcap.client.SetInstanceAccessKeyExecutor;

/**
 * dcapClient
 */
public class DcapClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "dcap.jdcloud-api.com";
    public final static String ServiceName = "dcap";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private DcapClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 敏感数据分类列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCategoryListResponse describeCategoryList(DescribeCategoryListRequest request) throws JdcloudSdkException {
        return new DescribeCategoryListExecutor().client(this).execute(request);
    }

    /**
     * 修改敏感数据类型
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDataTypeResponse modifyDataType(ModifyDataTypeRequest request) throws JdcloudSdkException {
        return new ModifyDataTypeExecutor().client(this).execute(request);
    }

    /**
     * 添加一条IP白名单记录，CIDR 格式
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddIpWhiteItemResponse addIpWhiteItem(AddIpWhiteItemRequest request) throws JdcloudSdkException {
        return new AddIpWhiteItemExecutor().client(this).execute(request);
    }

    /**
     * 获取应用列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeAppListResponse describeAppList(DescribeAppListRequest request) throws JdcloudSdkException {
        return new DescribeAppListExecutor().client(this).execute(request);
    }

    /**
     * 删除一条IP白名单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteIpWhiteItemResponse deleteIpWhiteItem(DeleteIpWhiteItemRequest request) throws JdcloudSdkException {
        return new DeleteIpWhiteItemExecutor().client(this).execute(request);
    }

    /**
     * 修改字段标签,不传则清空标签
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDataSourceTableFieldTagResponse modifyDataSourceTableFieldTag(ModifyDataSourceTableFieldTagRequest request) throws JdcloudSdkException {
        return new ModifyDataSourceTableFieldTagExecutor().client(this).execute(request);
    }

    /**
     * 修改实例名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceNameResponse modifyInstanceName(ModifyInstanceNameRequest request) throws JdcloudSdkException {
        return new ModifyInstanceNameExecutor().client(this).execute(request);
    }

    /**
     * 设置透传模式
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstanceByPassModeResponse setInstanceByPassMode(SetInstanceByPassModeRequest request) throws JdcloudSdkException {
        return new SetInstanceByPassModeExecutor().client(this).execute(request);
    }

    /**
     * 获取实例详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceResponse describeInstance(DescribeInstanceRequest request) throws JdcloudSdkException {
        return new DescribeInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取数据源详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataSourceResponse describeDataSource(DescribeDataSourceRequest request) throws JdcloudSdkException {
        return new DescribeDataSourceExecutor().client(this).execute(request);
    }

    /**
     * 敏感数据分级列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLevelListResponse describeLevelList(DescribeLevelListRequest request) throws JdcloudSdkException {
        return new DescribeLevelListExecutor().client(this).execute(request);
    }

    /**
     * 删除数据源-表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDataSourceTableResponse deleteDataSourceTable(DeleteDataSourceTableRequest request) throws JdcloudSdkException {
        return new DeleteDataSourceTableExecutor().client(this).execute(request);
    }

    /**
     * 增加敏感数据类型
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataTypeResponse createDataType(CreateDataTypeRequest request) throws JdcloudSdkException {
        return new CreateDataTypeExecutor().client(this).execute(request);
    }

    /**
     * 删除敏感数据类型
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDataTypeResponse deleteDataType(DeleteDataTypeRequest request) throws JdcloudSdkException {
        return new DeleteDataTypeExecutor().client(this).execute(request);
    }

    /**
     * 创建表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataSourceTableResponse createDataSourceTable(CreateDataSourceTableRequest request) throws JdcloudSdkException {
        return new CreateDataSourceTableExecutor().client(this).execute(request);
    }

    /**
     * 新建数据源-表-字段
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataSourceTableFieldResponse createDataSourceTableField(CreateDataSourceTableFieldRequest request) throws JdcloudSdkException {
        return new CreateDataSourceTableFieldExecutor().client(this).execute(request);
    }

    /**
     * 创建实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * 获取数据源列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataSourceListResponse describeDataSourceList(DescribeDataSourceListRequest request) throws JdcloudSdkException {
        return new DescribeDataSourceListExecutor().client(this).execute(request);
    }

    /**
     * 获取元数据-表-字段 列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataSourceTableFieldListResponse describeDataSourceTableFieldList(DescribeDataSourceTableFieldListRequest request) throws JdcloudSdkException {
        return new DescribeDataSourceTableFieldListExecutor().client(this).execute(request);
    }

    /**
     * 获取元数据-表-字段
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataSourceTableFieldResponse describeDataSourceTableField(DescribeDataSourceTableFieldRequest request) throws JdcloudSdkException {
        return new DescribeDataSourceTableFieldExecutor().client(this).execute(request);
    }

    /**
     * 删除数据源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDataSourceResponse deleteDataSource(DeleteDataSourceRequest request) throws JdcloudSdkException {
        return new DeleteDataSourceExecutor().client(this).execute(request);
    }

    /**
     * 获取元数据-表 列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataSourceTableListResponse describeDataSourceTableList(DescribeDataSourceTableListRequest request) throws JdcloudSdkException {
        return new DescribeDataSourceTableListExecutor().client(this).execute(request);
    }

    /**
     * 添加数据源
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateDataSourceResponse createDataSource(CreateDataSourceRequest request) throws JdcloudSdkException {
        return new CreateDataSourceExecutor().client(this).execute(request);
    }

    /**
     * 修改敏感数据分类名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyCategoryResponse modifyCategory(ModifyCategoryRequest request) throws JdcloudSdkException {
        return new ModifyCategoryExecutor().client(this).execute(request);
    }

    /**
     * 获取敏感数据类型列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDataTypeListResponse describeDataTypeList(DescribeDataTypeListRequest request) throws JdcloudSdkException {
        return new DescribeDataTypeListExecutor().client(this).execute(request);
    }

    /**
     * 获取此实例的所有IP白名单列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeIpWhiteListResponse describeIpWhiteList(DescribeIpWhiteListRequest request) throws JdcloudSdkException {
        return new DescribeIpWhiteListExecutor().client(this).execute(request);
    }

    /**
     * 修改敏感数据分级策略
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyLevelResponse modifyLevel(ModifyLevelRequest request) throws JdcloudSdkException {
        return new ModifyLevelExecutor().client(this).execute(request);
    }

    /**
     * 删除实例 [MFA enabled]
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }

    /**
     * 删除数据源-表-字段
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteDataSourceTableFieldResponse deleteDataSourceTableField(DeleteDataSourceTableFieldRequest request) throws JdcloudSdkException {
        return new DeleteDataSourceTableFieldExecutor().client(this).execute(request);
    }

    /**
     * 删除敏感数据分类
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCategoryResponse deleteCategory(DeleteCategoryRequest request) throws JdcloudSdkException {
        return new DeleteCategoryExecutor().client(this).execute(request);
    }

    /**
     * 添加敏感数据分类
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCategoryResponse addCategory(AddCategoryRequest request) throws JdcloudSdkException {
        return new AddCategoryExecutor().client(this).execute(request);
    }

    /**
     * 更新数据源名称
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateDataSourceNameResponse updateDataSourceName(UpdateDataSourceNameRequest request) throws JdcloudSdkException {
        return new UpdateDataSourceNameExecutor().client(this).execute(request);
    }

    /**
     * 设置数据源的密钥及加密算法
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetDataSourceKmsResponse setDataSourceKms(SetDataSourceKmsRequest request) throws JdcloudSdkException {
        return new SetDataSourceKmsExecutor().client(this).execute(request);
    }

    /**
     * 插件获取配置文件
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceConfigResponse describeInstanceConfig(DescribeInstanceConfigRequest request) throws JdcloudSdkException {
        return new DescribeInstanceConfigExecutor().client(this).execute(request);
    }

    /**
     * 获取实例列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceListResponse describeInstanceList(DescribeInstanceListRequest request) throws JdcloudSdkException {
        return new DescribeInstanceListExecutor().client(this).execute(request);
    }

    /**
     * 生成DDL语句
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GenerateDataSourceDDLResponse generateDataSourceDDL(GenerateDataSourceDDLRequest request) throws JdcloudSdkException {
        return new GenerateDataSourceDDLExecutor().client(this).execute(request);
    }

    /**
     * 配置数据源-表-字段 列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDataSourceTableFieldResponse modifyDataSourceTableField(ModifyDataSourceTableFieldRequest request) throws JdcloudSdkException {
        return new ModifyDataSourceTableFieldExecutor().client(this).execute(request);
    }

    /**
     * 设置实例的访问凭证 AK+SK
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstanceAccessKeyResponse setInstanceAccessKey(SetInstanceAccessKeyRequest request) throws JdcloudSdkException {
        return new SetInstanceAccessKeyExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public DcapClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private DcapClient dcapClient;

        public DefaultBuilder() {
            dcapClient = new DcapClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            dcapClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            dcapClient.httpRequestConfig = config;
            return this;
        }

        public DcapClient build() throws JdcloudSdkException {

            if (dcapClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                dcapClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (dcapClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("DcapClient build error: jdcloud credentials provider not set");
                }
            }
            if (dcapClient.httpRequestConfig == null) {
                dcapClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (dcapClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("DcapClient build error: http request config not set");
                }
            }
            return dcapClient;
        }

        public Builder environment(Environment environment) {
            dcapClient.environment = environment;
            return this;
        }
    }
}
