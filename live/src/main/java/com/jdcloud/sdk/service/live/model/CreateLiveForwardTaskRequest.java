/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Live-Video
 * 直播管理API
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.live.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建直播拉流转推任务

 */
public class CreateLiveForwardTaskRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 拉流地址
- 支持rtmp

     * Required:true
     */
    @Required
    private String sourceUrl;

    /**
     * 转推地址
- 支持rtmp

     * Required:true
     */
    @Required
    private String pushUrl;

    /**
     * 执行方式
- StartNow: 立即执行
- StartAsScheduled: 定时执行，根据参数设定的时间

     * Required:true
     */
    @Required
    private String startMode;

    /**
     * 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始

     */
    private String startTime;

    /**
     * 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
  - 假设当前时间2021年03月30日11:50:01，则：结束时间不可超过2022年03月30日11:50:01。
- 不填拉不到流10分钟自动结束

     */
    private String endTime;

    /**
     * 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效

     */
    private List<String> callbackEvents;

    /**
     * 事件回调地址

     */
    private String callbackUrl;

    /**
     * 任务名称
- 最大255字符

     */
    private String name;


    /**
     * get 拉流地址
- 支持rtmp

     *
     * @return
     */
    public String getSourceUrl() {
        return sourceUrl;
    }

    /**
     * set 拉流地址
- 支持rtmp

     *
     * @param sourceUrl
     */
    public void setSourceUrl(String sourceUrl) {
        this.sourceUrl = sourceUrl;
    }

    /**
     * get 转推地址
- 支持rtmp

     *
     * @return
     */
    public String getPushUrl() {
        return pushUrl;
    }

    /**
     * set 转推地址
- 支持rtmp

     *
     * @param pushUrl
     */
    public void setPushUrl(String pushUrl) {
        this.pushUrl = pushUrl;
    }

    /**
     * get 执行方式
- StartNow: 立即执行
- StartAsScheduled: 定时执行，根据参数设定的时间

     *
     * @return
     */
    public String getStartMode() {
        return startMode;
    }

    /**
     * set 执行方式
- StartNow: 立即执行
- StartAsScheduled: 定时执行，根据参数设定的时间

     *
     * @param startMode
     */
    public void setStartMode(String startMode) {
        this.startMode = startMode;
    }

    /**
     * get 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始

     *
     * @return
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * set 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始

     *
     * @param startTime
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    /**
     * get 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
  - 假设当前时间2021年03月30日11:50:01，则：结束时间不可超过2022年03月30日11:50:01。
- 不填拉不到流10分钟自动结束

     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
  - 假设当前时间2021年03月30日11:50:01，则：结束时间不可超过2022年03月30日11:50:01。
- 不填拉不到流10分钟自动结束

     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    /**
     * get 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效

     *
     * @return
     */
    public List<String> getCallbackEvents() {
        return callbackEvents;
    }

    /**
     * set 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效

     *
     * @param callbackEvents
     */
    public void setCallbackEvents(List<String> callbackEvents) {
        this.callbackEvents = callbackEvents;
    }

    /**
     * get 事件回调地址

     *
     * @return
     */
    public String getCallbackUrl() {
        return callbackUrl;
    }

    /**
     * set 事件回调地址

     *
     * @param callbackUrl
     */
    public void setCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
    }

    /**
     * get 任务名称
- 最大255字符

     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 任务名称
- 最大255字符

     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * set 拉流地址
- 支持rtmp

     *
     * @param sourceUrl
     */
    public CreateLiveForwardTaskRequest sourceUrl(String sourceUrl) {
        this.sourceUrl = sourceUrl;
        return this;
    }

    /**
     * set 转推地址
- 支持rtmp

     *
     * @param pushUrl
     */
    public CreateLiveForwardTaskRequest pushUrl(String pushUrl) {
        this.pushUrl = pushUrl;
        return this;
    }

    /**
     * set 执行方式
- StartNow: 立即执行
- StartAsScheduled: 定时执行，根据参数设定的时间

     *
     * @param startMode
     */
    public CreateLiveForwardTaskRequest startMode(String startMode) {
        this.startMode = startMode;
        return this;
    }

    /**
     * set 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始

     *
     * @param startTime
     */
    public CreateLiveForwardTaskRequest startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * set 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
  - 假设当前时间2021年03月30日11:50:01，则：结束时间不可超过2022年03月30日11:50:01。
- 不填拉不到流10分钟自动结束

     *
     * @param endTime
     */
    public CreateLiveForwardTaskRequest endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * set 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效

     *
     * @param callbackEvents
     */
    public CreateLiveForwardTaskRequest callbackEvents(List<String> callbackEvents) {
        this.callbackEvents = callbackEvents;
        return this;
    }

    /**
     * set 事件回调地址

     *
     * @param callbackUrl
     */
    public CreateLiveForwardTaskRequest callbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }

    /**
     * set 任务名称
- 最大255字符

     *
     * @param name
     */
    public CreateLiveForwardTaskRequest name(String name) {
        this.name = name;
        return this;
    }


    /**
     * add item to 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效

     *
     * @param callbackEvent
     */
    public void addCallbackEvent(String callbackEvent) {
        if (this.callbackEvents == null) {
            this.callbackEvents = new ArrayList<>();
        }
        this.callbackEvents.add(callbackEvent);
    }

}