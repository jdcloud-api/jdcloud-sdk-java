/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Live-Video
 * 视频直播相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.live.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.live.model.DescribeDomainOnlineStreamRequest;
import com.jdcloud.sdk.service.live.model.DescribeDomainOnlineStreamResponse;
import com.jdcloud.sdk.service.live.client.DescribeDomainOnlineStreamExecutor;
import com.jdcloud.sdk.service.live.model.DescribeUrlRankingRequest;
import com.jdcloud.sdk.service.live.model.DescribeUrlRankingResponse;
import com.jdcloud.sdk.service.live.client.DescribeUrlRankingExecutor;
import com.jdcloud.sdk.service.live.model.OpenLiveRestartRequest;
import com.jdcloud.sdk.service.live.model.OpenLiveRestartResponse;
import com.jdcloud.sdk.service.live.client.OpenLiveRestartExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppQualityDetectionRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppQualityDetectionResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamAppQualityDetectionExecutor;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamQualityDetectionTemplateRequest;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamQualityDetectionTemplateResponse;
import com.jdcloud.sdk.service.live.client.AddCustomLiveStreamQualityDetectionTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.OpenLiveP2pRequest;
import com.jdcloud.sdk.service.live.model.OpenLiveP2pResponse;
import com.jdcloud.sdk.service.live.client.OpenLiveP2pExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveBillDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveBillDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveBillDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamRecordTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamRecordTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamRecordTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.DescribeTranscodeBindingRequest;
import com.jdcloud.sdk.service.live.model.DescribeTranscodeBindingResponse;
import com.jdcloud.sdk.service.live.client.DescribeTranscodeBindingExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamRecordConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamRecordConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamRecordConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainsRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainsResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveDomainsExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveAppRequest;
import com.jdcloud.sdk.service.live.model.AddLiveAppResponse;
import com.jdcloud.sdk.service.live.client.AddLiveAppExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppWatermarkRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppWatermarkResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamAppWatermarkExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartAuthKeyRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartAuthKeyResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveRestartAuthKeyExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPlayerRankingDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPlayerRankingDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPlayerRankingDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeWatermarkBindingRequest;
import com.jdcloud.sdk.service.live.model.DescribeWatermarkBindingResponse;
import com.jdcloud.sdk.service.live.client.DescribeWatermarkBindingExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByStreamRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByStreamResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStatisticGroupByStreamExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveStreamRecordNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.SetLiveStreamRecordNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.SetLiveStreamRecordNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamSnapshotTemplateRequest;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamSnapshotTemplateResponse;
import com.jdcloud.sdk.service.live.client.AddCustomLiveStreamSnapshotTemplateExecutor;
import com.jdcloud.sdk.service.live.model.StartLiveDomainRequest;
import com.jdcloud.sdk.service.live.model.StartLiveDomainResponse;
import com.jdcloud.sdk.service.live.client.StartLiveDomainExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishInfoByPageRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishInfoByPageResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPublishInfoByPageExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamWatermarkTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamWatermarkTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamWatermarkTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppTranscodeRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppTranscodeResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamAppTranscodeExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamSnapshotNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamSnapshotNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamSnapshotNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTimeshiftConfigsRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTimeshiftConfigsResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTimeshiftConfigsExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppWatermarkRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppWatermarkResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamAppWatermarkExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppSnapshotRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppSnapshotResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamAppSnapshotExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamRecordNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamRecordNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamRecordNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamWatermarkConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamWatermarkConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamWatermarkConfigExecutor;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamRecordTemplateRequest;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamRecordTemplateResponse;
import com.jdcloud.sdk.service.live.client.AddCustomLiveStreamRecordTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLivePlayAuthKeyRequest;
import com.jdcloud.sdk.service.live.model.DescribeLivePlayAuthKeyResponse;
import com.jdcloud.sdk.service.live.client.DescribeLivePlayAuthKeyExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveP2pConfigsRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveP2pConfigsResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveP2pConfigsExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodingDurationDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodingDurationDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTranscodingDurationDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeSnapshotBindingRequest;
import com.jdcloud.sdk.service.live.model.DescribeSnapshotBindingResponse;
import com.jdcloud.sdk.service.live.client.DescribeSnapshotBindingExecutor;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamTranscodeTemplateRequest;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamTranscodeTemplateResponse;
import com.jdcloud.sdk.service.live.client.DeleteCustomLiveStreamTranscodeTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamTranscodeTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamTranscodeTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamTranscodeTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLivePornDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLivePornDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLivePornDataExecutor;
import com.jdcloud.sdk.service.live.model.StopLiveDomainRequest;
import com.jdcloud.sdk.service.live.model.StopLiveDomainResponse;
import com.jdcloud.sdk.service.live.client.StopLiveDomainExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveFileStorageDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveFileStorageDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveFileStorageDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamOnlineListRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamOnlineListResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamOnlineListExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamRecordNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamRecordNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamRecordNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainSnapshotRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainSnapshotResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamDomainSnapshotExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamHistoryUserNumRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamHistoryUserNumResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamHistoryUserNumExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveStreamNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.SetLiveStreamNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.SetLiveStreamNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveStreamSnapshotNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.SetLiveStreamSnapshotNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.SetLiveStreamSnapshotNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainQualityDetectionRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainQualityDetectionResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamDomainQualityDetectionExecutor;
import com.jdcloud.sdk.service.live.model.CloseLiveP2pRequest;
import com.jdcloud.sdk.service.live.model.CloseLiveP2pResponse;
import com.jdcloud.sdk.service.live.client.CloseLiveP2pExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveDomainRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveDomainResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveDomainExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishBandwidthDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishBandwidthDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPublishBandwidthDataExecutor;
import com.jdcloud.sdk.service.live.model.ResumeLiveStreamRequest;
import com.jdcloud.sdk.service.live.model.ResumeLiveStreamResponse;
import com.jdcloud.sdk.service.live.client.ResumeLiveStreamExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveDomainCertificateRequest;
import com.jdcloud.sdk.service.live.model.SetLiveDomainCertificateResponse;
import com.jdcloud.sdk.service.live.client.SetLiveDomainCertificateExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamSnapshotConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamSnapshotConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamSnapshotConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeQualityDetectionBindingRequest;
import com.jdcloud.sdk.service.live.model.DescribeQualityDetectionBindingResponse;
import com.jdcloud.sdk.service.live.client.DescribeQualityDetectionBindingExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartConfigsRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartConfigsResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveRestartConfigsExecutor;
import com.jdcloud.sdk.service.live.model.DescribeRecordBindingRequest;
import com.jdcloud.sdk.service.live.model.DescribeRecordBindingResponse;
import com.jdcloud.sdk.service.live.client.DescribeRecordBindingExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamTranscodeTemplateRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamTranscodeTemplateResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamTranscodeTemplateExecutor;
import com.jdcloud.sdk.service.live.model.CloseLiveRestartRequest;
import com.jdcloud.sdk.service.live.model.CloseLiveRestartResponse;
import com.jdcloud.sdk.service.live.client.CloseLiveRestartExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamListRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamListResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTranscodeStreamListExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppSnapshotRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppSnapshotResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamAppSnapshotExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainCertificateRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainCertificateResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveDomainCertificateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamQualityDetectionTemplateRequest;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamQualityDetectionTemplateResponse;
import com.jdcloud.sdk.service.live.client.DeleteCustomLiveStreamQualityDetectionTemplateExecutor;
import com.jdcloud.sdk.service.live.model.CloseLiveTimeshiftRequest;
import com.jdcloud.sdk.service.live.model.CloseLiveTimeshiftResponse;
import com.jdcloud.sdk.service.live.client.CloseLiveTimeshiftExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamPlayerUserNumRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamPlayerUserNumResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTranscodeStreamPlayerUserNumExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveRecordTaskRequest;
import com.jdcloud.sdk.service.live.model.AddLiveRecordTaskResponse;
import com.jdcloud.sdk.service.live.client.AddLiveRecordTaskExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainWatermarkRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainWatermarkResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamDomainWatermarkExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveStreamQualityDetectionNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.SetLiveStreamQualityDetectionNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.SetLiveStreamQualityDetectionNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainSnapshotRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainSnapshotResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamDomainSnapshotExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamBandwidthDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamBandwidthDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamBandwidthDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeDomainsLogRequest;
import com.jdcloud.sdk.service.live.model.DescribeDomainsLogResponse;
import com.jdcloud.sdk.service.live.client.DescribeDomainsLogExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveRestartDomainRequest;
import com.jdcloud.sdk.service.live.model.AddLiveRestartDomainResponse;
import com.jdcloud.sdk.service.live.client.AddLiveRestartDomainExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartDomainCertificateRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveRestartDomainCertificateResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveRestartDomainCertificateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainQualityDetectionRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainQualityDetectionResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamDomainQualityDetectionExecutor;
import com.jdcloud.sdk.service.live.model.DescribePublishStreamInfoDataRequest;
import com.jdcloud.sdk.service.live.model.DescribePublishStreamInfoDataResponse;
import com.jdcloud.sdk.service.live.client.DescribePublishStreamInfoDataExecutor;
import com.jdcloud.sdk.service.live.model.ForbidLiveStreamRequest;
import com.jdcloud.sdk.service.live.model.ForbidLiveStreamResponse;
import com.jdcloud.sdk.service.live.client.ForbidLiveStreamExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveRestartAuthKeyRequest;
import com.jdcloud.sdk.service.live.model.SetLiveRestartAuthKeyResponse;
import com.jdcloud.sdk.service.live.client.SetLiveRestartAuthKeyExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamNumRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamNumResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTranscodeStreamNumExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPlayInfoByPageRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPlayInfoByPageResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPlayInfoByPageExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainDetailRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveDomainDetailResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveDomainDetailExecutor;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamSnapshotTemplateRequest;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamSnapshotTemplateResponse;
import com.jdcloud.sdk.service.live.client.DeleteCustomLiveStreamSnapshotTemplateExecutor;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamWatermarkTemplateRequest;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamWatermarkTemplateResponse;
import com.jdcloud.sdk.service.live.client.AddCustomLiveStreamWatermarkTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamWatermarkTemplateRequest;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamWatermarkTemplateResponse;
import com.jdcloud.sdk.service.live.client.DeleteCustomLiveStreamWatermarkTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainWatermarkRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainWatermarkResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamDomainWatermarkExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppRecordRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppRecordResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamAppRecordExecutor;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamRecordTemplateRequest;
import com.jdcloud.sdk.service.live.model.DeleteCustomLiveStreamRecordTemplateResponse;
import com.jdcloud.sdk.service.live.client.DeleteCustomLiveStreamRecordTemplateExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamQualityDetectionNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamQualityDetectionNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamQualityDetectionNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.SetLiveRestartDomainCertificateRequest;
import com.jdcloud.sdk.service.live.model.SetLiveRestartDomainCertificateResponse;
import com.jdcloud.sdk.service.live.client.SetLiveRestartDomainCertificateExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveSnapshotDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveSnapshotDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveSnapshotDataExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainTranscodeRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainTranscodeResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamDomainTranscodeExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppQualityDetectionRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppQualityDetectionResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamAppQualityDetectionExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainRecordRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamDomainRecordResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamDomainRecordExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLivePublishStreamNumRequest;
import com.jdcloud.sdk.service.live.model.DescribeLivePublishStreamNumResponse;
import com.jdcloud.sdk.service.live.client.DescribeLivePublishStreamNumExecutor;
import com.jdcloud.sdk.service.live.model.DescribeSystemLiveStreamTranscodeTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeSystemLiveStreamTranscodeTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeSystemLiveStreamTranscodeTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByAreaRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByAreaResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStatisticGroupByAreaExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishTrafficDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishTrafficDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPublishTrafficDataExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishListRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamPublishListResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamPublishListExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppRecordRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamAppRecordResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamAppRecordExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainRecordRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainRecordResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamDomainRecordExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByAreaIspRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStatisticGroupByAreaIspResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStatisticGroupByAreaIspExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamSnapshotNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamSnapshotNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamSnapshotNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamTranscodeConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamTranscodeConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamTranscodeConfigExecutor;
import com.jdcloud.sdk.service.live.model.SetLivePlayAuthKeyRequest;
import com.jdcloud.sdk.service.live.model.SetLivePlayAuthKeyResponse;
import com.jdcloud.sdk.service.live.client.SetLivePlayAuthKeyExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveAppRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveAppResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveAppExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamQualityDetectionNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamQualityDetectionNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamQualityDetectionNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.InterruptLiveStreamRequest;
import com.jdcloud.sdk.service.live.model.InterruptLiveStreamResponse;
import com.jdcloud.sdk.service.live.client.InterruptLiveStreamExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveDomainRequest;
import com.jdcloud.sdk.service.live.model.AddLiveDomainResponse;
import com.jdcloud.sdk.service.live.client.AddLiveDomainExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveRecordingsRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveRecordingsResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveRecordingsExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamBandwidthRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveTranscodeStreamBandwidthResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveTranscodeStreamBandwidthExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamInfoRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamInfoResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamInfoExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamQualityDetectionTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamQualityDetectionTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamQualityDetectionTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamNotifyConfigRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamNotifyConfigResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamNotifyConfigExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLivePublishStatisticGroupByStreamRequest;
import com.jdcloud.sdk.service.live.model.DescribeLivePublishStatisticGroupByStreamResponse;
import com.jdcloud.sdk.service.live.client.DescribeLivePublishStatisticGroupByStreamExecutor;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamSnapshotTemplatesRequest;
import com.jdcloud.sdk.service.live.model.DescribeCustomLiveStreamSnapshotTemplatesResponse;
import com.jdcloud.sdk.service.live.client.DescribeCustomLiveStreamSnapshotTemplatesExecutor;
import com.jdcloud.sdk.service.live.model.StopLiveAppRequest;
import com.jdcloud.sdk.service.live.model.StopLiveAppResponse;
import com.jdcloud.sdk.service.live.client.StopLiveAppExecutor;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamTrafficDataRequest;
import com.jdcloud.sdk.service.live.model.DescribeLiveStreamTrafficDataResponse;
import com.jdcloud.sdk.service.live.client.DescribeLiveStreamTrafficDataExecutor;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamTranscodeTemplateRequest;
import com.jdcloud.sdk.service.live.model.AddCustomLiveStreamTranscodeTemplateResponse;
import com.jdcloud.sdk.service.live.client.AddCustomLiveStreamTranscodeTemplateExecutor;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainTranscodeRequest;
import com.jdcloud.sdk.service.live.model.AddLiveStreamDomainTranscodeResponse;
import com.jdcloud.sdk.service.live.client.AddLiveStreamDomainTranscodeExecutor;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppTranscodeRequest;
import com.jdcloud.sdk.service.live.model.DeleteLiveStreamAppTranscodeResponse;
import com.jdcloud.sdk.service.live.client.DeleteLiveStreamAppTranscodeExecutor;
import com.jdcloud.sdk.service.live.model.OpenLiveTimeshiftRequest;
import com.jdcloud.sdk.service.live.model.OpenLiveTimeshiftResponse;
import com.jdcloud.sdk.service.live.client.OpenLiveTimeshiftExecutor;

/**
 * liveClient
 */
public class LiveClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "live.jdcloud-api.com";
    public final static String ServiceName = "live";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private LiveClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询在线流列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDomainOnlineStreamResponse describeDomainOnlineStream(DescribeDomainOnlineStreamRequest request) throws JdcloudSdkException {
        return new DescribeDomainOnlineStreamExecutor().client(this).execute(request);
    }

    /**
     * 查询URL播放排行
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeUrlRankingResponse describeUrlRanking(DescribeUrlRankingRequest request) throws JdcloudSdkException {
        return new DescribeUrlRankingExecutor().client(this).execute(request);
    }

    /**
     * 开启回看
1、直播回看文件格式仅支持m3u8。
2、回看时长用户可以配置，最大支持7天，即用户请求回看内容，最多可以请求最近7天的直播回看内容。
3、域名格式：http://{restartDomain}/{appName}/{streamName}/index.m3u8?starttime&#x3D;1527756680&amp;endtime&#x3D;1527760280 (unix时间戳)
4、starttime-endtime最长可支持24小时，可跨天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenLiveRestartResponse openLiveRestart(OpenLiveRestartRequest request) throws JdcloudSdkException {
        return new OpenLiveRestartExecutor().client(this).execute(request);
    }

    /**
     * 添加应用质量检测配置
- 添加应用级别的质量检测模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamAppQualityDetectionResponse addLiveStreamAppQualityDetection(AddLiveStreamAppQualityDetectionRequest request) throws JdcloudSdkException {
        return new AddLiveStreamAppQualityDetectionExecutor().client(this).execute(request);
    }

    /**
     * 添加直播质量检测模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCustomLiveStreamQualityDetectionTemplateResponse addCustomLiveStreamQualityDetectionTemplate(AddCustomLiveStreamQualityDetectionTemplateRequest request) throws JdcloudSdkException {
        return new AddCustomLiveStreamQualityDetectionTemplateExecutor().client(this).execute(request);
    }

    /**
     * 删除直播流状态回调地址
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamNotifyConfigResponse deleteLiveStreamNotifyConfig(DeleteLiveStreamNotifyConfigRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 开启P2P

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenLiveP2pResponse openLiveP2p(OpenLiveP2pRequest request) throws JdcloudSdkException {
        return new OpenLiveP2pExecutor().client(this).execute(request);
    }

    /**
     * 查询直播计费账单用量数据
允许通过条件过滤查询，支持的过滤字段如下：
  - startTime[eq]  账单开始时间
  - endTime[eq]    账单结束时间
  - billType[eq]   账单计费类型
  - userPin[like]  用户PIN

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveBillDataResponse describeLiveBillData(DescribeLiveBillDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveBillDataExecutor().client(this).execute(request);
    }

    /**
     * 查询用户自定义直播录制模板列表

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamRecordTemplatesResponse describeCustomLiveStreamRecordTemplates(DescribeCustomLiveStreamRecordTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamRecordTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 查询转码模板绑定

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeTranscodeBindingResponse describeTranscodeBinding(DescribeTranscodeBindingRequest request) throws JdcloudSdkException {
        return new DescribeTranscodeBindingExecutor().client(this).execute(request);
    }

    /**
     * 查询直播直播录制配置
- 录制模板配置按照 域名,应用,流 3级配置添加,以最小的粒度配置生效
- 域名、应用、流 依次粒度递减 即: 域名&gt;应用&gt;流
- 该查询旨在查询域名、应用、流最终生效的录制模板配置,并非各级的模板绑定情况

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamRecordConfigResponse describeCustomLiveStreamRecordConfig(DescribeCustomLiveStreamRecordConfigRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamRecordConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询域名列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveDomainsResponse describeLiveDomains(DescribeLiveDomainsRequest request) throws JdcloudSdkException {
        return new DescribeLiveDomainsExecutor().client(this).execute(request);
    }

    /**
     * 添加直播应用名
- 需要提前在应用(app)级别绑定功能模板时才需要提前新建应用名
- 新的应用名可以推流时自动创建

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveAppResponse addLiveApp(AddLiveAppRequest request) throws JdcloudSdkException {
        return new AddLiveAppExecutor().client(this).execute(request);
    }

    /**
     * 删除应用级别水印模板配置
- 删除应用级别的水印模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamAppWatermarkResponse deleteLiveStreamAppWatermark(DeleteLiveStreamAppWatermarkRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamAppWatermarkExecutor().client(this).execute(request);
    }

    /**
     * 查询直播回看播放鉴权KEY
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveRestartAuthKeyResponse describeLiveRestartAuthKey(DescribeLiveRestartAuthKeyRequest request) throws JdcloudSdkException {
        return new DescribeLiveRestartAuthKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询直播流播放人数排行
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPlayerRankingDataResponse describeLiveStreamPlayerRankingData(DescribeLiveStreamPlayerRankingDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPlayerRankingDataExecutor().client(this).execute(request);
    }

    /**
     * 查询水印模板绑定

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeWatermarkBindingResponse describeWatermarkBinding(DescribeWatermarkBindingRequest request) throws JdcloudSdkException {
        return new DescribeWatermarkBindingExecutor().client(this).execute(request);
    }

    /**
     * 查询流分组统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStatisticGroupByStreamResponse describeLiveStatisticGroupByStream(DescribeLiveStatisticGroupByStreamRequest request) throws JdcloudSdkException {
        return new DescribeLiveStatisticGroupByStreamExecutor().client(this).execute(request);
    }

    /**
     * 设置直播录制回调通知

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveStreamRecordNotifyConfigResponse setLiveStreamRecordNotifyConfig(SetLiveStreamRecordNotifyConfigRequest request) throws JdcloudSdkException {
        return new SetLiveStreamRecordNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 添加直播截图模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCustomLiveStreamSnapshotTemplateResponse addCustomLiveStreamSnapshotTemplate(AddCustomLiveStreamSnapshotTemplateRequest request) throws JdcloudSdkException {
        return new AddCustomLiveStreamSnapshotTemplateExecutor().client(this).execute(request);
    }

    /**
     * 启动域名
- 启用状态为 停用 的直播域名对(推流域名,播放域名)将DomainStatus变更为online

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StartLiveDomainResponse startLiveDomain(StartLiveDomainRequest request) throws JdcloudSdkException {
        return new StartLiveDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询推流码率、帧率
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPublishInfoByPageResponse describeLiveStreamPublishInfoByPage(DescribeLiveStreamPublishInfoByPageRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPublishInfoByPageExecutor().client(this).execute(request);
    }

    /**
     * 查询用户定义水印模板列表

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamWatermarkTemplatesResponse describeCustomLiveStreamWatermarkTemplates(DescribeCustomLiveStreamWatermarkTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamWatermarkTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 添加应用转码配置
- 添加应用级别的转码模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamAppTranscodeResponse addLiveStreamAppTranscode(AddLiveStreamAppTranscodeRequest request) throws JdcloudSdkException {
        return new AddLiveStreamAppTranscodeExecutor().client(this).execute(request);
    }

    /**
     * 删除截图回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamSnapshotNotifyConfigResponse deleteLiveStreamSnapshotNotifyConfig(DeleteLiveStreamSnapshotNotifyConfigRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamSnapshotNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询时移配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTimeshiftConfigsResponse describeLiveTimeshiftConfigs(DescribeLiveTimeshiftConfigsRequest request) throws JdcloudSdkException {
        return new DescribeLiveTimeshiftConfigsExecutor().client(this).execute(request);
    }

    /**
     * 添加应用级别水印配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamAppWatermarkResponse addLiveStreamAppWatermark(AddLiveStreamAppWatermarkRequest request) throws JdcloudSdkException {
        return new AddLiveStreamAppWatermarkExecutor().client(this).execute(request);
    }

    /**
     * 删除APP截图配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamAppSnapshotResponse deleteLiveStreamAppSnapshot(DeleteLiveStreamAppSnapshotRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamAppSnapshotExecutor().client(this).execute(request);
    }

    /**
     * 删除录制回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamRecordNotifyConfigResponse deleteLiveStreamRecordNotifyConfig(DeleteLiveStreamRecordNotifyConfigRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamRecordNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询直播水印配置
- 水印模板配置按照 域名,应用,流 3级配置添加,以最小的粒度配置生效
- 域名、应用、流 依次粒度递减 即: 域名&gt;应用&gt;流
- 该查询旨在查询域名、应用、流最终生效的水印模板配置,并非各级的模板绑定情况

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamWatermarkConfigResponse describeCustomLiveStreamWatermarkConfig(DescribeCustomLiveStreamWatermarkConfigRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamWatermarkConfigExecutor().client(this).execute(request);
    }

    /**
     * 添加用户自定义直播录制模板

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCustomLiveStreamRecordTemplateResponse addCustomLiveStreamRecordTemplate(AddCustomLiveStreamRecordTemplateRequest request) throws JdcloudSdkException {
        return new AddCustomLiveStreamRecordTemplateExecutor().client(this).execute(request);
    }

    /**
     * 查询(直播or时移)播放鉴权KEY
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLivePlayAuthKeyResponse describeLivePlayAuthKey(DescribeLivePlayAuthKeyRequest request) throws JdcloudSdkException {
        return new DescribeLivePlayAuthKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询P2P配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveP2pConfigsResponse describeLiveP2pConfigs(DescribeLiveP2pConfigsRequest request) throws JdcloudSdkException {
        return new DescribeLiveP2pConfigsExecutor().client(this).execute(request);
    }

    /**
     * 查询转码时长数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTranscodingDurationDataResponse describeLiveTranscodingDurationData(DescribeLiveTranscodingDurationDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveTranscodingDurationDataExecutor().client(this).execute(request);
    }

    /**
     * 查询截图模板绑定

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSnapshotBindingResponse describeSnapshotBinding(DescribeSnapshotBindingRequest request) throws JdcloudSdkException {
        return new DescribeSnapshotBindingExecutor().client(this).execute(request);
    }

    /**
     * 删除用户自定义转码模板
- 删除用户自定义转码模板之前必须先删除此模板在各域名、应用、流级别的转码设置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCustomLiveStreamTranscodeTemplateResponse deleteCustomLiveStreamTranscodeTemplate(DeleteCustomLiveStreamTranscodeTemplateRequest request) throws JdcloudSdkException {
        return new DeleteCustomLiveStreamTranscodeTemplateExecutor().client(this).execute(request);
    }

    /**
     * 查询用户自定义转码模板列表

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamTranscodeTemplatesResponse describeCustomLiveStreamTranscodeTemplates(DescribeCustomLiveStreamTranscodeTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamTranscodeTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 查询直播鉴黄张数数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLivePornDataResponse describeLivePornData(DescribeLivePornDataRequest request) throws JdcloudSdkException {
        return new DescribeLivePornDataExecutor().client(this).execute(request);
    }

    /**
     * 停用域名
- 停用直播域名对(推流域名,播放域名),将DomainStatus变更为offline
- 停用该直播域名对后,直播域名信息仍保留,但用户将不能再用该推流域名推流或播放域名播放

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopLiveDomainResponse stopLiveDomain(StopLiveDomainRequest request) throws JdcloudSdkException {
        return new StopLiveDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询存储空间数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveFileStorageDataResponse describeLiveFileStorageData(DescribeLiveFileStorageDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveFileStorageDataExecutor().client(this).execute(request);
    }

    /**
     * 查询直播中的流的信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamOnlineListResponse describeLiveStreamOnlineList(DescribeLiveStreamOnlineListRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamOnlineListExecutor().client(this).execute(request);
    }

    /**
     * 查询录制回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamRecordNotifyConfigResponse describeLiveStreamRecordNotifyConfig(DescribeLiveStreamRecordNotifyConfigRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamRecordNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 添加域名截图配置
- 添加域名级别的截图模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamDomainSnapshotResponse addLiveStreamDomainSnapshot(AddLiveStreamDomainSnapshotRequest request) throws JdcloudSdkException {
        return new AddLiveStreamDomainSnapshotExecutor().client(this).execute(request);
    }

    /**
     * 查询直播流历史在线人数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamHistoryUserNumResponse describeLiveStreamHistoryUserNum(DescribeLiveStreamHistoryUserNumRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamHistoryUserNumExecutor().client(this).execute(request);
    }

    /**
     * 设置直播流状态回调地址
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveStreamNotifyConfigResponse setLiveStreamNotifyConfig(SetLiveStreamNotifyConfigRequest request) throws JdcloudSdkException {
        return new SetLiveStreamNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 设置直播截图回调通知地址

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveStreamSnapshotNotifyConfigResponse setLiveStreamSnapshotNotifyConfig(SetLiveStreamSnapshotNotifyConfigRequest request) throws JdcloudSdkException {
        return new SetLiveStreamSnapshotNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 添加域名质量检测配置
- 添加域名级别的质量检测模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamDomainQualityDetectionResponse addLiveStreamDomainQualityDetection(AddLiveStreamDomainQualityDetectionRequest request) throws JdcloudSdkException {
        return new AddLiveStreamDomainQualityDetectionExecutor().client(this).execute(request);
    }

    /**
     * 关闭P2P
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CloseLiveP2pResponse closeLiveP2p(CloseLiveP2pRequest request) throws JdcloudSdkException {
        return new CloseLiveP2pExecutor().client(this).execute(request);
    }

    /**
     * 删除直播域名
- 请慎重操作（建议在进行域名删除前到域名解析服务商处恢复域名A记录），以免导致删除操作后此域名不可访问。
  deleteLiveDomain调用成功后将删除本条直播域名的全部相关记录，对于仅需要暂停使用该直播域名，推荐stopLiveDomain接口

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveDomainResponse deleteLiveDomain(DeleteLiveDomainRequest request) throws JdcloudSdkException {
        return new DeleteLiveDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询推流带宽
- 查询某个时间段内的推流上行带宽数据
- 查询1分钟粒度的数据时，时间跨度不超过7天，其他粒度时时间跨度不超过30天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPublishBandwidthDataResponse describeLiveStreamPublishBandwidthData(DescribeLiveStreamPublishBandwidthDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPublishBandwidthDataExecutor().client(this).execute(request);
    }

    /**
     * 恢复直播流推送
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ResumeLiveStreamResponse resumeLiveStream(ResumeLiveStreamRequest request) throws JdcloudSdkException {
        return new ResumeLiveStreamExecutor().client(this).execute(request);
    }

    /**
     * 设置(直播or时移)播放证书
-- 设置成功之后30分钟以内生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveDomainCertificateResponse setLiveDomainCertificate(SetLiveDomainCertificateRequest request) throws JdcloudSdkException {
        return new SetLiveDomainCertificateExecutor().client(this).execute(request);
    }

    /**
     * 查询直播截图配置
- 截图模板配置按照 域名,应用,流 3级配置添加,以最小的粒度配置生效
- 域名、应用、流 依次粒度递减 即: 域名&gt;应用&gt;流
- 该查询旨在查询域名、应用、流最终生效的截图模板配置,并非各级的模板绑定情况

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamSnapshotConfigResponse describeCustomLiveStreamSnapshotConfig(DescribeCustomLiveStreamSnapshotConfigRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamSnapshotConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询质量检测模板绑定

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeQualityDetectionBindingResponse describeQualityDetectionBinding(DescribeQualityDetectionBindingRequest request) throws JdcloudSdkException {
        return new DescribeQualityDetectionBindingExecutor().client(this).execute(request);
    }

    /**
     * 查询回看配置
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveRestartConfigsResponse describeLiveRestartConfigs(DescribeLiveRestartConfigsRequest request) throws JdcloudSdkException {
        return new DescribeLiveRestartConfigsExecutor().client(this).execute(request);
    }

    /**
     * 查询录制模板绑定

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeRecordBindingResponse describeRecordBinding(DescribeRecordBindingRequest request) throws JdcloudSdkException {
        return new DescribeRecordBindingExecutor().client(this).execute(request);
    }

    /**
     * 查询用户自定义转码模板详情
- 查询用户自定义转码模板详情
- 系统标准转码模板
      ld (h.264/640*360/15f)
      sd (h.264/960*540/24f)
      hd (h.264/1280*720/25f)
      shd (h.264/1920*1080/30f)
      ld-265 (h.265/640*360/15f)
      sd-265 (h.265/960*540/24f)
      hd-265 (h.265/1280*720/25f)
      shd-265 (h.265/1920*1080/30f)

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamTranscodeTemplateResponse describeCustomLiveStreamTranscodeTemplate(DescribeCustomLiveStreamTranscodeTemplateRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamTranscodeTemplateExecutor().client(this).execute(request);
    }

    /**
     * 关闭回看
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CloseLiveRestartResponse closeLiveRestart(CloseLiveRestartRequest request) throws JdcloudSdkException {
        return new CloseLiveRestartExecutor().client(this).execute(request);
    }

    /**
     * 查询转码流信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTranscodeStreamListResponse describeLiveTranscodeStreamList(DescribeLiveTranscodeStreamListRequest request) throws JdcloudSdkException {
        return new DescribeLiveTranscodeStreamListExecutor().client(this).execute(request);
    }

    /**
     * 添加应用截图配置
- 添加应用级别的截图模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamAppSnapshotResponse addLiveStreamAppSnapshot(AddLiveStreamAppSnapshotRequest request) throws JdcloudSdkException {
        return new AddLiveStreamAppSnapshotExecutor().client(this).execute(request);
    }

    /**
     * 查询直播播放证书
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveDomainCertificateResponse describeLiveDomainCertificate(DescribeLiveDomainCertificateRequest request) throws JdcloudSdkException {
        return new DescribeLiveDomainCertificateExecutor().client(this).execute(request);
    }

    /**
     * 删除直播质量检测模板
- 删除质量检测模板前,请先删除此模板相关的质量检测配置,否则无法删除

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCustomLiveStreamQualityDetectionTemplateResponse deleteCustomLiveStreamQualityDetectionTemplate(DeleteCustomLiveStreamQualityDetectionTemplateRequest request) throws JdcloudSdkException {
        return new DeleteCustomLiveStreamQualityDetectionTemplateExecutor().client(this).execute(request);
    }

    /**
     * 关闭时移
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CloseLiveTimeshiftResponse closeLiveTimeshift(CloseLiveTimeshiftRequest request) throws JdcloudSdkException {
        return new CloseLiveTimeshiftExecutor().client(this).execute(request);
    }

    /**
     * 查询转码流观看人数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTranscodeStreamPlayerUserNumResponse describeLiveTranscodeStreamPlayerUserNum(DescribeLiveTranscodeStreamPlayerUserNumRequest request) throws JdcloudSdkException {
        return new DescribeLiveTranscodeStreamPlayerUserNumExecutor().client(this).execute(request);
    }

    /**
     * 添加打点录制任务
- 您可以调用此接口精确提取已录制的文件中所需要的部分

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveRecordTaskResponse addLiveRecordTask(AddLiveRecordTaskRequest request) throws JdcloudSdkException {
        return new AddLiveRecordTaskExecutor().client(this).execute(request);
    }

    /**
     * 添加域名水印配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamDomainWatermarkResponse addLiveStreamDomainWatermark(AddLiveStreamDomainWatermarkRequest request) throws JdcloudSdkException {
        return new AddLiveStreamDomainWatermarkExecutor().client(this).execute(request);
    }

    /**
     * 设置直播质量检测回调通知地址

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveStreamQualityDetectionNotifyConfigResponse setLiveStreamQualityDetectionNotifyConfig(SetLiveStreamQualityDetectionNotifyConfigRequest request) throws JdcloudSdkException {
        return new SetLiveStreamQualityDetectionNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 删除域名截图配置
- 删除域名级别的截图模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamDomainSnapshotResponse deleteLiveStreamDomainSnapshot(DeleteLiveStreamDomainSnapshotRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamDomainSnapshotExecutor().client(this).execute(request);
    }

    /**
     * 查询带宽数据
- 查询某个时间段内的带宽数据（平均带宽）
- 查询1分钟粒度的数据时，时间跨度不超过7天，其他粒度时时间跨度不超过30天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamBandwidthDataResponse describeLiveStreamBandwidthData(DescribeLiveStreamBandwidthDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamBandwidthDataExecutor().client(this).execute(request);
    }

    /**
     * 日志下载
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeDomainsLogResponse describeDomainsLog(DescribeDomainsLogRequest request) throws JdcloudSdkException {
        return new DescribeDomainsLogExecutor().client(this).execute(request);
    }

    /**
     * 添加回看域名

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveRestartDomainResponse addLiveRestartDomain(AddLiveRestartDomainRequest request) throws JdcloudSdkException {
        return new AddLiveRestartDomainExecutor().client(this).execute(request);
    }

    /**
     * 查询直播回看播放证书
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveRestartDomainCertificateResponse describeLiveRestartDomainCertificate(DescribeLiveRestartDomainCertificateRequest request) throws JdcloudSdkException {
        return new DescribeLiveRestartDomainCertificateExecutor().client(this).execute(request);
    }

    /**
     * 删除域名质量检测配置
- 删除域名级别的质量检测模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamDomainQualityDetectionResponse deleteLiveStreamDomainQualityDetection(DeleteLiveStreamDomainQualityDetectionRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamDomainQualityDetectionExecutor().client(this).execute(request);
    }

    /**
     * 查询推流监控数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribePublishStreamInfoDataResponse describePublishStreamInfoData(DescribePublishStreamInfoDataRequest request) throws JdcloudSdkException {
        return new DescribePublishStreamInfoDataExecutor().client(this).execute(request);
    }

    /**
     * 禁止直播流推送
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ForbidLiveStreamResponse forbidLiveStream(ForbidLiveStreamRequest request) throws JdcloudSdkException {
        return new ForbidLiveStreamExecutor().client(this).execute(request);
    }

    /**
     * 设置直播回看播放鉴权KEY
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveRestartAuthKeyResponse setLiveRestartAuthKey(SetLiveRestartAuthKeyRequest request) throws JdcloudSdkException {
        return new SetLiveRestartAuthKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询转码流数量
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTranscodeStreamNumResponse describeLiveTranscodeStreamNum(DescribeLiveTranscodeStreamNumRequest request) throws JdcloudSdkException {
        return new DescribeLiveTranscodeStreamNumExecutor().client(this).execute(request);
    }

    /**
     * 查询观看人数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPlayInfoByPageResponse describeLiveStreamPlayInfoByPage(DescribeLiveStreamPlayInfoByPageRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPlayInfoByPageExecutor().client(this).execute(request);
    }

    /**
     * 查询指定域名相关信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveDomainDetailResponse describeLiveDomainDetail(DescribeLiveDomainDetailRequest request) throws JdcloudSdkException {
        return new DescribeLiveDomainDetailExecutor().client(this).execute(request);
    }

    /**
     * 删除用户自定义直播截图模板
- 删除截图模板前,请先删除此模板相关的截图配置,否则将会影响线上业务

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCustomLiveStreamSnapshotTemplateResponse deleteCustomLiveStreamSnapshotTemplate(DeleteCustomLiveStreamSnapshotTemplateRequest request) throws JdcloudSdkException {
        return new DeleteCustomLiveStreamSnapshotTemplateExecutor().client(this).execute(request);
    }

    /**
     * 添加用户自定义水印模板

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCustomLiveStreamWatermarkTemplateResponse addCustomLiveStreamWatermarkTemplate(AddCustomLiveStreamWatermarkTemplateRequest request) throws JdcloudSdkException {
        return new AddCustomLiveStreamWatermarkTemplateExecutor().client(this).execute(request);
    }

    /**
     * 删除用户自定义水印模板
- 删除用户自定义水印模板之前必须先删除此模板在各域名、应用、流级别的水印设置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCustomLiveStreamWatermarkTemplateResponse deleteCustomLiveStreamWatermarkTemplate(DeleteCustomLiveStreamWatermarkTemplateRequest request) throws JdcloudSdkException {
        return new DeleteCustomLiveStreamWatermarkTemplateExecutor().client(this).execute(request);
    }

    /**
     * 删除域名级别水印模板配置
- 删除域名级别水印模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamDomainWatermarkResponse deleteLiveStreamDomainWatermark(DeleteLiveStreamDomainWatermarkRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamDomainWatermarkExecutor().client(this).execute(request);
    }

    /**
     * 删除应用级别录制模板配置
- 删除应用级别的录制模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamAppRecordResponse deleteLiveStreamAppRecord(DeleteLiveStreamAppRecordRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamAppRecordExecutor().client(this).execute(request);
    }

    /**
     * 删除用户自定义录制模板
- 删除用户自定义录制模板之前必须先删除此模板在各域名、应用、流级别的录制设置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCustomLiveStreamRecordTemplateResponse deleteCustomLiveStreamRecordTemplate(DeleteCustomLiveStreamRecordTemplateRequest request) throws JdcloudSdkException {
        return new DeleteCustomLiveStreamRecordTemplateExecutor().client(this).execute(request);
    }

    /**
     * 删除质量检测回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamQualityDetectionNotifyConfigResponse deleteLiveStreamQualityDetectionNotifyConfig(DeleteLiveStreamQualityDetectionNotifyConfigRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamQualityDetectionNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 设置直播回看证书
-- 设置成功之后30分钟以内生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLiveRestartDomainCertificateResponse setLiveRestartDomainCertificate(SetLiveRestartDomainCertificateRequest request) throws JdcloudSdkException {
        return new SetLiveRestartDomainCertificateExecutor().client(this).execute(request);
    }

    /**
     * 查询直播截图张数数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveSnapshotDataResponse describeLiveSnapshotData(DescribeLiveSnapshotDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveSnapshotDataExecutor().client(this).execute(request);
    }

    /**
     * 删除域名级别转码模板配置
- 删除域名级别转码模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamDomainTranscodeResponse deleteLiveStreamDomainTranscode(DeleteLiveStreamDomainTranscodeRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamDomainTranscodeExecutor().client(this).execute(request);
    }

    /**
     * 删除应用级别质量检测模板配置
- 删除应用级别质量检测模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamAppQualityDetectionResponse deleteLiveStreamAppQualityDetection(DeleteLiveStreamAppQualityDetectionRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamAppQualityDetectionExecutor().client(this).execute(request);
    }

    /**
     * 删除域名级别录制模板配置
- 删除域名级别录制模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamDomainRecordResponse deleteLiveStreamDomainRecord(DeleteLiveStreamDomainRecordRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamDomainRecordExecutor().client(this).execute(request);
    }

    /**
     * 查询直播推流数
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLivePublishStreamNumResponse describeLivePublishStreamNum(DescribeLivePublishStreamNumRequest request) throws JdcloudSdkException {
        return new DescribeLivePublishStreamNumExecutor().client(this).execute(request);
    }

    /**
     * 查询系统默认转码模板列表

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSystemLiveStreamTranscodeTemplatesResponse describeSystemLiveStreamTranscodeTemplates(DescribeSystemLiveStreamTranscodeTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeSystemLiveStreamTranscodeTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 查询地域分组统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStatisticGroupByAreaResponse describeLiveStatisticGroupByArea(DescribeLiveStatisticGroupByAreaRequest request) throws JdcloudSdkException {
        return new DescribeLiveStatisticGroupByAreaExecutor().client(this).execute(request);
    }

    /**
     * 查询推流上行流量数据
- 查询某个时间段内的流量数据。
- 查询1分钟粒度的数据时，时间跨度不超过7天，其他粒度时时间跨度不超过30天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPublishTrafficDataResponse describeLiveStreamPublishTrafficData(DescribeLiveStreamPublishTrafficDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPublishTrafficDataExecutor().client(this).execute(request);
    }

    /**
     * 查看推流历史记录
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamPublishListResponse describeLiveStreamPublishList(DescribeLiveStreamPublishListRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamPublishListExecutor().client(this).execute(request);
    }

    /**
     * 添加应用级别直播录制配置
- 添加应用级别的直播录制模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamAppRecordResponse addLiveStreamAppRecord(AddLiveStreamAppRecordRequest request) throws JdcloudSdkException {
        return new AddLiveStreamAppRecordExecutor().client(this).execute(request);
    }

    /**
     * 添加域名级别直播录制配置
- 添加域名级别的直播录制模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamDomainRecordResponse addLiveStreamDomainRecord(AddLiveStreamDomainRecordRequest request) throws JdcloudSdkException {
        return new AddLiveStreamDomainRecordExecutor().client(this).execute(request);
    }

    /**
     * 查询地域/运营商分组统计数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStatisticGroupByAreaIspResponse describeLiveStatisticGroupByAreaIsp(DescribeLiveStatisticGroupByAreaIspRequest request) throws JdcloudSdkException {
        return new DescribeLiveStatisticGroupByAreaIspExecutor().client(this).execute(request);
    }

    /**
     * 查询截图回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamSnapshotNotifyConfigResponse describeLiveStreamSnapshotNotifyConfig(DescribeLiveStreamSnapshotNotifyConfigRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamSnapshotNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询转码模板配置
- 转码模板配置按照 域名,应用,流 3级配置添加,以最小的粒度配置生效原则
- 域名、应用、流 依次粒度递减 即: 域名&gt;应用&gt;流
- 该查询旨在查询域名、应用、流最终生效的转码模板配置,并非各级的模板绑定情况

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamTranscodeConfigResponse describeLiveStreamTranscodeConfig(DescribeLiveStreamTranscodeConfigRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamTranscodeConfigExecutor().client(this).execute(request);
    }

    /**
     * 设置(直播or时移)播放鉴权KEY
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetLivePlayAuthKeyResponse setLivePlayAuthKey(SetLivePlayAuthKeyRequest request) throws JdcloudSdkException {
        return new SetLivePlayAuthKeyExecutor().client(this).execute(request);
    }

    /**
     * 查询域名下的APP列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveAppResponse describeLiveApp(DescribeLiveAppRequest request) throws JdcloudSdkException {
        return new DescribeLiveAppExecutor().client(this).execute(request);
    }

    /**
     * 查询质量检测回调配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamQualityDetectionNotifyConfigResponse describeLiveStreamQualityDetectionNotifyConfig(DescribeLiveStreamQualityDetectionNotifyConfigRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamQualityDetectionNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 中断直播流推送
- 中断操作1秒后可以继续推流

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public InterruptLiveStreamResponse interruptLiveStream(InterruptLiveStreamRequest request) throws JdcloudSdkException {
        return new InterruptLiveStreamExecutor().client(this).execute(request);
    }

    /**
     * 添加直播域名
- 创建直播域名之前,必须先开通直播服务
- 直播域名必须已经备案完成

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveDomainResponse addLiveDomain(AddLiveDomainRequest request) throws JdcloudSdkException {
        return new AddLiveDomainExecutor().client(this).execute(request);
    }

    /**
     * 删除录制文件

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveRecordingsResponse deleteLiveRecordings(DeleteLiveRecordingsRequest request) throws JdcloudSdkException {
        return new DeleteLiveRecordingsExecutor().client(this).execute(request);
    }

    /**
     * 查询转码流播放带宽
- 查询1分钟粒度的数据时，时间跨度不超过7天，其他粒度时时间跨度不超过30天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveTranscodeStreamBandwidthResponse describeLiveTranscodeStreamBandwidth(DescribeLiveTranscodeStreamBandwidthRequest request) throws JdcloudSdkException {
        return new DescribeLiveTranscodeStreamBandwidthExecutor().client(this).execute(request);
    }

    /**
     * 查询直播实时流信息

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamInfoResponse describeLiveStreamInfo(DescribeLiveStreamInfoRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamInfoExecutor().client(this).execute(request);
    }

    /**
     * 查询直播质量检测模板列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamQualityDetectionTemplatesResponse describeCustomLiveStreamQualityDetectionTemplates(DescribeCustomLiveStreamQualityDetectionTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamQualityDetectionTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 查询直播流状态回调地址
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamNotifyConfigResponse describeLiveStreamNotifyConfig(DescribeLiveStreamNotifyConfigRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamNotifyConfigExecutor().client(this).execute(request);
    }

    /**
     * 查询流分组统计数据(上行)
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLivePublishStatisticGroupByStreamResponse describeLivePublishStatisticGroupByStream(DescribeLivePublishStatisticGroupByStreamRequest request) throws JdcloudSdkException {
        return new DescribeLivePublishStatisticGroupByStreamExecutor().client(this).execute(request);
    }

    /**
     * 查询直播截图模板列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomLiveStreamSnapshotTemplatesResponse describeCustomLiveStreamSnapshotTemplates(DescribeCustomLiveStreamSnapshotTemplatesRequest request) throws JdcloudSdkException {
        return new DescribeCustomLiveStreamSnapshotTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 停用 运行中 状态的应用
- 停用应用之后,不能再用此应用名推流

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public StopLiveAppResponse stopLiveApp(StopLiveAppRequest request) throws JdcloudSdkException {
        return new StopLiveAppExecutor().client(this).execute(request);
    }

    /**
     * 查询流量数据
- 查询某个时间段内的流量数据。
- 查询1分钟粒度的数据时，时间跨度不超过7天，其他粒度时时间跨度不超过30天

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeLiveStreamTrafficDataResponse describeLiveStreamTrafficData(DescribeLiveStreamTrafficDataRequest request) throws JdcloudSdkException {
        return new DescribeLiveStreamTrafficDataExecutor().client(this).execute(request);
    }

    /**
     * 添加自定义转码模板
- 系统为您预设了标准转码模板,如果不能满足您的转码需求,可以通过此接口添加自定义转码模板
- 系统标准转码模板
    ld (h.264/640*360/15f)
    sd (h.264/960*540/25f)
    hd (h.264/1280*720/25f)
    shd (h.264/1920*1080/30f)
    ld-265 (h.265/640*360/15f)
    sd-265 (h.265/960*540/25f)
    hd-265 (h.265/1280*720/25f)
    shd-265 (h.265/1920*1080/30f)

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCustomLiveStreamTranscodeTemplateResponse addCustomLiveStreamTranscodeTemplate(AddCustomLiveStreamTranscodeTemplateRequest request) throws JdcloudSdkException {
        return new AddCustomLiveStreamTranscodeTemplateExecutor().client(this).execute(request);
    }

    /**
     * 添加域名级别转码配置
- 添加域名级别的转码模板配置

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLiveStreamDomainTranscodeResponse addLiveStreamDomainTranscode(AddLiveStreamDomainTranscodeRequest request) throws JdcloudSdkException {
        return new AddLiveStreamDomainTranscodeExecutor().client(this).execute(request);
    }

    /**
     * 删除应用级别转码模板配置
- 删除应用级别的转码模板配置,重新推流后生效

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteLiveStreamAppTranscodeResponse deleteLiveStreamAppTranscode(DeleteLiveStreamAppTranscodeRequest request) throws JdcloudSdkException {
        return new DeleteLiveStreamAppTranscodeExecutor().client(this).execute(request);
    }

    /**
     * 开启时移
直播支持最大4小时的HLS时移，使用方式为在播放域名后增加时移参数来实现，参数类型支持指定开始时间和时间偏移量2种方式进行时移。 开启直播时移后，重新推流生效，使用播放域名带相应参数访问即可播放
- 域名格式：
1、http://{playDomain}/{appName}/{streamName}/index.m3u8?timeshift&#x3D;400（秒，指从当前时间往前时移的偏移量）
2、http://{playDomain}/{appName}/{streamName}/index.m3u8?starttime&#x3D;1529223702 (unix时间戳)

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public OpenLiveTimeshiftResponse openLiveTimeshift(OpenLiveTimeshiftRequest request) throws JdcloudSdkException {
        return new OpenLiveTimeshiftExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public LiveClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private LiveClient liveClient;

        public DefaultBuilder() {
            liveClient = new LiveClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            liveClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            liveClient.httpRequestConfig = config;
            return this;
        }

        public LiveClient build() throws JdcloudSdkException {

            if (liveClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                liveClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (liveClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("LiveClient build error: jdcloud credentials provider not set");
                }
            }
            if (liveClient.httpRequestConfig == null) {
                liveClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (liveClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("LiveClient build error: http request config not set");
                }
            }
            return liveClient;
        }

        public Builder environment(Environment environment) {
            liveClient.environment = environment;
            return this;
        }
    }
}
