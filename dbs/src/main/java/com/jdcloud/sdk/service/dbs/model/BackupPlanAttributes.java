/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dbs.model;


/**
 * backupPlanAttributes
 */
public class BackupPlanAttributes  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 备份计划名称
     */
    private String backupPlanName;

    /**
     * 备份计划Id
     */
    private String backupPlanId;

    /**
     * 备份计划状态
     */
    private String backupPlanStatus;

    /**
     * 备份计划状态原因，仅状态为ERROR时返回；其他状态时返回空字符串
     */
    private String errorMessages;

    /**
     * 源实例引擎类型
     */
    private String sourceEngine;

    /**
     * DBS服务包类型是枚举值， dbs.common.package 表示基础服务包，不含备份流量
     */
    private String servicePackage;

    /**
     * 备份计划创建时间, UTC 时间格式
     */
    private String createTime;

    /**
     * 计费信息
     */
    private Charge charge;

    /**
     * 备份方式
     */
    private String backupType;

    /**
     * 是否开启日志备份；true：开启；false：关闭
     */
    private Boolean enableBackupLogs;

    /**
     * 日志备份保存天数，支持7-3650 天，默认7天
     */
    private Integer logBackupRetentionPeriod;

    /**
     * 全量备份保存天数，支持7-3650 天，默认7天
     */
    private Integer fullBackupRetentionPeriod;

    /**
     * 全量备份的备份周期
     */
    private BackupSchedule fullBackupSchedule;

    /**
     * 备份目标的详细信息
     */
    private SourceEndpoint sourceEndpoint;

    /**
     * 逻辑备份中要备份的对象的信息，物理备份无须该信息
     */
    private BackupObjects backupObjects;


    /**
     * get 备份计划名称
     *
     * @return
     */
    public String getBackupPlanName() {
        return backupPlanName;
    }

    /**
     * set 备份计划名称
     *
     * @param backupPlanName
     */
    public void setBackupPlanName(String backupPlanName) {
        this.backupPlanName = backupPlanName;
    }

    /**
     * get 备份计划Id
     *
     * @return
     */
    public String getBackupPlanId() {
        return backupPlanId;
    }

    /**
     * set 备份计划Id
     *
     * @param backupPlanId
     */
    public void setBackupPlanId(String backupPlanId) {
        this.backupPlanId = backupPlanId;
    }

    /**
     * get 备份计划状态
     *
     * @return
     */
    public String getBackupPlanStatus() {
        return backupPlanStatus;
    }

    /**
     * set 备份计划状态
     *
     * @param backupPlanStatus
     */
    public void setBackupPlanStatus(String backupPlanStatus) {
        this.backupPlanStatus = backupPlanStatus;
    }

    /**
     * get 备份计划状态原因，仅状态为ERROR时返回；其他状态时返回空字符串
     *
     * @return
     */
    public String getErrorMessages() {
        return errorMessages;
    }

    /**
     * set 备份计划状态原因，仅状态为ERROR时返回；其他状态时返回空字符串
     *
     * @param errorMessages
     */
    public void setErrorMessages(String errorMessages) {
        this.errorMessages = errorMessages;
    }

    /**
     * get 源实例引擎类型
     *
     * @return
     */
    public String getSourceEngine() {
        return sourceEngine;
    }

    /**
     * set 源实例引擎类型
     *
     * @param sourceEngine
     */
    public void setSourceEngine(String sourceEngine) {
        this.sourceEngine = sourceEngine;
    }

    /**
     * get DBS服务包类型是枚举值， dbs.common.package 表示基础服务包，不含备份流量
     *
     * @return
     */
    public String getServicePackage() {
        return servicePackage;
    }

    /**
     * set DBS服务包类型是枚举值， dbs.common.package 表示基础服务包，不含备份流量
     *
     * @param servicePackage
     */
    public void setServicePackage(String servicePackage) {
        this.servicePackage = servicePackage;
    }

    /**
     * get 备份计划创建时间, UTC 时间格式
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 备份计划创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }

    /**
     * get 计费信息
     *
     * @return
     */
    public Charge getCharge() {
        return charge;
    }

    /**
     * set 计费信息
     *
     * @param charge
     */
    public void setCharge(Charge charge) {
        this.charge = charge;
    }

    /**
     * get 备份方式
     *
     * @return
     */
    public String getBackupType() {
        return backupType;
    }

    /**
     * set 备份方式
     *
     * @param backupType
     */
    public void setBackupType(String backupType) {
        this.backupType = backupType;
    }

    /**
     * get 是否开启日志备份；true：开启；false：关闭
     *
     * @return
     */
    public Boolean getEnableBackupLogs() {
        return enableBackupLogs;
    }

    /**
     * set 是否开启日志备份；true：开启；false：关闭
     *
     * @param enableBackupLogs
     */
    public void setEnableBackupLogs(Boolean enableBackupLogs) {
        this.enableBackupLogs = enableBackupLogs;
    }

    /**
     * get 日志备份保存天数，支持7-3650 天，默认7天
     *
     * @return
     */
    public Integer getLogBackupRetentionPeriod() {
        return logBackupRetentionPeriod;
    }

    /**
     * set 日志备份保存天数，支持7-3650 天，默认7天
     *
     * @param logBackupRetentionPeriod
     */
    public void setLogBackupRetentionPeriod(Integer logBackupRetentionPeriod) {
        this.logBackupRetentionPeriod = logBackupRetentionPeriod;
    }

    /**
     * get 全量备份保存天数，支持7-3650 天，默认7天
     *
     * @return
     */
    public Integer getFullBackupRetentionPeriod() {
        return fullBackupRetentionPeriod;
    }

    /**
     * set 全量备份保存天数，支持7-3650 天，默认7天
     *
     * @param fullBackupRetentionPeriod
     */
    public void setFullBackupRetentionPeriod(Integer fullBackupRetentionPeriod) {
        this.fullBackupRetentionPeriod = fullBackupRetentionPeriod;
    }

    /**
     * get 全量备份的备份周期
     *
     * @return
     */
    public BackupSchedule getFullBackupSchedule() {
        return fullBackupSchedule;
    }

    /**
     * set 全量备份的备份周期
     *
     * @param fullBackupSchedule
     */
    public void setFullBackupSchedule(BackupSchedule fullBackupSchedule) {
        this.fullBackupSchedule = fullBackupSchedule;
    }

    /**
     * get 备份目标的详细信息
     *
     * @return
     */
    public SourceEndpoint getSourceEndpoint() {
        return sourceEndpoint;
    }

    /**
     * set 备份目标的详细信息
     *
     * @param sourceEndpoint
     */
    public void setSourceEndpoint(SourceEndpoint sourceEndpoint) {
        this.sourceEndpoint = sourceEndpoint;
    }

    /**
     * get 逻辑备份中要备份的对象的信息，物理备份无须该信息
     *
     * @return
     */
    public BackupObjects getBackupObjects() {
        return backupObjects;
    }

    /**
     * set 逻辑备份中要备份的对象的信息，物理备份无须该信息
     *
     * @param backupObjects
     */
    public void setBackupObjects(BackupObjects backupObjects) {
        this.backupObjects = backupObjects;
    }


    /**
     * set 备份计划名称
     *
     * @param backupPlanName
     */
    public BackupPlanAttributes backupPlanName(String backupPlanName) {
        this.backupPlanName = backupPlanName;
        return this;
    }

    /**
     * set 备份计划Id
     *
     * @param backupPlanId
     */
    public BackupPlanAttributes backupPlanId(String backupPlanId) {
        this.backupPlanId = backupPlanId;
        return this;
    }

    /**
     * set 备份计划状态
     *
     * @param backupPlanStatus
     */
    public BackupPlanAttributes backupPlanStatus(String backupPlanStatus) {
        this.backupPlanStatus = backupPlanStatus;
        return this;
    }

    /**
     * set 备份计划状态原因，仅状态为ERROR时返回；其他状态时返回空字符串
     *
     * @param errorMessages
     */
    public BackupPlanAttributes errorMessages(String errorMessages) {
        this.errorMessages = errorMessages;
        return this;
    }

    /**
     * set 源实例引擎类型
     *
     * @param sourceEngine
     */
    public BackupPlanAttributes sourceEngine(String sourceEngine) {
        this.sourceEngine = sourceEngine;
        return this;
    }

    /**
     * set DBS服务包类型是枚举值， dbs.common.package 表示基础服务包，不含备份流量
     *
     * @param servicePackage
     */
    public BackupPlanAttributes servicePackage(String servicePackage) {
        this.servicePackage = servicePackage;
        return this;
    }

    /**
     * set 备份计划创建时间, UTC 时间格式
     *
     * @param createTime
     */
    public BackupPlanAttributes createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * set 计费信息
     *
     * @param charge
     */
    public BackupPlanAttributes charge(Charge charge) {
        this.charge = charge;
        return this;
    }

    /**
     * set 备份方式
     *
     * @param backupType
     */
    public BackupPlanAttributes backupType(String backupType) {
        this.backupType = backupType;
        return this;
    }

    /**
     * set 是否开启日志备份；true：开启；false：关闭
     *
     * @param enableBackupLogs
     */
    public BackupPlanAttributes enableBackupLogs(Boolean enableBackupLogs) {
        this.enableBackupLogs = enableBackupLogs;
        return this;
    }

    /**
     * set 日志备份保存天数，支持7-3650 天，默认7天
     *
     * @param logBackupRetentionPeriod
     */
    public BackupPlanAttributes logBackupRetentionPeriod(Integer logBackupRetentionPeriod) {
        this.logBackupRetentionPeriod = logBackupRetentionPeriod;
        return this;
    }

    /**
     * set 全量备份保存天数，支持7-3650 天，默认7天
     *
     * @param fullBackupRetentionPeriod
     */
    public BackupPlanAttributes fullBackupRetentionPeriod(Integer fullBackupRetentionPeriod) {
        this.fullBackupRetentionPeriod = fullBackupRetentionPeriod;
        return this;
    }

    /**
     * set 全量备份的备份周期
     *
     * @param fullBackupSchedule
     */
    public BackupPlanAttributes fullBackupSchedule(BackupSchedule fullBackupSchedule) {
        this.fullBackupSchedule = fullBackupSchedule;
        return this;
    }

    /**
     * set 备份目标的详细信息
     *
     * @param sourceEndpoint
     */
    public BackupPlanAttributes sourceEndpoint(SourceEndpoint sourceEndpoint) {
        this.sourceEndpoint = sourceEndpoint;
        return this;
    }

    /**
     * set 逻辑备份中要备份的对象的信息，物理备份无须该信息
     *
     * @param backupObjects
     */
    public BackupPlanAttributes backupObjects(BackupObjects backupObjects) {
        this.backupObjects = backupObjects;
        return this;
    }


}