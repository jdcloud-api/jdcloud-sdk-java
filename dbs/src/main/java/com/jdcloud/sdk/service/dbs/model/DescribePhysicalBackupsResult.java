/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 数据库备份服务
 * 数据库备份服务接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dbs.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.dbs.model.PhysicalBackups;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 查询所有的物理备份结果
 */
public class DescribePhysicalBackupsResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * totalCount
     */
    private Integer totalCount;

    /**
     * physicalBackups
     */
    private List<PhysicalBackups> physicalBackups;


    /**
     * get totalCount
     *
     * @return
     */
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * set totalCount
     *
     * @param totalCount
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }

    /**
     * get physicalBackups
     *
     * @return
     */
    public List<PhysicalBackups> getPhysicalBackups() {
        return physicalBackups;
    }

    /**
     * set physicalBackups
     *
     * @param physicalBackups
     */
    public void setPhysicalBackups(List<PhysicalBackups> physicalBackups) {
        this.physicalBackups = physicalBackups;
    }


    /**
     * set totalCount
     *
     * @param totalCount
     */
    public DescribePhysicalBackupsResult totalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }

    /**
     * set physicalBackups
     *
     * @param physicalBackups
     */
    public DescribePhysicalBackupsResult physicalBackups(List<PhysicalBackups> physicalBackups) {
        this.physicalBackups = physicalBackups;
        return this;
    }


    /**
     * add item to physicalBackups
     *
     * @param physicalBackup
     */
    public void addPhysicalBackup(PhysicalBackups physicalBackup) {
        if (this.physicalBackups == null) {
            this.physicalBackups = new ArrayList<>();
        }
        this.physicalBackups.add(physicalBackup);
    }

}