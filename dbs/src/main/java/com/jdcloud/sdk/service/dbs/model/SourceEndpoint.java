/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.dbs.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * sourceEndpoint
 */
public class SourceEndpoint  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 源数据库的网络类型 PublicAccess 和 RDS
     * Required:true
     */
    @Required
    private String networkType;

    /**
     * 源数据库的端口
     * Required:true
     */
    @Required
    private Integer port;

    /**
     * 备份代理的ID，仅初始化时可设置，设置完成并开始备份后，不可修改
     * Required:true
     */
    @Required
    private String backupAgentId;

    /**
     * 源数据库的账号
     * Required:true
     */
    @Required
    private String accountName;

    /**
     * 源数据库的密码
     * Required:true
     */
    @Required
    private String password;

    /**
     * 不同数据库引擎独有的配置参数
     * Required:true
     */
    @Required
    private EngineRelatedConfig engineRelatedConfig;


    /**
     * get 源数据库的网络类型 PublicAccess 和 RDS
     *
     * @return
     */
    public String getNetworkType() {
        return networkType;
    }

    /**
     * set 源数据库的网络类型 PublicAccess 和 RDS
     *
     * @param networkType
     */
    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    /**
     * get 源数据库的端口
     *
     * @return
     */
    public Integer getPort() {
        return port;
    }

    /**
     * set 源数据库的端口
     *
     * @param port
     */
    public void setPort(Integer port) {
        this.port = port;
    }

    /**
     * get 备份代理的ID，仅初始化时可设置，设置完成并开始备份后，不可修改
     *
     * @return
     */
    public String getBackupAgentId() {
        return backupAgentId;
    }

    /**
     * set 备份代理的ID，仅初始化时可设置，设置完成并开始备份后，不可修改
     *
     * @param backupAgentId
     */
    public void setBackupAgentId(String backupAgentId) {
        this.backupAgentId = backupAgentId;
    }

    /**
     * get 源数据库的账号
     *
     * @return
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * set 源数据库的账号
     *
     * @param accountName
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * get 源数据库的密码
     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 源数据库的密码
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * get 不同数据库引擎独有的配置参数
     *
     * @return
     */
    public EngineRelatedConfig getEngineRelatedConfig() {
        return engineRelatedConfig;
    }

    /**
     * set 不同数据库引擎独有的配置参数
     *
     * @param engineRelatedConfig
     */
    public void setEngineRelatedConfig(EngineRelatedConfig engineRelatedConfig) {
        this.engineRelatedConfig = engineRelatedConfig;
    }


    /**
     * set 源数据库的网络类型 PublicAccess 和 RDS
     *
     * @param networkType
     */
    public SourceEndpoint networkType(String networkType) {
        this.networkType = networkType;
        return this;
    }

    /**
     * set 源数据库的端口
     *
     * @param port
     */
    public SourceEndpoint port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * set 备份代理的ID，仅初始化时可设置，设置完成并开始备份后，不可修改
     *
     * @param backupAgentId
     */
    public SourceEndpoint backupAgentId(String backupAgentId) {
        this.backupAgentId = backupAgentId;
        return this;
    }

    /**
     * set 源数据库的账号
     *
     * @param accountName
     */
    public SourceEndpoint accountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * set 源数据库的密码
     *
     * @param password
     */
    public SourceEndpoint password(String password) {
        this.password = password;
        return this;
    }

    /**
     * set 不同数据库引擎独有的配置参数
     *
     * @param engineRelatedConfig
     */
    public SourceEndpoint engineRelatedConfig(EngineRelatedConfig engineRelatedConfig) {
        this.engineRelatedConfig = engineRelatedConfig;
        return this;
    }


}