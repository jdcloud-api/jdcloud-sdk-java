/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 渠道合作伙伴管理平台API
 * 欢迎使用京东云渠道合作伙伴 API 服务。 本文档提供的 API 可供渠道合作伙伴使用请求调用的方式来管理客户。渠道合作伙伴 API全新发布，提供更加规范和全面的 API 接口文档，统一的参数风格和公共错误码，统一的 SDK/CLI 版本与 API 文档严格一致，给您带来简单快捷的使用体验；支持全地域就近接入让您更快连接京东云产品。
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.partner.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.partner.model.DeleteFileRequest;
import com.jdcloud.sdk.service.partner.model.DeleteFileResponse;
import com.jdcloud.sdk.service.partner.client.DeleteFileExecutor;
import com.jdcloud.sdk.service.partner.model.ModifyDicDetailRequest;
import com.jdcloud.sdk.service.partner.model.ModifyDicDetailResponse;
import com.jdcloud.sdk.service.partner.client.ModifyDicDetailExecutor;
import com.jdcloud.sdk.service.partner.model.AddCoProductRequest;
import com.jdcloud.sdk.service.partner.model.AddCoProductResponse;
import com.jdcloud.sdk.service.partner.client.AddCoProductExecutor;
import com.jdcloud.sdk.service.partner.model.DescribeCoProductRequest;
import com.jdcloud.sdk.service.partner.model.DescribeCoProductResponse;
import com.jdcloud.sdk.service.partner.client.DescribeCoProductExecutor;
import com.jdcloud.sdk.service.partner.model.DescribeCustomerBillByProductRequest;
import com.jdcloud.sdk.service.partner.model.DescribeCustomerBillByProductResponse;
import com.jdcloud.sdk.service.partner.client.DescribeCustomerBillByProductExecutor;
import com.jdcloud.sdk.service.partner.model.DescribePartnerBillsRequest;
import com.jdcloud.sdk.service.partner.model.DescribePartnerBillsResponse;
import com.jdcloud.sdk.service.partner.client.DescribePartnerBillsExecutor;
import com.jdcloud.sdk.service.partner.model.ExportCoProductsRequest;
import com.jdcloud.sdk.service.partner.model.ExportCoProductsResponse;
import com.jdcloud.sdk.service.partner.client.ExportCoProductsExecutor;
import com.jdcloud.sdk.service.partner.model.AddContractRequest;
import com.jdcloud.sdk.service.partner.model.AddContractResponse;
import com.jdcloud.sdk.service.partner.client.AddContractExecutor;
import com.jdcloud.sdk.service.partner.model.GetEachConsumptionRequest;
import com.jdcloud.sdk.service.partner.model.GetEachConsumptionResponse;
import com.jdcloud.sdk.service.partner.client.GetEachConsumptionExecutor;
import com.jdcloud.sdk.service.partner.model.DescribeCoProductsRequest;
import com.jdcloud.sdk.service.partner.model.DescribeCoProductsResponse;
import com.jdcloud.sdk.service.partner.client.DescribeCoProductsExecutor;
import com.jdcloud.sdk.service.partner.model.GetTotalConsumptionRequest;
import com.jdcloud.sdk.service.partner.model.GetTotalConsumptionResponse;
import com.jdcloud.sdk.service.partner.client.GetTotalConsumptionExecutor;
import com.jdcloud.sdk.service.partner.model.GetPartnerUserListRequest;
import com.jdcloud.sdk.service.partner.model.GetPartnerUserListResponse;
import com.jdcloud.sdk.service.partner.client.GetPartnerUserListExecutor;
import com.jdcloud.sdk.service.partner.model.ModifyCoProductRequest;
import com.jdcloud.sdk.service.partner.model.ModifyCoProductResponse;
import com.jdcloud.sdk.service.partner.client.ModifyCoProductExecutor;
import com.jdcloud.sdk.service.partner.model.QueryMyCustomerListRequest;
import com.jdcloud.sdk.service.partner.model.QueryMyCustomerListResponse;
import com.jdcloud.sdk.service.partner.client.QueryMyCustomerListExecutor;
import com.jdcloud.sdk.service.partner.model.ModifyContractRequest;
import com.jdcloud.sdk.service.partner.model.ModifyContractResponse;
import com.jdcloud.sdk.service.partner.client.ModifyContractExecutor;

/**
 * partnerClient
 */
public class PartnerClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.11";
    public final static String DefaultEndpoint = "partner.jdcloud-api.com";
    public final static String ServiceName = "partner";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private PartnerClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 删除合同附件
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteFileResponse deleteFile(DeleteFileRequest request) throws JdcloudSdkException {
        return new DeleteFileExecutor().client(this).execute(request);
    }

    /**
     * 编辑字典
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyDicDetailResponse modifyDicDetail(ModifyDicDetailRequest request) throws JdcloudSdkException {
        return new ModifyDicDetailExecutor().client(this).execute(request);
    }

    /**
     * 添加合作产品
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddCoProductResponse addCoProduct(AddCoProductRequest request) throws JdcloudSdkException {
        return new AddCoProductExecutor().client(this).execute(request);
    }

    /**
     * 合作产品详情
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCoProductResponse describeCoProduct(DescribeCoProductRequest request) throws JdcloudSdkException {
        return new DescribeCoProductExecutor().client(this).execute(request);
    }

    /**
     * 查询服务商相关pin下每个产品的消费数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCustomerBillByProductResponse describeCustomerBillByProduct(DescribeCustomerBillByProductRequest request) throws JdcloudSdkException {
        return new DescribeCustomerBillByProductExecutor().client(this).execute(request);
    }

    /**
     * 获取伙伴账单
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribePartnerBillsResponse describePartnerBills(DescribePartnerBillsRequest request) throws JdcloudSdkException {
        return new DescribePartnerBillsExecutor().client(this).execute(request);
    }

    /**
     * 合作产品列表导出
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ExportCoProductsResponse exportCoProducts(ExportCoProductsRequest request) throws JdcloudSdkException {
        return new ExportCoProductsExecutor().client(this).execute(request);
    }

    /**
     * 添加合同信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddContractResponse addContract(AddContractRequest request) throws JdcloudSdkException {
        return new AddContractExecutor().client(this).execute(request);
    }

    /**
     * 查询服务商下每个客户总消费数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetEachConsumptionResponse getEachConsumption(GetEachConsumptionRequest request) throws JdcloudSdkException {
        return new GetEachConsumptionExecutor().client(this).execute(request);
    }

    /**
     * 查询合作产品列表
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCoProductsResponse describeCoProducts(DescribeCoProductsRequest request) throws JdcloudSdkException {
        return new DescribeCoProductsExecutor().client(this).execute(request);
    }

    /**
     * 查询服务商相关的总消费数据
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetTotalConsumptionResponse getTotalConsumption(GetTotalConsumptionRequest request) throws JdcloudSdkException {
        return new GetTotalConsumptionExecutor().client(this).execute(request);
    }

    /**
     * 查询渠道用户信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetPartnerUserListResponse getPartnerUserList(GetPartnerUserListRequest request) throws JdcloudSdkException {
        return new GetPartnerUserListExecutor().client(this).execute(request);
    }

    /**
     * 编辑合作产品
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyCoProductResponse modifyCoProduct(ModifyCoProductRequest request) throws JdcloudSdkException {
        return new ModifyCoProductExecutor().client(this).execute(request);
    }

    /**
     * 查询客户信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public QueryMyCustomerListResponse queryMyCustomerList(QueryMyCustomerListRequest request) throws JdcloudSdkException {
        return new QueryMyCustomerListExecutor().client(this).execute(request);
    }

    /**
     * 编辑合同信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyContractResponse modifyContract(ModifyContractRequest request) throws JdcloudSdkException {
        return new ModifyContractExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public PartnerClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private PartnerClient partnerClient;

        public DefaultBuilder() {
            partnerClient = new PartnerClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            partnerClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            partnerClient.httpRequestConfig = config;
            return this;
        }

        public PartnerClient build() throws JdcloudSdkException {

            if (partnerClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                partnerClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (partnerClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("PartnerClient build error: jdcloud credentials provider not set");
                }
            }
            if (partnerClient.httpRequestConfig == null) {
                partnerClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (partnerClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("PartnerClient build error: http request config not set");
                }
            }
            return partnerClient;
        }

        public Builder environment(Environment environment) {
            partnerClient.environment = environment;
            return this;
        }
    }
}
