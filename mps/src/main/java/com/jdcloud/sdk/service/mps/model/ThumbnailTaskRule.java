/*
 * Copyright 2018-2025 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 媒体处理相关接口
 * 媒体处理API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.mps.model;


/**
 * 视频截图规则参数
 */
public class ThumbnailTaskRule  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 截图模式 单张: single 多张: multi 平均: average default: single
     */
    private String mode;

    /**
     * 是否开启关键帧截图 default: true
     */
    private Boolean keyFrame;

    /**
     * 生成截图的开始时间, mode&#x3D;average 时不可选. default:0
     */
    private Integer startTimeInSecond;

    /**
     * 生成截图的结束时间, mode&#x3D;single/average时不可选, 且不得小于startTimeInSecond. default:-1(代表视频时长)
     */
    private Integer endTimeInSecond;

    /**
     * 截图数量, mode&#x3D;single时不可选. default:1
     */
    private Integer count;


    /**
     * get 截图模式 单张: single 多张: multi 平均: average default: single
     *
     * @return
     */
    public String getMode() {
        return mode;
    }

    /**
     * set 截图模式 单张: single 多张: multi 平均: average default: single
     *
     * @param mode
     */
    public void setMode(String mode) {
        this.mode = mode;
    }

    /**
     * get 是否开启关键帧截图 default: true
     *
     * @return
     */
    public Boolean getKeyFrame() {
        return keyFrame;
    }

    /**
     * set 是否开启关键帧截图 default: true
     *
     * @param keyFrame
     */
    public void setKeyFrame(Boolean keyFrame) {
        this.keyFrame = keyFrame;
    }

    /**
     * get 生成截图的开始时间, mode&#x3D;average 时不可选. default:0
     *
     * @return
     */
    public Integer getStartTimeInSecond() {
        return startTimeInSecond;
    }

    /**
     * set 生成截图的开始时间, mode&#x3D;average 时不可选. default:0
     *
     * @param startTimeInSecond
     */
    public void setStartTimeInSecond(Integer startTimeInSecond) {
        this.startTimeInSecond = startTimeInSecond;
    }

    /**
     * get 生成截图的结束时间, mode&#x3D;single/average时不可选, 且不得小于startTimeInSecond. default:-1(代表视频时长)
     *
     * @return
     */
    public Integer getEndTimeInSecond() {
        return endTimeInSecond;
    }

    /**
     * set 生成截图的结束时间, mode&#x3D;single/average时不可选, 且不得小于startTimeInSecond. default:-1(代表视频时长)
     *
     * @param endTimeInSecond
     */
    public void setEndTimeInSecond(Integer endTimeInSecond) {
        this.endTimeInSecond = endTimeInSecond;
    }

    /**
     * get 截图数量, mode&#x3D;single时不可选. default:1
     *
     * @return
     */
    public Integer getCount() {
        return count;
    }

    /**
     * set 截图数量, mode&#x3D;single时不可选. default:1
     *
     * @param count
     */
    public void setCount(Integer count) {
        this.count = count;
    }


    /**
     * set 截图模式 单张: single 多张: multi 平均: average default: single
     *
     * @param mode
     */
    public ThumbnailTaskRule mode(String mode) {
        this.mode = mode;
        return this;
    }

    /**
     * set 是否开启关键帧截图 default: true
     *
     * @param keyFrame
     */
    public ThumbnailTaskRule keyFrame(Boolean keyFrame) {
        this.keyFrame = keyFrame;
        return this;
    }

    /**
     * set 生成截图的开始时间, mode&#x3D;average 时不可选. default:0
     *
     * @param startTimeInSecond
     */
    public ThumbnailTaskRule startTimeInSecond(Integer startTimeInSecond) {
        this.startTimeInSecond = startTimeInSecond;
        return this;
    }

    /**
     * set 生成截图的结束时间, mode&#x3D;single/average时不可选, 且不得小于startTimeInSecond. default:-1(代表视频时长)
     *
     * @param endTimeInSecond
     */
    public ThumbnailTaskRule endTimeInSecond(Integer endTimeInSecond) {
        this.endTimeInSecond = endTimeInSecond;
        return this;
    }

    /**
     * set 截图数量, mode&#x3D;single时不可选. default:1
     *
     * @param count
     */
    public ThumbnailTaskRule count(Integer count) {
        this.count = count;
        return this;
    }


}