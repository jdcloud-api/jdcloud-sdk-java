/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Trigger
 * Trigger 相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.fc.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.fc.model.TriggerSpec;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 创建触发器。
目前支持的触发器类型有：
- oss

## 注意事项
- 一个函数下最多同时存在10个触发器。
- oss类型触发器会在对应的bucket中添加一个事件通知，若该bucket中已存在相同事件类型的事件通知，触发器可能无法生效。
- 创建多个相同类型的oss触发器，当对应的事件发生时，只有一个触发器会被调用。
- 若人为修改或删除了bucket中的事件通知，可能导致oss触发器失效。

 */
public class CreateTriggerRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 触发器创建参数
     * Required:true
     */
    @Required
    private TriggerSpec triggerSpec;

    /**
     * 地域ID。
     * Required:true
     */
    @Required
    private String regionId;

    /**
     * 服务名称。
     * Required:true
     */
    @Required
    private String serviceName;

    /**
     * 函数名称。
     * Required:true
     */
    @Required
    private String functionName;



    /**
     * get 触发器创建参数
     *
     * @return
     */
    public TriggerSpec getTriggerSpec() {
        return triggerSpec;
    }

    /**
     * set 触发器创建参数
     *
     * @param triggerSpec
     */
    public void setTriggerSpec(TriggerSpec triggerSpec) {
        this.triggerSpec = triggerSpec;
    }


    /**
     * get 地域ID。
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get 服务名称。
     *
     * @return
     */
    public String getServiceName() {
        return serviceName;
    }

    /**
     * set 服务名称。
     *
     * @param serviceName
     */
    public void setServiceName(String serviceName) {
        this.serviceName = serviceName;
    }


    /**
     * get 函数名称。
     *
     * @return
     */
    public String getFunctionName() {
        return functionName;
    }

    /**
     * set 函数名称。
     *
     * @param functionName
     */
    public void setFunctionName(String functionName) {
        this.functionName = functionName;
    }



    /**
     * set 触发器创建参数
     *
     * @param triggerSpec
     */
    public CreateTriggerRequest triggerSpec(TriggerSpec triggerSpec) {
        this.triggerSpec = triggerSpec;
        return this;
    }


    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public CreateTriggerRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set 服务名称。
     *
     * @param serviceName
     */
    public CreateTriggerRequest serviceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }


    /**
     * set 函数名称。
     *
     * @param functionName
     */
    public CreateTriggerRequest functionName(String functionName) {
        this.functionName = functionName;
        return this;
    }


}