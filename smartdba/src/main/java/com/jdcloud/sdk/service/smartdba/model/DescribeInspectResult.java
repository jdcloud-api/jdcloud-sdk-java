/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Inspect-Diagnose
 * 诊断和巡检相关接口
 *
 * OpenAPI spec version: v2
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.smartdba.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.smartdba.model.SystemView;
import com.jdcloud.sdk.service.smartdba.model.ConnectView;
import com.jdcloud.sdk.service.smartdba.model.EngineView;
import com.jdcloud.sdk.service.smartdba.model.SchemaView;
import com.jdcloud.sdk.service.smartdba.model.DiskView;
import com.jdcloud.sdk.service.smartdba.model.SlowLowView;
import com.jdcloud.sdk.service.smartdba.model.KV;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 获取巡检记录
 */
public class DescribeInspectResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 巡检分值
     */
    private Integer score;

    /**
     * 巡检范围的起始时间，如：2021-11-09T00:00:00Z
     */
    private String beginTime;

    /**
     * 巡检范围的截至时间，如：2021-11-09T23:59:59Z
     */
    private String endTime;

    /**
     * 资源使用率
     */
    private SystemView systemView;

    /**
     * 连接数
     */
    private ConnectView connectView;

    /**
     * 锁信息
     */
    private EngineView engineView;

    /**
     * 库表空间
     */
    private SchemaView schemaView;

    /**
     * 磁盘空间
     */
    private DiskView diskView;

    /**
     * 慢sql
     */
    private SlowLowView slowLowView;

    /**
     * detail
     */
    private List<KV> detail;


    /**
     * get 巡检分值
     *
     * @return
     */
    public Integer getScore() {
        return score;
    }

    /**
     * set 巡检分值
     *
     * @param score
     */
    public void setScore(Integer score) {
        this.score = score;
    }

    /**
     * get 巡检范围的起始时间，如：2021-11-09T00:00:00Z
     *
     * @return
     */
    public String getBeginTime() {
        return beginTime;
    }

    /**
     * set 巡检范围的起始时间，如：2021-11-09T00:00:00Z
     *
     * @param beginTime
     */
    public void setBeginTime(String beginTime) {
        this.beginTime = beginTime;
    }

    /**
     * get 巡检范围的截至时间，如：2021-11-09T23:59:59Z
     *
     * @return
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * set 巡检范围的截至时间，如：2021-11-09T23:59:59Z
     *
     * @param endTime
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    /**
     * get 资源使用率
     *
     * @return
     */
    public SystemView getSystemView() {
        return systemView;
    }

    /**
     * set 资源使用率
     *
     * @param systemView
     */
    public void setSystemView(SystemView systemView) {
        this.systemView = systemView;
    }

    /**
     * get 连接数
     *
     * @return
     */
    public ConnectView getConnectView() {
        return connectView;
    }

    /**
     * set 连接数
     *
     * @param connectView
     */
    public void setConnectView(ConnectView connectView) {
        this.connectView = connectView;
    }

    /**
     * get 锁信息
     *
     * @return
     */
    public EngineView getEngineView() {
        return engineView;
    }

    /**
     * set 锁信息
     *
     * @param engineView
     */
    public void setEngineView(EngineView engineView) {
        this.engineView = engineView;
    }

    /**
     * get 库表空间
     *
     * @return
     */
    public SchemaView getSchemaView() {
        return schemaView;
    }

    /**
     * set 库表空间
     *
     * @param schemaView
     */
    public void setSchemaView(SchemaView schemaView) {
        this.schemaView = schemaView;
    }

    /**
     * get 磁盘空间
     *
     * @return
     */
    public DiskView getDiskView() {
        return diskView;
    }

    /**
     * set 磁盘空间
     *
     * @param diskView
     */
    public void setDiskView(DiskView diskView) {
        this.diskView = diskView;
    }

    /**
     * get 慢sql
     *
     * @return
     */
    public SlowLowView getSlowLowView() {
        return slowLowView;
    }

    /**
     * set 慢sql
     *
     * @param slowLowView
     */
    public void setSlowLowView(SlowLowView slowLowView) {
        this.slowLowView = slowLowView;
    }

    /**
     * get detail
     *
     * @return
     */
    public List<KV> getDetail() {
        return detail;
    }

    /**
     * set detail
     *
     * @param detail
     */
    public void setDetail(List<KV> detail) {
        this.detail = detail;
    }


    /**
     * set 巡检分值
     *
     * @param score
     */
    public DescribeInspectResult score(Integer score) {
        this.score = score;
        return this;
    }

    /**
     * set 巡检范围的起始时间，如：2021-11-09T00:00:00Z
     *
     * @param beginTime
     */
    public DescribeInspectResult beginTime(String beginTime) {
        this.beginTime = beginTime;
        return this;
    }

    /**
     * set 巡检范围的截至时间，如：2021-11-09T23:59:59Z
     *
     * @param endTime
     */
    public DescribeInspectResult endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * set 资源使用率
     *
     * @param systemView
     */
    public DescribeInspectResult systemView(SystemView systemView) {
        this.systemView = systemView;
        return this;
    }

    /**
     * set 连接数
     *
     * @param connectView
     */
    public DescribeInspectResult connectView(ConnectView connectView) {
        this.connectView = connectView;
        return this;
    }

    /**
     * set 锁信息
     *
     * @param engineView
     */
    public DescribeInspectResult engineView(EngineView engineView) {
        this.engineView = engineView;
        return this;
    }

    /**
     * set 库表空间
     *
     * @param schemaView
     */
    public DescribeInspectResult schemaView(SchemaView schemaView) {
        this.schemaView = schemaView;
        return this;
    }

    /**
     * set 磁盘空间
     *
     * @param diskView
     */
    public DescribeInspectResult diskView(DiskView diskView) {
        this.diskView = diskView;
        return this;
    }

    /**
     * set 慢sql
     *
     * @param slowLowView
     */
    public DescribeInspectResult slowLowView(SlowLowView slowLowView) {
        this.slowLowView = slowLowView;
        return this;
    }

    /**
     * set detail
     *
     * @param detail
     */
    public DescribeInspectResult detail(List<KV> detail) {
        this.detail = detail;
        return this;
    }


    /**
     * add item to detail
     *
     * @param detail
     */
    public void addDetail(KV detail) {
        if (this.detail == null) {
            this.detail = new ArrayList<>();
        }
        this.detail.add(detail);
    }

}