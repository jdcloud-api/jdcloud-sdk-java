/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rocketmq.model;

import java.util.List;
import java.util.ArrayList;

/**
 * nodeSpecConfig
 */
public class NodeSpecConfig  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 节点类型(data)
     */
    private String nodeType;

    /**
     * 指定节点可选的磁盘类型
     */
    
    private List<String> storageType;
    /**
     * 指定节点类型下的各种磁盘配置详情
     */
    
    private List<StorageConfig> storageConfig;


    /**
     * get 节点类型(data)
     *
     * @return
     */
    public String getNodeType() {
        return nodeType;
    }

    /**
     * set 节点类型(data)
     *
     * @param nodeType
     */
    public void setNodeType(String nodeType) {
        this.nodeType = nodeType;
    }


    /**
    * get 指定节点可选的磁盘类型
    *
    * @return
    */
    public List<String> getStorageType() {
        return storageType;
    }

    /**
    * set 指定节点可选的磁盘类型
    *
    * @param storageType
    */
    public void setStorageType(List<String> storageType) {
        this.storageType = storageType;
    }


    /**
    * get 指定节点类型下的各种磁盘配置详情
    *
    * @return
    */
    public List<StorageConfig> getStorageConfig() {
        return storageConfig;
    }

    /**
    * set 指定节点类型下的各种磁盘配置详情
    *
    * @param storageConfig
    */
    public void setStorageConfig(List<StorageConfig> storageConfig) {
        this.storageConfig = storageConfig;
    }



    /**
     * set 节点类型(data)
     *
     * @param nodeType
     */
    public NodeSpecConfig nodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }


    /**
    * set 指定节点可选的磁盘类型
    *
    * @param storageType
    */
    public NodeSpecConfig storageType(List<String> storageType) {
        this.storageType = storageType;
        return this;
    }


    /**
    * set 指定节点类型下的各种磁盘配置详情
    *
    * @param storageConfig
    */
    public NodeSpecConfig storageConfig(List<StorageConfig> storageConfig) {
        this.storageConfig = storageConfig;
        return this;
    }



    /**
     * add item to 指定节点可选的磁盘类型
     *
     * @param storageType
     */
    public void addStorageType(String storageType) {
        if (this.storageType == null) {
            this.storageType = new ArrayList<>();
        }
        this.storageType.add(storageType);
    }

    /**
     * add item to 指定节点类型下的各种磁盘配置详情
     *
     * @param storageConfig
     */
    public void addStorageConfig(StorageConfig storageConfig) {
        if (this.storageConfig == null) {
            this.storageConfig = new ArrayList<>();
        }
        this.storageConfig.add(storageConfig);
    }
}