/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.rocketmq.model;


/**
 * taskListItem
 */
public class TaskListItem  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 任务ID
     */
    private Integer taskId;

    /**
     * 任务的开始时间(包括变配, 创建, 重启等任务), 时间格式 2022-07-04T09:55:20Z
     */
    private String taskStartTime;

    /**
     * 任务类型(包括但不限于创建、变配、重启 等任务), 用于前端展示使用
     */
    private String taskType;

    /**
     * 任务类型, 是数字枚举类型, 用于查询过滤条件
     */
    private Integer taskOpType;

    /**
     * 任务执行人(主账户)
     */
    private String user;

    /**
     * 任务执行人(子用户)
     */
    private String subUser;

    /**
     * 任务的执行状态
init - 初始化, 代表任务刚初始化, 待调度运行。中间态, 允许中断
executing - 执行中, 代表任务被调度执行。 中间态, 允许中断
succ - 执行成功。 终止态, 任务运行完成
fail - 执行失败。 终止态
error - 执行出错。 中间态, 允许重试

     */
    private String taskStatus;

    /**
     * 0-100 正整数，任务进度条
     */
    private Integer taskProgress;

    /**
     * 任务的持续运行时间，单位为s（秒）；如果任务成功则返回0
     */
    private Integer taskTimeConsuming;

    /**
     * 标志任务的持续运行时间(taskTimeConsuming)是否还会继续增加。
     */
    private Boolean isTaskTimeConsumeContinueIncrease;

    /**
     * taskStatus&#x3D;&#x3D;error时, 展示错误信息
     */
    private String taskErrorInfo;

    /**
     * 任务的结束时间（包括变配、创建、重启等任务），时间格式 2022-07-04T09:55:20Z
     */
    private String taskEndTime;

    /**
     * 任务是否可以中断, 任务状态从 executing &#x3D;&gt; fail, error &#x3D;&gt; fail, init &#x3D;&gt; fail
     */
    private Boolean canInterruptTask;

    /**
     * 任务是否可以重试, 任务状态从 error &#x3D;&gt; executing
     */
    private Boolean canRetryTask;

    /**
     * 任务关联的实例ID
     */
    private String instanceId;

    /**
     * 地域
     */
    private String regionId;



    /**
     * get 任务ID
     *
     * @return
     */
    public Integer getTaskId() {
        return taskId;
    }

    /**
     * set 任务ID
     *
     * @param taskId
     */
    public void setTaskId(Integer taskId) {
        this.taskId = taskId;
    }


    /**
     * get 任务的开始时间(包括变配, 创建, 重启等任务), 时间格式 2022-07-04T09:55:20Z
     *
     * @return
     */
    public String getTaskStartTime() {
        return taskStartTime;
    }

    /**
     * set 任务的开始时间(包括变配, 创建, 重启等任务), 时间格式 2022-07-04T09:55:20Z
     *
     * @param taskStartTime
     */
    public void setTaskStartTime(String taskStartTime) {
        this.taskStartTime = taskStartTime;
    }


    /**
     * get 任务类型(包括但不限于创建、变配、重启 等任务), 用于前端展示使用
     *
     * @return
     */
    public String getTaskType() {
        return taskType;
    }

    /**
     * set 任务类型(包括但不限于创建、变配、重启 等任务), 用于前端展示使用
     *
     * @param taskType
     */
    public void setTaskType(String taskType) {
        this.taskType = taskType;
    }


    /**
     * get 任务类型, 是数字枚举类型, 用于查询过滤条件
     *
     * @return
     */
    public Integer getTaskOpType() {
        return taskOpType;
    }

    /**
     * set 任务类型, 是数字枚举类型, 用于查询过滤条件
     *
     * @param taskOpType
     */
    public void setTaskOpType(Integer taskOpType) {
        this.taskOpType = taskOpType;
    }


    /**
     * get 任务执行人(主账户)
     *
     * @return
     */
    public String getUser() {
        return user;
    }

    /**
     * set 任务执行人(主账户)
     *
     * @param user
     */
    public void setUser(String user) {
        this.user = user;
    }


    /**
     * get 任务执行人(子用户)
     *
     * @return
     */
    public String getSubUser() {
        return subUser;
    }

    /**
     * set 任务执行人(子用户)
     *
     * @param subUser
     */
    public void setSubUser(String subUser) {
        this.subUser = subUser;
    }


    /**
     * get 任务的执行状态
init - 初始化, 代表任务刚初始化, 待调度运行。中间态, 允许中断
executing - 执行中, 代表任务被调度执行。 中间态, 允许中断
succ - 执行成功。 终止态, 任务运行完成
fail - 执行失败。 终止态
error - 执行出错。 中间态, 允许重试

     *
     * @return
     */
    public String getTaskStatus() {
        return taskStatus;
    }

    /**
     * set 任务的执行状态
init - 初始化, 代表任务刚初始化, 待调度运行。中间态, 允许中断
executing - 执行中, 代表任务被调度执行。 中间态, 允许中断
succ - 执行成功。 终止态, 任务运行完成
fail - 执行失败。 终止态
error - 执行出错。 中间态, 允许重试

     *
     * @param taskStatus
     */
    public void setTaskStatus(String taskStatus) {
        this.taskStatus = taskStatus;
    }


    /**
     * get 0-100 正整数，任务进度条
     *
     * @return
     */
    public Integer getTaskProgress() {
        return taskProgress;
    }

    /**
     * set 0-100 正整数，任务进度条
     *
     * @param taskProgress
     */
    public void setTaskProgress(Integer taskProgress) {
        this.taskProgress = taskProgress;
    }


    /**
     * get 任务的持续运行时间，单位为s（秒）；如果任务成功则返回0
     *
     * @return
     */
    public Integer getTaskTimeConsuming() {
        return taskTimeConsuming;
    }

    /**
     * set 任务的持续运行时间，单位为s（秒）；如果任务成功则返回0
     *
     * @param taskTimeConsuming
     */
    public void setTaskTimeConsuming(Integer taskTimeConsuming) {
        this.taskTimeConsuming = taskTimeConsuming;
    }


    /**
     * get 标志任务的持续运行时间(taskTimeConsuming)是否还会继续增加。
     *
     * @return
     */
    public Boolean getIsTaskTimeConsumeContinueIncrease() {
        return isTaskTimeConsumeContinueIncrease;
    }

    /**
     * set 标志任务的持续运行时间(taskTimeConsuming)是否还会继续增加。
     *
     * @param isTaskTimeConsumeContinueIncrease
     */
    public void setIsTaskTimeConsumeContinueIncrease(Boolean isTaskTimeConsumeContinueIncrease) {
        this.isTaskTimeConsumeContinueIncrease = isTaskTimeConsumeContinueIncrease;
    }


    /**
     * get taskStatus&#x3D;&#x3D;error时, 展示错误信息
     *
     * @return
     */
    public String getTaskErrorInfo() {
        return taskErrorInfo;
    }

    /**
     * set taskStatus&#x3D;&#x3D;error时, 展示错误信息
     *
     * @param taskErrorInfo
     */
    public void setTaskErrorInfo(String taskErrorInfo) {
        this.taskErrorInfo = taskErrorInfo;
    }


    /**
     * get 任务的结束时间（包括变配、创建、重启等任务），时间格式 2022-07-04T09:55:20Z
     *
     * @return
     */
    public String getTaskEndTime() {
        return taskEndTime;
    }

    /**
     * set 任务的结束时间（包括变配、创建、重启等任务），时间格式 2022-07-04T09:55:20Z
     *
     * @param taskEndTime
     */
    public void setTaskEndTime(String taskEndTime) {
        this.taskEndTime = taskEndTime;
    }


    /**
     * get 任务是否可以中断, 任务状态从 executing &#x3D;&gt; fail, error &#x3D;&gt; fail, init &#x3D;&gt; fail
     *
     * @return
     */
    public Boolean getCanInterruptTask() {
        return canInterruptTask;
    }

    /**
     * set 任务是否可以中断, 任务状态从 executing &#x3D;&gt; fail, error &#x3D;&gt; fail, init &#x3D;&gt; fail
     *
     * @param canInterruptTask
     */
    public void setCanInterruptTask(Boolean canInterruptTask) {
        this.canInterruptTask = canInterruptTask;
    }


    /**
     * get 任务是否可以重试, 任务状态从 error &#x3D;&gt; executing
     *
     * @return
     */
    public Boolean getCanRetryTask() {
        return canRetryTask;
    }

    /**
     * set 任务是否可以重试, 任务状态从 error &#x3D;&gt; executing
     *
     * @param canRetryTask
     */
    public void setCanRetryTask(Boolean canRetryTask) {
        this.canRetryTask = canRetryTask;
    }


    /**
     * get 任务关联的实例ID
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 任务关联的实例ID
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 地域
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 任务ID
     *
     * @param taskId
     */
    public TaskListItem taskId(Integer taskId) {
        this.taskId = taskId;
        return this;
    }


    /**
     * set 任务的开始时间(包括变配, 创建, 重启等任务), 时间格式 2022-07-04T09:55:20Z
     *
     * @param taskStartTime
     */
    public TaskListItem taskStartTime(String taskStartTime) {
        this.taskStartTime = taskStartTime;
        return this;
    }


    /**
     * set 任务类型(包括但不限于创建、变配、重启 等任务), 用于前端展示使用
     *
     * @param taskType
     */
    public TaskListItem taskType(String taskType) {
        this.taskType = taskType;
        return this;
    }


    /**
     * set 任务类型, 是数字枚举类型, 用于查询过滤条件
     *
     * @param taskOpType
     */
    public TaskListItem taskOpType(Integer taskOpType) {
        this.taskOpType = taskOpType;
        return this;
    }


    /**
     * set 任务执行人(主账户)
     *
     * @param user
     */
    public TaskListItem user(String user) {
        this.user = user;
        return this;
    }


    /**
     * set 任务执行人(子用户)
     *
     * @param subUser
     */
    public TaskListItem subUser(String subUser) {
        this.subUser = subUser;
        return this;
    }


    /**
     * set 任务的执行状态
init - 初始化, 代表任务刚初始化, 待调度运行。中间态, 允许中断
executing - 执行中, 代表任务被调度执行。 中间态, 允许中断
succ - 执行成功。 终止态, 任务运行完成
fail - 执行失败。 终止态
error - 执行出错。 中间态, 允许重试

     *
     * @param taskStatus
     */
    public TaskListItem taskStatus(String taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }


    /**
     * set 0-100 正整数，任务进度条
     *
     * @param taskProgress
     */
    public TaskListItem taskProgress(Integer taskProgress) {
        this.taskProgress = taskProgress;
        return this;
    }


    /**
     * set 任务的持续运行时间，单位为s（秒）；如果任务成功则返回0
     *
     * @param taskTimeConsuming
     */
    public TaskListItem taskTimeConsuming(Integer taskTimeConsuming) {
        this.taskTimeConsuming = taskTimeConsuming;
        return this;
    }


    /**
     * set 标志任务的持续运行时间(taskTimeConsuming)是否还会继续增加。
     *
     * @param isTaskTimeConsumeContinueIncrease
     */
    public TaskListItem isTaskTimeConsumeContinueIncrease(Boolean isTaskTimeConsumeContinueIncrease) {
        this.isTaskTimeConsumeContinueIncrease = isTaskTimeConsumeContinueIncrease;
        return this;
    }


    /**
     * set taskStatus&#x3D;&#x3D;error时, 展示错误信息
     *
     * @param taskErrorInfo
     */
    public TaskListItem taskErrorInfo(String taskErrorInfo) {
        this.taskErrorInfo = taskErrorInfo;
        return this;
    }


    /**
     * set 任务的结束时间（包括变配、创建、重启等任务），时间格式 2022-07-04T09:55:20Z
     *
     * @param taskEndTime
     */
    public TaskListItem taskEndTime(String taskEndTime) {
        this.taskEndTime = taskEndTime;
        return this;
    }


    /**
     * set 任务是否可以中断, 任务状态从 executing &#x3D;&gt; fail, error &#x3D;&gt; fail, init &#x3D;&gt; fail
     *
     * @param canInterruptTask
     */
    public TaskListItem canInterruptTask(Boolean canInterruptTask) {
        this.canInterruptTask = canInterruptTask;
        return this;
    }


    /**
     * set 任务是否可以重试, 任务状态从 error &#x3D;&gt; executing
     *
     * @param canRetryTask
     */
    public TaskListItem canRetryTask(Boolean canRetryTask) {
        this.canRetryTask = canRetryTask;
        return this;
    }


    /**
     * set 任务关联的实例ID
     *
     * @param instanceId
     */
    public TaskListItem instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 地域
     *
     * @param regionId
     */
    public TaskListItem regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


}