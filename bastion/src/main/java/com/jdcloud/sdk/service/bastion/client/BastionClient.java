/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 堡垒机
 * 堡垒机相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.bastion.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.bastion.model.UpdateBastionDescRequest;
import com.jdcloud.sdk.service.bastion.model.UpdateBastionDescResponse;
import com.jdcloud.sdk.service.bastion.client.UpdateBastionDescExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribeSignRequest;
import com.jdcloud.sdk.service.bastion.model.DescribeSignResponse;
import com.jdcloud.sdk.service.bastion.client.DescribeSignExecutor;
import com.jdcloud.sdk.service.bastion.model.SetInstanceZeroEnableRequest;
import com.jdcloud.sdk.service.bastion.model.SetInstanceZeroEnableResponse;
import com.jdcloud.sdk.service.bastion.client.SetInstanceZeroEnableExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribePinsRequest;
import com.jdcloud.sdk.service.bastion.model.DescribePinsResponse;
import com.jdcloud.sdk.service.bastion.client.DescribePinsExecutor;
import com.jdcloud.sdk.service.bastion.model.SetInstancePublicAccessRequest;
import com.jdcloud.sdk.service.bastion.model.SetInstancePublicAccessResponse;
import com.jdcloud.sdk.service.bastion.client.SetInstancePublicAccessExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribeBastionsRequest;
import com.jdcloud.sdk.service.bastion.model.DescribeBastionsResponse;
import com.jdcloud.sdk.service.bastion.client.DescribeBastionsExecutor;
import com.jdcloud.sdk.service.bastion.model.ModifyInstanceExpireOrStartRequest;
import com.jdcloud.sdk.service.bastion.model.ModifyInstanceExpireOrStartResponse;
import com.jdcloud.sdk.service.bastion.client.ModifyInstanceExpireOrStartExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribeSourceIdRequest;
import com.jdcloud.sdk.service.bastion.model.DescribeSourceIdResponse;
import com.jdcloud.sdk.service.bastion.client.DescribeSourceIdExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribeBastionRequest;
import com.jdcloud.sdk.service.bastion.model.DescribeBastionResponse;
import com.jdcloud.sdk.service.bastion.client.DescribeBastionExecutor;
import com.jdcloud.sdk.service.bastion.model.ModifyInstanceSpecRequest;
import com.jdcloud.sdk.service.bastion.model.ModifyInstanceSpecResponse;
import com.jdcloud.sdk.service.bastion.client.ModifyInstanceSpecExecutor;
import com.jdcloud.sdk.service.bastion.model.DescribeInstanceRequest;
import com.jdcloud.sdk.service.bastion.model.DescribeInstanceResponse;
import com.jdcloud.sdk.service.bastion.client.DescribeInstanceExecutor;
import com.jdcloud.sdk.service.bastion.model.CreateInstanceRequest;
import com.jdcloud.sdk.service.bastion.model.CreateInstanceResponse;
import com.jdcloud.sdk.service.bastion.client.CreateInstanceExecutor;
import com.jdcloud.sdk.service.bastion.model.DeleteInstanceRequest;
import com.jdcloud.sdk.service.bastion.model.DeleteInstanceResponse;
import com.jdcloud.sdk.service.bastion.client.DeleteInstanceExecutor;

/**
 * bastionClient
 */
public class BastionClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.9";
    public final static String DefaultEndpoint = "bastion.jdcloud-api.com";
    public final static String ServiceName = "bastion";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private BastionClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 更新堡垒机实例的描述信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateBastionDescResponse updateBastionDesc(UpdateBastionDescRequest request) throws JdcloudSdkException {
        return new UpdateBastionDescExecutor().client(this).execute(request);
    }

    /**
     * 获取加密sign
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSignResponse describeSign(DescribeSignRequest request) throws JdcloudSdkException {
        return new DescribeSignExecutor().client(this).execute(request);
    }

    /**
     * 开关零信任功能
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstanceZeroEnableResponse setInstanceZeroEnable(SetInstanceZeroEnableRequest request) throws JdcloudSdkException {
        return new SetInstanceZeroEnableExecutor().client(this).execute(request);
    }

    /**
     * 获取堡垒机有效信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribePinsResponse describePins(DescribePinsRequest request) throws JdcloudSdkException {
        return new DescribePinsExecutor().client(this).execute(request);
    }

    /**
     * 设置公网IP状态，true为开放，false为关闭
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SetInstancePublicAccessResponse setInstancePublicAccess(SetInstancePublicAccessRequest request) throws JdcloudSdkException {
        return new SetInstancePublicAccessExecutor().client(this).execute(request);
    }

    /**
     * 批量查询堡垒机的信息，此接口支持分页查询，默认每页20条
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBastionsResponse describeBastions(DescribeBastionsRequest request) throws JdcloudSdkException {
        return new DescribeBastionsExecutor().client(this).execute(request);
    }

    /**
     * 变更实例到期或者恢复实例服务

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceExpireOrStartResponse modifyInstanceExpireOrStart(ModifyInstanceExpireOrStartRequest request) throws JdcloudSdkException {
        return new ModifyInstanceExpireOrStartExecutor().client(this).execute(request);
    }

    /**
     * 查询一个堡垒机的信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeSourceIdResponse describeSourceId(DescribeSourceIdRequest request) throws JdcloudSdkException {
        return new DescribeSourceIdExecutor().client(this).execute(request);
    }

    /**
     * 查询一个堡垒机的信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeBastionResponse describeBastion(DescribeBastionRequest request) throws JdcloudSdkException {
        return new DescribeBastionExecutor().client(this).execute(request);
    }

    /**
     * 变更实例的配置,目前只允许升配

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ModifyInstanceSpecResponse modifyInstanceSpec(ModifyInstanceSpecRequest request) throws JdcloudSdkException {
        return new ModifyInstanceSpecExecutor().client(this).execute(request);
    }

    /**
     * 查询一个堡垒机的信息
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInstanceResponse describeInstance(DescribeInstanceRequest request) throws JdcloudSdkException {
        return new DescribeInstanceExecutor().client(this).execute(request);
    }

    /**
     * 创建指定配置实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateInstanceResponse createInstance(CreateInstanceRequest request) throws JdcloudSdkException {
        return new CreateInstanceExecutor().client(this).execute(request);
    }

    /**
     * 删除实例
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteInstanceResponse deleteInstance(DeleteInstanceRequest request) throws JdcloudSdkException {
        return new DeleteInstanceExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public BastionClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private BastionClient bastionClient;

        public DefaultBuilder() {
            bastionClient = new BastionClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            bastionClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            bastionClient.httpRequestConfig = config;
            return this;
        }

        public BastionClient build() throws JdcloudSdkException {

            if (bastionClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                bastionClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (bastionClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("BastionClient build error: jdcloud credentials provider not set");
                }
            }
            if (bastionClient.httpRequestConfig == null) {
                bastionClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (bastionClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("BastionClient build error: http request config not set");
                }
            }
            return bastionClient;
        }

        public Builder environment(Environment environment) {
            bastionClient.environment = environment;
            return this;
        }
    }
}
