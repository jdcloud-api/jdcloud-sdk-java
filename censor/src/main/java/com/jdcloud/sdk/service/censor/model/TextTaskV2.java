/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;


/**
 * textTaskV2
 */
public class TextTaskV2  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据唯一标识，能够根据该值定位到该条数据
     */
    private String dataId;

    /**
     * 待检测文本，最长10000个字符, 用户发表内容，建议对内容中JSON、表情符、HTML标签、UBB标签等做过滤，只传递纯文本，以减少误判概率。请注意为了检测效果和性能，如果该字段长度超过10000字符，会截取前面10000字符进行检测和存储。该字段不能为空，如果为空会返回参数错误。
     */
    private String content;

    /**
     * 内容标题，适用于贴子、博客的文章标题等场景，建议抄送，辅助机审策略精准调优
     */
    private String title;

    /**
     * 子数据类型
     */
    private Integer dataType;

    /**
     * 数据回调参数，调用方根据业务情况自行设计，当调用文本离线结果获取接口时，该接口会原样返回该字段，详细见文本离线检测结果获取。作为数据处理标识，因此该字段应该设计为能唯一定位到该次请求的数据结构，如对用户的昵称进行检测，dataId可设为用户标识（用户ID），用户修改多次，每次请求数据的dataId可能一致，但是callback参数可以设计成定位该次请求的数据结构，比如callback字段设计成json，包含dataId和请求的时间戳等信息，当然如果不想做区分，也可以直接把callback设置成dataId的值
     */
    private String callback;

    /**
     * 用户发表时间，UNIX 时间戳(毫秒值)
     */
    private Integer publishTime;

    /**
     * 人工审核结果回调通知到客户的URL。主动回调数据接口超时时间设置为2s，为了保证顺利接收数据，需保证接收接口性能稳定并且保证幂等性业务扩展参数
     */
    private String callbackUrl;


    /**
     * get 数据唯一标识，能够根据该值定位到该条数据
     *
     * @return
     */
    public String getDataId() {
        return dataId;
    }

    /**
     * set 数据唯一标识，能够根据该值定位到该条数据
     *
     * @param dataId
     */
    public void setDataId(String dataId) {
        this.dataId = dataId;
    }

    /**
     * get 待检测文本，最长10000个字符, 用户发表内容，建议对内容中JSON、表情符、HTML标签、UBB标签等做过滤，只传递纯文本，以减少误判概率。请注意为了检测效果和性能，如果该字段长度超过10000字符，会截取前面10000字符进行检测和存储。该字段不能为空，如果为空会返回参数错误。
     *
     * @return
     */
    public String getContent() {
        return content;
    }

    /**
     * set 待检测文本，最长10000个字符, 用户发表内容，建议对内容中JSON、表情符、HTML标签、UBB标签等做过滤，只传递纯文本，以减少误判概率。请注意为了检测效果和性能，如果该字段长度超过10000字符，会截取前面10000字符进行检测和存储。该字段不能为空，如果为空会返回参数错误。
     *
     * @param content
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * get 内容标题，适用于贴子、博客的文章标题等场景，建议抄送，辅助机审策略精准调优
     *
     * @return
     */
    public String getTitle() {
        return title;
    }

    /**
     * set 内容标题，适用于贴子、博客的文章标题等场景，建议抄送，辅助机审策略精准调优
     *
     * @param title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * get 子数据类型
     *
     * @return
     */
    public Integer getDataType() {
        return dataType;
    }

    /**
     * set 子数据类型
     *
     * @param dataType
     */
    public void setDataType(Integer dataType) {
        this.dataType = dataType;
    }

    /**
     * get 数据回调参数，调用方根据业务情况自行设计，当调用文本离线结果获取接口时，该接口会原样返回该字段，详细见文本离线检测结果获取。作为数据处理标识，因此该字段应该设计为能唯一定位到该次请求的数据结构，如对用户的昵称进行检测，dataId可设为用户标识（用户ID），用户修改多次，每次请求数据的dataId可能一致，但是callback参数可以设计成定位该次请求的数据结构，比如callback字段设计成json，包含dataId和请求的时间戳等信息，当然如果不想做区分，也可以直接把callback设置成dataId的值
     *
     * @return
     */
    public String getCallback() {
        return callback;
    }

    /**
     * set 数据回调参数，调用方根据业务情况自行设计，当调用文本离线结果获取接口时，该接口会原样返回该字段，详细见文本离线检测结果获取。作为数据处理标识，因此该字段应该设计为能唯一定位到该次请求的数据结构，如对用户的昵称进行检测，dataId可设为用户标识（用户ID），用户修改多次，每次请求数据的dataId可能一致，但是callback参数可以设计成定位该次请求的数据结构，比如callback字段设计成json，包含dataId和请求的时间戳等信息，当然如果不想做区分，也可以直接把callback设置成dataId的值
     *
     * @param callback
     */
    public void setCallback(String callback) {
        this.callback = callback;
    }

    /**
     * get 用户发表时间，UNIX 时间戳(毫秒值)
     *
     * @return
     */
    public Integer getPublishTime() {
        return publishTime;
    }

    /**
     * set 用户发表时间，UNIX 时间戳(毫秒值)
     *
     * @param publishTime
     */
    public void setPublishTime(Integer publishTime) {
        this.publishTime = publishTime;
    }

    /**
     * get 人工审核结果回调通知到客户的URL。主动回调数据接口超时时间设置为2s，为了保证顺利接收数据，需保证接收接口性能稳定并且保证幂等性业务扩展参数
     *
     * @return
     */
    public String getCallbackUrl() {
        return callbackUrl;
    }

    /**
     * set 人工审核结果回调通知到客户的URL。主动回调数据接口超时时间设置为2s，为了保证顺利接收数据，需保证接收接口性能稳定并且保证幂等性业务扩展参数
     *
     * @param callbackUrl
     */
    public void setCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
    }


    /**
     * set 数据唯一标识，能够根据该值定位到该条数据
     *
     * @param dataId
     */
    public TextTaskV2 dataId(String dataId) {
        this.dataId = dataId;
        return this;
    }

    /**
     * set 待检测文本，最长10000个字符, 用户发表内容，建议对内容中JSON、表情符、HTML标签、UBB标签等做过滤，只传递纯文本，以减少误判概率。请注意为了检测效果和性能，如果该字段长度超过10000字符，会截取前面10000字符进行检测和存储。该字段不能为空，如果为空会返回参数错误。
     *
     * @param content
     */
    public TextTaskV2 content(String content) {
        this.content = content;
        return this;
    }

    /**
     * set 内容标题，适用于贴子、博客的文章标题等场景，建议抄送，辅助机审策略精准调优
     *
     * @param title
     */
    public TextTaskV2 title(String title) {
        this.title = title;
        return this;
    }

    /**
     * set 子数据类型
     *
     * @param dataType
     */
    public TextTaskV2 dataType(Integer dataType) {
        this.dataType = dataType;
        return this;
    }

    /**
     * set 数据回调参数，调用方根据业务情况自行设计，当调用文本离线结果获取接口时，该接口会原样返回该字段，详细见文本离线检测结果获取。作为数据处理标识，因此该字段应该设计为能唯一定位到该次请求的数据结构，如对用户的昵称进行检测，dataId可设为用户标识（用户ID），用户修改多次，每次请求数据的dataId可能一致，但是callback参数可以设计成定位该次请求的数据结构，比如callback字段设计成json，包含dataId和请求的时间戳等信息，当然如果不想做区分，也可以直接把callback设置成dataId的值
     *
     * @param callback
     */
    public TextTaskV2 callback(String callback) {
        this.callback = callback;
        return this;
    }

    /**
     * set 用户发表时间，UNIX 时间戳(毫秒值)
     *
     * @param publishTime
     */
    public TextTaskV2 publishTime(Integer publishTime) {
        this.publishTime = publishTime;
        return this;
    }

    /**
     * set 人工审核结果回调通知到客户的URL。主动回调数据接口超时时间设置为2s，为了保证顺利接收数据，需保证接收接口性能稳定并且保证幂等性业务扩展参数
     *
     * @param callbackUrl
     */
    public TextTaskV2 callbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }


}