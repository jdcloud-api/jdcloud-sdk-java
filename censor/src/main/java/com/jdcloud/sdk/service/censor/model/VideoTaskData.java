/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;


/**
 * videoTaskData
 */
public class VideoTaskData  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 本次请求数据标识，可以根据该标识查询数据最新结果
     */
    private String taskId;

    /**
     * 检测结果，0：成功，1：失败
     */
    private Integer status;

    /**
     * 缓冲池排队待处理数据量 ，为减少用户重试，优化用户体验，我们为点播视频用户提供了缓冲池功能，点播视频正式的并发处理为30路，提交超并发后即自动进入缓冲池排队过检，您可以根据缓冲池排队积压量评估您目前的并发处理速度是否合适，如需调整处理并发请联系您的专属商务处理。
     */
    private Integer dealingCount;


    /**
     * get 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @return
     */
    public String getTaskId() {
        return taskId;
    }

    /**
     * set 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @param taskId
     */
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    /**
     * get 检测结果，0：成功，1：失败
     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 检测结果，0：成功，1：失败
     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * get 缓冲池排队待处理数据量 ，为减少用户重试，优化用户体验，我们为点播视频用户提供了缓冲池功能，点播视频正式的并发处理为30路，提交超并发后即自动进入缓冲池排队过检，您可以根据缓冲池排队积压量评估您目前的并发处理速度是否合适，如需调整处理并发请联系您的专属商务处理。
     *
     * @return
     */
    public Integer getDealingCount() {
        return dealingCount;
    }

    /**
     * set 缓冲池排队待处理数据量 ，为减少用户重试，优化用户体验，我们为点播视频用户提供了缓冲池功能，点播视频正式的并发处理为30路，提交超并发后即自动进入缓冲池排队过检，您可以根据缓冲池排队积压量评估您目前的并发处理速度是否合适，如需调整处理并发请联系您的专属商务处理。
     *
     * @param dealingCount
     */
    public void setDealingCount(Integer dealingCount) {
        this.dealingCount = dealingCount;
    }


    /**
     * set 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @param taskId
     */
    public VideoTaskData taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * set 检测结果，0：成功，1：失败
     *
     * @param status
     */
    public VideoTaskData status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * set 缓冲池排队待处理数据量 ，为减少用户重试，优化用户体验，我们为点播视频用户提供了缓冲池功能，点播视频正式的并发处理为30路，提交超并发后即自动进入缓冲池排队过检，您可以根据缓冲池排队积压量评估您目前的并发处理速度是否合适，如需调整处理并发请联系您的专属商务处理。
     *
     * @param dealingCount
     */
    public VideoTaskData dealingCount(Integer dealingCount) {
        this.dealingCount = dealingCount;
        return this;
    }


}