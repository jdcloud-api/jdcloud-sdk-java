/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;

import java.util.List;
import java.util.ArrayList;

/**
 * lineContentItem
 */
public class LineContentItem  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 每行的文字信息
     */
    private String lineContent;

    /**
     * 行信息坐标，左上角原点顺时针返回四个点的相对坐标信息
     */
    private List<Float> polygon;


    /**
     * get 每行的文字信息
     *
     * @return
     */
    public String getLineContent() {
        return lineContent;
    }

    /**
     * set 每行的文字信息
     *
     * @param lineContent
     */
    public void setLineContent(String lineContent) {
        this.lineContent = lineContent;
    }

    /**
     * get 行信息坐标，左上角原点顺时针返回四个点的相对坐标信息
     *
     * @return
     */
    public List<Float> getPolygon() {
        return polygon;
    }

    /**
     * set 行信息坐标，左上角原点顺时针返回四个点的相对坐标信息
     *
     * @param polygon
     */
    public void setPolygon(List<Float> polygon) {
        this.polygon = polygon;
    }


    /**
     * set 每行的文字信息
     *
     * @param lineContent
     */
    public LineContentItem lineContent(String lineContent) {
        this.lineContent = lineContent;
        return this;
    }

    /**
     * set 行信息坐标，左上角原点顺时针返回四个点的相对坐标信息
     *
     * @param polygon
     */
    public LineContentItem polygon(List<Float> polygon) {
        this.polygon = polygon;
        return this;
    }


    /**
     * add item to 行信息坐标，左上角原点顺时针返回四个点的相对坐标信息
     *
     * @param polygon
     */
    public void addPolygon(Float polygon) {
        if (this.polygon == null) {
            this.polygon = new ArrayList<>();
        }
        this.polygon.add(polygon);
    }

}