/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 文本检测相关接口
 * API related to text scan
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * antispamResult
 */
public class AntispamResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 数据唯一标识，能够根据该值定位到该条数据
     */
    private String dataId;

    /**
     * 本次请求数据标识，可以根据该标识查询数据最新结果
     */
    private String taskId;

    /**
     * 文本检测状态码，定义为：0：检测成功，1：检测失败
     */
    private Integer status;

    /**
     * 审核模式，0：纯机审，1：机审+部分人审，2：机审+全量人审
     */
    private Integer censonrType;

    /**
     * 检测结果，0：通过，1：嫌疑，2：不通过
     */
    private Integer action;

    /**
     * 语种代码数组，详见 语种代码表
     */
    private List<String> lang;

    /**
     * 是否关联检测命中，true：关联检测命中，flase：原文命中
     */
    private Boolean isRelatedHit;

    /**
     * 分类信息
     */
    private List<LabelItem> labels;


    /**
     * get 数据唯一标识，能够根据该值定位到该条数据
     *
     * @return
     */
    public String getDataId() {
        return dataId;
    }

    /**
     * set 数据唯一标识，能够根据该值定位到该条数据
     *
     * @param dataId
     */
    public void setDataId(String dataId) {
        this.dataId = dataId;
    }

    /**
     * get 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @return
     */
    public String getTaskId() {
        return taskId;
    }

    /**
     * set 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @param taskId
     */
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    /**
     * get 文本检测状态码，定义为：0：检测成功，1：检测失败
     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 文本检测状态码，定义为：0：检测成功，1：检测失败
     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * get 审核模式，0：纯机审，1：机审+部分人审，2：机审+全量人审
     *
     * @return
     */
    public Integer getCensonrType() {
        return censonrType;
    }

    /**
     * set 审核模式，0：纯机审，1：机审+部分人审，2：机审+全量人审
     *
     * @param censonrType
     */
    public void setCensonrType(Integer censonrType) {
        this.censonrType = censonrType;
    }

    /**
     * get 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @return
     */
    public Integer getAction() {
        return action;
    }

    /**
     * set 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @param action
     */
    public void setAction(Integer action) {
        this.action = action;
    }

    /**
     * get 语种代码数组，详见 语种代码表
     *
     * @return
     */
    public List<String> getLang() {
        return lang;
    }

    /**
     * set 语种代码数组，详见 语种代码表
     *
     * @param lang
     */
    public void setLang(List<String> lang) {
        this.lang = lang;
    }

    /**
     * get 是否关联检测命中，true：关联检测命中，flase：原文命中
     *
     * @return
     */
    public Boolean getIsRelatedHit() {
        return isRelatedHit;
    }

    /**
     * set 是否关联检测命中，true：关联检测命中，flase：原文命中
     *
     * @param isRelatedHit
     */
    public void setIsRelatedHit(Boolean isRelatedHit) {
        this.isRelatedHit = isRelatedHit;
    }

    /**
     * get 分类信息
     *
     * @return
     */
    public List<LabelItem> getLabels() {
        return labels;
    }

    /**
     * set 分类信息
     *
     * @param labels
     */
    public void setLabels(List<LabelItem> labels) {
        this.labels = labels;
    }


    /**
     * set 数据唯一标识，能够根据该值定位到该条数据
     *
     * @param dataId
     */
    public AntispamResult dataId(String dataId) {
        this.dataId = dataId;
        return this;
    }

    /**
     * set 本次请求数据标识，可以根据该标识查询数据最新结果
     *
     * @param taskId
     */
    public AntispamResult taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * set 文本检测状态码，定义为：0：检测成功，1：检测失败
     *
     * @param status
     */
    public AntispamResult status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * set 审核模式，0：纯机审，1：机审+部分人审，2：机审+全量人审
     *
     * @param censonrType
     */
    public AntispamResult censonrType(Integer censonrType) {
        this.censonrType = censonrType;
        return this;
    }

    /**
     * set 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @param action
     */
    public AntispamResult action(Integer action) {
        this.action = action;
        return this;
    }

    /**
     * set 语种代码数组，详见 语种代码表
     *
     * @param lang
     */
    public AntispamResult lang(List<String> lang) {
        this.lang = lang;
        return this;
    }

    /**
     * set 是否关联检测命中，true：关联检测命中，flase：原文命中
     *
     * @param isRelatedHit
     */
    public AntispamResult isRelatedHit(Boolean isRelatedHit) {
        this.isRelatedHit = isRelatedHit;
        return this;
    }

    /**
     * set 分类信息
     *
     * @param labels
     */
    public AntispamResult labels(List<LabelItem> labels) {
        this.labels = labels;
        return this;
    }


    /**
     * add item to 语种代码数组，详见 语种代码表
     *
     * @param lang
     */
    public void addLang(String lang) {
        if (this.lang == null) {
            this.lang = new ArrayList<>();
        }
        this.lang.add(lang);
    }

    /**
     * add item to 分类信息
     *
     * @param label
     */
    public void addLabel(LabelItem label) {
        if (this.labels == null) {
            this.labels = new ArrayList<>();
        }
        this.labels.add(label);
    }

}