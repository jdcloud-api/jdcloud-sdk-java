/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 音频检测相关接口
 * API related to audio scan
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.censor.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * audioAntispamResult
 */
public class AudioAntispamResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 视频处理状态码，定义为：30：任务不存在
     */
    private Integer status;

    /**
     * 音频翻译结果，2：检测中，3：检测完成，4：检测失败
     */
    private Integer asrStatus;

    /**
     * 音频翻译检测失败原因，1：文件格式错误，2：文件下载失败，3：解析失败，4：音频流不存在
     */
    private Integer asrResult;

    /**
     * 检测结果，0：通过，1：嫌疑，2：不通过
     */
    private Integer action;

    /**
     * 唯一标识
     */
    private String taskId;

    /**
     * 审核来源，0：京东人审，1：客户人审，2：京东机审
     */
    private Integer censorSource;

    /**
     * 人工审核完成时间，毫秒单位时间戳(13位)
     */
    private Long censorTime;

    /**
     * 音频数据所在断句详细信息
     */
    private List<SegmentsItem> segments;

    /**
     * 分类信息
     */
    private List<AudioLabelItem> labels;

    /**
     * 支持在智能审核系统自定义标签分类信息
     */
    private List<CensorLabelItem> censorLabels;


    /**
     * get 视频处理状态码，定义为：30：任务不存在
     *
     * @return
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * set 视频处理状态码，定义为：30：任务不存在
     *
     * @param status
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * get 音频翻译结果，2：检测中，3：检测完成，4：检测失败
     *
     * @return
     */
    public Integer getAsrStatus() {
        return asrStatus;
    }

    /**
     * set 音频翻译结果，2：检测中，3：检测完成，4：检测失败
     *
     * @param asrStatus
     */
    public void setAsrStatus(Integer asrStatus) {
        this.asrStatus = asrStatus;
    }

    /**
     * get 音频翻译检测失败原因，1：文件格式错误，2：文件下载失败，3：解析失败，4：音频流不存在
     *
     * @return
     */
    public Integer getAsrResult() {
        return asrResult;
    }

    /**
     * set 音频翻译检测失败原因，1：文件格式错误，2：文件下载失败，3：解析失败，4：音频流不存在
     *
     * @param asrResult
     */
    public void setAsrResult(Integer asrResult) {
        this.asrResult = asrResult;
    }

    /**
     * get 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @return
     */
    public Integer getAction() {
        return action;
    }

    /**
     * set 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @param action
     */
    public void setAction(Integer action) {
        this.action = action;
    }

    /**
     * get 唯一标识
     *
     * @return
     */
    public String getTaskId() {
        return taskId;
    }

    /**
     * set 唯一标识
     *
     * @param taskId
     */
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    /**
     * get 审核来源，0：京东人审，1：客户人审，2：京东机审
     *
     * @return
     */
    public Integer getCensorSource() {
        return censorSource;
    }

    /**
     * set 审核来源，0：京东人审，1：客户人审，2：京东机审
     *
     * @param censorSource
     */
    public void setCensorSource(Integer censorSource) {
        this.censorSource = censorSource;
    }

    /**
     * get 人工审核完成时间，毫秒单位时间戳(13位)
     *
     * @return
     */
    public Long getCensorTime() {
        return censorTime;
    }

    /**
     * set 人工审核完成时间，毫秒单位时间戳(13位)
     *
     * @param censorTime
     */
    public void setCensorTime(Long censorTime) {
        this.censorTime = censorTime;
    }

    /**
     * get 音频数据所在断句详细信息
     *
     * @return
     */
    public List<SegmentsItem> getSegments() {
        return segments;
    }

    /**
     * set 音频数据所在断句详细信息
     *
     * @param segments
     */
    public void setSegments(List<SegmentsItem> segments) {
        this.segments = segments;
    }

    /**
     * get 分类信息
     *
     * @return
     */
    public List<AudioLabelItem> getLabels() {
        return labels;
    }

    /**
     * set 分类信息
     *
     * @param labels
     */
    public void setLabels(List<AudioLabelItem> labels) {
        this.labels = labels;
    }

    /**
     * get 支持在智能审核系统自定义标签分类信息
     *
     * @return
     */
    public List<CensorLabelItem> getCensorLabels() {
        return censorLabels;
    }

    /**
     * set 支持在智能审核系统自定义标签分类信息
     *
     * @param censorLabels
     */
    public void setCensorLabels(List<CensorLabelItem> censorLabels) {
        this.censorLabels = censorLabels;
    }


    /**
     * set 视频处理状态码，定义为：30：任务不存在
     *
     * @param status
     */
    public AudioAntispamResult status(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * set 音频翻译结果，2：检测中，3：检测完成，4：检测失败
     *
     * @param asrStatus
     */
    public AudioAntispamResult asrStatus(Integer asrStatus) {
        this.asrStatus = asrStatus;
        return this;
    }

    /**
     * set 音频翻译检测失败原因，1：文件格式错误，2：文件下载失败，3：解析失败，4：音频流不存在
     *
     * @param asrResult
     */
    public AudioAntispamResult asrResult(Integer asrResult) {
        this.asrResult = asrResult;
        return this;
    }

    /**
     * set 检测结果，0：通过，1：嫌疑，2：不通过
     *
     * @param action
     */
    public AudioAntispamResult action(Integer action) {
        this.action = action;
        return this;
    }

    /**
     * set 唯一标识
     *
     * @param taskId
     */
    public AudioAntispamResult taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * set 审核来源，0：京东人审，1：客户人审，2：京东机审
     *
     * @param censorSource
     */
    public AudioAntispamResult censorSource(Integer censorSource) {
        this.censorSource = censorSource;
        return this;
    }

    /**
     * set 人工审核完成时间，毫秒单位时间戳(13位)
     *
     * @param censorTime
     */
    public AudioAntispamResult censorTime(Long censorTime) {
        this.censorTime = censorTime;
        return this;
    }

    /**
     * set 音频数据所在断句详细信息
     *
     * @param segments
     */
    public AudioAntispamResult segments(List<SegmentsItem> segments) {
        this.segments = segments;
        return this;
    }

    /**
     * set 分类信息
     *
     * @param labels
     */
    public AudioAntispamResult labels(List<AudioLabelItem> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * set 支持在智能审核系统自定义标签分类信息
     *
     * @param censorLabels
     */
    public AudioAntispamResult censorLabels(List<CensorLabelItem> censorLabels) {
        this.censorLabels = censorLabels;
        return this;
    }


    /**
     * add item to 音频数据所在断句详细信息
     *
     * @param segment
     */
    public void addSegment(SegmentsItem segment) {
        if (this.segments == null) {
            this.segments = new ArrayList<>();
        }
        this.segments.add(segment);
    }

    /**
     * add item to 分类信息
     *
     * @param label
     */
    public void addLabel(AudioLabelItem label) {
        if (this.labels == null) {
            this.labels = new ArrayList<>();
        }
        this.labels.add(label);
    }

    /**
     * add item to 支持在智能审核系统自定义标签分类信息
     *
     * @param censorLabel
     */
    public void addCensorLabel(CensorLabelItem censorLabel) {
        if (this.censorLabels == null) {
            this.censorLabels = new ArrayList<>();
        }
        this.censorLabels.add(censorLabel);
    }

}