/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.zfs.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 描述一个文件系统
 */
public class FileSystem  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 文件系统ID
     */
    private String fileSystemId;

    /**
     * 文件系统名称(参数规则：不可为空，只支持中文、数字、大小写字母、英文下划线“_”及中划线“-”，且不能超过32字符)
     */
    private String name;

    /**
     * 文件系统描述(参数规则：不能超过256字符)
     */
    private String description;

    /**
     * 挂载目标个数
     */
    private Integer numberOfMountTargets;

    /**
     * 最近一次统计的文件系统的使用量单位为:Byte
     */
    private SizeByte sizeByte;

    /**
     * 文件系统状态(创建中:creating、可用:available、使用中:in-use、删除中:deleting)
     */
    private String status;

    /**
     * 文件系统类型(通用型:gp1,容量型:std1)
     */
    private String fileSystemType;

    /**
     * 文件系统所属的可用区
     */
    private String az;

    /**
     * 创建时间
     */
    private String createTime;

    /**
     * dns名称
     */
    private String dnsName;

    /**
     * Tag信息
     */
    
    private List<Tag> tags;


    /**
     * get 文件系统ID
     *
     * @return
     */
    public String getFileSystemId() {
        return fileSystemId;
    }

    /**
     * set 文件系统ID
     *
     * @param fileSystemId
     */
    public void setFileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
    }


    /**
     * get 文件系统名称(参数规则：不可为空，只支持中文、数字、大小写字母、英文下划线“_”及中划线“-”，且不能超过32字符)
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 文件系统名称(参数规则：不可为空，只支持中文、数字、大小写字母、英文下划线“_”及中划线“-”，且不能超过32字符)
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 文件系统描述(参数规则：不能超过256字符)
     *
     * @return
     */
    public String getDescription() {
        return description;
    }

    /**
     * set 文件系统描述(参数规则：不能超过256字符)
     *
     * @param description
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * get 挂载目标个数
     *
     * @return
     */
    public Integer getNumberOfMountTargets() {
        return numberOfMountTargets;
    }

    /**
     * set 挂载目标个数
     *
     * @param numberOfMountTargets
     */
    public void setNumberOfMountTargets(Integer numberOfMountTargets) {
        this.numberOfMountTargets = numberOfMountTargets;
    }


    /**
     * get 最近一次统计的文件系统的使用量单位为:Byte
     *
     * @return
     */
    public SizeByte getSizeByte() {
        return sizeByte;
    }

    /**
     * set 最近一次统计的文件系统的使用量单位为:Byte
     *
     * @param sizeByte
     */
    public void setSizeByte(SizeByte sizeByte) {
        this.sizeByte = sizeByte;
    }


    /**
     * get 文件系统状态(创建中:creating、可用:available、使用中:in-use、删除中:deleting)
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 文件系统状态(创建中:creating、可用:available、使用中:in-use、删除中:deleting)
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * get 文件系统类型(通用型:gp1,容量型:std1)
     *
     * @return
     */
    public String getFileSystemType() {
        return fileSystemType;
    }

    /**
     * set 文件系统类型(通用型:gp1,容量型:std1)
     *
     * @param fileSystemType
     */
    public void setFileSystemType(String fileSystemType) {
        this.fileSystemType = fileSystemType;
    }


    /**
     * get 文件系统所属的可用区
     *
     * @return
     */
    public String getAz() {
        return az;
    }

    /**
     * set 文件系统所属的可用区
     *
     * @param az
     */
    public void setAz(String az) {
        this.az = az;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreateTime() {
        return createTime;
    }

    /**
     * set 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }


    /**
     * get dns名称
     *
     * @return
     */
    public String getDnsName() {
        return dnsName;
    }

    /**
     * set dns名称
     *
     * @param dnsName
     */
    public void setDnsName(String dnsName) {
        this.dnsName = dnsName;
    }


    /**
    * get Tag信息
    *
    * @return
    */
    public List<Tag> getTags() {
        return tags;
    }

    /**
    * set Tag信息
    *
    * @param tags
    */
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }



    /**
     * set 文件系统ID
     *
     * @param fileSystemId
     */
    public FileSystem fileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
        return this;
    }


    /**
     * set 文件系统名称(参数规则：不可为空，只支持中文、数字、大小写字母、英文下划线“_”及中划线“-”，且不能超过32字符)
     *
     * @param name
     */
    public FileSystem name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 文件系统描述(参数规则：不能超过256字符)
     *
     * @param description
     */
    public FileSystem description(String description) {
        this.description = description;
        return this;
    }


    /**
     * set 挂载目标个数
     *
     * @param numberOfMountTargets
     */
    public FileSystem numberOfMountTargets(Integer numberOfMountTargets) {
        this.numberOfMountTargets = numberOfMountTargets;
        return this;
    }


    /**
     * set 最近一次统计的文件系统的使用量单位为:Byte
     *
     * @param sizeByte
     */
    public FileSystem sizeByte(SizeByte sizeByte) {
        this.sizeByte = sizeByte;
        return this;
    }


    /**
     * set 文件系统状态(创建中:creating、可用:available、使用中:in-use、删除中:deleting)
     *
     * @param status
     */
    public FileSystem status(String status) {
        this.status = status;
        return this;
    }


    /**
     * set 文件系统类型(通用型:gp1,容量型:std1)
     *
     * @param fileSystemType
     */
    public FileSystem fileSystemType(String fileSystemType) {
        this.fileSystemType = fileSystemType;
        return this;
    }


    /**
     * set 文件系统所属的可用区
     *
     * @param az
     */
    public FileSystem az(String az) {
        this.az = az;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createTime
     */
    public FileSystem createTime(String createTime) {
        this.createTime = createTime;
        return this;
    }


    /**
     * set dns名称
     *
     * @param dnsName
     */
    public FileSystem dnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }


    /**
    * set Tag信息
    *
    * @param tags
    */
    public FileSystem tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }



    /**
     * add item to Tag信息
     *
     * @param tag
     */
    public void addTag(Tag tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }
}