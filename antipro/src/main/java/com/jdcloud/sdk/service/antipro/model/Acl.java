/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.antipro.model;


/**
 * acl
 */
public class Acl  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 访问控制规则 Id
     */
    private String id;

    /**
     * 规则优先级
     */
    private Integer priority;

    /**
     * 源IP类型: 0: IP, 1: IP地址库
     */
    private Integer sipType;

    /**
     * 源IP, sipType 为 0 时有效, 否则为空
     */
    private String sip;

    /**
     * IP地址库 Id, sipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     */
    private String sipIpSetId;

    /**
     * IP地址库名称
     */
    private String sipIpSetName;

    /**
     * 目的IP类型: 0: IP, 1: IP地址库
     */
    private Integer dipType;

    /**
     * 目的IP, dipType 为 0 时有效, 否则为空
     */
    private String dip;

    /**
     * IP地址库 Id, dipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     */
    private String dipIpSetId;

    /**
     * IP地址库名称
     */
    private String dipIpSetName;

    /**
     * 协议类型: 支持 All Traffic, TCP, UDP, ICMP
     */
    private String protocol;

    /**
     * 端口类型: 0: IP, 1: 端口库
     */
    private Integer portType;

    /**
     * 端口或端口范围, portType 为 0 时有效，否则为空
     */
    private String port;

    /**
     * 端口库Id, portType 为 1 时有效，否则为空
     */
    private String portSetId;

    /**
     * 端口库名称
     */
    private String portSetName;

    /**
     * 动作: 0: 放行, 1: 阻断
     */
    private Integer action;

    /**
     * 规则状态: 0: 关闭, 1: 打开
     */
    private Integer enable;

    /**
     * 备注
     */
    private String remark;


    /**
     * get 访问控制规则 Id
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 访问控制规则 Id
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * get 规则优先级
     *
     * @return
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * set 规则优先级
     *
     * @param priority
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    /**
     * get 源IP类型: 0: IP, 1: IP地址库
     *
     * @return
     */
    public Integer getSipType() {
        return sipType;
    }

    /**
     * set 源IP类型: 0: IP, 1: IP地址库
     *
     * @param sipType
     */
    public void setSipType(Integer sipType) {
        this.sipType = sipType;
    }

    /**
     * get 源IP, sipType 为 0 时有效, 否则为空
     *
     * @return
     */
    public String getSip() {
        return sip;
    }

    /**
     * set 源IP, sipType 为 0 时有效, 否则为空
     *
     * @param sip
     */
    public void setSip(String sip) {
        this.sip = sip;
    }

    /**
     * get IP地址库 Id, sipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @return
     */
    public String getSipIpSetId() {
        return sipIpSetId;
    }

    /**
     * set IP地址库 Id, sipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @param sipIpSetId
     */
    public void setSipIpSetId(String sipIpSetId) {
        this.sipIpSetId = sipIpSetId;
    }

    /**
     * get IP地址库名称
     *
     * @return
     */
    public String getSipIpSetName() {
        return sipIpSetName;
    }

    /**
     * set IP地址库名称
     *
     * @param sipIpSetName
     */
    public void setSipIpSetName(String sipIpSetName) {
        this.sipIpSetName = sipIpSetName;
    }

    /**
     * get 目的IP类型: 0: IP, 1: IP地址库
     *
     * @return
     */
    public Integer getDipType() {
        return dipType;
    }

    /**
     * set 目的IP类型: 0: IP, 1: IP地址库
     *
     * @param dipType
     */
    public void setDipType(Integer dipType) {
        this.dipType = dipType;
    }

    /**
     * get 目的IP, dipType 为 0 时有效, 否则为空
     *
     * @return
     */
    public String getDip() {
        return dip;
    }

    /**
     * set 目的IP, dipType 为 0 时有效, 否则为空
     *
     * @param dip
     */
    public void setDip(String dip) {
        this.dip = dip;
    }

    /**
     * get IP地址库 Id, dipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @return
     */
    public String getDipIpSetId() {
        return dipIpSetId;
    }

    /**
     * set IP地址库 Id, dipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @param dipIpSetId
     */
    public void setDipIpSetId(String dipIpSetId) {
        this.dipIpSetId = dipIpSetId;
    }

    /**
     * get IP地址库名称
     *
     * @return
     */
    public String getDipIpSetName() {
        return dipIpSetName;
    }

    /**
     * set IP地址库名称
     *
     * @param dipIpSetName
     */
    public void setDipIpSetName(String dipIpSetName) {
        this.dipIpSetName = dipIpSetName;
    }

    /**
     * get 协议类型: 支持 All Traffic, TCP, UDP, ICMP
     *
     * @return
     */
    public String getProtocol() {
        return protocol;
    }

    /**
     * set 协议类型: 支持 All Traffic, TCP, UDP, ICMP
     *
     * @param protocol
     */
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    /**
     * get 端口类型: 0: IP, 1: 端口库
     *
     * @return
     */
    public Integer getPortType() {
        return portType;
    }

    /**
     * set 端口类型: 0: IP, 1: 端口库
     *
     * @param portType
     */
    public void setPortType(Integer portType) {
        this.portType = portType;
    }

    /**
     * get 端口或端口范围, portType 为 0 时有效，否则为空
     *
     * @return
     */
    public String getPort() {
        return port;
    }

    /**
     * set 端口或端口范围, portType 为 0 时有效，否则为空
     *
     * @param port
     */
    public void setPort(String port) {
        this.port = port;
    }

    /**
     * get 端口库Id, portType 为 1 时有效，否则为空
     *
     * @return
     */
    public String getPortSetId() {
        return portSetId;
    }

    /**
     * set 端口库Id, portType 为 1 时有效，否则为空
     *
     * @param portSetId
     */
    public void setPortSetId(String portSetId) {
        this.portSetId = portSetId;
    }

    /**
     * get 端口库名称
     *
     * @return
     */
    public String getPortSetName() {
        return portSetName;
    }

    /**
     * set 端口库名称
     *
     * @param portSetName
     */
    public void setPortSetName(String portSetName) {
        this.portSetName = portSetName;
    }

    /**
     * get 动作: 0: 放行, 1: 阻断
     *
     * @return
     */
    public Integer getAction() {
        return action;
    }

    /**
     * set 动作: 0: 放行, 1: 阻断
     *
     * @param action
     */
    public void setAction(Integer action) {
        this.action = action;
    }

    /**
     * get 规则状态: 0: 关闭, 1: 打开
     *
     * @return
     */
    public Integer getEnable() {
        return enable;
    }

    /**
     * set 规则状态: 0: 关闭, 1: 打开
     *
     * @param enable
     */
    public void setEnable(Integer enable) {
        this.enable = enable;
    }

    /**
     * get 备注
     *
     * @return
     */
    public String getRemark() {
        return remark;
    }

    /**
     * set 备注
     *
     * @param remark
     */
    public void setRemark(String remark) {
        this.remark = remark;
    }


    /**
     * set 访问控制规则 Id
     *
     * @param id
     */
    public Acl id(String id) {
        this.id = id;
        return this;
    }

    /**
     * set 规则优先级
     *
     * @param priority
     */
    public Acl priority(Integer priority) {
        this.priority = priority;
        return this;
    }

    /**
     * set 源IP类型: 0: IP, 1: IP地址库
     *
     * @param sipType
     */
    public Acl sipType(Integer sipType) {
        this.sipType = sipType;
        return this;
    }

    /**
     * set 源IP, sipType 为 0 时有效, 否则为空
     *
     * @param sip
     */
    public Acl sip(String sip) {
        this.sip = sip;
        return this;
    }

    /**
     * set IP地址库 Id, sipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @param sipIpSetId
     */
    public Acl sipIpSetId(String sipIpSetId) {
        this.sipIpSetId = sipIpSetId;
        return this;
    }

    /**
     * set IP地址库名称
     *
     * @param sipIpSetName
     */
    public Acl sipIpSetName(String sipIpSetName) {
        this.sipIpSetName = sipIpSetName;
        return this;
    }

    /**
     * set 目的IP类型: 0: IP, 1: IP地址库
     *
     * @param dipType
     */
    public Acl dipType(Integer dipType) {
        this.dipType = dipType;
        return this;
    }

    /**
     * set 目的IP, dipType 为 0 时有效, 否则为空
     *
     * @param dip
     */
    public Acl dip(String dip) {
        this.dip = dip;
        return this;
    }

    /**
     * set IP地址库 Id, dipType 为 1 时有效, 否则为空。&lt;br&gt;&#39;-1&#39; IP高防回源地址&lt;br&gt;&#39;-2&#39; Web应用防火墙回源地址
     *
     * @param dipIpSetId
     */
    public Acl dipIpSetId(String dipIpSetId) {
        this.dipIpSetId = dipIpSetId;
        return this;
    }

    /**
     * set IP地址库名称
     *
     * @param dipIpSetName
     */
    public Acl dipIpSetName(String dipIpSetName) {
        this.dipIpSetName = dipIpSetName;
        return this;
    }

    /**
     * set 协议类型: 支持 All Traffic, TCP, UDP, ICMP
     *
     * @param protocol
     */
    public Acl protocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * set 端口类型: 0: IP, 1: 端口库
     *
     * @param portType
     */
    public Acl portType(Integer portType) {
        this.portType = portType;
        return this;
    }

    /**
     * set 端口或端口范围, portType 为 0 时有效，否则为空
     *
     * @param port
     */
    public Acl port(String port) {
        this.port = port;
        return this;
    }

    /**
     * set 端口库Id, portType 为 1 时有效，否则为空
     *
     * @param portSetId
     */
    public Acl portSetId(String portSetId) {
        this.portSetId = portSetId;
        return this;
    }

    /**
     * set 端口库名称
     *
     * @param portSetName
     */
    public Acl portSetName(String portSetName) {
        this.portSetName = portSetName;
        return this;
    }

    /**
     * set 动作: 0: 放行, 1: 阻断
     *
     * @param action
     */
    public Acl action(Integer action) {
        this.action = action;
        return this;
    }

    /**
     * set 规则状态: 0: 关闭, 1: 打开
     *
     * @param enable
     */
    public Acl enable(Integer enable) {
        this.enable = enable;
        return this;
    }

    /**
     * set 备注
     *
     * @param remark
     */
    public Acl remark(String remark) {
        this.remark = remark;
        return this;
    }


}