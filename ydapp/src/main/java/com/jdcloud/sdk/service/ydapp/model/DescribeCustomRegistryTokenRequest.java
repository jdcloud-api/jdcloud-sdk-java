/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 用户镜像注册表
 * 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ydapp.model;

import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * &lt;p&gt;申请6小时有效期的令牌。 使用&lt;code&gt;docker&lt;/code&gt; CLI push和pull镜像。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;authorizationToken&lt;/code&gt;为每个registry返回一个base64编码的字符串，解码后&lt;code&gt;docker login&lt;/code&gt;命令
可完成指定registry的鉴权。&lt;/p&gt;

 */
public class DescribeCustomRegistryTokenRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false

     */
    private Boolean renew;

    /**
     * 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx

     * Required:true
     */
    @Required
    private String appId;



    /**
     * get 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false

     *
     * @return
     */
    public Boolean getRenew() {
        return renew;
    }

    /**
     * set 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false

     *
     * @param renew
     */
    public void setRenew(Boolean renew) {
        this.renew = renew;
    }


    /**
     * get 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx

     *
     * @return
     */
    public String getAppId() {
        return appId;
    }

    /**
     * set 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx

     *
     * @param appId
     */
    public void setAppId(String appId) {
        this.appId = appId;
    }



    /**
     * set 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false

     *
     * @param renew
     */
    public DescribeCustomRegistryTokenRequest renew(Boolean renew) {
        this.renew = renew;
        return this;
    }


    /**
     * set 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx

     *
     * @param appId
     */
    public DescribeCustomRegistryTokenRequest appId(String appId) {
        this.appId = appId;
        return this;
    }


}