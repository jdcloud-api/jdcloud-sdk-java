/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 用户镜像注册表
 * 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.ydapp.model;

import com.jdcloud.sdk.service.JdcloudResult;

/**
 * &lt;p&gt;申请6小时有效期的令牌。 使用&lt;code&gt;docker&lt;/code&gt; CLI push和pull镜像。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;authorizationToken&lt;/code&gt;为每个registry返回一个base64编码的字符串，解码后&lt;code&gt;docker login&lt;/code&gt;命令
可完成指定registry的鉴权。&lt;/p&gt;

 */
public class DescribeCustomRegistryTokenResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * token - 令牌base64编码后的字符串，E.g.，eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

     */
    private String authorizationToken;

    /**
     * 令牌过期时间

     */
    private String expiresAt;

    /**
     * docker login 命令base64编码后的字符串，E.g.，docker login registry.jdcloud.com -u username -p password

     */
    private String loginCmdLine;

    /**
     * 镜像注册表地址，E.g.，registry.jdcloud.com

     */
    private String registryUri;

    /**
     * 镜像注册表登陆用户名，E.g.，registry-user

     */
    private String username;



    /**
     * get token - 令牌base64编码后的字符串，E.g.，eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

     *
     * @return
     */
    public String getAuthorizationToken() {
        return authorizationToken;
    }

    /**
     * set token - 令牌base64编码后的字符串，E.g.，eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

     *
     * @param authorizationToken
     */
    public void setAuthorizationToken(String authorizationToken) {
        this.authorizationToken = authorizationToken;
    }


    /**
     * get 令牌过期时间

     *
     * @return
     */
    public String getExpiresAt() {
        return expiresAt;
    }

    /**
     * set 令牌过期时间

     *
     * @param expiresAt
     */
    public void setExpiresAt(String expiresAt) {
        this.expiresAt = expiresAt;
    }


    /**
     * get docker login 命令base64编码后的字符串，E.g.，docker login registry.jdcloud.com -u username -p password

     *
     * @return
     */
    public String getLoginCmdLine() {
        return loginCmdLine;
    }

    /**
     * set docker login 命令base64编码后的字符串，E.g.，docker login registry.jdcloud.com -u username -p password

     *
     * @param loginCmdLine
     */
    public void setLoginCmdLine(String loginCmdLine) {
        this.loginCmdLine = loginCmdLine;
    }


    /**
     * get 镜像注册表地址，E.g.，registry.jdcloud.com

     *
     * @return
     */
    public String getRegistryUri() {
        return registryUri;
    }

    /**
     * set 镜像注册表地址，E.g.，registry.jdcloud.com

     *
     * @param registryUri
     */
    public void setRegistryUri(String registryUri) {
        this.registryUri = registryUri;
    }


    /**
     * get 镜像注册表登陆用户名，E.g.，registry-user

     *
     * @return
     */
    public String getUsername() {
        return username;
    }

    /**
     * set 镜像注册表登陆用户名，E.g.，registry-user

     *
     * @param username
     */
    public void setUsername(String username) {
        this.username = username;
    }



    /**
     * set token - 令牌base64编码后的字符串，E.g.，eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

     *
     * @param authorizationToken
     */
    public DescribeCustomRegistryTokenResult authorizationToken(String authorizationToken) {
        this.authorizationToken = authorizationToken;
        return this;
    }


    /**
     * set 令牌过期时间

     *
     * @param expiresAt
     */
    public DescribeCustomRegistryTokenResult expiresAt(String expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }


    /**
     * set docker login 命令base64编码后的字符串，E.g.，docker login registry.jdcloud.com -u username -p password

     *
     * @param loginCmdLine
     */
    public DescribeCustomRegistryTokenResult loginCmdLine(String loginCmdLine) {
        this.loginCmdLine = loginCmdLine;
        return this;
    }


    /**
     * set 镜像注册表地址，E.g.，registry.jdcloud.com

     *
     * @param registryUri
     */
    public DescribeCustomRegistryTokenResult registryUri(String registryUri) {
        this.registryUri = registryUri;
        return this;
    }


    /**
     * set 镜像注册表登陆用户名，E.g.，registry-user

     *
     * @param username
     */
    public DescribeCustomRegistryTokenResult username(String username) {
        this.username = username;
        return this;
    }


}