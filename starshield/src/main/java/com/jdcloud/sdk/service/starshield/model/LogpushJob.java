/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.starshield.model;


/**
 * logpushJob
 */
public class LogpushJob  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 域名
     */
    private String zone_name;

    /**
     * enabled
     */
    private Boolean enabled;

    /**
     * 记录上次成功推送日志的时间。如果上次成功推送的日志范围为2018-07-23T10:00:00Z至2018-07-23T10:01:00Z，则该字段的值将为2018-07-23T10:01:00Z。如果作业从未运行或刚刚启用但尚未运行，则该字段将为空。
     */
    private String last_complete;

    /**
     * 它指定了诸如请求的字段和时间戳格式之类的内容。
     */
    private String logpull_options;

    /**
     * 可选的用户可读的作业名称。不是独一无二的。使用户更容易识别工作。建议包含域名称。
     */
    private String name;

    /**
     * 如果不为null，则表示作业当前失败。失败通常是重复的（例如：没有写入目标存储桶的权限）。只记录最后一次故障。成功执行作业时，错误消息和最后一个错误被设置为null。
     */
    private String error_message;

    /**
     * 唯一标识数据推送目的地的字符串。可能包括目的地支持的其他参数。
     */
    private String destination_conf;

    /**
     * 唯一标识数据推送目的地的字符串。
     */
    private String path;

    /**
     * 服务名称，例如Amazon S3, Splunk。
     */
    private String service;

    /**
     * 要推送的数据集。
     */
    private String dataset;

    /**
     * 作业的唯一id。
     */
    private Integer id;

    /**
     * 星盾向目标发送成批日志的频率。将“频率”设置为“高”会将日志发送到更多更小的文件中。将“频率”设置为“低”会以较小数量的较大文件发送日志。
     */
    private String frequency;

    /**
     * 记录上次作业失败的时间。如果不为null，则表示作业当前失败。如果为null，则表示作业从未失败，或者自上次失败以来至少成功运行过一次。另请参见错误消息字段。
     */
    private String last_error;

    /**
     * 推送状态，合法值：Pushing-正在推送，Error-推送失败，Off-关闭
     */
    private String status;



    /**
     * get 域名
     *
     * @return
     */
    public String getZone_name() {
        return zone_name;
    }

    /**
     * set 域名
     *
     * @param zone_name
     */
    public void setZone_name(String zone_name) {
        this.zone_name = zone_name;
    }


    /**
     * get enabled
     *
     * @return
     */
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * set enabled
     *
     * @param enabled
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }


    /**
     * get 记录上次成功推送日志的时间。如果上次成功推送的日志范围为2018-07-23T10:00:00Z至2018-07-23T10:01:00Z，则该字段的值将为2018-07-23T10:01:00Z。如果作业从未运行或刚刚启用但尚未运行，则该字段将为空。
     *
     * @return
     */
    public String getLast_complete() {
        return last_complete;
    }

    /**
     * set 记录上次成功推送日志的时间。如果上次成功推送的日志范围为2018-07-23T10:00:00Z至2018-07-23T10:01:00Z，则该字段的值将为2018-07-23T10:01:00Z。如果作业从未运行或刚刚启用但尚未运行，则该字段将为空。
     *
     * @param last_complete
     */
    public void setLast_complete(String last_complete) {
        this.last_complete = last_complete;
    }


    /**
     * get 它指定了诸如请求的字段和时间戳格式之类的内容。
     *
     * @return
     */
    public String getLogpull_options() {
        return logpull_options;
    }

    /**
     * set 它指定了诸如请求的字段和时间戳格式之类的内容。
     *
     * @param logpull_options
     */
    public void setLogpull_options(String logpull_options) {
        this.logpull_options = logpull_options;
    }


    /**
     * get 可选的用户可读的作业名称。不是独一无二的。使用户更容易识别工作。建议包含域名称。
     *
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * set 可选的用户可读的作业名称。不是独一无二的。使用户更容易识别工作。建议包含域名称。
     *
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * get 如果不为null，则表示作业当前失败。失败通常是重复的（例如：没有写入目标存储桶的权限）。只记录最后一次故障。成功执行作业时，错误消息和最后一个错误被设置为null。
     *
     * @return
     */
    public String getError_message() {
        return error_message;
    }

    /**
     * set 如果不为null，则表示作业当前失败。失败通常是重复的（例如：没有写入目标存储桶的权限）。只记录最后一次故障。成功执行作业时，错误消息和最后一个错误被设置为null。
     *
     * @param error_message
     */
    public void setError_message(String error_message) {
        this.error_message = error_message;
    }


    /**
     * get 唯一标识数据推送目的地的字符串。可能包括目的地支持的其他参数。
     *
     * @return
     */
    public String getDestination_conf() {
        return destination_conf;
    }

    /**
     * set 唯一标识数据推送目的地的字符串。可能包括目的地支持的其他参数。
     *
     * @param destination_conf
     */
    public void setDestination_conf(String destination_conf) {
        this.destination_conf = destination_conf;
    }


    /**
     * get 唯一标识数据推送目的地的字符串。
     *
     * @return
     */
    public String getPath() {
        return path;
    }

    /**
     * set 唯一标识数据推送目的地的字符串。
     *
     * @param path
     */
    public void setPath(String path) {
        this.path = path;
    }


    /**
     * get 服务名称，例如Amazon S3, Splunk。
     *
     * @return
     */
    public String getService() {
        return service;
    }

    /**
     * set 服务名称，例如Amazon S3, Splunk。
     *
     * @param service
     */
    public void setService(String service) {
        this.service = service;
    }


    /**
     * get 要推送的数据集。
     *
     * @return
     */
    public String getDataset() {
        return dataset;
    }

    /**
     * set 要推送的数据集。
     *
     * @param dataset
     */
    public void setDataset(String dataset) {
        this.dataset = dataset;
    }


    /**
     * get 作业的唯一id。
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set 作业的唯一id。
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }


    /**
     * get 星盾向目标发送成批日志的频率。将“频率”设置为“高”会将日志发送到更多更小的文件中。将“频率”设置为“低”会以较小数量的较大文件发送日志。
     *
     * @return
     */
    public String getFrequency() {
        return frequency;
    }

    /**
     * set 星盾向目标发送成批日志的频率。将“频率”设置为“高”会将日志发送到更多更小的文件中。将“频率”设置为“低”会以较小数量的较大文件发送日志。
     *
     * @param frequency
     */
    public void setFrequency(String frequency) {
        this.frequency = frequency;
    }


    /**
     * get 记录上次作业失败的时间。如果不为null，则表示作业当前失败。如果为null，则表示作业从未失败，或者自上次失败以来至少成功运行过一次。另请参见错误消息字段。
     *
     * @return
     */
    public String getLast_error() {
        return last_error;
    }

    /**
     * set 记录上次作业失败的时间。如果不为null，则表示作业当前失败。如果为null，则表示作业从未失败，或者自上次失败以来至少成功运行过一次。另请参见错误消息字段。
     *
     * @param last_error
     */
    public void setLast_error(String last_error) {
        this.last_error = last_error;
    }


    /**
     * get 推送状态，合法值：Pushing-正在推送，Error-推送失败，Off-关闭
     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 推送状态，合法值：Pushing-正在推送，Error-推送失败，Off-关闭
     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }



    /**
     * set 域名
     *
     * @param zone_name
     */
    public LogpushJob zone_name(String zone_name) {
        this.zone_name = zone_name;
        return this;
    }


    /**
     * set enabled
     *
     * @param enabled
     */
    public LogpushJob enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }


    /**
     * set 记录上次成功推送日志的时间。如果上次成功推送的日志范围为2018-07-23T10:00:00Z至2018-07-23T10:01:00Z，则该字段的值将为2018-07-23T10:01:00Z。如果作业从未运行或刚刚启用但尚未运行，则该字段将为空。
     *
     * @param last_complete
     */
    public LogpushJob last_complete(String last_complete) {
        this.last_complete = last_complete;
        return this;
    }


    /**
     * set 它指定了诸如请求的字段和时间戳格式之类的内容。
     *
     * @param logpull_options
     */
    public LogpushJob logpull_options(String logpull_options) {
        this.logpull_options = logpull_options;
        return this;
    }


    /**
     * set 可选的用户可读的作业名称。不是独一无二的。使用户更容易识别工作。建议包含域名称。
     *
     * @param name
     */
    public LogpushJob name(String name) {
        this.name = name;
        return this;
    }


    /**
     * set 如果不为null，则表示作业当前失败。失败通常是重复的（例如：没有写入目标存储桶的权限）。只记录最后一次故障。成功执行作业时，错误消息和最后一个错误被设置为null。
     *
     * @param error_message
     */
    public LogpushJob error_message(String error_message) {
        this.error_message = error_message;
        return this;
    }


    /**
     * set 唯一标识数据推送目的地的字符串。可能包括目的地支持的其他参数。
     *
     * @param destination_conf
     */
    public LogpushJob destination_conf(String destination_conf) {
        this.destination_conf = destination_conf;
        return this;
    }


    /**
     * set 唯一标识数据推送目的地的字符串。
     *
     * @param path
     */
    public LogpushJob path(String path) {
        this.path = path;
        return this;
    }


    /**
     * set 服务名称，例如Amazon S3, Splunk。
     *
     * @param service
     */
    public LogpushJob service(String service) {
        this.service = service;
        return this;
    }


    /**
     * set 要推送的数据集。
     *
     * @param dataset
     */
    public LogpushJob dataset(String dataset) {
        this.dataset = dataset;
        return this;
    }


    /**
     * set 作业的唯一id。
     *
     * @param id
     */
    public LogpushJob id(Integer id) {
        this.id = id;
        return this;
    }


    /**
     * set 星盾向目标发送成批日志的频率。将“频率”设置为“高”会将日志发送到更多更小的文件中。将“频率”设置为“低”会以较小数量的较大文件发送日志。
     *
     * @param frequency
     */
    public LogpushJob frequency(String frequency) {
        this.frequency = frequency;
        return this;
    }


    /**
     * set 记录上次作业失败的时间。如果不为null，则表示作业当前失败。如果为null，则表示作业从未失败，或者自上次失败以来至少成功运行过一次。另请参见错误消息字段。
     *
     * @param last_error
     */
    public LogpushJob last_error(String last_error) {
        this.last_error = last_error;
        return this;
    }


    /**
     * set 推送状态，合法值：Pushing-正在推送，Error-推送失败，Off-关闭
     *
     * @param status
     */
    public LogpushJob status(String status) {
        this.status = status;
        return this;
    }


}