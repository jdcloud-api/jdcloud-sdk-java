/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.starshield.model;


/**
 * pageRuleOnlyPriority
 */
public class PageRuleOnlyPriority  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * API item identifier tag
     */
    private String id;

    /**
     * A number that indicates the preference for a page rule over another.
In the case where you may have a catch-all page rule (e.g., #1: &#39;/images/&#39;)
but want a rule that is more specific to take precedence (e.g., #2: &#39;/images/special/&#39;),
you&#39;ll want to specify a higher priority on the latter (#2) so it will override the first.

     */
    private Integer priority;


    /**
     * get API item identifier tag
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set API item identifier tag
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * get A number that indicates the preference for a page rule over another.
In the case where you may have a catch-all page rule (e.g., #1: &#39;/images/&#39;)
but want a rule that is more specific to take precedence (e.g., #2: &#39;/images/special/&#39;),
you&#39;ll want to specify a higher priority on the latter (#2) so it will override the first.

     *
     * @return
     */
    public Integer getPriority() {
        return priority;
    }

    /**
     * set A number that indicates the preference for a page rule over another.
In the case where you may have a catch-all page rule (e.g., #1: &#39;/images/&#39;)
but want a rule that is more specific to take precedence (e.g., #2: &#39;/images/special/&#39;),
you&#39;ll want to specify a higher priority on the latter (#2) so it will override the first.

     *
     * @param priority
     */
    public void setPriority(Integer priority) {
        this.priority = priority;
    }


    /**
     * set API item identifier tag
     *
     * @param id
     */
    public PageRuleOnlyPriority id(String id) {
        this.id = id;
        return this;
    }

    /**
     * set A number that indicates the preference for a page rule over another.
In the case where you may have a catch-all page rule (e.g., #1: &#39;/images/&#39;)
but want a rule that is more specific to take precedence (e.g., #2: &#39;/images/special/&#39;),
you&#39;ll want to specify a higher priority on the latter (#2) so it will override the first.

     *
     * @param priority
     */
    public PageRuleOnlyPriority priority(Integer priority) {
        this.priority = priority;
        return this;
    }


}