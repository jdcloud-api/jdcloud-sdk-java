/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Zone
 * A Zone is a domain name along with its subdomains and other identities
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.starshield.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 通过指定URL，从星盾的缓存中细化删除一个或多个文件。
要清除带有自定义缓存key的文件，请包括用于计算缓存key的报头。
例如要清除缓存key中含有${geo}或${devicetype}的文件，请包括CF-Device-Type或CF-IPCountry报头。
注意：当包含源报头时，请确保包括scheme协议和hostname主机名。如果是默认端口，可以省略端口号（http为80，https为443），否则必须包含端口号。

 */
public class PurgeFilesByURLRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 应从缓存中删除的URL数组
     */
    
    private List<String> files;
    /**
     * identifier
     * Required:true
     */
    @Required
    private String identifier;



    /**
    * get 应从缓存中删除的URL数组
    *
    * @return
    */
    public List<String> getFiles() {
        return files;
    }

    /**
    * set 应从缓存中删除的URL数组
    *
    * @param files
    */
    public void setFiles(List<String> files) {
        this.files = files;
    }


    /**
     * get identifier
     *
     * @return
     */
    public String getIdentifier() {
        return identifier;
    }

    /**
     * set identifier
     *
     * @param identifier
     */
    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }



    /**
    * set 应从缓存中删除的URL数组
    *
    * @param files
    */
    public PurgeFilesByURLRequest files(List<String> files) {
        this.files = files;
        return this;
    }


    /**
     * set identifier
     *
     * @param identifier
     */
    public PurgeFilesByURLRequest identifier(String identifier) {
        this.identifier = identifier;
        return this;
    }



    /**
     * add item to 应从缓存中删除的URL数组
     *
     * @param file
     */
    public void addFile(String file) {
        if (this.files == null) {
            this.files = new ArrayList<>();
        }
        this.files.add(file);
    }
}