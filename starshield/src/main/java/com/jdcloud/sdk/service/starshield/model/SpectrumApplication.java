/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.starshield.model;

import java.util.List;
import java.util.ArrayList;

/**
 * spectrumApplication
 */
public class SpectrumApplication  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 请注意该值仅适用于TCP情况。
源站的地址列表。可以指定单个端口，例如，&quot;tcp://192.0.2.1:1000&quot;；或者一系列端口，例如，&quot;tcp://192.0.2.1:1000-2000&quot;
origin_direct中的端口与protocol中的端口必须遵循如下规则，
1.origin_direct中如果是单个端口，protocol中的端口可以是[1, 65535]的任意单值；
2.origin_direct中如果是端口范围，protocol中的端口也必须是范围，且范围区间必须相同。

     */
    
    private List<String> origin_direct;
    /**
     * dns
     */
    private Dns dns;

    /**
     * 请注意该值仅适用于TCP情况。
开启到源站的的代理协议。默认值off，有效值off/v1/v2。
TCP的有效值，off (默认)/v1/v2。
请注意源站也需要配置对应的协议和版本。

     */
    private String proxy_protocol;

    /**
     * edge_ips
     */
    private Edge_ips edge_ips;

    /**
     * 应用最近修改时间。
     */
    private String modified_on;

    /**
     * 应用创建时间。
     */
    private String created_on;

    /**
     * 请注意该值仅适用于TCP情况。开启IP访问规则。
     */
    private Boolean ip_firewall;

    /**
     * 星盾Spectrum IP的端口配置。
对于 TCP 应用，您可以指定单个端口，例如，&quot;tcp/1000&quot;；或者一系列端口，例如，&quot;tcp/1000-2000&quot;。
protocol中的端口与origin_direct中的端口必须遵循如下规则，
1.protocol中如果是单个端口，origin_direct中的端口可以是[1, 65535]任意单值；
2.protocol中如果是端口范围，origin_direct中的端口也必须是范围，且范围区间必须相同。
对于 HTTP/HTTPS 应用，您仅可以指定单个端口，例如，&quot;tcp/1000&quot;。

     */
    private String protocol;

    /**
     * 应用标识。
     */
    private String id;

    /**
     * origin_dns
     */
    private Origin_dns origin_dns;

    /**
     * 源站端口。与origin_dns成对使用。
     */
    private String origin_port;

    /**
     * 确定流量如何从边缘传输到源站。
当应用协议是”TCP“是，该值为&quot;direct&quot;，Spectrum会将流量直接发送到您的源站。
当应用协议是”HTTP“或”HTTPS“是，该值为”http“或”https“，Spectrum将应用星盾的HTTP/HTTPS功能，将流量发送到您的源站。
     */
    private String traffic_type;



    /**
    * get 请注意该值仅适用于TCP情况。
源站的地址列表。可以指定单个端口，例如，&quot;tcp://192.0.2.1:1000&quot;；或者一系列端口，例如，&quot;tcp://192.0.2.1:1000-2000&quot;
origin_direct中的端口与protocol中的端口必须遵循如下规则，
1.origin_direct中如果是单个端口，protocol中的端口可以是[1, 65535]的任意单值；
2.origin_direct中如果是端口范围，protocol中的端口也必须是范围，且范围区间必须相同。

    *
    * @return
    */
    public List<String> getOrigin_direct() {
        return origin_direct;
    }

    /**
    * set 请注意该值仅适用于TCP情况。
源站的地址列表。可以指定单个端口，例如，&quot;tcp://192.0.2.1:1000&quot;；或者一系列端口，例如，&quot;tcp://192.0.2.1:1000-2000&quot;
origin_direct中的端口与protocol中的端口必须遵循如下规则，
1.origin_direct中如果是单个端口，protocol中的端口可以是[1, 65535]的任意单值；
2.origin_direct中如果是端口范围，protocol中的端口也必须是范围，且范围区间必须相同。

    *
    * @param origin_direct
    */
    public void setOrigin_direct(List<String> origin_direct) {
        this.origin_direct = origin_direct;
    }


    /**
     * get dns
     *
     * @return
     */
    public Dns getDns() {
        return dns;
    }

    /**
     * set dns
     *
     * @param dns
     */
    public void setDns(Dns dns) {
        this.dns = dns;
    }


    /**
     * get 请注意该值仅适用于TCP情况。
开启到源站的的代理协议。默认值off，有效值off/v1/v2。
TCP的有效值，off (默认)/v1/v2。
请注意源站也需要配置对应的协议和版本。

     *
     * @return
     */
    public String getProxy_protocol() {
        return proxy_protocol;
    }

    /**
     * set 请注意该值仅适用于TCP情况。
开启到源站的的代理协议。默认值off，有效值off/v1/v2。
TCP的有效值，off (默认)/v1/v2。
请注意源站也需要配置对应的协议和版本。

     *
     * @param proxy_protocol
     */
    public void setProxy_protocol(String proxy_protocol) {
        this.proxy_protocol = proxy_protocol;
    }


    /**
     * get edge_ips
     *
     * @return
     */
    public Edge_ips getEdge_ips() {
        return edge_ips;
    }

    /**
     * set edge_ips
     *
     * @param edge_ips
     */
    public void setEdge_ips(Edge_ips edge_ips) {
        this.edge_ips = edge_ips;
    }


    /**
     * get 应用最近修改时间。
     *
     * @return
     */
    public String getModified_on() {
        return modified_on;
    }

    /**
     * set 应用最近修改时间。
     *
     * @param modified_on
     */
    public void setModified_on(String modified_on) {
        this.modified_on = modified_on;
    }


    /**
     * get 应用创建时间。
     *
     * @return
     */
    public String getCreated_on() {
        return created_on;
    }

    /**
     * set 应用创建时间。
     *
     * @param created_on
     */
    public void setCreated_on(String created_on) {
        this.created_on = created_on;
    }


    /**
     * get 请注意该值仅适用于TCP情况。开启IP访问规则。
     *
     * @return
     */
    public Boolean getIp_firewall() {
        return ip_firewall;
    }

    /**
     * set 请注意该值仅适用于TCP情况。开启IP访问规则。
     *
     * @param ip_firewall
     */
    public void setIp_firewall(Boolean ip_firewall) {
        this.ip_firewall = ip_firewall;
    }


    /**
     * get 星盾Spectrum IP的端口配置。
对于 TCP 应用，您可以指定单个端口，例如，&quot;tcp/1000&quot;；或者一系列端口，例如，&quot;tcp/1000-2000&quot;。
protocol中的端口与origin_direct中的端口必须遵循如下规则，
1.protocol中如果是单个端口，origin_direct中的端口可以是[1, 65535]任意单值；
2.protocol中如果是端口范围，origin_direct中的端口也必须是范围，且范围区间必须相同。
对于 HTTP/HTTPS 应用，您仅可以指定单个端口，例如，&quot;tcp/1000&quot;。

     *
     * @return
     */
    public String getProtocol() {
        return protocol;
    }

    /**
     * set 星盾Spectrum IP的端口配置。
对于 TCP 应用，您可以指定单个端口，例如，&quot;tcp/1000&quot;；或者一系列端口，例如，&quot;tcp/1000-2000&quot;。
protocol中的端口与origin_direct中的端口必须遵循如下规则，
1.protocol中如果是单个端口，origin_direct中的端口可以是[1, 65535]任意单值；
2.protocol中如果是端口范围，origin_direct中的端口也必须是范围，且范围区间必须相同。
对于 HTTP/HTTPS 应用，您仅可以指定单个端口，例如，&quot;tcp/1000&quot;。

     *
     * @param protocol
     */
    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }


    /**
     * get 应用标识。
     *
     * @return
     */
    public String getId() {
        return id;
    }

    /**
     * set 应用标识。
     *
     * @param id
     */
    public void setId(String id) {
        this.id = id;
    }


    /**
     * get origin_dns
     *
     * @return
     */
    public Origin_dns getOrigin_dns() {
        return origin_dns;
    }

    /**
     * set origin_dns
     *
     * @param origin_dns
     */
    public void setOrigin_dns(Origin_dns origin_dns) {
        this.origin_dns = origin_dns;
    }


    /**
     * get 源站端口。与origin_dns成对使用。
     *
     * @return
     */
    public String getOrigin_port() {
        return origin_port;
    }

    /**
     * set 源站端口。与origin_dns成对使用。
     *
     * @param origin_port
     */
    public void setOrigin_port(String origin_port) {
        this.origin_port = origin_port;
    }


    /**
     * get 确定流量如何从边缘传输到源站。
当应用协议是”TCP“是，该值为&quot;direct&quot;，Spectrum会将流量直接发送到您的源站。
当应用协议是”HTTP“或”HTTPS“是，该值为”http“或”https“，Spectrum将应用星盾的HTTP/HTTPS功能，将流量发送到您的源站。
     *
     * @return
     */
    public String getTraffic_type() {
        return traffic_type;
    }

    /**
     * set 确定流量如何从边缘传输到源站。
当应用协议是”TCP“是，该值为&quot;direct&quot;，Spectrum会将流量直接发送到您的源站。
当应用协议是”HTTP“或”HTTPS“是，该值为”http“或”https“，Spectrum将应用星盾的HTTP/HTTPS功能，将流量发送到您的源站。
     *
     * @param traffic_type
     */
    public void setTraffic_type(String traffic_type) {
        this.traffic_type = traffic_type;
    }



    /**
    * set 请注意该值仅适用于TCP情况。
源站的地址列表。可以指定单个端口，例如，&quot;tcp://192.0.2.1:1000&quot;；或者一系列端口，例如，&quot;tcp://192.0.2.1:1000-2000&quot;
origin_direct中的端口与protocol中的端口必须遵循如下规则，
1.origin_direct中如果是单个端口，protocol中的端口可以是[1, 65535]的任意单值；
2.origin_direct中如果是端口范围，protocol中的端口也必须是范围，且范围区间必须相同。

    *
    * @param origin_direct
    */
    public SpectrumApplication origin_direct(List<String> origin_direct) {
        this.origin_direct = origin_direct;
        return this;
    }


    /**
     * set dns
     *
     * @param dns
     */
    public SpectrumApplication dns(Dns dns) {
        this.dns = dns;
        return this;
    }


    /**
     * set 请注意该值仅适用于TCP情况。
开启到源站的的代理协议。默认值off，有效值off/v1/v2。
TCP的有效值，off (默认)/v1/v2。
请注意源站也需要配置对应的协议和版本。

     *
     * @param proxy_protocol
     */
    public SpectrumApplication proxy_protocol(String proxy_protocol) {
        this.proxy_protocol = proxy_protocol;
        return this;
    }


    /**
     * set edge_ips
     *
     * @param edge_ips
     */
    public SpectrumApplication edge_ips(Edge_ips edge_ips) {
        this.edge_ips = edge_ips;
        return this;
    }


    /**
     * set 应用最近修改时间。
     *
     * @param modified_on
     */
    public SpectrumApplication modified_on(String modified_on) {
        this.modified_on = modified_on;
        return this;
    }


    /**
     * set 应用创建时间。
     *
     * @param created_on
     */
    public SpectrumApplication created_on(String created_on) {
        this.created_on = created_on;
        return this;
    }


    /**
     * set 请注意该值仅适用于TCP情况。开启IP访问规则。
     *
     * @param ip_firewall
     */
    public SpectrumApplication ip_firewall(Boolean ip_firewall) {
        this.ip_firewall = ip_firewall;
        return this;
    }


    /**
     * set 星盾Spectrum IP的端口配置。
对于 TCP 应用，您可以指定单个端口，例如，&quot;tcp/1000&quot;；或者一系列端口，例如，&quot;tcp/1000-2000&quot;。
protocol中的端口与origin_direct中的端口必须遵循如下规则，
1.protocol中如果是单个端口，origin_direct中的端口可以是[1, 65535]任意单值；
2.protocol中如果是端口范围，origin_direct中的端口也必须是范围，且范围区间必须相同。
对于 HTTP/HTTPS 应用，您仅可以指定单个端口，例如，&quot;tcp/1000&quot;。

     *
     * @param protocol
     */
    public SpectrumApplication protocol(String protocol) {
        this.protocol = protocol;
        return this;
    }


    /**
     * set 应用标识。
     *
     * @param id
     */
    public SpectrumApplication id(String id) {
        this.id = id;
        return this;
    }


    /**
     * set origin_dns
     *
     * @param origin_dns
     */
    public SpectrumApplication origin_dns(Origin_dns origin_dns) {
        this.origin_dns = origin_dns;
        return this;
    }


    /**
     * set 源站端口。与origin_dns成对使用。
     *
     * @param origin_port
     */
    public SpectrumApplication origin_port(String origin_port) {
        this.origin_port = origin_port;
        return this;
    }


    /**
     * set 确定流量如何从边缘传输到源站。
当应用协议是”TCP“是，该值为&quot;direct&quot;，Spectrum会将流量直接发送到您的源站。
当应用协议是”HTTP“或”HTTPS“是，该值为”http“或”https“，Spectrum将应用星盾的HTTP/HTTPS功能，将流量发送到您的源站。
     *
     * @param traffic_type
     */
    public SpectrumApplication traffic_type(String traffic_type) {
        this.traffic_type = traffic_type;
        return this;
    }



    /**
     * add item to 请注意该值仅适用于TCP情况。
源站的地址列表。可以指定单个端口，例如，&quot;tcp://192.0.2.1:1000&quot;；或者一系列端口，例如，&quot;tcp://192.0.2.1:1000-2000&quot;
origin_direct中的端口与protocol中的端口必须遵循如下规则，
1.origin_direct中如果是单个端口，protocol中的端口可以是[1, 65535]的任意单值；
2.origin_direct中如果是端口范围，protocol中的端口也必须是范围，且范围区间必须相同。

     *
     * @param origin_direct
     */
    public void addOrigin_direct(String origin_direct) {
        if (this.origin_direct == null) {
            this.origin_direct = new ArrayList<>();
        }
        this.origin_direct.add(origin_direct);
    }
}