/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Intelligent Video
 * 智能视频相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.iv.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.iv.model.GetViTemplateRequest;
import com.jdcloud.sdk.service.iv.model.GetViTemplateResponse;
import com.jdcloud.sdk.service.iv.client.GetViTemplateExecutor;
import com.jdcloud.sdk.service.iv.model.GetViJobSummaryRequest;
import com.jdcloud.sdk.service.iv.model.GetViJobSummaryResponse;
import com.jdcloud.sdk.service.iv.client.GetViJobSummaryExecutor;
import com.jdcloud.sdk.service.iv.model.SubmitViJobRequest;
import com.jdcloud.sdk.service.iv.model.SubmitViJobResponse;
import com.jdcloud.sdk.service.iv.client.SubmitViJobExecutor;
import com.jdcloud.sdk.service.iv.model.UpdateViTemplateRequest;
import com.jdcloud.sdk.service.iv.model.UpdateViTemplateResponse;
import com.jdcloud.sdk.service.iv.client.UpdateViTemplateExecutor;
import com.jdcloud.sdk.service.iv.model.ListViTemplatesRequest;
import com.jdcloud.sdk.service.iv.model.ListViTemplatesResponse;
import com.jdcloud.sdk.service.iv.client.ListViTemplatesExecutor;
import com.jdcloud.sdk.service.iv.model.DeleteViTemplateRequest;
import com.jdcloud.sdk.service.iv.model.DeleteViTemplateResponse;
import com.jdcloud.sdk.service.iv.client.DeleteViTemplateExecutor;
import com.jdcloud.sdk.service.iv.model.CreateViTemplateRequest;
import com.jdcloud.sdk.service.iv.model.CreateViTemplateResponse;
import com.jdcloud.sdk.service.iv.client.CreateViTemplateExecutor;

/**
 * ivClient
 */
public class IvClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.3";
    public final static String DefaultEndpoint = "iv.jdcloud-api.com";
    public final static String ServiceName = "iv";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private IvClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 查询视频审查模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetViTemplateResponse getViTemplate(GetViTemplateRequest request) throws JdcloudSdkException {
        return new GetViTemplateExecutor().client(this).execute(request);
    }

    /**
     * 查询视频审查作业摘要
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public GetViJobSummaryResponse getViJobSummary(GetViJobSummaryRequest request) throws JdcloudSdkException {
        return new GetViJobSummaryExecutor().client(this).execute(request);
    }

    /**
     * 提交视频审查作业
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public SubmitViJobResponse submitViJob(SubmitViJobRequest request) throws JdcloudSdkException {
        return new SubmitViJobExecutor().client(this).execute(request);
    }

    /**
     * 修改视频审查模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public UpdateViTemplateResponse updateViTemplate(UpdateViTemplateRequest request) throws JdcloudSdkException {
        return new UpdateViTemplateExecutor().client(this).execute(request);
    }

    /**
     * 查询视频审查模板列表。
支持过滤查询：
  - templateId,eq 精确匹配模板ID，非必选

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public ListViTemplatesResponse listViTemplates(ListViTemplatesRequest request) throws JdcloudSdkException {
        return new ListViTemplatesExecutor().client(this).execute(request);
    }

    /**
     * 删除视频审查模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteViTemplateResponse deleteViTemplate(DeleteViTemplateRequest request) throws JdcloudSdkException {
        return new DeleteViTemplateExecutor().client(this).execute(request);
    }

    /**
     * 创建视频审查模板
     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateViTemplateResponse createViTemplate(CreateViTemplateRequest request) throws JdcloudSdkException {
        return new CreateViTemplateExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public IvClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private IvClient ivClient;

        public DefaultBuilder() {
            ivClient = new IvClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            ivClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            ivClient.httpRequestConfig = config;
            return this;
        }

        public IvClient build() throws JdcloudSdkException {

            if (ivClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                ivClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (ivClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("IvClient build error: jdcloud credentials provider not set");
                }
            }
            if (ivClient.httpRequestConfig == null) {
                ivClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (ivClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("IvClient build error: http request config not set");
                }
            }
            return ivClient;
        }

        public Builder environment(Environment environment) {
            ivClient.environment = environment;
            return this;
        }
    }
}
