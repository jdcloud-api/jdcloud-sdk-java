/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.lavm.model;

import java.util.List;
import java.util.ArrayList;

/**
 * 实例
 */
public class Instance  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 实例ID
     */
    private String instanceId;

    /**
     * 实例状态, 
pending	创建中：调用创建轻量应用云主机接口后的中间状态。
starting	启动中：调用启动轻量应用云主机接口后的中间状态。
running	运行中：轻量应用云主机的稳定运行状态。
stopping	停止中：调用停止轻量应用云主机接口后的中间状态。
stopped	关机：轻量应用云主机处于完全关机的状态。
rebooting 重启中：调用重启轻量应用云主机接口后的中间状态。
resetting	重置系统中：调用更换轻量应用云主机镜像接口后的中间状态。
upgrading	变配中：调用变更轻量应用云主机方案接口后的中间状态。
deleting	删除中：调用删除轻量应用云主机接口后的中间状态。
error	错误：轻量应用云主机系统内部出现未知系统异常导致轻量应用云主机出现不可用状态。

     */
    private String status;

    /**
     * 创建时间
     */
    private String createdTime;

    /**
     * 内网IP地址
     */
    private String innerIpAddress;

    /**
     * 计费方式
     */
    private String chargeType;

    /**
     * 套餐ID
     */
    private String planId;

    /**
     * 公网IP地址
     */
    private String publicIpAddress;

    /**
     * 地域ID
     */
    private String regionId;

    /**
     * 到期时间
     */
    private String expiredTime;

    /**
     * 服务器名称
     */
    private String instanceName;

    /**
     * 服务器业务状态, normal: 正常， overdue: 预付费已到期

     */
    private String businessStatus;

    /**
     * 镜像id
     */
    private String imageId;

    /**
     * 云主机使用的密钥对名称。
     */
    
    private List<String> keyNames;
    /**
     * 绑定域名列表。
     */
    
    private List<InstanceDomain> domains;


    /**
     * get 实例ID
     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 实例状态, 
pending	创建中：调用创建轻量应用云主机接口后的中间状态。
starting	启动中：调用启动轻量应用云主机接口后的中间状态。
running	运行中：轻量应用云主机的稳定运行状态。
stopping	停止中：调用停止轻量应用云主机接口后的中间状态。
stopped	关机：轻量应用云主机处于完全关机的状态。
rebooting 重启中：调用重启轻量应用云主机接口后的中间状态。
resetting	重置系统中：调用更换轻量应用云主机镜像接口后的中间状态。
upgrading	变配中：调用变更轻量应用云主机方案接口后的中间状态。
deleting	删除中：调用删除轻量应用云主机接口后的中间状态。
error	错误：轻量应用云主机系统内部出现未知系统异常导致轻量应用云主机出现不可用状态。

     *
     * @return
     */
    public String getStatus() {
        return status;
    }

    /**
     * set 实例状态, 
pending	创建中：调用创建轻量应用云主机接口后的中间状态。
starting	启动中：调用启动轻量应用云主机接口后的中间状态。
running	运行中：轻量应用云主机的稳定运行状态。
stopping	停止中：调用停止轻量应用云主机接口后的中间状态。
stopped	关机：轻量应用云主机处于完全关机的状态。
rebooting 重启中：调用重启轻量应用云主机接口后的中间状态。
resetting	重置系统中：调用更换轻量应用云主机镜像接口后的中间状态。
upgrading	变配中：调用变更轻量应用云主机方案接口后的中间状态。
deleting	删除中：调用删除轻量应用云主机接口后的中间状态。
error	错误：轻量应用云主机系统内部出现未知系统异常导致轻量应用云主机出现不可用状态。

     *
     * @param status
     */
    public void setStatus(String status) {
        this.status = status;
    }


    /**
     * get 创建时间
     *
     * @return
     */
    public String getCreatedTime() {
        return createdTime;
    }

    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


    /**
     * get 内网IP地址
     *
     * @return
     */
    public String getInnerIpAddress() {
        return innerIpAddress;
    }

    /**
     * set 内网IP地址
     *
     * @param innerIpAddress
     */
    public void setInnerIpAddress(String innerIpAddress) {
        this.innerIpAddress = innerIpAddress;
    }


    /**
     * get 计费方式
     *
     * @return
     */
    public String getChargeType() {
        return chargeType;
    }

    /**
     * set 计费方式
     *
     * @param chargeType
     */
    public void setChargeType(String chargeType) {
        this.chargeType = chargeType;
    }


    /**
     * get 套餐ID
     *
     * @return
     */
    public String getPlanId() {
        return planId;
    }

    /**
     * set 套餐ID
     *
     * @param planId
     */
    public void setPlanId(String planId) {
        this.planId = planId;
    }


    /**
     * get 公网IP地址
     *
     * @return
     */
    public String getPublicIpAddress() {
        return publicIpAddress;
    }

    /**
     * set 公网IP地址
     *
     * @param publicIpAddress
     */
    public void setPublicIpAddress(String publicIpAddress) {
        this.publicIpAddress = publicIpAddress;
    }


    /**
     * get 地域ID
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }


    /**
     * get 到期时间
     *
     * @return
     */
    public String getExpiredTime() {
        return expiredTime;
    }

    /**
     * set 到期时间
     *
     * @param expiredTime
     */
    public void setExpiredTime(String expiredTime) {
        this.expiredTime = expiredTime;
    }


    /**
     * get 服务器名称
     *
     * @return
     */
    public String getInstanceName() {
        return instanceName;
    }

    /**
     * set 服务器名称
     *
     * @param instanceName
     */
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }


    /**
     * get 服务器业务状态, normal: 正常， overdue: 预付费已到期

     *
     * @return
     */
    public String getBusinessStatus() {
        return businessStatus;
    }

    /**
     * set 服务器业务状态, normal: 正常， overdue: 预付费已到期

     *
     * @param businessStatus
     */
    public void setBusinessStatus(String businessStatus) {
        this.businessStatus = businessStatus;
    }


    /**
     * get 镜像id
     *
     * @return
     */
    public String getImageId() {
        return imageId;
    }

    /**
     * set 镜像id
     *
     * @param imageId
     */
    public void setImageId(String imageId) {
        this.imageId = imageId;
    }


    /**
    * get 云主机使用的密钥对名称。
    *
    * @return
    */
    public List<String> getKeyNames() {
        return keyNames;
    }

    /**
    * set 云主机使用的密钥对名称。
    *
    * @param keyNames
    */
    public void setKeyNames(List<String> keyNames) {
        this.keyNames = keyNames;
    }


    /**
    * get 绑定域名列表。
    *
    * @return
    */
    public List<InstanceDomain> getDomains() {
        return domains;
    }

    /**
    * set 绑定域名列表。
    *
    * @param domains
    */
    public void setDomains(List<InstanceDomain> domains) {
        this.domains = domains;
    }



    /**
     * set 实例ID
     *
     * @param instanceId
     */
    public Instance instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 实例状态, 
pending	创建中：调用创建轻量应用云主机接口后的中间状态。
starting	启动中：调用启动轻量应用云主机接口后的中间状态。
running	运行中：轻量应用云主机的稳定运行状态。
stopping	停止中：调用停止轻量应用云主机接口后的中间状态。
stopped	关机：轻量应用云主机处于完全关机的状态。
rebooting 重启中：调用重启轻量应用云主机接口后的中间状态。
resetting	重置系统中：调用更换轻量应用云主机镜像接口后的中间状态。
upgrading	变配中：调用变更轻量应用云主机方案接口后的中间状态。
deleting	删除中：调用删除轻量应用云主机接口后的中间状态。
error	错误：轻量应用云主机系统内部出现未知系统异常导致轻量应用云主机出现不可用状态。

     *
     * @param status
     */
    public Instance status(String status) {
        this.status = status;
        return this;
    }


    /**
     * set 创建时间
     *
     * @param createdTime
     */
    public Instance createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }


    /**
     * set 内网IP地址
     *
     * @param innerIpAddress
     */
    public Instance innerIpAddress(String innerIpAddress) {
        this.innerIpAddress = innerIpAddress;
        return this;
    }


    /**
     * set 计费方式
     *
     * @param chargeType
     */
    public Instance chargeType(String chargeType) {
        this.chargeType = chargeType;
        return this;
    }


    /**
     * set 套餐ID
     *
     * @param planId
     */
    public Instance planId(String planId) {
        this.planId = planId;
        return this;
    }


    /**
     * set 公网IP地址
     *
     * @param publicIpAddress
     */
    public Instance publicIpAddress(String publicIpAddress) {
        this.publicIpAddress = publicIpAddress;
        return this;
    }


    /**
     * set 地域ID
     *
     * @param regionId
     */
    public Instance regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }


    /**
     * set 到期时间
     *
     * @param expiredTime
     */
    public Instance expiredTime(String expiredTime) {
        this.expiredTime = expiredTime;
        return this;
    }


    /**
     * set 服务器名称
     *
     * @param instanceName
     */
    public Instance instanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }


    /**
     * set 服务器业务状态, normal: 正常， overdue: 预付费已到期

     *
     * @param businessStatus
     */
    public Instance businessStatus(String businessStatus) {
        this.businessStatus = businessStatus;
        return this;
    }


    /**
     * set 镜像id
     *
     * @param imageId
     */
    public Instance imageId(String imageId) {
        this.imageId = imageId;
        return this;
    }


    /**
    * set 云主机使用的密钥对名称。
    *
    * @param keyNames
    */
    public Instance keyNames(List<String> keyNames) {
        this.keyNames = keyNames;
        return this;
    }


    /**
    * set 绑定域名列表。
    *
    * @param domains
    */
    public Instance domains(List<InstanceDomain> domains) {
        this.domains = domains;
        return this;
    }



    /**
     * add item to 云主机使用的密钥对名称。
     *
     * @param keyName
     */
    public void addKeyName(String keyName) {
        if (this.keyNames == null) {
            this.keyNames = new ArrayList<>();
        }
        this.keyNames.add(keyName);
    }

    /**
     * add item to 绑定域名列表。
     *
     * @param domain
     */
    public void addDomain(InstanceDomain domain) {
        if (this.domains == null) {
            this.domains = new ArrayList<>();
        }
        this.domains.add(domain);
    }
}