/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * instance
 * 轻量应用云主机实例的相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.lavm.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 轻量应用云主机重置系统。

 */
public class ResetSystemRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 目标镜像ID

     */
    private String imageId;

    /**
     * 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

     */
    
    private List<String> keyNames;
    /**
     * 密码

     */
    private String password;

    /**
     * 密码授权，若存在密匙，则根据此参数决定是否使用密码，若没有密匙，此参数无效，会强制使用密码。
若不使用密码，且密匙对解绑后，用户需重置密码，方可使用密码登录。
此参数在windows系统中必须为yes。

     */
    private String passwordAuth;

    /**
     * 轻量应用云主机的实例ID

     * Required:true
     */
    @Required
    private String instanceId;

    /**
     * 地域

     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 目标镜像ID

     *
     * @return
     */
    public String getImageId() {
        return imageId;
    }

    /**
     * set 目标镜像ID

     *
     * @param imageId
     */
    public void setImageId(String imageId) {
        this.imageId = imageId;
    }


    /**
    * get 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

    *
    * @return
    */
    public List<String> getKeyNames() {
        return keyNames;
    }

    /**
    * set 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

    *
    * @param keyNames
    */
    public void setKeyNames(List<String> keyNames) {
        this.keyNames = keyNames;
    }


    /**
     * get 密码

     *
     * @return
     */
    public String getPassword() {
        return password;
    }

    /**
     * set 密码

     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }


    /**
     * get 密码授权，若存在密匙，则根据此参数决定是否使用密码，若没有密匙，此参数无效，会强制使用密码。
若不使用密码，且密匙对解绑后，用户需重置密码，方可使用密码登录。
此参数在windows系统中必须为yes。

     *
     * @return
     */
    public String getPasswordAuth() {
        return passwordAuth;
    }

    /**
     * set 密码授权，若存在密匙，则根据此参数决定是否使用密码，若没有密匙，此参数无效，会强制使用密码。
若不使用密码，且密匙对解绑后，用户需重置密码，方可使用密码登录。
此参数在windows系统中必须为yes。

     *
     * @param passwordAuth
     */
    public void setPasswordAuth(String passwordAuth) {
        this.passwordAuth = passwordAuth;
    }


    /**
     * get 轻量应用云主机的实例ID

     *
     * @return
     */
    public String getInstanceId() {
        return instanceId;
    }

    /**
     * set 轻量应用云主机的实例ID

     *
     * @param instanceId
     */
    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }


    /**
     * get 地域

     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域

     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 目标镜像ID

     *
     * @param imageId
     */
    public ResetSystemRequest imageId(String imageId) {
        this.imageId = imageId;
        return this;
    }


    /**
    * set 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

    *
    * @param keyNames
    */
    public ResetSystemRequest keyNames(List<String> keyNames) {
        this.keyNames = keyNames;
        return this;
    }


    /**
     * set 密码

     *
     * @param password
     */
    public ResetSystemRequest password(String password) {
        this.password = password;
        return this;
    }


    /**
     * set 密码授权，若存在密匙，则根据此参数决定是否使用密码，若没有密匙，此参数无效，会强制使用密码。
若不使用密码，且密匙对解绑后，用户需重置密码，方可使用密码登录。
此参数在windows系统中必须为yes。

     *
     * @param passwordAuth
     */
    public ResetSystemRequest passwordAuth(String passwordAuth) {
        this.passwordAuth = passwordAuth;
        return this;
    }


    /**
     * set 轻量应用云主机的实例ID

     *
     * @param instanceId
     */
    public ResetSystemRequest instanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }


    /**
     * set 地域

     *
     * @param regionId
     */
    public ResetSystemRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

     *
     * @param keyName
     */
    public void addKeyName(String keyName) {
        if (this.keyNames == null) {
            this.keyNames = new ArrayList<>();
        }
        this.keyNames.add(keyName);
    }
}