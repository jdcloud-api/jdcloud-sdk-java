/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Command
 * 云助手相关命令操作接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.assistant.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.assistant.model.Command;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 
查询用户自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于查询用户保存的自定义命令。

 */
public class DescribeCommandsResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 总的命令数，可以根据该字段来决定是否继续查找
     */
    private Integer totalCount;

    /**
     * commands
     */
    
    private List<Command> commands;


    /**
     * get 总的命令数，可以根据该字段来决定是否继续查找
     *
     * @return
     */
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * set 总的命令数，可以根据该字段来决定是否继续查找
     *
     * @param totalCount
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }


    /**
    * get commands
    *
    * @return
    */
    public List<Command> getCommands() {
        return commands;
    }

    /**
    * set commands
    *
    * @param commands
    */
    public void setCommands(List<Command> commands) {
        this.commands = commands;
    }



    /**
     * set 总的命令数，可以根据该字段来决定是否继续查找
     *
     * @param totalCount
     */
    public DescribeCommandsResult totalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
    * set commands
    *
    * @param commands
    */
    public DescribeCommandsResult commands(List<Command> commands) {
        this.commands = commands;
        return this;
    }



    /**
     * add item to commands
     *
     * @param command
     */
    public void addCommand(Command command) {
        if (this.commands == null) {
            this.commands = new ArrayList<>();
        }
        this.commands.add(command);
    }
}