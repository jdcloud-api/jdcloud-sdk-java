/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 云助手
 * 保存命令、执行命令、取消命令和查询执行结果等
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.assistant.client;

import com.jdcloud.sdk.JdcloudSdkException;
import com.jdcloud.sdk.auth.CredentialsProvider;
import com.jdcloud.sdk.client.Environment;
import com.jdcloud.sdk.client.Jdcloud;
import com.jdcloud.sdk.client.JdcloudClient;
import com.jdcloud.sdk.client.JdcloudValidateException;
import com.jdcloud.sdk.http.HttpRequestConfig;
import com.jdcloud.sdk.service.assistant.model.CreateCommandRequest;
import com.jdcloud.sdk.service.assistant.model.CreateCommandResponse;
import com.jdcloud.sdk.service.assistant.client.CreateCommandExecutor;
import com.jdcloud.sdk.service.assistant.model.AddLogConfigRequest;
import com.jdcloud.sdk.service.assistant.model.AddLogConfigResponse;
import com.jdcloud.sdk.service.assistant.client.AddLogConfigExecutor;
import com.jdcloud.sdk.service.assistant.model.DescribeInvocationsRequest;
import com.jdcloud.sdk.service.assistant.model.DescribeInvocationsResponse;
import com.jdcloud.sdk.service.assistant.client.DescribeInvocationsExecutor;
import com.jdcloud.sdk.service.assistant.model.DescribeCommandsRequest;
import com.jdcloud.sdk.service.assistant.model.DescribeCommandsResponse;
import com.jdcloud.sdk.service.assistant.client.DescribeCommandsExecutor;
import com.jdcloud.sdk.service.assistant.model.DeleteCommandsRequest;
import com.jdcloud.sdk.service.assistant.model.DeleteCommandsResponse;
import com.jdcloud.sdk.service.assistant.client.DeleteCommandsExecutor;
import com.jdcloud.sdk.service.assistant.model.InvokeCommandRequest;
import com.jdcloud.sdk.service.assistant.model.InvokeCommandResponse;
import com.jdcloud.sdk.service.assistant.client.InvokeCommandExecutor;

/**
 * assistantClient
 */
public class AssistantClient extends JdcloudClient {

    public final static String ApiVersion = "v1";
    private final static String UserAgentPrefix = "JdcloudSdkJava";
    public final static String ClientVersion = "1.2.11";
    public final static String DefaultEndpoint = "assistant.jdcloud-api.com";
    public final static String ServiceName = "assistant";
    public final static String UserAgent = UserAgentPrefix + "/" + ClientVersion + " " + ServiceName + "/" + ApiVersion;

    CredentialsProvider credentialsProvider;
    HttpRequestConfig httpRequestConfig;
    Environment environment = new Environment.Builder().endpoint(DefaultEndpoint).build();

    public CredentialsProvider getCredentialsProvider() {
        return credentialsProvider;
    }

    public HttpRequestConfig getHttpRequestConfig() {
        return httpRequestConfig;
    }

    public Environment getEnvironment() {
        return environment;
    }

    public String getUserAgent() {
        return UserAgent;
    }

    public String getServiceName() {
        return ServiceName;
    }

    public String getVersion() {
        return ApiVersion;
    }

    private AssistantClient() {

    }

    public static Builder builder() {
        return new DefaultBuilder();
    }


    /**
     * 
保存用户自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于保存用户自定义命令。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public CreateCommandResponse createCommand(CreateCommandRequest request) throws JdcloudSdkException {
        return new CreateCommandExecutor().client(this).execute(request);
    }

    /**
     * 
配置用户日志信息。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于配置用户日志信息。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public AddLogConfigResponse addLogConfig(AddLogConfigRequest request) throws JdcloudSdkException {
        return new AddLogConfigExecutor().client(this).execute(request);
    }

    /**
     * 
查询命令调用。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于查询命令调用。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeInvocationsResponse describeInvocations(DescribeInvocationsRequest request) throws JdcloudSdkException {
        return new DescribeInvocationsExecutor().client(this).execute(request);
    }

    /**
     * 
查询用户自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于查询用户保存的自定义命令。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DescribeCommandsResponse describeCommands(DescribeCommandsRequest request) throws JdcloudSdkException {
        return new DescribeCommandsExecutor().client(this).execute(request);
    }

    /**
     * 
删除用户自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于删除用户自定义命令。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public DeleteCommandsResponse deleteCommands(DeleteCommandsRequest request) throws JdcloudSdkException {
        return new DeleteCommandsExecutor().client(this).execute(request);
    }

    /**
     * 
执行用户保存的自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于执行用户保存的自定义命令。

     *
     * @param request
     * @return
     * @throws JdcloudSdkException
     */
    public InvokeCommandResponse invokeCommand(InvokeCommandRequest request) throws JdcloudSdkException {
        return new InvokeCommandExecutor().client(this).execute(request);
    }


    public interface Builder {
        public Builder credentialsProvider(CredentialsProvider provider);
        public Builder environment(Environment environment);
        public Builder httpRequestConfig(HttpRequestConfig config);
        public AssistantClient build() throws JdcloudSdkException;
    }

    private static class DefaultBuilder implements Builder {

        private AssistantClient assistantClient;

        public DefaultBuilder() {
            assistantClient = new AssistantClient();
        }

        public DefaultBuilder credentialsProvider(CredentialsProvider provider) {
            assistantClient.credentialsProvider = provider;
            return this;
        }

        public DefaultBuilder httpRequestConfig(HttpRequestConfig config) {
            assistantClient.httpRequestConfig = config;
            return this;
        }

        public AssistantClient build() throws JdcloudSdkException {

            if (assistantClient.credentialsProvider == null) {
                //if credentialsProvider not set, try load jdcloud global default  credentials provider
                assistantClient.credentialsProvider = Jdcloud.defaultInstance().getCredentialsProvider();
                if (assistantClient.credentialsProvider == null) {
                    throw new JdcloudValidateException("AssistantClient build error: jdcloud credentials provider not set");
                }
            }
            if (assistantClient.httpRequestConfig == null) {
                assistantClient.httpRequestConfig = Jdcloud.defaultInstance().getHttpRequestConfig();
                if (assistantClient.httpRequestConfig == null) {
                    throw new JdcloudValidateException("AssistantClient build error: http request config not set");
                }
            }
            return assistantClient;
        }

        public Builder environment(Environment environment) {
            assistantClient.environment = environment;
            return this;
        }
    }
}
