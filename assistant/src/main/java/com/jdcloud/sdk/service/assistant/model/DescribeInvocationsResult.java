/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Invocation
 * 云助手相关命令操作接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.assistant.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.service.assistant.model.Invocation;
import com.jdcloud.sdk.service.JdcloudResult;

/**
 * 
查询命令调用。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于查询命令调用。

 */
public class DescribeInvocationsResult extends JdcloudResult implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 命令调用的总数
     */
    private Integer totalCount;

    /**
     * invocations
     */
    
    private List<Invocation> invocations;


    /**
     * get 命令调用的总数
     *
     * @return
     */
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * set 命令调用的总数
     *
     * @param totalCount
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }


    /**
    * get invocations
    *
    * @return
    */
    public List<Invocation> getInvocations() {
        return invocations;
    }

    /**
    * set invocations
    *
    * @param invocations
    */
    public void setInvocations(List<Invocation> invocations) {
        this.invocations = invocations;
    }



    /**
     * set 命令调用的总数
     *
     * @param totalCount
     */
    public DescribeInvocationsResult totalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }


    /**
    * set invocations
    *
    * @param invocations
    */
    public DescribeInvocationsResult invocations(List<Invocation> invocations) {
        this.invocations = invocations;
        return this;
    }



    /**
     * add item to invocations
     *
     * @param invocation
     */
    public void addInvocation(Invocation invocation) {
        if (this.invocations == null) {
            this.invocations = new ArrayList<>();
        }
        this.invocations.add(invocation);
    }
}