/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Command
 * 云助手相关命令操作接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.assistant.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.common.model.TagFilter;
import com.jdcloud.sdk.service.assistant.model.Parameter;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 
执行用户保存的自定义命令。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于执行用户保存的自定义命令。

 */
public class InvokeCommandRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 命令Id

     * Required:true
     */
    @Required
    private String commandId;

    /**
     * 运行该命令的云主机，与tags查到云主机取并集，一次最多云主机数50

     */
    
    private List<String> instances;
    /**
     * 根据tags确定运行该命令的云主机，与指定instances云主机取并集，一次最多云主机数50

     */
    
    private List<TagFilter> tags;
    /**
     * 配置运行该命令的时刻，格式&#x60;yyyy-MM-dd HH:mm:ss&#x60;。不传该参数，立即执行命令。默认为空，可配置的时间范围为&#x60;当前时间+10minute&#x60;~&#x60;当前时间+6month&#x60;。

     */
    private String execTime;

    /**
     * 超时时间，取值范围：[10, 86400], 超过该时间后，尚未执行完的命令会置为失败。默认60s

     */
    private Integer timeout;

    /**
     * 用户名，执行该命令时的用户身份。在linux上默认是root，windows上默认是administrator。长度小于256

     */
    private String username;

    /**
     * 命令执行路径，在linux上默认为用户的home目录：/root, 在windows上默认为：C:\Windows\system32

     */
    private String workdir;

    /**
     * 和用户名相匹配的密码，仅适用于windows系统

     */
    private String windowsPassword;

    /**
     * 脚本中是否启用参数，true：启用，false：不启用。

     */
    private Boolean enableParameter;

    /**
     * 用户自定义参数和对应的参数值，数量不超过20。

     */
    
    private List<Parameter> parameters;
    /**
     * 地域ID。
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 命令Id

     *
     * @return
     */
    public String getCommandId() {
        return commandId;
    }

    /**
     * set 命令Id

     *
     * @param commandId
     */
    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }


    /**
    * get 运行该命令的云主机，与tags查到云主机取并集，一次最多云主机数50

    *
    * @return
    */
    public List<String> getInstances() {
        return instances;
    }

    /**
    * set 运行该命令的云主机，与tags查到云主机取并集，一次最多云主机数50

    *
    * @param instances
    */
    public void setInstances(List<String> instances) {
        this.instances = instances;
    }


    /**
    * get 根据tags确定运行该命令的云主机，与指定instances云主机取并集，一次最多云主机数50

    *
    * @return
    */
    public List<TagFilter> getTags() {
        return tags;
    }

    /**
    * set 根据tags确定运行该命令的云主机，与指定instances云主机取并集，一次最多云主机数50

    *
    * @param tags
    */
    public void setTags(List<TagFilter> tags) {
        this.tags = tags;
    }


    /**
     * get 配置运行该命令的时刻，格式&#x60;yyyy-MM-dd HH:mm:ss&#x60;。不传该参数，立即执行命令。默认为空，可配置的时间范围为&#x60;当前时间+10minute&#x60;~&#x60;当前时间+6month&#x60;。

     *
     * @return
     */
    public String getExecTime() {
        return execTime;
    }

    /**
     * set 配置运行该命令的时刻，格式&#x60;yyyy-MM-dd HH:mm:ss&#x60;。不传该参数，立即执行命令。默认为空，可配置的时间范围为&#x60;当前时间+10minute&#x60;~&#x60;当前时间+6month&#x60;。

     *
     * @param execTime
     */
    public void setExecTime(String execTime) {
        this.execTime = execTime;
    }


    /**
     * get 超时时间，取值范围：[10, 86400], 超过该时间后，尚未执行完的命令会置为失败。默认60s

     *
     * @return
     */
    public Integer getTimeout() {
        return timeout;
    }

    /**
     * set 超时时间，取值范围：[10, 86400], 超过该时间后，尚未执行完的命令会置为失败。默认60s

     *
     * @param timeout
     */
    public void setTimeout(Integer timeout) {
        this.timeout = timeout;
    }


    /**
     * get 用户名，执行该命令时的用户身份。在linux上默认是root，windows上默认是administrator。长度小于256

     *
     * @return
     */
    public String getUsername() {
        return username;
    }

    /**
     * set 用户名，执行该命令时的用户身份。在linux上默认是root，windows上默认是administrator。长度小于256

     *
     * @param username
     */
    public void setUsername(String username) {
        this.username = username;
    }


    /**
     * get 命令执行路径，在linux上默认为用户的home目录：/root, 在windows上默认为：C:\Windows\system32

     *
     * @return
     */
    public String getWorkdir() {
        return workdir;
    }

    /**
     * set 命令执行路径，在linux上默认为用户的home目录：/root, 在windows上默认为：C:\Windows\system32

     *
     * @param workdir
     */
    public void setWorkdir(String workdir) {
        this.workdir = workdir;
    }


    /**
     * get 和用户名相匹配的密码，仅适用于windows系统

     *
     * @return
     */
    public String getWindowsPassword() {
        return windowsPassword;
    }

    /**
     * set 和用户名相匹配的密码，仅适用于windows系统

     *
     * @param windowsPassword
     */
    public void setWindowsPassword(String windowsPassword) {
        this.windowsPassword = windowsPassword;
    }


    /**
     * get 脚本中是否启用参数，true：启用，false：不启用。

     *
     * @return
     */
    public Boolean getEnableParameter() {
        return enableParameter;
    }

    /**
     * set 脚本中是否启用参数，true：启用，false：不启用。

     *
     * @param enableParameter
     */
    public void setEnableParameter(Boolean enableParameter) {
        this.enableParameter = enableParameter;
    }


    /**
    * get 用户自定义参数和对应的参数值，数量不超过20。

    *
    * @return
    */
    public List<Parameter> getParameters() {
        return parameters;
    }

    /**
    * set 用户自定义参数和对应的参数值，数量不超过20。

    *
    * @param parameters
    */
    public void setParameters(List<Parameter> parameters) {
        this.parameters = parameters;
    }


    /**
     * get 地域ID。
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 命令Id

     *
     * @param commandId
     */
    public InvokeCommandRequest commandId(String commandId) {
        this.commandId = commandId;
        return this;
    }


    /**
    * set 运行该命令的云主机，与tags查到云主机取并集，一次最多云主机数50

    *
    * @param instances
    */
    public InvokeCommandRequest instances(List<String> instances) {
        this.instances = instances;
        return this;
    }


    /**
    * set 根据tags确定运行该命令的云主机，与指定instances云主机取并集，一次最多云主机数50

    *
    * @param tags
    */
    public InvokeCommandRequest tags(List<TagFilter> tags) {
        this.tags = tags;
        return this;
    }


    /**
     * set 配置运行该命令的时刻，格式&#x60;yyyy-MM-dd HH:mm:ss&#x60;。不传该参数，立即执行命令。默认为空，可配置的时间范围为&#x60;当前时间+10minute&#x60;~&#x60;当前时间+6month&#x60;。

     *
     * @param execTime
     */
    public InvokeCommandRequest execTime(String execTime) {
        this.execTime = execTime;
        return this;
    }


    /**
     * set 超时时间，取值范围：[10, 86400], 超过该时间后，尚未执行完的命令会置为失败。默认60s

     *
     * @param timeout
     */
    public InvokeCommandRequest timeout(Integer timeout) {
        this.timeout = timeout;
        return this;
    }


    /**
     * set 用户名，执行该命令时的用户身份。在linux上默认是root，windows上默认是administrator。长度小于256

     *
     * @param username
     */
    public InvokeCommandRequest username(String username) {
        this.username = username;
        return this;
    }


    /**
     * set 命令执行路径，在linux上默认为用户的home目录：/root, 在windows上默认为：C:\Windows\system32

     *
     * @param workdir
     */
    public InvokeCommandRequest workdir(String workdir) {
        this.workdir = workdir;
        return this;
    }


    /**
     * set 和用户名相匹配的密码，仅适用于windows系统

     *
     * @param windowsPassword
     */
    public InvokeCommandRequest windowsPassword(String windowsPassword) {
        this.windowsPassword = windowsPassword;
        return this;
    }


    /**
     * set 脚本中是否启用参数，true：启用，false：不启用。

     *
     * @param enableParameter
     */
    public InvokeCommandRequest enableParameter(Boolean enableParameter) {
        this.enableParameter = enableParameter;
        return this;
    }


    /**
    * set 用户自定义参数和对应的参数值，数量不超过20。

    *
    * @param parameters
    */
    public InvokeCommandRequest parameters(List<Parameter> parameters) {
        this.parameters = parameters;
        return this;
    }


    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public InvokeCommandRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 运行该命令的云主机，与tags查到云主机取并集，一次最多云主机数50

     *
     * @param instance
     */
    public void addInstance(String instance) {
        if (this.instances == null) {
            this.instances = new ArrayList<>();
        }
        this.instances.add(instance);
    }

    /**
     * add item to 根据tags确定运行该命令的云主机，与指定instances云主机取并集，一次最多云主机数50

     *
     * @param tag
     */
    public void addTag(TagFilter tag) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tag);
    }

    /**
     * add item to 用户自定义参数和对应的参数值，数量不超过20。

     *
     * @param parameter
     */
    public void addParameter(Parameter parameter) {
        if (this.parameters == null) {
            this.parameters = new ArrayList<>();
        }
        this.parameters.add(parameter);
    }
}