/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Invocation
 * 云助手相关命令操作接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.assistant.model;

import java.util.List;
import java.util.ArrayList;
import com.jdcloud.sdk.annotation.Required;
import com.jdcloud.sdk.service.JdcloudRequest;

/**
 * 
查询命令调用。

详细操作说明请参考帮助文档：[用户自定义命令概述](https://docs.jdcloud.com/cn/virtual-machines/assistant-overview)

## 接口说明
- 该接口用于查询命令调用。

 */
public class DescribeInvocationsRequest extends JdcloudRequest implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 页数，默认是第一页，取值1

     */
    private Integer pageNumber;

    /**
     * 每页大小，默认20, 最大100

     */
    private Integer pageSize;

    /**
     * 命令执行Id

     */
    
    private List<String> invokeIds;
    /**
     * 命令Id

     */
    
    private List<String> commandIds;
    /**
     * 命令执行状态

     */
    
    private List<String> status;
    /**
     * 命令名字

     */
    
    private List<String> commandNames;
    /**
     * 命令类型， shell or powershell

     */
    
    private List<String> commandTypes;
    /**
     * 命令执行用户

     */
    
    private List<String> userNames;
    /**
     * 地域ID。
     * Required:true
     */
    @Required
    private String regionId;



    /**
     * get 页数，默认是第一页，取值1

     *
     * @return
     */
    public Integer getPageNumber() {
        return pageNumber;
    }

    /**
     * set 页数，默认是第一页，取值1

     *
     * @param pageNumber
     */
    public void setPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
    }


    /**
     * get 每页大小，默认20, 最大100

     *
     * @return
     */
    public Integer getPageSize() {
        return pageSize;
    }

    /**
     * set 每页大小，默认20, 最大100

     *
     * @param pageSize
     */
    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }


    /**
    * get 命令执行Id

    *
    * @return
    */
    public List<String> getInvokeIds() {
        return invokeIds;
    }

    /**
    * set 命令执行Id

    *
    * @param invokeIds
    */
    public void setInvokeIds(List<String> invokeIds) {
        this.invokeIds = invokeIds;
    }


    /**
    * get 命令Id

    *
    * @return
    */
    public List<String> getCommandIds() {
        return commandIds;
    }

    /**
    * set 命令Id

    *
    * @param commandIds
    */
    public void setCommandIds(List<String> commandIds) {
        this.commandIds = commandIds;
    }


    /**
    * get 命令执行状态

    *
    * @return
    */
    public List<String> getStatus() {
        return status;
    }

    /**
    * set 命令执行状态

    *
    * @param status
    */
    public void setStatus(List<String> status) {
        this.status = status;
    }


    /**
    * get 命令名字

    *
    * @return
    */
    public List<String> getCommandNames() {
        return commandNames;
    }

    /**
    * set 命令名字

    *
    * @param commandNames
    */
    public void setCommandNames(List<String> commandNames) {
        this.commandNames = commandNames;
    }


    /**
    * get 命令类型， shell or powershell

    *
    * @return
    */
    public List<String> getCommandTypes() {
        return commandTypes;
    }

    /**
    * set 命令类型， shell or powershell

    *
    * @param commandTypes
    */
    public void setCommandTypes(List<String> commandTypes) {
        this.commandTypes = commandTypes;
    }


    /**
    * get 命令执行用户

    *
    * @return
    */
    public List<String> getUserNames() {
        return userNames;
    }

    /**
    * set 命令执行用户

    *
    * @param userNames
    */
    public void setUserNames(List<String> userNames) {
        this.userNames = userNames;
    }


    /**
     * get 地域ID。
     *
     * @return
     */
    public String getRegionId() {
        return regionId;
    }

    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }



    /**
     * set 页数，默认是第一页，取值1

     *
     * @param pageNumber
     */
    public DescribeInvocationsRequest pageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }


    /**
     * set 每页大小，默认20, 最大100

     *
     * @param pageSize
     */
    public DescribeInvocationsRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }


    /**
    * set 命令执行Id

    *
    * @param invokeIds
    */
    public DescribeInvocationsRequest invokeIds(List<String> invokeIds) {
        this.invokeIds = invokeIds;
        return this;
    }


    /**
    * set 命令Id

    *
    * @param commandIds
    */
    public DescribeInvocationsRequest commandIds(List<String> commandIds) {
        this.commandIds = commandIds;
        return this;
    }


    /**
    * set 命令执行状态

    *
    * @param status
    */
    public DescribeInvocationsRequest status(List<String> status) {
        this.status = status;
        return this;
    }


    /**
    * set 命令名字

    *
    * @param commandNames
    */
    public DescribeInvocationsRequest commandNames(List<String> commandNames) {
        this.commandNames = commandNames;
        return this;
    }


    /**
    * set 命令类型， shell or powershell

    *
    * @param commandTypes
    */
    public DescribeInvocationsRequest commandTypes(List<String> commandTypes) {
        this.commandTypes = commandTypes;
        return this;
    }


    /**
    * set 命令执行用户

    *
    * @param userNames
    */
    public DescribeInvocationsRequest userNames(List<String> userNames) {
        this.userNames = userNames;
        return this;
    }


    /**
     * set 地域ID。
     *
     * @param regionId
     */
    public DescribeInvocationsRequest regionId(String regionId) {
        this.regionId = regionId;
        return this;
    }



    /**
     * add item to 命令执行Id

     *
     * @param invokeId
     */
    public void addInvokeId(String invokeId) {
        if (this.invokeIds == null) {
            this.invokeIds = new ArrayList<>();
        }
        this.invokeIds.add(invokeId);
    }

    /**
     * add item to 命令Id

     *
     * @param commandId
     */
    public void addCommandId(String commandId) {
        if (this.commandIds == null) {
            this.commandIds = new ArrayList<>();
        }
        this.commandIds.add(commandId);
    }

    /**
     * add item to 命令执行状态

     *
     * @param statu
     */
    public void addStatu(String statu) {
        if (this.status == null) {
            this.status = new ArrayList<>();
        }
        this.status.add(statu);
    }

    /**
     * add item to 命令名字

     *
     * @param commandName
     */
    public void addCommandName(String commandName) {
        if (this.commandNames == null) {
            this.commandNames = new ArrayList<>();
        }
        this.commandNames.add(commandName);
    }

    /**
     * add item to 命令类型， shell or powershell

     *
     * @param commandType
     */
    public void addCommandType(String commandType) {
        if (this.commandTypes == null) {
            this.commandTypes = new ArrayList<>();
        }
        this.commandTypes.add(commandType);
    }

    /**
     * add item to 命令执行用户

     *
     * @param userName
     */
    public void addUserName(String userName) {
        if (this.userNames == null) {
            this.userNames = new ArrayList<>();
        }
        this.userNames.add(userName);
    }
}