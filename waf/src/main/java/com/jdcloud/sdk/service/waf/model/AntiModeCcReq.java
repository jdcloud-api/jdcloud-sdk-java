/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.waf.model;

import com.jdcloud.sdk.annotation.Required;

/**
 * antiModeCcReq
 */
public class AntiModeCcReq  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * WAF实例id
     * Required:true
     */
    @Required
    private String wafInstanceId;

    /**
     * 域名
     * Required:true
     */
    @Required
    private String domain;

    /**
     * 0表示正常，1表示攻击紧急，2全局模式 3单ip模式
     */
    private Integer ccMode;

    /**
     * cc qps配置，ccMode 为0/1时， 该字段传0， 表示不可配；  ccMode为2/3时，qps限制[1-20000]
     */
    private Integer qps;

    /**
     * 动作配置，默认为告警，支持1，2，3, 5, 7五种类型动作
     */
    private DenyActionCfg action;


    /**
     * get WAF实例id
     *
     * @return
     */
    public String getWafInstanceId() {
        return wafInstanceId;
    }

    /**
     * set WAF实例id
     *
     * @param wafInstanceId
     */
    public void setWafInstanceId(String wafInstanceId) {
        this.wafInstanceId = wafInstanceId;
    }

    /**
     * get 域名
     *
     * @return
     */
    public String getDomain() {
        return domain;
    }

    /**
     * set 域名
     *
     * @param domain
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }

    /**
     * get 0表示正常，1表示攻击紧急，2全局模式 3单ip模式
     *
     * @return
     */
    public Integer getCcMode() {
        return ccMode;
    }

    /**
     * set 0表示正常，1表示攻击紧急，2全局模式 3单ip模式
     *
     * @param ccMode
     */
    public void setCcMode(Integer ccMode) {
        this.ccMode = ccMode;
    }

    /**
     * get cc qps配置，ccMode 为0/1时， 该字段传0， 表示不可配；  ccMode为2/3时，qps限制[1-20000]
     *
     * @return
     */
    public Integer getQps() {
        return qps;
    }

    /**
     * set cc qps配置，ccMode 为0/1时， 该字段传0， 表示不可配；  ccMode为2/3时，qps限制[1-20000]
     *
     * @param qps
     */
    public void setQps(Integer qps) {
        this.qps = qps;
    }

    /**
     * get 动作配置，默认为告警，支持1，2，3, 5, 7五种类型动作
     *
     * @return
     */
    public DenyActionCfg getAction() {
        return action;
    }

    /**
     * set 动作配置，默认为告警，支持1，2，3, 5, 7五种类型动作
     *
     * @param action
     */
    public void setAction(DenyActionCfg action) {
        this.action = action;
    }


    /**
     * set WAF实例id
     *
     * @param wafInstanceId
     */
    public AntiModeCcReq wafInstanceId(String wafInstanceId) {
        this.wafInstanceId = wafInstanceId;
        return this;
    }

    /**
     * set 域名
     *
     * @param domain
     */
    public AntiModeCcReq domain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * set 0表示正常，1表示攻击紧急，2全局模式 3单ip模式
     *
     * @param ccMode
     */
    public AntiModeCcReq ccMode(Integer ccMode) {
        this.ccMode = ccMode;
        return this;
    }

    /**
     * set cc qps配置，ccMode 为0/1时， 该字段传0， 表示不可配；  ccMode为2/3时，qps限制[1-20000]
     *
     * @param qps
     */
    public AntiModeCcReq qps(Integer qps) {
        this.qps = qps;
        return this;
    }

    /**
     * set 动作配置，默认为告警，支持1，2，3, 5, 7五种类型动作
     *
     * @param action
     */
    public AntiModeCcReq action(DenyActionCfg action) {
        this.action = action;
        return this;
    }


}