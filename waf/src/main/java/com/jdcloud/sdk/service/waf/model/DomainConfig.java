/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.waf.model;


/**
 * domainConfig
 */
public class DomainConfig  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 域名
     */
    private String domain;

    /**
     * cname域名
     */
    private String cname;

    /**
     * 绑定的证书名称
     */
    private String certName;

    /**
     * 网站lb配置
     */
    private LbConf lbConf;

    /**
     * 网站dns配置
     */
    private DnsStatus dnsStatus;

    /**
     * 网站waf防护配置
     */
    private WafConf wafConf;

    /**
     * 网站cc防护配置
     */
    private CcConf ccConf;

    /**
     * 网站acl防护配置
     */
    private AclConf aclConf;

    /**
     * 网站恶意ip防护配置
     */
    private IpbanConf ipbanConf;

    /**
     * 网站过去两天攻击情况
     */
    private LastAttackReport lastAttackReport;

    /**
     * 网站防爬虫防护配置
     */
    private EnableConf antispiderConf;

    /**
     * 网站防篡改防护配置
     */
    private EnableConf webcacheConf;

    /**
     * 是否关闭waf， 1表示是
     */
    private Integer disableWaf;

    /**
     * 网站白名单防护配置
     */
    private SkipConf skipConf;

    /**
     * 网站黑名单防护配置
     */
    private DenyConf denyConf;

    /**
     * 网站web自定义规则防护配置
     */
    private WebUserdefConf webUserdefConf;

    /**
     * 网站限速规则防护配置
     */
    private RatelimitConf ratelimitConf;

    /**
     * 网站自定义页面配置
     */
    private UserDefPageConf userDefPageConf;

    /**
     * 网站请求头管理防护配置
     */
    private FilterHeaderConf filterHeaderConf;

    /**
     * 网站敏感信息防护配置
     */
    private FilterSenseConf filterSenseConf;

    /**
     * 网站智能语义引擎防护配置
     */
    private IntSemConf intSemConf;

    /**
     * 网站uri重写规则配置
     */
    private UriRewriteConf uriRewriteConf;

    /**
     * 网站威胁情报防护配置
     */
    private EnableConf threatinfoConf;

    /**
     * proxy缓存配置
     */
    private EnableConf proxycacheConf;

    /**
     * bot配置
     */
    private EnableConf botConf;

    /**
     * risk配置
     */
    private RiskConf riskConf;


    /**
     * get 域名
     *
     * @return
     */
    public String getDomain() {
        return domain;
    }

    /**
     * set 域名
     *
     * @param domain
     */
    public void setDomain(String domain) {
        this.domain = domain;
    }

    /**
     * get cname域名
     *
     * @return
     */
    public String getCname() {
        return cname;
    }

    /**
     * set cname域名
     *
     * @param cname
     */
    public void setCname(String cname) {
        this.cname = cname;
    }

    /**
     * get 绑定的证书名称
     *
     * @return
     */
    public String getCertName() {
        return certName;
    }

    /**
     * set 绑定的证书名称
     *
     * @param certName
     */
    public void setCertName(String certName) {
        this.certName = certName;
    }

    /**
     * get 网站lb配置
     *
     * @return
     */
    public LbConf getLbConf() {
        return lbConf;
    }

    /**
     * set 网站lb配置
     *
     * @param lbConf
     */
    public void setLbConf(LbConf lbConf) {
        this.lbConf = lbConf;
    }

    /**
     * get 网站dns配置
     *
     * @return
     */
    public DnsStatus getDnsStatus() {
        return dnsStatus;
    }

    /**
     * set 网站dns配置
     *
     * @param dnsStatus
     */
    public void setDnsStatus(DnsStatus dnsStatus) {
        this.dnsStatus = dnsStatus;
    }

    /**
     * get 网站waf防护配置
     *
     * @return
     */
    public WafConf getWafConf() {
        return wafConf;
    }

    /**
     * set 网站waf防护配置
     *
     * @param wafConf
     */
    public void setWafConf(WafConf wafConf) {
        this.wafConf = wafConf;
    }

    /**
     * get 网站cc防护配置
     *
     * @return
     */
    public CcConf getCcConf() {
        return ccConf;
    }

    /**
     * set 网站cc防护配置
     *
     * @param ccConf
     */
    public void setCcConf(CcConf ccConf) {
        this.ccConf = ccConf;
    }

    /**
     * get 网站acl防护配置
     *
     * @return
     */
    public AclConf getAclConf() {
        return aclConf;
    }

    /**
     * set 网站acl防护配置
     *
     * @param aclConf
     */
    public void setAclConf(AclConf aclConf) {
        this.aclConf = aclConf;
    }

    /**
     * get 网站恶意ip防护配置
     *
     * @return
     */
    public IpbanConf getIpbanConf() {
        return ipbanConf;
    }

    /**
     * set 网站恶意ip防护配置
     *
     * @param ipbanConf
     */
    public void setIpbanConf(IpbanConf ipbanConf) {
        this.ipbanConf = ipbanConf;
    }

    /**
     * get 网站过去两天攻击情况
     *
     * @return
     */
    public LastAttackReport getLastAttackReport() {
        return lastAttackReport;
    }

    /**
     * set 网站过去两天攻击情况
     *
     * @param lastAttackReport
     */
    public void setLastAttackReport(LastAttackReport lastAttackReport) {
        this.lastAttackReport = lastAttackReport;
    }

    /**
     * get 网站防爬虫防护配置
     *
     * @return
     */
    public EnableConf getAntispiderConf() {
        return antispiderConf;
    }

    /**
     * set 网站防爬虫防护配置
     *
     * @param antispiderConf
     */
    public void setAntispiderConf(EnableConf antispiderConf) {
        this.antispiderConf = antispiderConf;
    }

    /**
     * get 网站防篡改防护配置
     *
     * @return
     */
    public EnableConf getWebcacheConf() {
        return webcacheConf;
    }

    /**
     * set 网站防篡改防护配置
     *
     * @param webcacheConf
     */
    public void setWebcacheConf(EnableConf webcacheConf) {
        this.webcacheConf = webcacheConf;
    }

    /**
     * get 是否关闭waf， 1表示是
     *
     * @return
     */
    public Integer getDisableWaf() {
        return disableWaf;
    }

    /**
     * set 是否关闭waf， 1表示是
     *
     * @param disableWaf
     */
    public void setDisableWaf(Integer disableWaf) {
        this.disableWaf = disableWaf;
    }

    /**
     * get 网站白名单防护配置
     *
     * @return
     */
    public SkipConf getSkipConf() {
        return skipConf;
    }

    /**
     * set 网站白名单防护配置
     *
     * @param skipConf
     */
    public void setSkipConf(SkipConf skipConf) {
        this.skipConf = skipConf;
    }

    /**
     * get 网站黑名单防护配置
     *
     * @return
     */
    public DenyConf getDenyConf() {
        return denyConf;
    }

    /**
     * set 网站黑名单防护配置
     *
     * @param denyConf
     */
    public void setDenyConf(DenyConf denyConf) {
        this.denyConf = denyConf;
    }

    /**
     * get 网站web自定义规则防护配置
     *
     * @return
     */
    public WebUserdefConf getWebUserdefConf() {
        return webUserdefConf;
    }

    /**
     * set 网站web自定义规则防护配置
     *
     * @param webUserdefConf
     */
    public void setWebUserdefConf(WebUserdefConf webUserdefConf) {
        this.webUserdefConf = webUserdefConf;
    }

    /**
     * get 网站限速规则防护配置
     *
     * @return
     */
    public RatelimitConf getRatelimitConf() {
        return ratelimitConf;
    }

    /**
     * set 网站限速规则防护配置
     *
     * @param ratelimitConf
     */
    public void setRatelimitConf(RatelimitConf ratelimitConf) {
        this.ratelimitConf = ratelimitConf;
    }

    /**
     * get 网站自定义页面配置
     *
     * @return
     */
    public UserDefPageConf getUserDefPageConf() {
        return userDefPageConf;
    }

    /**
     * set 网站自定义页面配置
     *
     * @param userDefPageConf
     */
    public void setUserDefPageConf(UserDefPageConf userDefPageConf) {
        this.userDefPageConf = userDefPageConf;
    }

    /**
     * get 网站请求头管理防护配置
     *
     * @return
     */
    public FilterHeaderConf getFilterHeaderConf() {
        return filterHeaderConf;
    }

    /**
     * set 网站请求头管理防护配置
     *
     * @param filterHeaderConf
     */
    public void setFilterHeaderConf(FilterHeaderConf filterHeaderConf) {
        this.filterHeaderConf = filterHeaderConf;
    }

    /**
     * get 网站敏感信息防护配置
     *
     * @return
     */
    public FilterSenseConf getFilterSenseConf() {
        return filterSenseConf;
    }

    /**
     * set 网站敏感信息防护配置
     *
     * @param filterSenseConf
     */
    public void setFilterSenseConf(FilterSenseConf filterSenseConf) {
        this.filterSenseConf = filterSenseConf;
    }

    /**
     * get 网站智能语义引擎防护配置
     *
     * @return
     */
    public IntSemConf getIntSemConf() {
        return intSemConf;
    }

    /**
     * set 网站智能语义引擎防护配置
     *
     * @param intSemConf
     */
    public void setIntSemConf(IntSemConf intSemConf) {
        this.intSemConf = intSemConf;
    }

    /**
     * get 网站uri重写规则配置
     *
     * @return
     */
    public UriRewriteConf getUriRewriteConf() {
        return uriRewriteConf;
    }

    /**
     * set 网站uri重写规则配置
     *
     * @param uriRewriteConf
     */
    public void setUriRewriteConf(UriRewriteConf uriRewriteConf) {
        this.uriRewriteConf = uriRewriteConf;
    }

    /**
     * get 网站威胁情报防护配置
     *
     * @return
     */
    public EnableConf getThreatinfoConf() {
        return threatinfoConf;
    }

    /**
     * set 网站威胁情报防护配置
     *
     * @param threatinfoConf
     */
    public void setThreatinfoConf(EnableConf threatinfoConf) {
        this.threatinfoConf = threatinfoConf;
    }

    /**
     * get proxy缓存配置
     *
     * @return
     */
    public EnableConf getProxycacheConf() {
        return proxycacheConf;
    }

    /**
     * set proxy缓存配置
     *
     * @param proxycacheConf
     */
    public void setProxycacheConf(EnableConf proxycacheConf) {
        this.proxycacheConf = proxycacheConf;
    }

    /**
     * get bot配置
     *
     * @return
     */
    public EnableConf getBotConf() {
        return botConf;
    }

    /**
     * set bot配置
     *
     * @param botConf
     */
    public void setBotConf(EnableConf botConf) {
        this.botConf = botConf;
    }

    /**
     * get risk配置
     *
     * @return
     */
    public RiskConf getRiskConf() {
        return riskConf;
    }

    /**
     * set risk配置
     *
     * @param riskConf
     */
    public void setRiskConf(RiskConf riskConf) {
        this.riskConf = riskConf;
    }


    /**
     * set 域名
     *
     * @param domain
     */
    public DomainConfig domain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * set cname域名
     *
     * @param cname
     */
    public DomainConfig cname(String cname) {
        this.cname = cname;
        return this;
    }

    /**
     * set 绑定的证书名称
     *
     * @param certName
     */
    public DomainConfig certName(String certName) {
        this.certName = certName;
        return this;
    }

    /**
     * set 网站lb配置
     *
     * @param lbConf
     */
    public DomainConfig lbConf(LbConf lbConf) {
        this.lbConf = lbConf;
        return this;
    }

    /**
     * set 网站dns配置
     *
     * @param dnsStatus
     */
    public DomainConfig dnsStatus(DnsStatus dnsStatus) {
        this.dnsStatus = dnsStatus;
        return this;
    }

    /**
     * set 网站waf防护配置
     *
     * @param wafConf
     */
    public DomainConfig wafConf(WafConf wafConf) {
        this.wafConf = wafConf;
        return this;
    }

    /**
     * set 网站cc防护配置
     *
     * @param ccConf
     */
    public DomainConfig ccConf(CcConf ccConf) {
        this.ccConf = ccConf;
        return this;
    }

    /**
     * set 网站acl防护配置
     *
     * @param aclConf
     */
    public DomainConfig aclConf(AclConf aclConf) {
        this.aclConf = aclConf;
        return this;
    }

    /**
     * set 网站恶意ip防护配置
     *
     * @param ipbanConf
     */
    public DomainConfig ipbanConf(IpbanConf ipbanConf) {
        this.ipbanConf = ipbanConf;
        return this;
    }

    /**
     * set 网站过去两天攻击情况
     *
     * @param lastAttackReport
     */
    public DomainConfig lastAttackReport(LastAttackReport lastAttackReport) {
        this.lastAttackReport = lastAttackReport;
        return this;
    }

    /**
     * set 网站防爬虫防护配置
     *
     * @param antispiderConf
     */
    public DomainConfig antispiderConf(EnableConf antispiderConf) {
        this.antispiderConf = antispiderConf;
        return this;
    }

    /**
     * set 网站防篡改防护配置
     *
     * @param webcacheConf
     */
    public DomainConfig webcacheConf(EnableConf webcacheConf) {
        this.webcacheConf = webcacheConf;
        return this;
    }

    /**
     * set 是否关闭waf， 1表示是
     *
     * @param disableWaf
     */
    public DomainConfig disableWaf(Integer disableWaf) {
        this.disableWaf = disableWaf;
        return this;
    }

    /**
     * set 网站白名单防护配置
     *
     * @param skipConf
     */
    public DomainConfig skipConf(SkipConf skipConf) {
        this.skipConf = skipConf;
        return this;
    }

    /**
     * set 网站黑名单防护配置
     *
     * @param denyConf
     */
    public DomainConfig denyConf(DenyConf denyConf) {
        this.denyConf = denyConf;
        return this;
    }

    /**
     * set 网站web自定义规则防护配置
     *
     * @param webUserdefConf
     */
    public DomainConfig webUserdefConf(WebUserdefConf webUserdefConf) {
        this.webUserdefConf = webUserdefConf;
        return this;
    }

    /**
     * set 网站限速规则防护配置
     *
     * @param ratelimitConf
     */
    public DomainConfig ratelimitConf(RatelimitConf ratelimitConf) {
        this.ratelimitConf = ratelimitConf;
        return this;
    }

    /**
     * set 网站自定义页面配置
     *
     * @param userDefPageConf
     */
    public DomainConfig userDefPageConf(UserDefPageConf userDefPageConf) {
        this.userDefPageConf = userDefPageConf;
        return this;
    }

    /**
     * set 网站请求头管理防护配置
     *
     * @param filterHeaderConf
     */
    public DomainConfig filterHeaderConf(FilterHeaderConf filterHeaderConf) {
        this.filterHeaderConf = filterHeaderConf;
        return this;
    }

    /**
     * set 网站敏感信息防护配置
     *
     * @param filterSenseConf
     */
    public DomainConfig filterSenseConf(FilterSenseConf filterSenseConf) {
        this.filterSenseConf = filterSenseConf;
        return this;
    }

    /**
     * set 网站智能语义引擎防护配置
     *
     * @param intSemConf
     */
    public DomainConfig intSemConf(IntSemConf intSemConf) {
        this.intSemConf = intSemConf;
        return this;
    }

    /**
     * set 网站uri重写规则配置
     *
     * @param uriRewriteConf
     */
    public DomainConfig uriRewriteConf(UriRewriteConf uriRewriteConf) {
        this.uriRewriteConf = uriRewriteConf;
        return this;
    }

    /**
     * set 网站威胁情报防护配置
     *
     * @param threatinfoConf
     */
    public DomainConfig threatinfoConf(EnableConf threatinfoConf) {
        this.threatinfoConf = threatinfoConf;
        return this;
    }

    /**
     * set proxy缓存配置
     *
     * @param proxycacheConf
     */
    public DomainConfig proxycacheConf(EnableConf proxycacheConf) {
        this.proxycacheConf = proxycacheConf;
        return this;
    }

    /**
     * set bot配置
     *
     * @param botConf
     */
    public DomainConfig botConf(EnableConf botConf) {
        this.botConf = botConf;
        return this;
    }

    /**
     * set risk配置
     *
     * @param riskConf
     */
    public DomainConfig riskConf(RiskConf riskConf) {
        this.riskConf = riskConf;
        return this;
    }


}