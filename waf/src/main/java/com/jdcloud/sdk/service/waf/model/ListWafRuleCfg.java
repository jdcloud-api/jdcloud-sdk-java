/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */

package com.jdcloud.sdk.service.waf.model;

import java.util.List;
import java.util.ArrayList;

/**
 * listWafRuleCfg
 */
public class ListWafRuleCfg  implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 使用的条件集
     */
    
    private List<ConditionNameSet> conditions;
    /**
     * 规则id
     */
    private Integer id;

    /**
     * 匹配动作, 拦截:forbidden,redirect 人机识别:verify@jscookie,verify@captcha,verify@rdtcookie 观察:notice
     */
    private String matchAction;

    /**
     * 跳转地址，matchAction为redirect时必须为当前实例下的域名的url，forbidden时为自定义页面名称
     */
    private String redirection;

    /**
     * 规则名称
     */
    private String ruleName;

    /**
     * 规则更新时间
     */
    private Integer updateTime;

    /**
     * 0-使用中，1-禁用
     */
    private Integer disable;



    /**
    * get 使用的条件集
    *
    * @return
    */
    public List<ConditionNameSet> getConditions() {
        return conditions;
    }

    /**
    * set 使用的条件集
    *
    * @param conditions
    */
    public void setConditions(List<ConditionNameSet> conditions) {
        this.conditions = conditions;
    }


    /**
     * get 规则id
     *
     * @return
     */
    public Integer getId() {
        return id;
    }

    /**
     * set 规则id
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }


    /**
     * get 匹配动作, 拦截:forbidden,redirect 人机识别:verify@jscookie,verify@captcha,verify@rdtcookie 观察:notice
     *
     * @return
     */
    public String getMatchAction() {
        return matchAction;
    }

    /**
     * set 匹配动作, 拦截:forbidden,redirect 人机识别:verify@jscookie,verify@captcha,verify@rdtcookie 观察:notice
     *
     * @param matchAction
     */
    public void setMatchAction(String matchAction) {
        this.matchAction = matchAction;
    }


    /**
     * get 跳转地址，matchAction为redirect时必须为当前实例下的域名的url，forbidden时为自定义页面名称
     *
     * @return
     */
    public String getRedirection() {
        return redirection;
    }

    /**
     * set 跳转地址，matchAction为redirect时必须为当前实例下的域名的url，forbidden时为自定义页面名称
     *
     * @param redirection
     */
    public void setRedirection(String redirection) {
        this.redirection = redirection;
    }


    /**
     * get 规则名称
     *
     * @return
     */
    public String getRuleName() {
        return ruleName;
    }

    /**
     * set 规则名称
     *
     * @param ruleName
     */
    public void setRuleName(String ruleName) {
        this.ruleName = ruleName;
    }


    /**
     * get 规则更新时间
     *
     * @return
     */
    public Integer getUpdateTime() {
        return updateTime;
    }

    /**
     * set 规则更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(Integer updateTime) {
        this.updateTime = updateTime;
    }


    /**
     * get 0-使用中，1-禁用
     *
     * @return
     */
    public Integer getDisable() {
        return disable;
    }

    /**
     * set 0-使用中，1-禁用
     *
     * @param disable
     */
    public void setDisable(Integer disable) {
        this.disable = disable;
    }



    /**
    * set 使用的条件集
    *
    * @param conditions
    */
    public ListWafRuleCfg conditions(List<ConditionNameSet> conditions) {
        this.conditions = conditions;
        return this;
    }


    /**
     * set 规则id
     *
     * @param id
     */
    public ListWafRuleCfg id(Integer id) {
        this.id = id;
        return this;
    }


    /**
     * set 匹配动作, 拦截:forbidden,redirect 人机识别:verify@jscookie,verify@captcha,verify@rdtcookie 观察:notice
     *
     * @param matchAction
     */
    public ListWafRuleCfg matchAction(String matchAction) {
        this.matchAction = matchAction;
        return this;
    }


    /**
     * set 跳转地址，matchAction为redirect时必须为当前实例下的域名的url，forbidden时为自定义页面名称
     *
     * @param redirection
     */
    public ListWafRuleCfg redirection(String redirection) {
        this.redirection = redirection;
        return this;
    }


    /**
     * set 规则名称
     *
     * @param ruleName
     */
    public ListWafRuleCfg ruleName(String ruleName) {
        this.ruleName = ruleName;
        return this;
    }


    /**
     * set 规则更新时间
     *
     * @param updateTime
     */
    public ListWafRuleCfg updateTime(Integer updateTime) {
        this.updateTime = updateTime;
        return this;
    }


    /**
     * set 0-使用中，1-禁用
     *
     * @param disable
     */
    public ListWafRuleCfg disable(Integer disable) {
        this.disable = disable;
        return this;
    }



    /**
     * add item to 使用的条件集
     *
     * @param condition
     */
    public void addCondition(ConditionNameSet condition) {
        if (this.conditions == null) {
            this.conditions = new ArrayList<>();
        }
        this.conditions.add(condition);
    }
}